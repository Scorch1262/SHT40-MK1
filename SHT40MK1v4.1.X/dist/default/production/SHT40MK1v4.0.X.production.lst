

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Dec 15 21:01:19 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1,inline
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1,inline
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1,inline
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1
    79                           	psect	text64,global,reloc=2,class=CODE,delta=1
    80                           	psect	text65,global,reloc=2,class=CODE,delta=1
    81                           	psect	text66,global,reloc=2,class=CODE,delta=1
    82                           	psect	text67,global,reloc=2,class=CODE,delta=1
    83                           	psect	text68,global,reloc=2,class=CODE,delta=1
    84                           	psect	text69,global,reloc=2,class=CODE,delta=1
    85                           	psect	text70,global,reloc=2,class=CODE,delta=1
    86                           	psect	text71,global,reloc=2,class=CODE,delta=1
    87                           	psect	text72,global,reloc=2,class=CODE,delta=1
    88                           	psect	text73,global,reloc=2,class=CODE,delta=1,inline
    89                           	psect	text74,global,reloc=2,class=CODE,delta=1,inline
    90                           	psect	text75,global,reloc=2,class=CODE,delta=1,inline
    91                           	psect	text76,global,reloc=2,class=CODE,delta=1,inline
    92                           	psect	text77,global,reloc=2,class=CODE,delta=1,inline
    93                           	psect	text78,global,reloc=2,class=CODE,delta=1,inline
    94                           	psect	text79,global,reloc=2,class=CODE,delta=1,inline
    95                           	psect	text80,global,reloc=2,class=CODE,delta=1
    96                           	psect	text81,global,reloc=2,class=CODE,delta=1
    97                           	psect	text82,global,reloc=2,class=CODE,delta=1
    98                           	psect	text83,global,reloc=2,class=CODE,delta=1
    99                           	psect	text84,global,reloc=2,class=CODE,delta=1
   100                           	psect	text85,global,reloc=2,class=CODE,delta=1
   101                           	psect	text86,global,reloc=2,class=CODE,delta=1
   102                           	psect	text87,global,reloc=2,class=CODE,delta=1
   103                           	psect	text88,global,reloc=2,class=CODE,delta=1
   104                           	psect	text89,global,reloc=2,class=CODE,delta=1
   105                           	psect	text90,global,reloc=2,class=CODE,delta=1,inline
   106                           	psect	text91,global,reloc=2,class=CODE,delta=1,inline
   107                           	psect	text92,global,reloc=2,class=CODE,delta=1,inline
   108                           	psect	text93,global,reloc=2,class=CODE,delta=1
   109                           	psect	text94,global,reloc=2,class=CODE,delta=1,inline
   110                           	psect	text95,global,reloc=2,class=CODE,delta=1,inline
   111                           	psect	text96,global,reloc=2,class=CODE,delta=1,inline
   112                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   113                           	psect	text98,global,reloc=2,class=CODE,delta=1
   114                           	psect	text99,global,reloc=2,class=CODE,delta=1
   115                           	psect	text100,global,reloc=2,class=CODE,delta=1
   116                           	psect	text101,global,reloc=2,class=CODE,delta=1
   117                           	psect	text102,global,reloc=2,class=CODE,delta=1
   118                           	psect	text103,global,reloc=2,class=CODE,delta=1
   119                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   120                           	psect	text104,global,reloc=2,class=CODE,delta=1
   121                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   122                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   123                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   124                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   125  0000                     
   126                           ; Version 2.20
   127                           ; Generated 05/05/2020 GMT
   128                           ; 
   129                           ; Copyright © 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   130                           ; All rights reserved.
   131                           ; 
   132                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   133                           ; 
   134                           ; Redistribution and use in source and binary forms, with or without modification, are
   135                           ; permitted provided that the following conditions are met:
   136                           ; 
   137                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   138                           ;        conditions and the following disclaimer.
   139                           ; 
   140                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   141                           ;        of conditions and the following disclaimer in the documentation and/or other
   142                           ;        materials provided with the distribution.
   143                           ; 
   144                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   145                           ;        software without specific prior written permission.
   146                           ; 
   147                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   148                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   149                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   150                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   151                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   152                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   153                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   154                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   155                           ; 
   156                           ; 
   157                           ; Code-generator required, PIC18F46K20 Definitions
   158                           ; 
   159                           ; SFR Addresses
   160  0000                     
   161                           	psect	smallconst
   162  001000                     __psmallconst:
   163                           	callstack 0
   164  001000  00                 	db	0
   165  001001                     _fsmStateTable:
   166                           	callstack 0
   167  001001  FA                 	db	low _I2C_DO_IDLE
   168  001002  4B                 	db	high _I2C_DO_IDLE
   169  001003  D2                 	db	low _I2C_DO_SEND_ADR_READ
   170  001004  4B                 	db	high _I2C_DO_SEND_ADR_READ
   171  001005  C2                 	db	low _I2C_DO_SEND_ADR_WRITE
   172  001006  4B                 	db	high _I2C_DO_SEND_ADR_WRITE
   173  001007  BE                 	db	low _I2C_DO_TX
   174  001008  3C                 	db	high _I2C_DO_TX
   175  001009  46                 	db	low _I2C_DO_RX
   176  00100A  40                 	db	high _I2C_DO_RX
   177  00100B  EE                 	db	low _I2C_DO_RCEN
   178  00100C  4B                 	db	high _I2C_DO_RCEN
   179  00100D  10                 	db	low _I2C_DO_TX_EMPTY
   180  00100E  42                 	db	high _I2C_DO_TX_EMPTY
   181  00100F  8C                 	db	low _I2C_DO_SEND_RESTART_READ
   182  001010  4C                 	db	high _I2C_DO_SEND_RESTART_READ
   183  001011  84                 	db	low _I2C_DO_SEND_RESTART_WRITE
   184  001012  4C                 	db	high _I2C_DO_SEND_RESTART_WRITE
   185  001013  7C                 	db	low _I2C_DO_SEND_RESTART
   186  001014  4C                 	db	high _I2C_DO_SEND_RESTART
   187  001015  74                 	db	low _I2C_DO_SEND_STOP
   188  001016  4C                 	db	high _I2C_DO_SEND_STOP
   189  001017  6C                 	db	low _I2C_DO_RX_ACK
   190  001018  4C                 	db	high _I2C_DO_RX_ACK
   191  001019  64                 	db	low _I2C_DO_RX_NACK_STOP
   192  00101A  4C                 	db	high _I2C_DO_RX_NACK_STOP
   193  00101B  5C                 	db	low _I2C_DO_RX_NACK_RESTART
   194  00101C  4C                 	db	high _I2C_DO_RX_NACK_RESTART
   195  00101D  E2                 	db	low _I2C_DO_RESET
   196  00101E  4B                 	db	high _I2C_DO_RESET
   197  00101F  EC                 	db	low _I2C_DO_ADDRESS_NACK
   198  001020  43                 	db	high _I2C_DO_ADDRESS_NACK
   199  001021                     __end_of_fsmStateTable:
   200                           	callstack 0
   201  001021                     STR_2:
   202                           
   203                           ; BSR set to: 0
   204  001021  4C                 	db	76	;'L'
   205  001022  75                 	db	117	;'u'
   206  001023  66                 	db	102	;'f'
   207  001024  74                 	db	116	;'t'
   208  001025  66                 	db	102	;'f'
   209  001026  65                 	db	101	;'e'
   210  001027  75                 	db	117	;'u'
   211  001028  63                 	db	99	;'c'
   212  001029  68                 	db	104	;'h'
   213  00102A  74                 	db	116	;'t'
   214  00102B  69                 	db	105	;'i'
   215  00102C  67                 	db	103	;'g'
   216  00102D  6B                 	db	107	;'k'
   217  00102E  65                 	db	101	;'e'
   218  00102F  69                 	db	105	;'i'
   219  001030  74                 	db	116	;'t'
   220  001031  20                 	db	32
   221  001032  3D                 	db	61	;'='
   222  001033  20                 	db	32
   223  001034  25                 	db	37
   224  001035  34                 	db	52	;'4'
   225  001036  2E                 	db	46
   226  001037  32                 	db	50	;'2'
   227  001038  66                 	db	102	;'f'
   228  001039  25                 	db	37
   229  00103A  25                 	db	37
   230  00103B  0D                 	db	13
   231  00103C  0A                 	db	10
   232  00103D  00                 	db	0
   233  00103E                     STR_1:
   234                           
   235                           ; BSR set to: 0
   236  00103E  54                 	db	84	;'T'
   237  00103F  65                 	db	101	;'e'
   238  001040  6D                 	db	109	;'m'
   239  001041  70                 	db	112	;'p'
   240  001042  65                 	db	101	;'e'
   241  001043  72                 	db	114	;'r'
   242  001044  61                 	db	97	;'a'
   243  001045  74                 	db	116	;'t'
   244  001046  75                 	db	117	;'u'
   245  001047  72                 	db	114	;'r'
   246  001048  20                 	db	32
   247  001049  3D                 	db	61	;'='
   248  00104A  20                 	db	32
   249  00104B  25                 	db	37
   250  00104C  30                 	db	48	;'0'
   251  00104D  2E                 	db	46
   252  00104E  32                 	db	50	;'2'
   253  00104F  66                 	db	102	;'f'
   254  001050  43                 	db	67	;'C'
   255  001051  20                 	db	32
   256  001052  20                 	db	32
   257  001053  20                 	db	32
   258  001054  00                 	db	0
   259  001055                     STR_3:
   260                           
   261                           ; BSR set to: 0
   262  001055  49                 	db	73	;'I'
   263  001056  4E                 	db	78	;'N'
   264  001057  46                 	db	70	;'F'
   265  001058  00                 	db	0
   266  001059                     STR_7:
   267                           
   268                           ; BSR set to: 0
   269  001059  4E                 	db	78	;'N'
   270  00105A  41                 	db	65	;'A'
   271  00105B  4E                 	db	78	;'N'
   272  00105C  00                 	db	0
   273  00105D                     STR_4:
   274                           
   275                           ; BSR set to: 0
   276  00105D  69                 	db	105	;'i'
   277  00105E  6E                 	db	110	;'n'
   278  00105F  66                 	db	102	;'f'
   279  001060  00                 	db	0
   280  001061                     STR_8:
   281                           
   282                           ; BSR set to: 0
   283  001061  6E                 	db	110	;'n'
   284  001062  61                 	db	97	;'a'
   285  001063  6E                 	db	110	;'n'
   286  001064  00                 	db	0
   287  001065                     STR_11:
   288                           
   289                           ; BSR set to: 0
   290  001065  6C                 	db	108	;'l'
   291  001066  66                 	db	102	;'f'
   292  001067  00                 	db	0
   293  001068  00                 	db	0	; dummy byte at the end
   294  0000                     
   295                           	psect	nvBANK0
   296  0000F8                     __pnvBANK0:
   297                           	callstack 0
   298  0000F8                     _EUSART_FramingErrorHandler:
   299                           	callstack 0
   300  0000F8                     	ds	2
   301  0000FA                     _EUSART_RxDefaultInterruptHandler:
   302                           	callstack 0
   303  0000FA                     	ds	2
   304  0000FC                     _EUSART_TxDefaultInterruptHandler:
   305                           	callstack 0
   306  0000FC                     	ds	2
   307  0000FE                     _eusartTxBufferRemaining:
   308                           	callstack 0
   309  0000FE                     	ds	1
   310                           
   311                           	psect	nvBANK1
   312  000184                     __pnvBANK1:
   313                           	callstack 0
   314  000184                     _EUSART_ErrorHandler:
   315                           	callstack 0
   316  000184                     	ds	2
   317  000186                     _EUSART_OverrunErrorHandler:
   318                           	callstack 0
   319  000186                     	ds	2
   320  0000                     _RCONbits	set	4048
   321  0000                     _RCREG	set	4014
   322  0000                     _RCSTAbits	set	4011
   323  0000                     _TXREG	set	4013
   324  0000                     _TXSTAbits	set	4012
   325  0000                     _SPBRGH	set	4016
   326  0000                     _SPBRG	set	4015
   327  0000                     _TXSTA	set	4012
   328  0000                     _RCSTA	set	4011
   329  0000                     _BAUDCON	set	4024
   330  0000                     _INTCONbits	set	4082
   331  0000                     _INTCON2bits	set	4081
   332  0000                     _WPUB	set	3964
   333  0000                     _ANSELH	set	3967
   334  0000                     _ANSEL	set	3966
   335  0000                     _TRISD	set	3989
   336  0000                     _TRISC	set	3988
   337  0000                     _TRISB	set	3987
   338  0000                     _TRISA	set	3986
   339  0000                     _TRISE	set	3990
   340  0000                     _LATC	set	3979
   341  0000                     _LATB	set	3978
   342  0000                     _LATA	set	3977
   343  0000                     _LATD	set	3980
   344  0000                     _LATE	set	3981
   345  0000                     _OSCTUNE	set	3995
   346  0000                     _OSCCON	set	4051
   347  0000                     _PIR1bits	set	3998
   348  0000                     _PIE1bits	set	3997
   349  0000                     _SSPSTATbits	set	4039
   350  0000                     _PIR2bits	set	4001
   351  0000                     _SSPCON2bits	set	4037
   352  0000                     _SSPBUF	set	4041
   353  0000                     _SSPCON1bits	set	4038
   354  0000                     _SSPADD	set	4040
   355  0000                     _SSPCON2	set	4037
   356  0000                     _SSPCON1	set	4038
   357  0000                     _SSPSTAT	set	4039
   358                           
   359                           ; #config settings
   360                           
   361                           	psect	cinit
   362  004A68                     __pcinit:
   363                           	callstack 0
   364  004A68                     start_initialization:
   365                           	callstack 0
   366  004A68                     __initialization:
   367                           	callstack 0
   368                           
   369                           ; Clear objects allocated to BANK1 (126 bytes)
   370  004A68  EE01  F000         	lfsr	0,__pbssBANK1
   371  004A6C  0E7E               	movlw	126
   372  004A6E                     clear_0:
   373  004A6E  6AEE               	clrf	postinc0,c
   374  004A70  06E8               	decf	wreg,f,c
   375  004A72  E1FD               	bnz	clear_0
   376                           
   377                           ; Clear objects allocated to BANK0 (53 bytes)
   378  004A74  EE00  F0C3         	lfsr	0,__pbssBANK0
   379  004A78  0E35               	movlw	53
   380  004A7A                     clear_1:
   381  004A7A  6AEE               	clrf	postinc0,c
   382  004A7C  06E8               	decf	wreg,f,c
   383  004A7E  E1FD               	bnz	clear_1
   384                           
   385                           ; Clear objects allocated to COMRAM (4 bytes)
   386  004A80  6A59               	clrf	(__pbssCOMRAM+3)& (0+255),c
   387  004A82  6A58               	clrf	(__pbssCOMRAM+2)& (0+255),c
   388  004A84  6A57               	clrf	(__pbssCOMRAM+1)& (0+255),c
   389  004A86  6A56               	clrf	__pbssCOMRAM& (0+255),c
   390  004A88                     end_of_initialization:
   391                           	callstack 0
   392  004A88                     __end_of__initialization:
   393                           	callstack 0
   394  004A88  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   395  004A8A  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   396  004A8C  0100               	movlb	0
   397  004A8E  EF78  F01F         	goto	_main	;jump to C main() function
   398                           
   399                           	psect	bssCOMRAM
   400  000056                     __pbssCOMRAM:
   401                           	callstack 0
   402  000056                     _eusartRxTail:
   403                           	callstack 0
   404  000056                     	ds	1
   405  000057                     _eusartRxHead:
   406                           	callstack 0
   407  000057                     	ds	1
   408  000058                     _eusartTxTail:
   409                           	callstack 0
   410  000058                     	ds	1
   411  000059                     _eusartTxHead:
   412                           	callstack 0
   413  000059                     	ds	1
   414                           
   415                           	psect	bssBANK0
   416  0000C3                     __pbssBANK0:
   417                           	callstack 0
   418  0000C3                     _eusartRxStatusBuffer:
   419                           	callstack 0
   420  0000C3                     	ds	8
   421  0000CB                     _eusartRxBuffer:
   422                           	callstack 0
   423  0000CB                     	ds	8
   424  0000D3                     _eusartTxBuffer:
   425                           	callstack 0
   426  0000D3                     	ds	8
   427  0000DB                     floorf@F527:
   428                           	callstack 0
   429  0000DB                     	ds	4
   430  0000DF                     ___fpclassifyf@F465:
   431                           	callstack 0
   432  0000DF                     	ds	4
   433  0000E3                     _lufthumy:
   434                           	callstack 0
   435  0000E3                     	ds	4
   436  0000E7                     _temperatur:
   437                           	callstack 0
   438  0000E7                     	ds	4
   439  0000EB                     _writeBuffer:
   440                           	callstack 0
   441  0000EB                     	ds	3
   442  0000EE                     _nout:
   443                           	callstack 0
   444  0000EE                     	ds	2
   445  0000F0                     _width:
   446                           	callstack 0
   447  0000F0                     	ds	2
   448  0000F2                     _prec:
   449                           	callstack 0
   450  0000F2                     	ds	2
   451  0000F4                     _flags:
   452                           	callstack 0
   453  0000F4                     	ds	2
   454  0000F6                     _eusartRxLastError:
   455                           	callstack 0
   456  0000F6                     	ds	1
   457  0000F7                     _eusartRxCount:
   458                           	callstack 0
   459  0000F7                     	ds	1
   460                           
   461                           	psect	bssBANK1
   462  000100                     __pbssBANK1:
   463                           	callstack 0
   464  000100                     _I2C_Status:
   465                           	callstack 0
   466  000100                     	ds	36
   467  000124                     _dbuf:
   468                           	callstack 0
   469  000124                     	ds	80
   470  000174                     _readBuffer:
   471                           	callstack 0
   472  000174                     	ds	10
   473                           
   474                           	psect	cstackBANK1
   475  00017E                     __pcstackBANK1:
   476                           	callstack 0
   477  00017E                     ?_printf:
   478                           	callstack 0
   479  00017E                     printf@fmt:
   480                           	callstack 0
   481                           
   482                           ; 2 bytes @ 0x0
   483  00017E                     	ds	6
   484                           
   485                           	psect	cstackBANK0
   486  000060                     __pcstackBANK0:
   487                           	callstack 0
   488  000060                     ??_efgtoa:
   489                           
   490                           ; 1 bytes @ 0x0
   491  000060                     	ds	5
   492  000065                     _efgtoa$2100:
   493                           	callstack 0
   494                           
   495                           ; 2 bytes @ 0x5
   496  000065                     	ds	2
   497  000067                     _efgtoa$2101:
   498                           	callstack 0
   499                           
   500                           ; 2 bytes @ 0x7
   501  000067                     	ds	2
   502  000069                     _efgtoa$2106:
   503                           	callstack 0
   504                           
   505                           ; 2 bytes @ 0x9
   506  000069                     	ds	2
   507  00006B                     _efgtoa$2110:
   508                           	callstack 0
   509                           
   510                           ; 2 bytes @ 0xB
   511  00006B                     	ds	2
   512  00006D                     _efgtoa$2111:
   513                           	callstack 0
   514                           
   515                           ; 2 bytes @ 0xD
   516  00006D                     	ds	2
   517  00006F                     _efgtoa$2112:
   518                           	callstack 0
   519                           
   520                           ; 2 bytes @ 0xF
   521  00006F                     	ds	2
   522  000071                     efgtoa@t:
   523                           	callstack 0
   524                           
   525                           ; 2 bytes @ 0x11
   526  000071                     	ds	2
   527  000073                     efgtoa@pp:
   528                           	callstack 0
   529                           
   530                           ; 2 bytes @ 0x13
   531  000073                     	ds	2
   532  000075                     efgtoa@ne:
   533                           	callstack 0
   534                           
   535                           ; 2 bytes @ 0x15
   536  000075                     	ds	2
   537  000077                     efgtoa@m:
   538                           	callstack 0
   539                           
   540                           ; 2 bytes @ 0x17
   541  000077                     	ds	2
   542  000079                     efgtoa@ou:
   543                           	callstack 0
   544                           
   545                           ; 4 bytes @ 0x19
   546  000079                     	ds	4
   547  00007D                     efgtoa@d:
   548                           	callstack 0
   549                           
   550                           ; 2 bytes @ 0x1D
   551  00007D                     	ds	2
   552  00007F                     efgtoa@sign:
   553                           	callstack 0
   554                           
   555                           ; 2 bytes @ 0x1F
   556  00007F                     	ds	2
   557  000081                     efgtoa@p:
   558                           	callstack 0
   559                           
   560                           ; 2 bytes @ 0x21
   561  000081                     	ds	2
   562  000083                     efgtoa@w:
   563                           	callstack 0
   564                           
   565                           ; 2 bytes @ 0x23
   566  000083                     	ds	2
   567  000085                     efgtoa@nmode:
   568                           	callstack 0
   569                           
   570                           ; 1 bytes @ 0x25
   571  000085                     	ds	1
   572  000086                     efgtoa@mode:
   573                           	callstack 0
   574                           
   575                           ; 1 bytes @ 0x26
   576  000086                     	ds	1
   577  000087                     efgtoa@h:
   578                           	callstack 0
   579                           
   580                           ; 4 bytes @ 0x27
   581  000087                     	ds	4
   582  00008B                     efgtoa@l:
   583                           	callstack 0
   584                           
   585                           ; 4 bytes @ 0x2B
   586  00008B                     	ds	4
   587  00008F                     efgtoa@i:
   588                           	callstack 0
   589                           
   590                           ; 2 bytes @ 0x2F
   591  00008F                     	ds	2
   592  000091                     efgtoa@g:
   593                           	callstack 0
   594                           
   595                           ; 4 bytes @ 0x31
   596  000091                     	ds	4
   597  000095                     efgtoa@e:
   598                           	callstack 0
   599                           
   600                           ; 2 bytes @ 0x35
   601  000095                     	ds	2
   602  000097                     efgtoa@n:
   603                           	callstack 0
   604                           
   605                           ; 2 bytes @ 0x37
   606  000097                     	ds	2
   607  000099                     efgtoa@u:
   608                           	callstack 0
   609                           
   610                           ; 4 bytes @ 0x39
   611  000099                     	ds	4
   612  00009D                     ?_vfpfcnvrt:
   613                           	callstack 0
   614  00009D                     vfpfcnvrt@fp:
   615                           	callstack 0
   616                           
   617                           ; 2 bytes @ 0x3D
   618  00009D                     	ds	2
   619  00009F                     vfpfcnvrt@fmt:
   620                           	callstack 0
   621                           
   622                           ; 2 bytes @ 0x3F
   623  00009F                     	ds	2
   624  0000A1                     vfpfcnvrt@ap:
   625                           	callstack 0
   626                           
   627                           ; 2 bytes @ 0x41
   628  0000A1                     	ds	2
   629  0000A3                     ??_vfpfcnvrt:
   630                           
   631                           ; 1 bytes @ 0x43
   632  0000A3                     	ds	4
   633  0000A7                     vfpfcnvrt@done:
   634                           	callstack 0
   635                           
   636                           ; 2 bytes @ 0x47
   637  0000A7                     	ds	2
   638  0000A9                     _vfpfcnvrt$2126:
   639                           	callstack 0
   640                           
   641                           ; 2 bytes @ 0x49
   642  0000A9                     	ds	2
   643  0000AB                     _vfpfcnvrt$2127:
   644                           	callstack 0
   645                           
   646                           ; 2 bytes @ 0x4B
   647  0000AB                     	ds	2
   648  0000AD                     _vfpfcnvrt$2131:
   649                           	callstack 0
   650                           
   651                           ; 2 bytes @ 0x4D
   652  0000AD                     	ds	2
   653  0000AF                     vfpfcnvrt@ct:
   654                           	callstack 0
   655                           
   656                           ; 3 bytes @ 0x4F
   657  0000AF                     	ds	3
   658  0000B2                     vfpfcnvrt@f:
   659                           	callstack 0
   660                           
   661                           ; 4 bytes @ 0x52
   662  0000B2                     	ds	4
   663  0000B6                     vfpfcnvrt@c:
   664                           	callstack 0
   665                           
   666                           ; 1 bytes @ 0x56
   667  0000B6                     	ds	1
   668  0000B7                     ?_vfprintf:
   669                           	callstack 0
   670  0000B7                     vfprintf@fp:
   671                           	callstack 0
   672                           
   673                           ; 2 bytes @ 0x57
   674  0000B7                     	ds	2
   675  0000B9                     vfprintf@fmt:
   676                           	callstack 0
   677                           
   678                           ; 2 bytes @ 0x59
   679  0000B9                     	ds	2
   680  0000BB                     vfprintf@ap:
   681                           	callstack 0
   682                           
   683                           ; 2 bytes @ 0x5B
   684  0000BB                     	ds	2
   685  0000BD                     vfprintf@cfmt:
   686                           	callstack 0
   687                           
   688                           ; 2 bytes @ 0x5D
   689  0000BD                     	ds	2
   690  0000BF                     printf@ap:
   691                           	callstack 0
   692                           
   693                           ; 2 bytes @ 0x5F
   694  0000BF                     	ds	2
   695  0000C1                     ??_main:
   696                           
   697                           ; 1 bytes @ 0x61
   698  0000C1                     	ds	2
   699                           
   700                           	psect	cstackCOMRAM
   701  000001                     __pcstackCOMRAM:
   702                           	callstack 0
   703  000001                     ??_INTERRUPT_InterruptManager:
   704  000001                     
   705                           ; 1 bytes @ 0x0
   706  000001                     	ds	4
   707  000005                     ?_strlen:
   708                           	callstack 0
   709  000005                     ?___fpclassifyf:
   710                           	callstack 0
   711  000005                     ?_isupper:
   712                           	callstack 0
   713  000005                     ?_isdigit:
   714                           	callstack 0
   715  000005                     ?_strncmp:
   716                           	callstack 0
   717  000005                     ?_isspace:
   718                           	callstack 0
   719  000005                     ?___wmul:
   720                           	callstack 0
   721  000005                     ?___awdiv:
   722                           	callstack 0
   723  000005                     ?___awmod:
   724                           	callstack 0
   725  000005                     ?___flmul:
   726                           	callstack 0
   727  000005                     ?___flneg:
   728                           	callstack 0
   729  000005                     ?___fltol:
   730                           	callstack 0
   731  000005                     ?___xxtofl:
   732                           	callstack 0
   733  000005                     I2C_Open@address:
   734                           	callstack 0
   735  000005                     I2C_Close@returnValue:
   736                           	callstack 0
   737  000005                     I2C_MasterSendTxData@data:
   738                           	callstack 0
   739  000005                     EUSART_Write@txData:
   740                           	callstack 0
   741  000005                     I2C_SetBuffer@buffer:
   742                           	callstack 0
   743  000005                     I2C_SetCallback@cb:
   744                           	callstack 0
   745  000005                     EUSART_SetFramingErrorHandler@interruptHandler:
   746                           	callstack 0
   747  000005                     EUSART_SetOverrunErrorHandler@interruptHandler:
   748                           	callstack 0
   749  000005                     EUSART_SetErrorHandler@interruptHandler:
   750                           	callstack 0
   751  000005                     EUSART_SetTxInterruptHandler@interruptHandler:
   752                           	callstack 0
   753  000005                     EUSART_SetRxInterruptHandler@interruptHandler:
   754                           	callstack 0
   755  000005                     ___wmul@multiplier:
   756                           	callstack 0
   757  000005                     ___awdiv@dividend:
   758                           	callstack 0
   759  000005                     ___awmod@dividend:
   760                           	callstack 0
   761  000005                     isdigit@c:
   762                           	callstack 0
   763  000005                     isspace@c:
   764                           	callstack 0
   765  000005                     isupper@c:
   766                           	callstack 0
   767  000005                     strcpy@dest:
   768                           	callstack 0
   769  000005                     strlen@s:
   770                           	callstack 0
   771  000005                     strncmp@_l:
   772                           	callstack 0
   773  000005                     ___fleq@ff1:
   774                           	callstack 0
   775  000005                     ___flneg@f1:
   776                           	callstack 0
   777  000005                     ___fltol@f1:
   778                           	callstack 0
   779  000005                     ___flmul@b:
   780                           	callstack 0
   781  000005                     ___xxtofl@val:
   782                           	callstack 0
   783  000005                     ___fpclassifyf@x:
   784                           	callstack 0
   785                           
   786                           ; 4 bytes @ 0x4
   787  000005                     	ds	1
   788  000006                     I2C_Open@returnValue:
   789                           	callstack 0
   790  000006                     putch@txData:
   791                           	callstack 0
   792                           
   793                           ; 1 bytes @ 0x5
   794  000006                     	ds	1
   795  000007                     ??_isupper:
   796  000007                     ??_isdigit:
   797  000007                     ??_isspace:
   798  000007                     I2C_SetBuffer@bufferSize:
   799                           	callstack 0
   800  000007                     I2C_SetCallback@ptr:
   801                           	callstack 0
   802  000007                     ___wmul@multiplicand:
   803                           	callstack 0
   804  000007                     ___awdiv@divisor:
   805                           	callstack 0
   806  000007                     ___awmod@divisor:
   807                           	callstack 0
   808  000007                     fputc@c:
   809                           	callstack 0
   810  000007                     strcpy@src:
   811                           	callstack 0
   812  000007                     strlen@a:
   813                           	callstack 0
   814  000007                     strncmp@_r:
   815                           	callstack 0
   816                           
   817                           ; 2 bytes @ 0x6
   818  000007                     	ds	2
   819  000009                     ??___fpclassifyf:
   820  000009                     ??_strcpy:
   821  000009                     ??___fltol:
   822  000009                     ??___xxtofl:
   823  000009                     I2C_SetCallback@idx:
   824                           	callstack 0
   825  000009                     ___awdiv@counter:
   826                           	callstack 0
   827  000009                     ___awmod@counter:
   828                           	callstack 0
   829  000009                     ___wmul@product:
   830                           	callstack 0
   831  000009                     fputc@fp:
   832                           	callstack 0
   833  000009                     strncmp@n:
   834                           	callstack 0
   835  000009                     ___fleq@ff2:
   836                           	callstack 0
   837  000009                     ___flmul@a:
   838                           	callstack 0
   839                           
   840                           ; 4 bytes @ 0x8
   841  000009                     	ds	1
   842  00000A                     ___awdiv@sign:
   843                           	callstack 0
   844  00000A                     ___awmod@sign:
   845                           	callstack 0
   846  00000A                     I2C_SetDataCompleteCallback@cb:
   847                           	callstack 0
   848  00000A                     I2C_SetAddressNackCallback@cb:
   849                           	callstack 0
   850                           
   851                           ; 2 bytes @ 0x9
   852  00000A                     	ds	1
   853  00000B                     ??_fputc:
   854  00000B                     ??_strncmp:
   855  00000B                     ?_tolower:
   856                           	callstack 0
   857  00000B                     _isspace$2196:
   858                           	callstack 0
   859  00000B                     ___awdiv@quotient:
   860                           	callstack 0
   861  00000B                     strcpy@s:
   862                           	callstack 0
   863  00000B                     tolower@c:
   864                           	callstack 0
   865                           
   866                           ; 2 bytes @ 0xA
   867  00000B                     	ds	1
   868  00000C                     ?_atoi:
   869                           	callstack 0
   870  00000C                     I2C_SetDataCompleteCallback@ptr:
   871                           	callstack 0
   872  00000C                     I2C_SetAddressNackCallback@ptr:
   873                           	callstack 0
   874  00000C                     atoi@s:
   875                           	callstack 0
   876  00000C                     strncmp@l:
   877                           	callstack 0
   878                           
   879                           ; 2 bytes @ 0xB
   880  00000C                     	ds	1
   881  00000D                     ??___flmul:
   882  00000D                     ??_tolower:
   883  00000D                     ??___fleq:
   884  00000D                     ___fltol@sign1:
   885                           	callstack 0
   886  00000D                     ___xxtofl@sign:
   887                           	callstack 0
   888  00000D                     ___fpclassifyf@e:
   889                           	callstack 0
   890  00000D                     strcpy@d:
   891                           	callstack 0
   892                           
   893                           ; 2 bytes @ 0xC
   894  00000D                     	ds	1
   895  00000E                     ??_atoi:
   896  00000E                     ___fltol@exp1:
   897                           	callstack 0
   898  00000E                     ___xxtofl@exp:
   899                           	callstack 0
   900  00000E                     rd1RegCompleteHandler@ptr:
   901                           	callstack 0
   902  00000E                     rd2RegCompleteHandler@ptr:
   903                           	callstack 0
   904  00000E                     wr1RegCompleteHandler@ptr:
   905                           	callstack 0
   906  00000E                     wr2RegCompleteHandler@ptr:
   907                           	callstack 0
   908  00000E                     rdBlkRegCompleteHandler@ptr:
   909                           	callstack 0
   910  00000E                     I2C_CallbackReturnReset@funPtr:
   911                           	callstack 0
   912  00000E                     strncmp@r:
   913                           	callstack 0
   914                           
   915                           ; 2 bytes @ 0xD
   916  00000E                     	ds	1
   917  00000F                     ___xxtofl@arg:
   918                           	callstack 0
   919  00000F                     ___fpclassifyf@u:
   920                           	callstack 0
   921                           
   922                           ; 4 bytes @ 0xE
   923  00000F                     	ds	1
   924  000010                     ??_I2C_DO_TX:
   925  000010                     ??_I2C_DO_RX:
   926  000010                     ??_I2C_DO_TX_EMPTY:
   927  000010                     ??_I2C_DO_ADDRESS_NACK:
   928  000010                     fputs@s:
   929                           	callstack 0
   930                           
   931                           ; 2 bytes @ 0xF
   932  000010                     	ds	1
   933  000011                     ___flmul@sign:
   934                           	callstack 0
   935  000011                     _tolower$2254:
   936                           	callstack 0
   937                           
   938                           ; 2 bytes @ 0x10
   939  000011                     	ds	1
   940  000012                     ??_I2C_MasterFsm:
   941  000012                     atoi@neg:
   942                           	callstack 0
   943  000012                     fputs@fp:
   944                           	callstack 0
   945  000012                     ___flmul@grs:
   946                           	callstack 0
   947                           
   948                           ; 4 bytes @ 0x11
   949  000012                     	ds	2
   950  000014                     I2C_MasterOperation@read:
   951                           	callstack 0
   952  000014                     fputs@c:
   953                           	callstack 0
   954  000014                     _atoi$2165:
   955                           	callstack 0
   956                           
   957                           ; 2 bytes @ 0x13
   958  000014                     	ds	1
   959  000015                     I2C_MasterOperation@returnValue:
   960                           	callstack 0
   961  000015                     fputs@i:
   962                           	callstack 0
   963                           
   964                           ; 2 bytes @ 0x14
   965  000015                     	ds	1
   966  000016                     ___flmul@aexp:
   967                           	callstack 0
   968  000016                     I2C_WriteNBytes@data:
   969                           	callstack 0
   970  000016                     I2C_ReadNBytes@data:
   971                           	callstack 0
   972  000016                     _atoi$2167:
   973                           	callstack 0
   974                           
   975                           ; 2 bytes @ 0x15
   976  000016                     	ds	1
   977  000017                     ?_pad:
   978                           	callstack 0
   979  000017                     ___flmul@bexp:
   980                           	callstack 0
   981  000017                     pad@fp:
   982                           	callstack 0
   983                           
   984                           ; 2 bytes @ 0x16
   985  000017                     	ds	1
   986  000018                     _atoi$2166:
   987                           	callstack 0
   988  000018                     I2C_WriteNBytes@len:
   989                           	callstack 0
   990  000018                     I2C_ReadNBytes@len:
   991                           	callstack 0
   992  000018                     ___flmul@prod:
   993                           	callstack 0
   994                           
   995                           ; 4 bytes @ 0x17
   996  000018                     	ds	1
   997  000019                     pad@buf:
   998                           	callstack 0
   999  000019                     atoi@n:
  1000                           	callstack 0
  1001                           
  1002                           ; 2 bytes @ 0x18
  1003  000019                     	ds	1
  1004  00001A                     I2C_WriteNBytes@address:
  1005                           	callstack 0
  1006  00001A                     I2C_ReadNBytes@address:
  1007                           	callstack 0
  1008                           
  1009                           ; 1 bytes @ 0x19
  1010  00001A                     	ds	1
  1011  00001B                     ??_SHT40_Read:
  1012  00001B                     pad@p:
  1013                           	callstack 0
  1014                           
  1015                           ; 2 bytes @ 0x1A
  1016  00001B                     	ds	1
  1017  00001C                     SHT40_Read@regist:
  1018                           	callstack 0
  1019  00001C                     ___flmul@temp:
  1020                           	callstack 0
  1021                           
  1022                           ; 2 bytes @ 0x1B
  1023  00001C                     	ds	1
  1024  00001D                     ??_pad:
  1025                           
  1026                           ; 1 bytes @ 0x1C
  1027  00001D                     	ds	1
  1028  00001E                     ?___fldiv:
  1029                           	callstack 0
  1030  00001E                     pad@i:
  1031                           	callstack 0
  1032  00001E                     ___flge@ff1:
  1033                           	callstack 0
  1034  00001E                     ___fldiv@b:
  1035                           	callstack 0
  1036                           
  1037                           ; 4 bytes @ 0x1D
  1038  00001E                     	ds	2
  1039  000020                     pad@w:
  1040                           	callstack 0
  1041                           
  1042                           ; 2 bytes @ 0x1F
  1043  000020                     	ds	2
  1044  000022                     ___flge@ff2:
  1045                           	callstack 0
  1046  000022                     ___fldiv@a:
  1047                           	callstack 0
  1048                           
  1049                           ; 4 bytes @ 0x21
  1050  000022                     	ds	4
  1051  000026                     ??___fldiv:
  1052  000026                     ??___flge:
  1053                           
  1054                           ; 1 bytes @ 0x25
  1055  000026                     	ds	4
  1056  00002A                     ___fldiv@rem:
  1057                           	callstack 0
  1058                           
  1059                           ; 4 bytes @ 0x29
  1060  00002A                     	ds	4
  1061  00002E                     ___fldiv@sign:
  1062                           	callstack 0
  1063                           
  1064                           ; 1 bytes @ 0x2D
  1065  00002E                     	ds	1
  1066  00002F                     ___fldiv@new_exp:
  1067                           	callstack 0
  1068                           
  1069                           ; 2 bytes @ 0x2E
  1070  00002F                     	ds	2
  1071  000031                     ___fldiv@grs:
  1072                           	callstack 0
  1073                           
  1074                           ; 4 bytes @ 0x30
  1075  000031                     	ds	4
  1076  000035                     ___fldiv@bexp:
  1077                           	callstack 0
  1078                           
  1079                           ; 1 bytes @ 0x34
  1080  000035                     	ds	1
  1081  000036                     ___fldiv@aexp:
  1082                           	callstack 0
  1083                           
  1084                           ; 1 bytes @ 0x35
  1085  000036                     	ds	1
  1086  000037                     ?___fladd:
  1087                           	callstack 0
  1088  000037                     ?_floorf:
  1089                           	callstack 0
  1090  000037                     ___fladd@b:
  1091                           	callstack 0
  1092  000037                     floorf@x:
  1093                           	callstack 0
  1094                           
  1095                           ; 4 bytes @ 0x36
  1096  000037                     	ds	4
  1097  00003B                     ??_floorf:
  1098  00003B                     ___fladd@a:
  1099                           	callstack 0
  1100                           
  1101                           ; 4 bytes @ 0x3A
  1102  00003B                     	ds	4
  1103  00003F                     ??___fladd:
  1104                           
  1105                           ; 1 bytes @ 0x3E
  1106  00003F                     	ds	2
  1107  000041                     floorf@m:
  1108                           	callstack 0
  1109                           
  1110                           ; 4 bytes @ 0x40
  1111  000041                     	ds	2
  1112  000043                     ___fladd@signs:
  1113                           	callstack 0
  1114                           
  1115                           ; 1 bytes @ 0x42
  1116  000043                     	ds	1
  1117  000044                     ___fladd@aexp:
  1118                           	callstack 0
  1119                           
  1120                           ; 1 bytes @ 0x43
  1121  000044                     	ds	1
  1122  000045                     ___fladd@bexp:
  1123                           	callstack 0
  1124  000045                     floorf@e:
  1125                           	callstack 0
  1126                           
  1127                           ; 2 bytes @ 0x44
  1128  000045                     	ds	1
  1129  000046                     ___fladd@grs:
  1130                           	callstack 0
  1131                           
  1132                           ; 1 bytes @ 0x45
  1133  000046                     	ds	1
  1134  000047                     ?_SHT40_temp_GetValue:
  1135                           	callstack 0
  1136  000047                     ?_SHT40_humy_GetValue:
  1137                           	callstack 0
  1138  000047                     ?___flsub:
  1139                           	callstack 0
  1140  000047                     ___flsub@b:
  1141                           	callstack 0
  1142  000047                     floorf@u:
  1143                           	callstack 0
  1144                           
  1145                           ; 4 bytes @ 0x46
  1146  000047                     	ds	4
  1147  00004B                     ??_SHT40_temp_GetValue:
  1148  00004B                     ??_SHT40_humy_GetValue:
  1149  00004B                     ___flsub@a:
  1150                           	callstack 0
  1151                           
  1152                           ; 4 bytes @ 0x4A
  1153  00004B                     	ds	2
  1154  00004D                     SHT40_temp_GetValue@buffer:
  1155                           	callstack 0
  1156  00004D                     SHT40_humy_GetValue@buffer:
  1157                           	callstack 0
  1158                           
  1159                           ; 2 bytes @ 0x4C
  1160  00004D                     	ds	2
  1161  00004F                     ?_efgtoa:
  1162                           	callstack 0
  1163  00004F                     efgtoa@fp:
  1164                           	callstack 0
  1165  00004F                     SHT40_temp_GetValue@tempDataAnz:
  1166                           	callstack 0
  1167  00004F                     SHT40_humy_GetValue@pressDataAnz:
  1168                           	callstack 0
  1169                           
  1170                           ; 4 bytes @ 0x4E
  1171  00004F                     	ds	2
  1172  000051                     efgtoa@f:
  1173                           	callstack 0
  1174                           
  1175                           ; 4 bytes @ 0x50
  1176  000051                     	ds	4
  1177  000055                     efgtoa@c:
  1178                           	callstack 0
  1179                           
  1180                           ; 1 bytes @ 0x54
  1181  000055                     	ds	1
  1182  000056                     
  1183                           ; 1 bytes @ 0x55
  1184 ;;
  1185 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1186 ;;
  1187 ;; *************** function _main *****************
  1188 ;; Defined at:
  1189 ;;		line 54 in file "main.c"
  1190 ;; Parameters:    Size  Location     Type
  1191 ;;		None
  1192 ;; Auto vars:     Size  Location     Type
  1193 ;;		None
  1194 ;; Return value:  Size  Location     Type
  1195 ;;                  1    wreg      void 
  1196 ;; Registers used:
  1197 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  1198 ;; Tracked objects:
  1199 ;;		On entry : 0/0
  1200 ;;		On exit  : 0/0
  1201 ;;		Unchanged: 0/0
  1202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1205 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1206 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1207 ;;Total ram usage:        2 bytes
  1208 ;; Hardware stack levels required when called: 15
  1209 ;; This function calls:
  1210 ;;		_SHT40_humy_GetValue
  1211 ;;		_SHT40_temp_GetValue
  1212 ;;		_SYSTEM_Initialize
  1213 ;;		_printf
  1214 ;; This function is called by:
  1215 ;;		Startup code after reset
  1216 ;; This function uses a non-reentrant model
  1217 ;;
  1218                           
  1219                           	psect	text0
  1220  003EF0                     __ptext0:
  1221                           	callstack 0
  1222  003EF0                     _main:
  1223                           	callstack 16
  1224  003EF0                     
  1225                           ;main.c: 56:     SYSTEM_Initialize();
  1226  003EF0  ECBA  F025         	call	_SYSTEM_Initialize	;wreg free
  1227  003EF4                     
  1228                           ;main.c: 57:     _delay((unsigned long)((500)*(8000000/4000.0)));
  1229  003EF4  0E06               	movlw	6
  1230  003EF6  0100               	movlb	0	; () banked
  1231  003EF8  6FC2               	movwf	(??_main+1)& (0+255),b
  1232  003EFA  0E13               	movlw	19
  1233  003EFC  6FC1               	movwf	??_main& (0+255),b
  1234  003EFE  0EAD               	movlw	173
  1235  003F00                     u6857:
  1236  003F00  2EE8               	decfsz	wreg,f,c
  1237  003F02  D7FE               	bra	u6857
  1238  003F04  2FC1               	decfsz	??_main& (0+255),f,b
  1239  003F06  D7FC               	bra	u6857
  1240  003F08  2FC2               	decfsz	(??_main+1)& (0+255),f,b
  1241  003F0A  D7FA               	bra	u6857
  1242  003F0C  F000 F000          	nop2	
  1243  003F10                     
  1244                           ;main.c: 64:     (INTCONbits.GIE = 1);
  1245  003F10  8EF2               	bsf	242,7,c	;volatile
  1246  003F12                     
  1247                           ;main.c: 70:     (INTCONbits.PEIE = 1);
  1248  003F12  8CF2               	bsf	242,6,c	;volatile
  1249  003F14                     l6791:
  1250                           
  1251                           ;main.c: 76:         temperatur = SHT40_temp_GetValue();
  1252  003F14  EC36  F01D         	call	_SHT40_temp_GetValue	;wreg free
  1253  003F18  C047  F0E7         	movff	?_SHT40_temp_GetValue,_temperatur
  1254  003F1C  C048  F0E8         	movff	?_SHT40_temp_GetValue+1,_temperatur+1
  1255  003F20  C049  F0E9         	movff	?_SHT40_temp_GetValue+2,_temperatur+2
  1256  003F24  C04A  F0EA         	movff	?_SHT40_temp_GetValue+3,_temperatur+3
  1257  003F28                     
  1258                           ;main.c: 77:         lufthumy = SHT40_humy_GetValue();
  1259  003F28  ECB0  F01A         	call	_SHT40_humy_GetValue	;wreg free
  1260  003F2C  C047  F0E3         	movff	?_SHT40_humy_GetValue,_lufthumy
  1261  003F30  C048  F0E4         	movff	?_SHT40_humy_GetValue+1,_lufthumy+1
  1262  003F34  C049  F0E5         	movff	?_SHT40_humy_GetValue+2,_lufthumy+2
  1263  003F38  C04A  F0E6         	movff	?_SHT40_humy_GetValue+3,_lufthumy+3
  1264  003F3C                     
  1265                           ;main.c: 78:         printf("Temperatur = %0.2fC   ",temperatur);
  1266  003F3C  0E3E               	movlw	low STR_1
  1267  003F3E  0101               	movlb	1	; () banked
  1268  003F40  6F7E               	movwf	printf@fmt& (0+255),b
  1269  003F42  0E10               	movlw	high STR_1
  1270  003F44  6F7F               	movwf	(printf@fmt+1)& (0+255),b
  1271  003F46  C0E7  F180         	movff	_temperatur,?_printf+2
  1272  003F4A  C0E8  F181         	movff	_temperatur+1,?_printf+3
  1273  003F4E  C0E9  F182         	movff	_temperatur+2,?_printf+4
  1274  003F52  C0EA  F183         	movff	_temperatur+3,?_printf+5
  1275  003F56  EC49  F025         	call	_printf	;wreg free
  1276  003F5A                     
  1277                           ;main.c: 79:         printf("Luftfeuchtigkeit = %4.2f%%\r\n",lufthumy);
  1278  003F5A  0E21               	movlw	low STR_2
  1279  003F5C  0101               	movlb	1	; () banked
  1280  003F5E  6F7E               	movwf	printf@fmt& (0+255),b
  1281  003F60  0E10               	movlw	high STR_2
  1282  003F62  6F7F               	movwf	(printf@fmt+1)& (0+255),b
  1283  003F64  C0E3  F180         	movff	_lufthumy,?_printf+2
  1284  003F68  C0E4  F181         	movff	_lufthumy+1,?_printf+3
  1285  003F6C  C0E5  F182         	movff	_lufthumy+2,?_printf+4
  1286  003F70  C0E6  F183         	movff	_lufthumy+3,?_printf+5
  1287  003F74  EC49  F025         	call	_printf	;wreg free
  1288  003F78                     
  1289                           ;main.c: 80:         _delay((unsigned long)((500)*(8000000/4000.0)));
  1290  003F78  0E06               	movlw	6
  1291  003F7A  0100               	movlb	0	; () banked
  1292  003F7C  6FC2               	movwf	(??_main+1)& (0+255),b
  1293  003F7E  0E13               	movlw	19
  1294  003F80  6FC1               	movwf	??_main& (0+255),b
  1295  003F82  0EAD               	movlw	173
  1296  003F84                     u6867:
  1297  003F84  2EE8               	decfsz	wreg,f,c
  1298  003F86  D7FE               	bra	u6867
  1299  003F88  2FC1               	decfsz	??_main& (0+255),f,b
  1300  003F8A  D7FC               	bra	u6867
  1301  003F8C  2FC2               	decfsz	(??_main+1)& (0+255),f,b
  1302  003F8E  D7FA               	bra	u6867
  1303  003F90  F000 F000          	nop2	
  1304  003F94  EF8A  F01F         	goto	l6791
  1305  003F98  EF58  F000         	goto	start
  1306  003F9C                     __end_of_main:
  1307                           	callstack 0
  1308                           
  1309 ;; *************** function _printf *****************
  1310 ;; Defined at:
  1311 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\printf.c"
  1312 ;; Parameters:    Size  Location     Type
  1313 ;;  fmt             2    0[BANK1 ] PTR const unsigned char 
  1314 ;;		 -> STR_2(29), STR_1(23), 
  1315 ;; Auto vars:     Size  Location     Type
  1316 ;;  ap              2   95[BANK0 ] PTR void [1]
  1317 ;;		 -> ?_printf(2), 
  1318 ;;  ret             2    0        int 
  1319 ;; Return value:  Size  Location     Type
  1320 ;;                  2    0[BANK1 ] int 
  1321 ;; Registers used:
  1322 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1323 ;; Tracked objects:
  1324 ;;		On entry : 0/0
  1325 ;;		On exit  : 0/0
  1326 ;;		Unchanged: 0/0
  1327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1328 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1329 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1331 ;;      Totals:         0       2       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1332 ;;Total ram usage:        8 bytes
  1333 ;; Hardware stack levels used: 1
  1334 ;; Hardware stack levels required when called: 12
  1335 ;; This function calls:
  1336 ;;		_vfprintf
  1337 ;; This function is called by:
  1338 ;;		_main
  1339 ;; This function uses a non-reentrant model
  1340 ;;
  1341                           
  1342                           	psect	text1
  1343  004A92                     __ptext1:
  1344                           	callstack 0
  1345  004A92                     _printf:
  1346                           	callstack 18
  1347  004A92  0E80               	movlw	low (?_printf+2)
  1348  004A94  0100               	movlb	0	; () banked
  1349  004A96  6FBF               	movwf	printf@ap& (0+255),b
  1350  004A98  0E01               	movlw	high (?_printf+2)
  1351  004A9A  6FC0               	movwf	(printf@ap+1)& (0+255),b
  1352  004A9C                     
  1353                           ; BSR set to: 0
  1354  004A9C  0E00               	movlw	0
  1355  004A9E  6FB7               	movwf	vfprintf@fp& (0+255),b
  1356  004AA0  0E00               	movlw	0
  1357  004AA2  6FB8               	movwf	(vfprintf@fp+1)& (0+255),b
  1358  004AA4  C17E  F0B9         	movff	printf@fmt,vfprintf@fmt
  1359  004AA8  C17F  F0BA         	movff	printf@fmt+1,vfprintf@fmt+1
  1360  004AAC  0EBF               	movlw	low printf@ap
  1361  004AAE  6FBB               	movwf	vfprintf@ap& (0+255),b
  1362  004AB0  0E00               	movlw	high printf@ap
  1363  004AB2  6FBC               	movwf	(vfprintf@ap+1)& (0+255),b
  1364  004AB4  EC29  F022         	call	_vfprintf	;wreg free
  1365  004AB8  0012               	return		;funcret
  1366  004ABA                     __end_of_printf:
  1367                           	callstack 0
  1368                           
  1369 ;; *************** function _vfprintf *****************
  1370 ;; Defined at:
  1371 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1372 ;; Parameters:    Size  Location     Type
  1373 ;;  fp              2   87[BANK0 ] PTR struct _IO_FILE
  1374 ;;		 -> NULL(0), 
  1375 ;;  fmt             2   89[BANK0 ] PTR const unsigned char 
  1376 ;;		 -> STR_2(29), STR_1(23), 
  1377 ;;  ap              2   91[BANK0 ] PTR PTR void 
  1378 ;;		 -> printf@ap(2), 
  1379 ;; Auto vars:     Size  Location     Type
  1380 ;;  cfmt            2   93[BANK0 ] PTR unsigned char 
  1381 ;;		 -> STR_2(29), STR_1(23), 
  1382 ;; Return value:  Size  Location     Type
  1383 ;;                  2   87[BANK0 ] int 
  1384 ;; Registers used:
  1385 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1386 ;; Tracked objects:
  1387 ;;		On entry : 0/0
  1388 ;;		On exit  : 0/0
  1389 ;;		Unchanged: 0/0
  1390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1391 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1392 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1394 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1395 ;;Total ram usage:        8 bytes
  1396 ;; Hardware stack levels used: 1
  1397 ;; Hardware stack levels required when called: 11
  1398 ;; This function calls:
  1399 ;;		_vfpfcnvrt
  1400 ;; This function is called by:
  1401 ;;		_printf
  1402 ;; This function uses a non-reentrant model
  1403 ;;
  1404                           
  1405                           	psect	text2
  1406  004452                     __ptext2:
  1407                           	callstack 0
  1408  004452                     _vfprintf:
  1409                           	callstack 18
  1410  004452                     
  1411                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1412  004452  C0B9  F0BD         	movff	vfprintf@fmt,vfprintf@cfmt
  1413  004456  C0BA  F0BE         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1414  00445A                     
  1415                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1416  00445A  0E00               	movlw	0
  1417  00445C  0100               	movlb	0	; () banked
  1418  00445E  6FEF               	movwf	(_nout+1)& (0+255),b
  1419  004460  0E00               	movlw	0
  1420  004462  6FEE               	movwf	_nout& (0+255),b
  1421                           
  1422                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1423  004464  EF47  F022         	goto	l6775
  1424  004468                     l6773:
  1425                           
  1426                           ; BSR set to: 0
  1427                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1428  004468  C0B7  F09D         	movff	vfprintf@fp,vfpfcnvrt@fp
  1429  00446C  C0B8  F09E         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1430  004470  0EBD               	movlw	low vfprintf@cfmt
  1431  004472  6F9F               	movwf	vfpfcnvrt@fmt& (0+255),b
  1432  004474  0E00               	movlw	high vfprintf@cfmt
  1433  004476  6FA0               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1434  004478  C0BB  F0A1         	movff	vfprintf@ap,vfpfcnvrt@ap
  1435  00447C  C0BC  F0A2         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1436  004480  EC88  F00E         	call	_vfpfcnvrt	;wreg free
  1437  004484  0100               	movlb	0	; () banked
  1438  004486  519D               	movf	?_vfpfcnvrt& (0+255),w,b
  1439  004488  27EE               	addwf	_nout& (0+255),f,b
  1440  00448A  519E               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  1441  00448C  23EF               	addwfc	(_nout+1)& (0+255),f,b
  1442  00448E                     l6775:
  1443                           
  1444                           ; BSR set to: 0
  1445                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1446  00448E  C0BD  FFF6         	movff	vfprintf@cfmt,tblptrl
  1447  004492  C0BE  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1448  004496                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1449  004496  6AF8               	clrf	tblptru,c
  1450  004498                     	endif
  1451  004498                     	if	0	;tblptru may be non-zero
  1452  004498                     	endif
  1453  004498  0008               	tblrd		*
  1454  00449A  50F5               	movf	tablat,w,c
  1455  00449C  0900               	iorlw	0
  1456  00449E  A4D8               	btfss	status,2,c
  1457  0044A0  EF54  F022         	goto	u6841
  1458  0044A4  EF56  F022         	goto	u6840
  1459  0044A8                     u6841:
  1460  0044A8  EF34  F022         	goto	l6773
  1461  0044AC                     u6840:
  1462  0044AC                     
  1463                           ; BSR set to: 0
  1464                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1465  0044AC  C0EE  F0B7         	movff	_nout,?_vfprintf
  1466  0044B0  C0EF  F0B8         	movff	_nout+1,?_vfprintf+1
  1467  0044B4                     
  1468                           ; BSR set to: 0
  1469  0044B4  0012               	return		;funcret
  1470  0044B6                     __end_of_vfprintf:
  1471                           	callstack 0
  1472                           
  1473 ;; *************** function _vfpfcnvrt *****************
  1474 ;; Defined at:
  1475 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1476 ;; Parameters:    Size  Location     Type
  1477 ;;  fp              2   61[BANK0 ] PTR struct _IO_FILE
  1478 ;;		 -> NULL(0), 
  1479 ;;  fmt             2   63[BANK0 ] PTR PTR unsigned char 
  1480 ;;		 -> vfprintf@cfmt(2), 
  1481 ;;  ap              2   65[BANK0 ] PTR PTR void 
  1482 ;;		 -> printf@ap(2), 
  1483 ;; Auto vars:     Size  Location     Type
  1484 ;;  llu             8    0        unsigned long long 
  1485 ;;  ll              8    0        long long 
  1486 ;;  f               4   82[BANK0 ] long long 
  1487 ;;  ct              3   79[BANK0 ] unsigned char [3]
  1488 ;;  vp              3    0        PTR void 
  1489 ;;  cp              3    0        PTR unsigned char 
  1490 ;;  done            2   71[BANK0 ] int 
  1491 ;;  i               2    0        int 
  1492 ;;  c               1   86[BANK0 ] unsigned char 
  1493 ;; Return value:  Size  Location     Type
  1494 ;;                  2   61[BANK0 ] int 
  1495 ;; Registers used:
  1496 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1497 ;; Tracked objects:
  1498 ;;		On entry : 0/0
  1499 ;;		On exit  : 0/0
  1500 ;;		Unchanged: 0/0
  1501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1502 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1503 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1504 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1505 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1506 ;;Total ram usage:       26 bytes
  1507 ;; Hardware stack levels used: 1
  1508 ;; Hardware stack levels required when called: 10
  1509 ;; This function calls:
  1510 ;;		_atoi
  1511 ;;		_efgtoa
  1512 ;;		_fputc
  1513 ;;		_isdigit
  1514 ;;		_isupper
  1515 ;;		_strncmp
  1516 ;;		_tolower
  1517 ;; This function is called by:
  1518 ;;		_vfprintf
  1519 ;; This function uses a non-reentrant model
  1520 ;;
  1521                           
  1522                           	psect	text3
  1523  001D10                     __ptext3:
  1524                           	callstack 0
  1525  001D10                     _vfpfcnvrt:
  1526                           	callstack 18
  1527  001D10                     
  1528                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1529  001D10  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1530  001D14  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1531  001D18  CFDE FFF6          	movff	postinc2,tblptrl
  1532  001D1C  CFDD FFF7          	movff	postdec2,tblptrh
  1533  001D20                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1534  001D20  6AF8               	clrf	tblptru,c
  1535  001D22                     	endif
  1536  001D22                     	if	0	;tblptru may be non-zero
  1537  001D22                     	endif
  1538  001D22  0008               	tblrd		*
  1539  001D24  50F5               	movf	tablat,w,c
  1540  001D26  0A25               	xorlw	37
  1541  001D28  A4D8               	btfss	status,2,c
  1542  001D2A  EF99  F00E         	goto	u6631
  1543  001D2E  EF9B  F00E         	goto	u6630
  1544  001D32                     u6631:
  1545  001D32  EFA1  F011         	goto	l6755
  1546  001D36                     u6630:
  1547  001D36                     
  1548                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1549  001D36  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1550  001D3A  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1551  001D3E  2ADE               	incf	postinc2,f,c
  1552  001D40  0E00               	movlw	0
  1553  001D42  22DD               	addwfc	postdec2,f,c
  1554  001D44                     
  1555                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1556  001D44  0E00               	movlw	0
  1557  001D46  0100               	movlb	0	; () banked
  1558  001D48  6FF1               	movwf	(_width+1)& (0+255),b
  1559  001D4A  0E00               	movlw	0
  1560  001D4C  6FF0               	movwf	_width& (0+255),b
  1561  001D4E  C0F0  F0F4         	movff	_width,_flags
  1562  001D52  C0F1  F0F5         	movff	_width+1,_flags+1
  1563  001D56                     
  1564                           ; BSR set to: 0
  1565                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1566  001D56  69F2               	setf	_prec& (0+255),b
  1567  001D58  69F3               	setf	(_prec+1)& (0+255),b
  1568  001D5A                     
  1569                           ; BSR set to: 0
  1570                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  1571  001D5A  0E00               	movlw	0
  1572  001D5C  6FA8               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1573  001D5E  0E00               	movlw	0
  1574  001D60  6FA7               	movwf	vfpfcnvrt@done& (0+255),b
  1575                           
  1576                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  1577  001D62  EFFA  F00E         	goto	l6659
  1578  001D66                     l6633:
  1579                           
  1580                           ; BSR set to: 0
  1581                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  1582  001D66  81F4               	bsf	_flags& (0+255),0,b
  1583  001D68                     l6635:
  1584                           
  1585                           ; BSR set to: 0
  1586                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  1587  001D68  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1588  001D6C  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1589  001D70  2ADE               	incf	postinc2,f,c
  1590  001D72  0E00               	movlw	0
  1591  001D74  22DD               	addwfc	postdec2,f,c
  1592                           
  1593                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  1594  001D76  EFFA  F00E         	goto	l6659
  1595  001D7A                     l6637:
  1596                           
  1597                           ; BSR set to: 0
  1598                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  1599  001D7A  83F4               	bsf	_flags& (0+255),1,b
  1600  001D7C  EFB4  F00E         	goto	l6635
  1601  001D80                     l6641:
  1602                           
  1603                           ; BSR set to: 0
  1604                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  1605  001D80  85F4               	bsf	_flags& (0+255),2,b
  1606  001D82  EFB4  F00E         	goto	l6635
  1607  001D86                     l6645:
  1608                           
  1609                           ; BSR set to: 0
  1610                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  1611  001D86  87F4               	bsf	_flags& (0+255),3,b
  1612  001D88  EFB4  F00E         	goto	l6635
  1613  001D8C                     l6649:
  1614                           
  1615                           ; BSR set to: 0
  1616                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  1617  001D8C  89F4               	bsf	_flags& (0+255),4,b
  1618  001D8E  EFB4  F00E         	goto	l6635
  1619  001D92                     l6653:
  1620                           
  1621                           ; BSR set to: 0
  1622                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  1623  001D92  0E00               	movlw	0
  1624  001D94  6FA8               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1625  001D96  0E01               	movlw	1
  1626  001D98  6FA7               	movwf	vfpfcnvrt@done& (0+255),b
  1627                           
  1628                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  1629  001D9A  EFFA  F00E         	goto	l6659
  1630  001D9E                     l6657:
  1631                           
  1632                           ; BSR set to: 0
  1633  001D9E  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1634  001DA2  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1635  001DA6  CFDE FFF6          	movff	postinc2,tblptrl
  1636  001DAA  CFDD FFF7          	movff	postdec2,tblptrh
  1637  001DAE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1638  001DAE  6AF8               	clrf	tblptru,c
  1639  001DB0                     	endif
  1640  001DB0                     	if	0	;tblptru may be non-zero
  1641  001DB0                     	endif
  1642  001DB0  0008               	tblrd		*
  1643  001DB2  50F5               	movf	tablat,w,c
  1644  001DB4  6FA3               	movwf	??_vfpfcnvrt& (0+255),b
  1645  001DB6  6BA4               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  1646                           
  1647                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1648                           ; Switch size 1, requested type "simple"
  1649                           ; Number of cases is 1, Range of values is 0 to 0
  1650                           ; switch strategies available:
  1651                           ; Name         Instructions Cycles
  1652                           ; simple_byte            4     3 (average)
  1653                           ;	Chosen strategy is simple_byte
  1654  001DB8  51A4               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  1655  001DBA  0A00               	xorlw	0	; case 0
  1656  001DBC  B4D8               	btfsc	status,2,c
  1657  001DBE  EFE3  F00E         	goto	l6961
  1658  001DC2  EFC9  F00E         	goto	l6653
  1659  001DC6                     l6961:
  1660                           
  1661                           ; BSR set to: 0
  1662                           ; Switch size 1, requested type "simple"
  1663                           ; Number of cases is 5, Range of values is 32 to 48
  1664                           ; switch strategies available:
  1665                           ; Name         Instructions Cycles
  1666                           ; simple_byte           16     9 (average)
  1667                           ;	Chosen strategy is simple_byte
  1668  001DC6  51A3               	movf	??_vfpfcnvrt& (0+255),w,b
  1669  001DC8  0A20               	xorlw	32	; case 32
  1670  001DCA  B4D8               	btfsc	status,2,c
  1671  001DCC  EFC3  F00E         	goto	l6645
  1672  001DD0  0A03               	xorlw	3	; case 35
  1673  001DD2  B4D8               	btfsc	status,2,c
  1674  001DD4  EFC6  F00E         	goto	l6649
  1675  001DD8  0A08               	xorlw	8	; case 43
  1676  001DDA  B4D8               	btfsc	status,2,c
  1677  001DDC  EFC0  F00E         	goto	l6641
  1678  001DE0  0A06               	xorlw	6	; case 45
  1679  001DE2  B4D8               	btfsc	status,2,c
  1680  001DE4  EFB3  F00E         	goto	l6633
  1681  001DE8  0A1D               	xorlw	29	; case 48
  1682  001DEA  B4D8               	btfsc	status,2,c
  1683  001DEC  EFBD  F00E         	goto	l6637
  1684  001DF0  EFC9  F00E         	goto	l6653
  1685  001DF4                     l6659:
  1686                           
  1687                           ; BSR set to: 0
  1688                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  1689  001DF4  51A7               	movf	vfpfcnvrt@done& (0+255),w,b
  1690  001DF6  11A8               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  1691  001DF8  B4D8               	btfsc	status,2,c
  1692  001DFA  EF01  F00F         	goto	u6641
  1693  001DFE  EF03  F00F         	goto	u6640
  1694  001E02                     u6641:
  1695  001E02  EFCF  F00E         	goto	l6657
  1696  001E06                     u6640:
  1697  001E06                     
  1698                           ; BSR set to: 0
  1699                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  1700  001E06  A1F4               	btfss	_flags& (0+255),0,b
  1701  001E08  EF08  F00F         	goto	u6651
  1702  001E0C  EF0A  F00F         	goto	u6650
  1703  001E10                     u6651:
  1704  001E10  EF0B  F00F         	goto	l6663
  1705  001E14                     u6650:
  1706  001E14                     
  1707                           ; BSR set to: 0
  1708                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  1709  001E14  93F4               	bcf	_flags& (0+255),1,b
  1710  001E16                     l6663:
  1711                           
  1712                           ; BSR set to: 0
  1713                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  1714  001E16  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1715  001E1A  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1716  001E1E  CFDE FFF6          	movff	postinc2,tblptrl
  1717  001E22  CFDD FFF7          	movff	postdec2,tblptrh
  1718  001E26                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1719  001E26  6AF8               	clrf	tblptru,c
  1720  001E28                     	endif
  1721  001E28                     	if	0	;tblptru may be non-zero
  1722  001E28                     	endif
  1723  001E28  0008               	tblrd		*
  1724  001E2A  50F5               	movf	tablat,w,c
  1725  001E2C  0A2A               	xorlw	42
  1726  001E2E  A4D8               	btfss	status,2,c
  1727  001E30  EF1C  F00F         	goto	u6661
  1728  001E34  EF1E  F00F         	goto	u6660
  1729  001E38                     u6661:
  1730  001E38  EF47  F00F         	goto	l6671
  1731  001E3C                     u6660:
  1732  001E3C                     
  1733                           ; BSR set to: 0
  1734                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  1735  001E3C  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1736  001E40  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1737  001E44  2ADE               	incf	postinc2,f,c
  1738  001E46  0E00               	movlw	0
  1739  001E48  22DD               	addwfc	postdec2,f,c
  1740                           
  1741                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  1742  001E4A  C0A1  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1743  001E4E  C0A2  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1744  001E52  CFDF F0A3          	movff	indf2,??_vfpfcnvrt
  1745  001E56  0E02               	movlw	2
  1746  001E58  26DE               	addwf	postinc2,f,c
  1747  001E5A  CFDF F0A4          	movff	indf2,??_vfpfcnvrt+1
  1748  001E5E  0E00               	movlw	0
  1749  001E60  22DD               	addwfc	postdec2,f,c
  1750  001E62  C0A3  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1751  001E66  C0A4  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1752  001E6A  CFDE F0F0          	movff	postinc2,_width
  1753  001E6E  CFDD F0F1          	movff	postdec2,_width+1
  1754  001E72                     
  1755                           ; BSR set to: 0
  1756                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  1757  001E72  BFF1               	btfsc	(_width+1)& (0+255),7,b
  1758  001E74  EF40  F00F         	goto	u6670
  1759  001E78  EF3E  F00F         	goto	u6671
  1760  001E7C                     u6671:
  1761  001E7C  EF8C  F00F         	goto	l6681
  1762  001E80                     u6670:
  1763  001E80                     
  1764                           ; BSR set to: 0
  1765                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  1766  001E80  81F4               	bsf	_flags& (0+255),0,b
  1767                           
  1768                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  1769  001E82  6DF0               	negf	_width& (0+255),b
  1770  001E84  1FF1               	comf	(_width+1)& (0+255),f,b
  1771  001E86  B0D8               	btfsc	status,0,c
  1772  001E88  2BF1               	incf	(_width+1)& (0+255),f,b
  1773  001E8A  EF8C  F00F         	goto	l6681
  1774  001E8E                     l6671:
  1775                           
  1776                           ; BSR set to: 0
  1777                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  1778  001E8E  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1779  001E92  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1780  001E96  CFDE F00C          	movff	postinc2,atoi@s
  1781  001E9A  CFDD F00D          	movff	postdec2,atoi@s+1
  1782  001E9E  ECE3  F019         	call	_atoi	;wreg free
  1783  001EA2  C00C  F0F0         	movff	?_atoi,_width
  1784  001EA6  C00D  F0F1         	movff	?_atoi+1,_width+1
  1785                           
  1786                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1787  001EAA  EF5E  F00F         	goto	l6675
  1788  001EAE                     l6673:
  1789                           
  1790                           ; BSR set to: 0
  1791                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  1792  001EAE  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1793  001EB2  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1794  001EB6  2ADE               	incf	postinc2,f,c
  1795  001EB8  0E00               	movlw	0
  1796  001EBA  22DD               	addwfc	postdec2,f,c
  1797  001EBC                     l6675:
  1798  001EBC  0ED0               	movlw	208
  1799  001EBE  0100               	movlb	0	; () banked
  1800  001EC0  6FA3               	movwf	??_vfpfcnvrt& (0+255),b
  1801  001EC2  0EFF               	movlw	255
  1802  001EC4  6FA4               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  1803  001EC6  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1804  001ECA  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1805  001ECE  CFDE FFF6          	movff	postinc2,tblptrl
  1806  001ED2  CFDD FFF7          	movff	postdec2,tblptrh
  1807  001ED6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1808  001ED6  6AF8               	clrf	tblptru,c
  1809  001ED8                     	endif
  1810  001ED8                     	if	0	;tblptru may be non-zero
  1811  001ED8                     	endif
  1812  001ED8  0008               	tblrd		*
  1813  001EDA  50F5               	movf	tablat,w,c
  1814  001EDC  6FA5               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  1815  001EDE  6BA6               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  1816  001EE0  51A3               	movf	??_vfpfcnvrt& (0+255),w,b
  1817  001EE2  27A5               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  1818  001EE4  51A4               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  1819  001EE6  23A6               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  1820  001EE8  51A6               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  1821  001EEA  E10A               	bnz	u6680
  1822  001EEC  0E0A               	movlw	10
  1823  001EEE  5DA5               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  1824  001EF0  A0D8               	btfss	status,0,c
  1825  001EF2  EF7D  F00F         	goto	u6681
  1826  001EF6  EF80  F00F         	goto	u6680
  1827  001EFA                     u6681:
  1828  001EFA  0E01               	movlw	1
  1829  001EFC  EF81  F00F         	goto	u6690
  1830  001F00                     u6680:
  1831  001F00  0E00               	movlw	0
  1832  001F02                     u6690:
  1833  001F02  6FA9               	movwf	_vfpfcnvrt$2126& (0+255),b
  1834  001F04  6BAA               	clrf	(_vfpfcnvrt$2126+1)& (0+255),b
  1835  001F06                     
  1836                           ; BSR set to: 0
  1837  001F06  51A9               	movf	_vfpfcnvrt$2126& (0+255),w,b
  1838  001F08  11AA               	iorwf	(_vfpfcnvrt$2126+1)& (0+255),w,b
  1839  001F0A  A4D8               	btfss	status,2,c
  1840  001F0C  EF8A  F00F         	goto	u6701
  1841  001F10  EF8C  F00F         	goto	u6700
  1842  001F14                     u6701:
  1843  001F14  EF57  F00F         	goto	l6673
  1844  001F18                     u6700:
  1845  001F18                     l6681:
  1846                           
  1847                           ; BSR set to: 0
  1848                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 762:         if (
      +                          (*fmt)[0] == '.') {
  1849  001F18  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1850  001F1C  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1851  001F20  CFDE FFF6          	movff	postinc2,tblptrl
  1852  001F24  CFDD FFF7          	movff	postdec2,tblptrh
  1853  001F28                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1854  001F28  6AF8               	clrf	tblptru,c
  1855  001F2A                     	endif
  1856  001F2A                     	if	0	;tblptru may be non-zero
  1857  001F2A                     	endif
  1858  001F2A  0008               	tblrd		*
  1859  001F2C  50F5               	movf	tablat,w,c
  1860  001F2E  0A2E               	xorlw	46
  1861  001F30  A4D8               	btfss	status,2,c
  1862  001F32  EF9D  F00F         	goto	u6711
  1863  001F36  EF9F  F00F         	goto	u6710
  1864  001F3A                     u6711:
  1865  001F3A  EF1F  F010         	goto	l6701
  1866  001F3E                     u6710:
  1867  001F3E                     
  1868                           ; BSR set to: 0
  1869                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 763:             
      +                          prec = 0;
  1870  001F3E  0E00               	movlw	0
  1871  001F40  6FF3               	movwf	(_prec+1)& (0+255),b
  1872  001F42  0E00               	movlw	0
  1873  001F44  6FF2               	movwf	_prec& (0+255),b
  1874  001F46                     
  1875                           ; BSR set to: 0
  1876                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 764:             
      +                          ++*fmt;
  1877  001F46  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1878  001F4A  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1879  001F4E  2ADE               	incf	postinc2,f,c
  1880  001F50  0E00               	movlw	0
  1881  001F52  22DD               	addwfc	postdec2,f,c
  1882  001F54                     
  1883                           ; BSR set to: 0
  1884                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 765:             
      +                          if ((*fmt)[0] == '*') {
  1885  001F54  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1886  001F58  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1887  001F5C  CFDE FFF6          	movff	postinc2,tblptrl
  1888  001F60  CFDD FFF7          	movff	postdec2,tblptrh
  1889  001F64                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1890  001F64  6AF8               	clrf	tblptru,c
  1891  001F66                     	endif
  1892  001F66                     	if	0	;tblptru may be non-zero
  1893  001F66                     	endif
  1894  001F66  0008               	tblrd		*
  1895  001F68  50F5               	movf	tablat,w,c
  1896  001F6A  0A2A               	xorlw	42
  1897  001F6C  A4D8               	btfss	status,2,c
  1898  001F6E  EFBB  F00F         	goto	u6721
  1899  001F72  EFBD  F00F         	goto	u6720
  1900  001F76                     u6721:
  1901  001F76  EFDA  F00F         	goto	l6691
  1902  001F7A                     u6720:
  1903  001F7A                     
  1904                           ; BSR set to: 0
  1905                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 766:             
      +                              ++*fmt;
  1906  001F7A  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1907  001F7E  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1908  001F82  2ADE               	incf	postinc2,f,c
  1909  001F84  0E00               	movlw	0
  1910  001F86  22DD               	addwfc	postdec2,f,c
  1911                           
  1912                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 767:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  1913  001F88  C0A1  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1914  001F8C  C0A2  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1915  001F90  CFDF F0A3          	movff	indf2,??_vfpfcnvrt
  1916  001F94  0E02               	movlw	2
  1917  001F96  26DE               	addwf	postinc2,f,c
  1918  001F98  CFDF F0A4          	movff	indf2,??_vfpfcnvrt+1
  1919  001F9C  0E00               	movlw	0
  1920  001F9E  22DD               	addwfc	postdec2,f,c
  1921  001FA0  C0A3  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1922  001FA4  C0A4  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1923  001FA8  CFDE F0F2          	movff	postinc2,_prec
  1924  001FAC  CFDD F0F3          	movff	postdec2,_prec+1
  1925                           
  1926                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 768:             
      +                          } else {
  1927  001FB0  EF1F  F010         	goto	l6701
  1928  001FB4                     l6691:
  1929                           
  1930                           ; BSR set to: 0
  1931                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 769:             
      +                              prec = atoi(*fmt);
  1932  001FB4  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1933  001FB8  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1934  001FBC  CFDE F00C          	movff	postinc2,atoi@s
  1935  001FC0  CFDD F00D          	movff	postdec2,atoi@s+1
  1936  001FC4  ECE3  F019         	call	_atoi	;wreg free
  1937  001FC8  C00C  F0F2         	movff	?_atoi,_prec
  1938  001FCC  C00D  F0F3         	movff	?_atoi+1,_prec+1
  1939                           
  1940                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 770:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1941  001FD0  EFF1  F00F         	goto	l6695
  1942  001FD4                     l6693:
  1943                           
  1944                           ; BSR set to: 0
  1945                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 771:             
      +                                  ++*fmt;
  1946  001FD4  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1947  001FD8  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1948  001FDC  2ADE               	incf	postinc2,f,c
  1949  001FDE  0E00               	movlw	0
  1950  001FE0  22DD               	addwfc	postdec2,f,c
  1951  001FE2                     l6695:
  1952  001FE2  0ED0               	movlw	208
  1953  001FE4  0100               	movlb	0	; () banked
  1954  001FE6  6FA3               	movwf	??_vfpfcnvrt& (0+255),b
  1955  001FE8  0EFF               	movlw	255
  1956  001FEA  6FA4               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  1957  001FEC  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1958  001FF0  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1959  001FF4  CFDE FFF6          	movff	postinc2,tblptrl
  1960  001FF8  CFDD FFF7          	movff	postdec2,tblptrh
  1961  001FFC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1962  001FFC  6AF8               	clrf	tblptru,c
  1963  001FFE                     	endif
  1964  001FFE                     	if	0	;tblptru may be non-zero
  1965  001FFE                     	endif
  1966  001FFE  0008               	tblrd		*
  1967  002000  50F5               	movf	tablat,w,c
  1968  002002  6FA5               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  1969  002004  6BA6               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  1970  002006  51A3               	movf	??_vfpfcnvrt& (0+255),w,b
  1971  002008  27A5               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  1972  00200A  51A4               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  1973  00200C  23A6               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  1974  00200E  51A6               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  1975  002010  E10A               	bnz	u6730
  1976  002012  0E0A               	movlw	10
  1977  002014  5DA5               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  1978  002016  A0D8               	btfss	status,0,c
  1979  002018  EF10  F010         	goto	u6731
  1980  00201C  EF13  F010         	goto	u6730
  1981  002020                     u6731:
  1982  002020  0E01               	movlw	1
  1983  002022  EF14  F010         	goto	u6740
  1984  002026                     u6730:
  1985  002026  0E00               	movlw	0
  1986  002028                     u6740:
  1987  002028  6FAB               	movwf	_vfpfcnvrt$2127& (0+255),b
  1988  00202A  6BAC               	clrf	(_vfpfcnvrt$2127+1)& (0+255),b
  1989  00202C                     
  1990                           ; BSR set to: 0
  1991  00202C  51AB               	movf	_vfpfcnvrt$2127& (0+255),w,b
  1992  00202E  11AC               	iorwf	(_vfpfcnvrt$2127+1)& (0+255),w,b
  1993  002030  A4D8               	btfss	status,2,c
  1994  002032  EF1D  F010         	goto	u6751
  1995  002036  EF1F  F010         	goto	u6750
  1996  00203A                     u6751:
  1997  00203A  EFEA  F00F         	goto	l6693
  1998  00203E                     u6750:
  1999  00203E                     l6701:
  2000                           
  2001                           ; BSR set to: 0
  2002                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  2003  00203E  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2004  002042  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2005  002046  CFDE FFF6          	movff	postinc2,tblptrl
  2006  00204A  CFDD FFF7          	movff	postdec2,tblptrh
  2007  00204E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2008  00204E  6AF8               	clrf	tblptru,c
  2009  002050                     	endif
  2010  002050                     	if	0	;tblptru may be non-zero
  2011  002050                     	endif
  2012  002050  0008               	tblrd		*
  2013  002052  50F5               	movf	tablat,w,c
  2014  002054  6E0B               	movwf	tolower@c^0,c
  2015  002056  6A0C               	clrf	(tolower@c+1)^0,c
  2016  002058  EC5B  F022         	call	_tolower	;wreg free
  2017  00205C  500B               	movf	?_tolower^0,w,c
  2018  00205E  0100               	movlb	0	; () banked
  2019  002060  6FAF               	movwf	vfpfcnvrt@ct& (0+255),b
  2020  002062                     
  2021                           ; BSR set to: 0
  2022                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  2023  002062  51AF               	movf	vfpfcnvrt@ct& (0+255),w,b
  2024  002064  B4D8               	btfsc	status,2,c
  2025  002066  EF37  F010         	goto	u6761
  2026  00206A  EF39  F010         	goto	u6760
  2027  00206E                     u6761:
  2028  00206E  EF75  F010         	goto	l6711
  2029  002072                     u6760:
  2030  002072                     
  2031                           ; BSR set to: 0
  2032                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  2033  002072  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2034  002076  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2035  00207A  CFDE F0A3          	movff	postinc2,??_vfpfcnvrt
  2036  00207E  CFDD F0A4          	movff	postdec2,??_vfpfcnvrt+1
  2037  002082  0E01               	movlw	1
  2038  002084  27A3               	addwf	??_vfpfcnvrt& (0+255),f,b
  2039  002086  0E00               	movlw	0
  2040  002088  23A4               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2041  00208A  C0A3  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2042  00208E  C0A4  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2043  002092                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2044  002092  6AF8               	clrf	tblptru,c
  2045  002094                     	endif
  2046  002094                     	if	0	;tblptru may be non-zero
  2047  002094                     	endif
  2048  002094  0008               	tblrd		*
  2049  002096  50F5               	movf	tablat,w,c
  2050  002098  6E0B               	movwf	tolower@c^0,c
  2051  00209A  6A0C               	clrf	(tolower@c+1)^0,c
  2052  00209C  EC5B  F022         	call	_tolower	;wreg free
  2053  0020A0  500B               	movf	?_tolower^0,w,c
  2054  0020A2  0100               	movlb	0	; () banked
  2055  0020A4  6FB0               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  2056  0020A6                     
  2057                           ; BSR set to: 0
  2058                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  2059  0020A6  51B0               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  2060  0020A8  B4D8               	btfsc	status,2,c
  2061  0020AA  EF59  F010         	goto	u6771
  2062  0020AE  EF5B  F010         	goto	u6770
  2063  0020B2                     u6771:
  2064  0020B2  EF75  F010         	goto	l6711
  2065  0020B6                     u6770:
  2066  0020B6                     
  2067                           ; BSR set to: 0
  2068                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  2069  0020B6  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2070  0020BA  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2071  0020BE  CFDE F0A3          	movff	postinc2,??_vfpfcnvrt
  2072  0020C2  CFDD F0A4          	movff	postdec2,??_vfpfcnvrt+1
  2073  0020C6  0E02               	movlw	2
  2074  0020C8  27A3               	addwf	??_vfpfcnvrt& (0+255),f,b
  2075  0020CA  0E00               	movlw	0
  2076  0020CC  23A4               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2077  0020CE  C0A3  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2078  0020D2  C0A4  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2079  0020D6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2080  0020D6  6AF8               	clrf	tblptru,c
  2081  0020D8                     	endif
  2082  0020D8                     	if	0	;tblptru may be non-zero
  2083  0020D8                     	endif
  2084  0020D8  0008               	tblrd		*
  2085  0020DA  50F5               	movf	tablat,w,c
  2086  0020DC  6E0B               	movwf	tolower@c^0,c
  2087  0020DE  6A0C               	clrf	(tolower@c+1)^0,c
  2088  0020E0  EC5B  F022         	call	_tolower	;wreg free
  2089  0020E4  500B               	movf	?_tolower^0,w,c
  2090  0020E6  0100               	movlb	0	; () banked
  2091  0020E8  6FB1               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  2092  0020EA                     l6711:
  2093                           
  2094                           ; BSR set to: 0
  2095                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  2096  0020EA  0E66               	movlw	102
  2097  0020EC  19AF               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  2098  0020EE  A4D8               	btfss	status,2,c
  2099  0020F0  EF7C  F010         	goto	u6781
  2100  0020F4  EF7E  F010         	goto	u6780
  2101  0020F8                     u6781:
  2102  0020F8  EFBF  F010         	goto	l6723
  2103  0020FC                     u6780:
  2104  0020FC                     
  2105                           ; BSR set to: 0
  2106                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  2107  0020FC  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2108  002100  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2109  002104  CFDE FFF6          	movff	postinc2,tblptrl
  2110  002108  CFDD FFF7          	movff	postdec2,tblptrh
  2111  00210C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2112  00210C  6AF8               	clrf	tblptru,c
  2113  00210E                     	endif
  2114  00210E                     	if	0	;tblptru may be non-zero
  2115  00210E                     	endif
  2116  00210E  0008               	tblrd		*
  2117  002110  CFF5 F0B6          	movff	tablat,vfpfcnvrt@c
  2118  002114                     
  2119                           ; BSR set to: 0
  2120                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  2121  002114  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2122  002118  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2123  00211C  2ADE               	incf	postinc2,f,c
  2124  00211E  0E00               	movlw	0
  2125  002120  22DD               	addwfc	postdec2,f,c
  2126  002122                     
  2127                           ; BSR set to: 0
  2128                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2129  002122  C0A1  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2130  002126  C0A2  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2131  00212A  CFDF F0A3          	movff	indf2,??_vfpfcnvrt
  2132  00212E  0E04               	movlw	4
  2133  002130  26DE               	addwf	postinc2,f,c
  2134  002132  CFDF F0A4          	movff	indf2,??_vfpfcnvrt+1
  2135  002136  0E00               	movlw	0
  2136  002138  22DD               	addwfc	postdec2,f,c
  2137  00213A  C0A3  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2138  00213E  C0A4  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2139  002142  CFDE F0B2          	movff	postinc2,vfpfcnvrt@f
  2140  002146  CFDE F0B3          	movff	postinc2,vfpfcnvrt@f+1
  2141  00214A  CFDE F0B4          	movff	postinc2,vfpfcnvrt@f+2
  2142  00214E  CFDE F0B5          	movff	postinc2,vfpfcnvrt@f+3
  2143  002152                     
  2144                           ; BSR set to: 0
  2145                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  2146  002152  C09D  F04F         	movff	vfpfcnvrt@fp,efgtoa@fp
  2147  002156  C09E  F050         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2148  00215A  C0B2  F051         	movff	vfpfcnvrt@f,efgtoa@f
  2149  00215E  C0B3  F052         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2150  002162  C0B4  F053         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2151  002166  C0B5  F054         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2152  00216A  C0B6  F055         	movff	vfpfcnvrt@c,efgtoa@c
  2153  00216E  EC35  F008         	call	_efgtoa	;wreg free
  2154  002172  C04F  F09D         	movff	?_efgtoa,?_vfpfcnvrt
  2155  002176  C050  F09E         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2156  00217A  EFBD  F011         	goto	l1580
  2157  00217E                     l6723:
  2158                           
  2159                           ; BSR set to: 0
  2160                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  2161  00217E  0EAF               	movlw	low vfpfcnvrt@ct
  2162  002180  6E05               	movwf	strncmp@_l^0,c
  2163  002182  0E00               	movlw	high vfpfcnvrt@ct
  2164  002184  6E06               	movwf	(strncmp@_l+1)^0,c
  2165  002186  0E65               	movlw	low STR_11
  2166  002188  6E07               	movwf	strncmp@_r^0,c
  2167  00218A  0E10               	movlw	high STR_11
  2168  00218C  6E08               	movwf	(strncmp@_r+1)^0,c
  2169  00218E  0E00               	movlw	0
  2170  002190  6E0A               	movwf	(strncmp@n+1)^0,c
  2171  002192  0E02               	movlw	2
  2172  002194  6E09               	movwf	strncmp@n^0,c
  2173  002196  ECC8  F01C         	call	_strncmp	;wreg free
  2174  00219A  5005               	movf	?_strncmp^0,w,c
  2175  00219C  1006               	iorwf	(?_strncmp+1)^0,w,c
  2176  00219E  A4D8               	btfss	status,2,c
  2177  0021A0  EFD4  F010         	goto	u6791
  2178  0021A4  EFD6  F010         	goto	u6790
  2179  0021A8                     u6791:
  2180  0021A8  EF68  F011         	goto	l6739
  2181  0021AC                     u6790:
  2182  0021AC                     
  2183                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 953:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  2184  0021AC  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2185  0021B0  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2186  0021B4  CFDE F0A3          	movff	postinc2,??_vfpfcnvrt
  2187  0021B8  CFDD F0A4          	movff	postdec2,??_vfpfcnvrt+1
  2188  0021BC  0E01               	movlw	1
  2189  0021BE  0100               	movlb	0	; () banked
  2190  0021C0  27A3               	addwf	??_vfpfcnvrt& (0+255),f,b
  2191  0021C2  0E00               	movlw	0
  2192  0021C4  23A4               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2193  0021C6  C0A3  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2194  0021CA  C0A4  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2195  0021CE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2196  0021CE  6AF8               	clrf	tblptru,c
  2197  0021D0                     	endif
  2198  0021D0                     	if	0	;tblptru may be non-zero
  2199  0021D0                     	endif
  2200  0021D0  0008               	tblrd		*
  2201  0021D2  CFF5 F0B6          	movff	tablat,vfpfcnvrt@c
  2202  0021D6  0EBF               	movlw	191
  2203  0021D8  6FA3               	movwf	??_vfpfcnvrt& (0+255),b
  2204  0021DA  0EFF               	movlw	255
  2205  0021DC  6FA4               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2206  0021DE  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2207  0021E2  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2208  0021E6  CFDE FFF6          	movff	postinc2,tblptrl
  2209  0021EA  CFDD FFF7          	movff	postdec2,tblptrh
  2210  0021EE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2211  0021EE  6AF8               	clrf	tblptru,c
  2212  0021F0                     	endif
  2213  0021F0                     	if	0	;tblptru may be non-zero
  2214  0021F0                     	endif
  2215  0021F0  0008               	tblrd		*
  2216  0021F2  50F5               	movf	tablat,w,c
  2217  0021F4  6FA5               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2218  0021F6  6BA6               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2219  0021F8  51A3               	movf	??_vfpfcnvrt& (0+255),w,b
  2220  0021FA  27A5               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2221  0021FC  51A4               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2222  0021FE  23A6               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2223  002200  51A6               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2224  002202  E10A               	bnz	u6800
  2225  002204  0E1A               	movlw	26
  2226  002206  5DA5               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2227  002208  A0D8               	btfss	status,0,c
  2228  00220A  EF09  F011         	goto	u6801
  2229  00220E  EF0C  F011         	goto	u6800
  2230  002212                     u6801:
  2231  002212  0E01               	movlw	1
  2232  002214  EF0D  F011         	goto	u6810
  2233  002218                     u6800:
  2234  002218  0E00               	movlw	0
  2235  00221A                     u6810:
  2236  00221A  6FAD               	movwf	_vfpfcnvrt$2131& (0+255),b
  2237  00221C  6BAE               	clrf	(_vfpfcnvrt$2131+1)& (0+255),b
  2238  00221E                     
  2239                           ; BSR set to: 0
  2240  00221E  51AD               	movf	_vfpfcnvrt$2131& (0+255),w,b
  2241  002220  11AE               	iorwf	(_vfpfcnvrt$2131+1)& (0+255),w,b
  2242  002222  B4D8               	btfsc	status,2,c
  2243  002224  EF16  F011         	goto	u6821
  2244  002228  EF18  F011         	goto	u6820
  2245  00222C                     u6821:
  2246  00222C  EF32  F011         	goto	l6733
  2247  002230                     u6820:
  2248  002230                     
  2249                           ; BSR set to: 0
  2250                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2251  002230  C0A1  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2252  002234  C0A2  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2253  002238  CFDF F0A3          	movff	indf2,??_vfpfcnvrt
  2254  00223C  0E04               	movlw	4
  2255  00223E  26DE               	addwf	postinc2,f,c
  2256  002240  CFDF F0A4          	movff	indf2,??_vfpfcnvrt+1
  2257  002244  0E00               	movlw	0
  2258  002246  22DD               	addwfc	postdec2,f,c
  2259  002248  C0A3  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2260  00224C  C0A4  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2261  002250  CFDE F0B2          	movff	postinc2,vfpfcnvrt@f
  2262  002254  CFDE F0B3          	movff	postinc2,vfpfcnvrt@f+1
  2263  002258  CFDE F0B4          	movff	postinc2,vfpfcnvrt@f+2
  2264  00225C  CFDE F0B5          	movff	postinc2,vfpfcnvrt@f+3
  2265                           
  2266                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  2267  002260  EF4A  F011         	goto	l1587
  2268  002264                     l6733:
  2269                           
  2270                           ; BSR set to: 0
  2271                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2272  002264  C0A1  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2273  002268  C0A2  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2274  00226C  CFDF F0A3          	movff	indf2,??_vfpfcnvrt
  2275  002270  0E04               	movlw	4
  2276  002272  26DE               	addwf	postinc2,f,c
  2277  002274  CFDF F0A4          	movff	indf2,??_vfpfcnvrt+1
  2278  002278  0E00               	movlw	0
  2279  00227A  22DD               	addwfc	postdec2,f,c
  2280  00227C  C0A3  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2281  002280  C0A4  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2282  002284  CFDE F0B2          	movff	postinc2,vfpfcnvrt@f
  2283  002288  CFDE F0B3          	movff	postinc2,vfpfcnvrt@f+1
  2284  00228C  CFDE F0B4          	movff	postinc2,vfpfcnvrt@f+2
  2285  002290  CFDE F0B5          	movff	postinc2,vfpfcnvrt@f+3
  2286  002294                     l1587:
  2287                           
  2288                           ; BSR set to: 0
  2289                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  2290  002294  0E02               	movlw	2
  2291  002296  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2292  00229A  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2293  00229E  26DE               	addwf	postinc2,f,c
  2294  0022A0  0E00               	movlw	0
  2295  0022A2  22DD               	addwfc	postdec2,f,c
  2296  0022A4                     
  2297                           ; BSR set to: 0
  2298                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 960:             
      +                          return efgtoa(fp, f, c);
  2299  0022A4  C09D  F04F         	movff	vfpfcnvrt@fp,efgtoa@fp
  2300  0022A8  C09E  F050         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2301  0022AC  C0B2  F051         	movff	vfpfcnvrt@f,efgtoa@f
  2302  0022B0  C0B3  F052         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2303  0022B4  C0B4  F053         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2304  0022B8  C0B5  F054         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2305  0022BC  C0B6  F055         	movff	vfpfcnvrt@c,efgtoa@c
  2306  0022C0  EC35  F008         	call	_efgtoa	;wreg free
  2307  0022C4  C04F  F09D         	movff	?_efgtoa,?_vfpfcnvrt
  2308  0022C8  C050  F09E         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2309  0022CC  EFBD  F011         	goto	l1580
  2310  0022D0                     l6739:
  2311                           
  2312                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2313  0022D0  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2314  0022D4  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2315  0022D8  CFDE FFF6          	movff	postinc2,tblptrl
  2316  0022DC  CFDD FFF7          	movff	postdec2,tblptrh
  2317  0022E0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2318  0022E0  6AF8               	clrf	tblptru,c
  2319  0022E2                     	endif
  2320  0022E2                     	if	0	;tblptru may be non-zero
  2321  0022E2                     	endif
  2322  0022E2  0008               	tblrd		*
  2323  0022E4  50F5               	movf	tablat,w,c
  2324  0022E6  0A25               	xorlw	37
  2325  0022E8  A4D8               	btfss	status,2,c
  2326  0022EA  EF79  F011         	goto	u6831
  2327  0022EE  EF7B  F011         	goto	u6830
  2328  0022F2                     u6831:
  2329  0022F2  EF93  F011         	goto	l6749
  2330  0022F6                     u6830:
  2331  0022F6                     
  2332                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2333  0022F6  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2334  0022FA  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2335  0022FE  2ADE               	incf	postinc2,f,c
  2336  002300  0E00               	movlw	0
  2337  002302  22DD               	addwfc	postdec2,f,c
  2338  002304                     
  2339                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2340  002304  0E00               	movlw	0
  2341  002306  6E08               	movwf	(fputc@c+1)^0,c
  2342  002308  0E25               	movlw	37
  2343  00230A  6E07               	movwf	fputc@c^0,c
  2344  00230C  C09D  F009         	movff	vfpfcnvrt@fp,fputc@fp
  2345  002310  C09E  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2346  002314  EC76  F020         	call	_fputc	;wreg free
  2347  002318                     l6745:
  2348                           
  2349                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2350  002318  0E00               	movlw	0
  2351  00231A  0100               	movlb	0	; () banked
  2352  00231C  6F9E               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2353  00231E  0E01               	movlw	1
  2354  002320  6F9D               	movwf	?_vfpfcnvrt& (0+255),b
  2355  002322  EFBD  F011         	goto	l1580
  2356  002326                     l6749:
  2357                           
  2358                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2359  002326  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2360  00232A  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2361  00232E  2ADE               	incf	postinc2,f,c
  2362  002330  0E00               	movlw	0
  2363  002332  22DD               	addwfc	postdec2,f,c
  2364  002334                     
  2365                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2366  002334  0E00               	movlw	0
  2367  002336  0100               	movlb	0	; () banked
  2368  002338  6F9E               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2369  00233A  0E00               	movlw	0
  2370  00233C  6F9D               	movwf	?_vfpfcnvrt& (0+255),b
  2371  00233E  EFBD  F011         	goto	l1580
  2372  002342                     l6755:
  2373                           
  2374                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2375  002342  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2376  002346  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2377  00234A  CFDE FFF6          	movff	postinc2,tblptrl
  2378  00234E  CFDD FFF7          	movff	postdec2,tblptrh
  2379  002352                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2380  002352  6AF8               	clrf	tblptru,c
  2381  002354                     	endif
  2382  002354                     	if	0	;tblptru may be non-zero
  2383  002354                     	endif
  2384  002354  0008               	tblrd		*
  2385  002356  50F5               	movf	tablat,w,c
  2386  002358  6E07               	movwf	fputc@c^0,c
  2387  00235A  6A08               	clrf	(fputc@c+1)^0,c
  2388  00235C  C09D  F009         	movff	vfpfcnvrt@fp,fputc@fp
  2389  002360  C09E  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2390  002364  EC76  F020         	call	_fputc	;wreg free
  2391  002368                     
  2392                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2393  002368  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2394  00236C  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2395  002370  2ADE               	incf	postinc2,f,c
  2396  002372  0E00               	movlw	0
  2397  002374  22DD               	addwfc	postdec2,f,c
  2398  002376  EF8C  F011         	goto	l6745
  2399  00237A                     l1580:
  2400  00237A  0012               	return		;funcret
  2401  00237C                     __end_of_vfpfcnvrt:
  2402                           	callstack 0
  2403                           
  2404 ;; *************** function _strncmp *****************
  2405 ;; Defined at:
  2406 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strncmp.c"
  2407 ;; Parameters:    Size  Location     Type
  2408 ;;  _l              2    4[COMRAM] PTR const unsigned char 
  2409 ;;		 -> vfpfcnvrt@ct(3), 
  2410 ;;  _r              2    6[COMRAM] PTR const unsigned char 
  2411 ;;		 -> STR_13(3), 
  2412 ;;  n               2    8[COMRAM] unsigned int 
  2413 ;; Auto vars:     Size  Location     Type
  2414 ;;  r               2   13[COMRAM] PTR const unsigned char 
  2415 ;;		 -> STR_13(3), 
  2416 ;;  l               2   11[COMRAM] PTR const unsigned char 
  2417 ;;		 -> vfpfcnvrt@ct(3), 
  2418 ;; Return value:  Size  Location     Type
  2419 ;;                  2    4[COMRAM] int 
  2420 ;; Registers used:
  2421 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2422 ;; Tracked objects:
  2423 ;;		On entry : 0/0
  2424 ;;		On exit  : 0/0
  2425 ;;		Unchanged: 0/0
  2426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2427 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2428 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2429 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2430 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2431 ;;Total ram usage:       11 bytes
  2432 ;; Hardware stack levels used: 1
  2433 ;; Hardware stack levels required when called: 4
  2434 ;; This function calls:
  2435 ;;		Nothing
  2436 ;; This function is called by:
  2437 ;;		_vfpfcnvrt
  2438 ;; This function uses a non-reentrant model
  2439 ;;
  2440                           
  2441                           	psect	text4
  2442  003990                     __ptext4:
  2443                           	callstack 0
  2444  003990                     _strncmp:
  2445                           	callstack 23
  2446  003990  C005  F00C         	movff	strncmp@_l,strncmp@l
  2447  003994  C006  F00D         	movff	strncmp@_l+1,strncmp@l+1
  2448  003998  C007  F00E         	movff	strncmp@_r,strncmp@r
  2449  00399C  C008  F00F         	movff	strncmp@_r+1,strncmp@r+1
  2450  0039A0  0609               	decf	strncmp@n^0,f,c
  2451  0039A2  A0D8               	btfss	status,0,c
  2452  0039A4  060A               	decf	(strncmp@n+1)^0,f,c
  2453  0039A6  2809               	incf	strncmp@n^0,w,c
  2454  0039A8  E106               	bnz	u5361
  2455  0039AA  280A               	incf	(strncmp@n+1)^0,w,c
  2456  0039AC  A4D8               	btfss	status,2,c
  2457  0039AE  EFDB  F01C         	goto	u5361
  2458  0039B2  EFDD  F01C         	goto	u5360
  2459  0039B6                     u5361:
  2460  0039B6  EFEA  F01C         	goto	l5587
  2461  0039BA                     u5360:
  2462  0039BA  0E00               	movlw	0
  2463  0039BC  6E06               	movwf	(?_strncmp+1)^0,c
  2464  0039BE  0E00               	movlw	0
  2465  0039C0  6E05               	movwf	?_strncmp^0,c
  2466  0039C2  EF35  F01D         	goto	l1705
  2467  0039C6                     l5585:
  2468  0039C6  4A0C               	infsnz	strncmp@l^0,f,c
  2469  0039C8  2A0D               	incf	(strncmp@l+1)^0,f,c
  2470  0039CA  4A0E               	infsnz	strncmp@r^0,f,c
  2471  0039CC  2A0F               	incf	(strncmp@r+1)^0,f,c
  2472  0039CE  0609               	decf	strncmp@n^0,f,c
  2473  0039D0  A0D8               	btfss	status,0,c
  2474  0039D2  060A               	decf	(strncmp@n+1)^0,f,c
  2475  0039D4                     l5587:
  2476  0039D4  C00C  FFD9         	movff	strncmp@l,fsr2l
  2477  0039D8  C00D  FFDA         	movff	strncmp@l+1,fsr2h
  2478  0039DC  50DF               	movf	indf2,w,c
  2479  0039DE  B4D8               	btfsc	status,2,c
  2480  0039E0  EFF4  F01C         	goto	u5371
  2481  0039E4  EFF6  F01C         	goto	u5370
  2482  0039E8                     u5371:
  2483  0039E8  EF23  F01D         	goto	l5595
  2484  0039EC                     u5370:
  2485  0039EC  C00E  FFF6         	movff	strncmp@r,tblptrl
  2486  0039F0  C00F  FFF7         	movff	strncmp@r+1,tblptrh
  2487  0039F4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2488  0039F4  6AF8               	clrf	tblptru,c
  2489  0039F6                     	endif
  2490  0039F6                     	if	0	;tblptru may be non-zero
  2491  0039F6                     	endif
  2492  0039F6  0008               	tblrd		*
  2493  0039F8  50F5               	movf	tablat,w,c
  2494  0039FA  0900               	iorlw	0
  2495  0039FC  B4D8               	btfsc	status,2,c
  2496  0039FE  EF03  F01D         	goto	u5381
  2497  003A02  EF05  F01D         	goto	u5380
  2498  003A06                     u5381:
  2499  003A06  EF23  F01D         	goto	l5595
  2500  003A0A                     u5380:
  2501  003A0A  5009               	movf	strncmp@n^0,w,c
  2502  003A0C  100A               	iorwf	(strncmp@n+1)^0,w,c
  2503  003A0E  B4D8               	btfsc	status,2,c
  2504  003A10  EF0C  F01D         	goto	u5391
  2505  003A14  EF0E  F01D         	goto	u5390
  2506  003A18                     u5391:
  2507  003A18  EF23  F01D         	goto	l5595
  2508  003A1C                     u5390:
  2509  003A1C  C00C  FFD9         	movff	strncmp@l,fsr2l
  2510  003A20  C00D  FFDA         	movff	strncmp@l+1,fsr2h
  2511  003A24  50DF               	movf	indf2,w,c
  2512  003A26  6E0B               	movwf	??_strncmp^0,c
  2513  003A28  C00E  FFF6         	movff	strncmp@r,tblptrl
  2514  003A2C  C00F  FFF7         	movff	strncmp@r+1,tblptrh
  2515  003A30                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2516  003A30  6AF8               	clrf	tblptru,c
  2517  003A32                     	endif
  2518  003A32                     	if	0	;tblptru may be non-zero
  2519  003A32                     	endif
  2520  003A32  0008               	tblrd		*
  2521  003A34  50F5               	movf	tablat,w,c
  2522  003A36  180B               	xorwf	??_strncmp^0,w,c
  2523  003A38  B4D8               	btfsc	status,2,c
  2524  003A3A  EF21  F01D         	goto	u5401
  2525  003A3E  EF23  F01D         	goto	u5400
  2526  003A42                     u5401:
  2527  003A42  EFE3  F01C         	goto	l5585
  2528  003A46                     u5400:
  2529  003A46                     l5595:
  2530  003A46  C00C  FFD9         	movff	strncmp@l,fsr2l
  2531  003A4A  C00D  FFDA         	movff	strncmp@l+1,fsr2h
  2532  003A4E  50DF               	movf	indf2,w,c
  2533  003A50  6E0B               	movwf	??_strncmp^0,c
  2534  003A52  C00E  FFF6         	movff	strncmp@r,tblptrl
  2535  003A56  C00F  FFF7         	movff	strncmp@r+1,tblptrh
  2536  003A5A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2537  003A5A  6AF8               	clrf	tblptru,c
  2538  003A5C                     	endif
  2539  003A5C                     	if	0	;tblptru may be non-zero
  2540  003A5C                     	endif
  2541  003A5C  0008               	tblrd		*
  2542  003A5E  50F5               	movf	tablat,w,c
  2543  003A60  5C0B               	subwf	??_strncmp^0,w,c
  2544  003A62  6E05               	movwf	?_strncmp^0,c
  2545  003A64  6A06               	clrf	(?_strncmp+1)^0,c
  2546  003A66  A0D8               	btfss	status,0,c
  2547  003A68  0606               	decf	(?_strncmp+1)^0,f,c
  2548  003A6A                     l1705:
  2549  003A6A  0012               	return		;funcret
  2550  003A6C                     __end_of_strncmp:
  2551                           	callstack 0
  2552                           
  2553 ;; *************** function _efgtoa *****************
  2554 ;; Defined at:
  2555 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2556 ;; Parameters:    Size  Location     Type
  2557 ;;  fp              2   78[COMRAM] PTR struct _IO_FILE
  2558 ;;		 -> NULL(0), 
  2559 ;;  f               4   80[COMRAM] PTR struct _IO_FILE
  2560 ;;  c               1   84[COMRAM] unsigned char 
  2561 ;; Auto vars:     Size  Location     Type
  2562 ;;  u               4   57[BANK0 ] unsigned char 
  2563 ;;  g               4   49[BANK0 ] unsigned char 
  2564 ;;  l               4   43[BANK0 ] unsigned char 
  2565 ;;  h               4   39[BANK0 ] unsigned char 
  2566 ;;  ou              4   25[BANK0 ] unsigned char 
  2567 ;;  n               2   55[BANK0 ] int 
  2568 ;;  e               2   53[BANK0 ] int 
  2569 ;;  i               2   47[BANK0 ] int 
  2570 ;;  w               2   35[BANK0 ] int 
  2571 ;;  p               2   33[BANK0 ] int 
  2572 ;;  sign            2   31[BANK0 ] int 
  2573 ;;  d               2   29[BANK0 ] int 
  2574 ;;  m               2   23[BANK0 ] int 
  2575 ;;  ne              2   21[BANK0 ] int 
  2576 ;;  pp              2   19[BANK0 ] int 
  2577 ;;  t               2   17[BANK0 ] int 
  2578 ;;  mode            1   38[BANK0 ] unsigned char 
  2579 ;;  nmode           1   37[BANK0 ] unsigned char 
  2580 ;; Return value:  Size  Location     Type
  2581 ;;                  2   78[COMRAM] int 
  2582 ;; Registers used:
  2583 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2584 ;; Tracked objects:
  2585 ;;		On entry : 0/0
  2586 ;;		On exit  : 0/0
  2587 ;;		Unchanged: 0/0
  2588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2589 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2590 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2591 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2592 ;;      Totals:         7      61       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2593 ;;Total ram usage:       68 bytes
  2594 ;; Hardware stack levels used: 1
  2595 ;; Hardware stack levels required when called: 9
  2596 ;; This function calls:
  2597 ;;		___awdiv
  2598 ;;		___awmod
  2599 ;;		___fladd
  2600 ;;		___fldiv
  2601 ;;		___fleq
  2602 ;;		___flge
  2603 ;;		___flmul
  2604 ;;		___flneg
  2605 ;;		___flsub
  2606 ;;		___fltol
  2607 ;;		___fpclassifyf
  2608 ;;		_floorf
  2609 ;;		_isupper
  2610 ;;		_pad
  2611 ;;		_strcpy
  2612 ;;		_tolower
  2613 ;; This function is called by:
  2614 ;;		_vfpfcnvrt
  2615 ;; This function uses a non-reentrant model
  2616 ;;
  2617                           
  2618                           	psect	text5
  2619  00106A                     __ptext5:
  2620                           	callstack 0
  2621  00106A                     _efgtoa:
  2622                           	callstack 18
  2623  00106A                     
  2624                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.32\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  2625  00106A  0E00               	movlw	0
  2626  00106C  0100               	movlb	0	; () banked
  2627  00106E  6F80               	movwf	(efgtoa@sign+1)& (0+255),b
  2628  001070  0E00               	movlw	0
  2629  001072  6F7F               	movwf	efgtoa@sign& (0+255),b
  2630  001074                     
  2631                           ; BSR set to: 0
  2632                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 340:     g = f;
  2633  001074  C051  F091         	movff	efgtoa@f,efgtoa@g
  2634  001078  C052  F092         	movff	efgtoa@f+1,efgtoa@g+1
  2635  00107C  C053  F093         	movff	efgtoa@f+2,efgtoa@g+2
  2636  001080  C054  F094         	movff	efgtoa@f+3,efgtoa@g+3
  2637  001084                     
  2638                           ; BSR set to: 0
  2639                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  2640  001084  BF94               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2641  001086  EF49  F008         	goto	u6090
  2642  00108A  EF47  F008         	goto	u6091
  2643  00108E                     u6091:
  2644  00108E  EF5F  F008         	goto	l6325
  2645  001092                     u6090:
  2646  001092                     
  2647                           ; BSR set to: 0
  2648                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  2649  001092  0E00               	movlw	0
  2650  001094  6F80               	movwf	(efgtoa@sign+1)& (0+255),b
  2651  001096  0E01               	movlw	1
  2652  001098  6F7F               	movwf	efgtoa@sign& (0+255),b
  2653  00109A                     
  2654                           ; BSR set to: 0
  2655                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  2656  00109A  C091  F005         	movff	efgtoa@g,___flneg@f1
  2657  00109E  C092  F006         	movff	efgtoa@g+1,___flneg@f1+1
  2658  0010A2  C093  F007         	movff	efgtoa@g+2,___flneg@f1+2
  2659  0010A6  C094  F008         	movff	efgtoa@g+3,___flneg@f1+3
  2660  0010AA  EC45  F024         	call	___flneg	;wreg free
  2661  0010AE  C005  F091         	movff	?___flneg,efgtoa@g
  2662  0010B2  C006  F092         	movff	?___flneg+1,efgtoa@g+1
  2663  0010B6  C007  F093         	movff	?___flneg+2,efgtoa@g+2
  2664  0010BA  C008  F094         	movff	?___flneg+3,efgtoa@g+3
  2665  0010BE                     l6325:
  2666                           
  2667                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  2668  0010BE  0E00               	movlw	0
  2669  0010C0  0100               	movlb	0	; () banked
  2670  0010C2  6F98               	movwf	(efgtoa@n+1)& (0+255),b
  2671  0010C4  0E00               	movlw	0
  2672  0010C6  6F97               	movwf	efgtoa@n& (0+255),b
  2673  0010C8                     
  2674                           ; BSR set to: 0
  2675                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  2676  0010C8  C0F0  F083         	movff	_width,efgtoa@w
  2677  0010CC  C0F1  F084         	movff	_width+1,efgtoa@w+1
  2678  0010D0                     
  2679                           ; BSR set to: 0
  2680                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  2681  0010D0  517F               	movf	efgtoa@sign& (0+255),w,b
  2682  0010D2  1180               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2683  0010D4  A4D8               	btfss	status,2,c
  2684  0010D6  EF6F  F008         	goto	u6101
  2685  0010DA  EF71  F008         	goto	u6100
  2686  0010DE                     u6101:
  2687  0010DE  EF78  F008         	goto	l6333
  2688  0010E2                     u6100:
  2689  0010E2                     
  2690                           ; BSR set to: 0
  2691  0010E2  A5F4               	btfss	_flags& (0+255),2,b
  2692  0010E4  EF76  F008         	goto	u6111
  2693  0010E8  EF78  F008         	goto	u6110
  2694  0010EC                     u6111:
  2695  0010EC  EF92  F008         	goto	l6345
  2696  0010F0                     u6110:
  2697  0010F0                     l6333:
  2698                           
  2699                           ; BSR set to: 0
  2700                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  2701  0010F0  517F               	movf	efgtoa@sign& (0+255),w,b
  2702  0010F2  1180               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2703  0010F4  A4D8               	btfss	status,2,c
  2704  0010F6  EF7F  F008         	goto	u6121
  2705  0010FA  EF81  F008         	goto	u6120
  2706  0010FE                     u6121:
  2707  0010FE  EF87  F008         	goto	l6337
  2708  001102                     u6120:
  2709  001102                     
  2710                           ; BSR set to: 0
  2711  001102  0E00               	movlw	0
  2712  001104  6F66               	movwf	(_efgtoa$2100+1)& (0+255),b
  2713  001106  0E2B               	movlw	43
  2714  001108  6F65               	movwf	_efgtoa$2100& (0+255),b
  2715  00110A  EF8B  F008         	goto	l6339
  2716  00110E                     l6337:
  2717                           
  2718                           ; BSR set to: 0
  2719  00110E  0E00               	movlw	0
  2720  001110  6F66               	movwf	(_efgtoa$2100+1)& (0+255),b
  2721  001112  0E2D               	movlw	45
  2722  001114  6F65               	movwf	_efgtoa$2100& (0+255),b
  2723  001116                     l6339:
  2724                           
  2725                           ; BSR set to: 0
  2726  001116  C065  F124         	movff	_efgtoa$2100,_dbuf
  2727  00111A                     
  2728                           ; BSR set to: 0
  2729                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 351:         ++n;
  2730  00111A  4B97               	infsnz	efgtoa@n& (0+255),f,b
  2731  00111C  2B98               	incf	(efgtoa@n+1)& (0+255),f,b
  2732  00111E                     
  2733                           ; BSR set to: 0
  2734                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 352:         --w;
  2735  00111E  0783               	decf	efgtoa@w& (0+255),f,b
  2736  001120  A0D8               	btfss	status,0,c
  2737  001122  0784               	decf	(efgtoa@w+1)& (0+255),f,b
  2738  001124                     l6345:
  2739                           
  2740                           ; BSR set to: 0
  2741                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 357:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2742  001124  C091  F005         	movff	efgtoa@g,___fpclassifyf@x
  2743  001128  C092  F006         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2744  00112C  C093  F007         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2745  001130  C094  F008         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2746  001134  EC49  F01C         	call	___fpclassifyf	;wreg free
  2747  001138  0405               	decf	?___fpclassifyf^0,w,c
  2748  00113A  1006               	iorwf	(?___fpclassifyf+1)^0,w,c
  2749  00113C  A4D8               	btfss	status,2,c
  2750  00113E  EFA3  F008         	goto	u6131
  2751  001142  EFA5  F008         	goto	u6130
  2752  001146                     u6131:
  2753  001146  EFFC  F008         	goto	l6363
  2754  00114A                     u6130:
  2755  00114A  0EBF               	movlw	191
  2756  00114C  0100               	movlb	0	; () banked
  2757  00114E  6F60               	movwf	??_efgtoa& (0+255),b
  2758  001150  0EFF               	movlw	255
  2759  001152  6F61               	movwf	(??_efgtoa+1)& (0+255),b
  2760  001154  5055               	movf	efgtoa@c^0,w,c
  2761  001156  6F62               	movwf	(??_efgtoa+2)& (0+255),b
  2762  001158  6B63               	clrf	(??_efgtoa+3)& (0+255),b
  2763  00115A  5160               	movf	??_efgtoa& (0+255),w,b
  2764  00115C  2762               	addwf	(??_efgtoa+2)& (0+255),f,b
  2765  00115E  5161               	movf	(??_efgtoa+1)& (0+255),w,b
  2766  001160  2363               	addwfc	(??_efgtoa+3)& (0+255),f,b
  2767  001162  5163               	movf	(??_efgtoa+3)& (0+255),w,b
  2768  001164  E10A               	bnz	u6140
  2769  001166  0E1A               	movlw	26
  2770  001168  5D62               	subwf	(??_efgtoa+2)& (0+255),w,b
  2771  00116A  A0D8               	btfss	status,0,c
  2772  00116C  EFBA  F008         	goto	u6141
  2773  001170  EFBD  F008         	goto	u6140
  2774  001174                     u6141:
  2775  001174  0E01               	movlw	1
  2776  001176  EFBE  F008         	goto	u6150
  2777  00117A                     u6140:
  2778  00117A  0E00               	movlw	0
  2779  00117C                     u6150:
  2780  00117C  6F67               	movwf	_efgtoa$2101& (0+255),b
  2781  00117E  6B68               	clrf	(_efgtoa$2101+1)& (0+255),b
  2782  001180                     
  2783                           ; BSR set to: 0
  2784  001180  5167               	movf	_efgtoa$2101& (0+255),w,b
  2785  001182  1168               	iorwf	(_efgtoa$2101+1)& (0+255),w,b
  2786  001184  B4D8               	btfsc	status,2,c
  2787  001186  EFC7  F008         	goto	u6161
  2788  00118A  EFC9  F008         	goto	u6160
  2789  00118E                     u6161:
  2790  00118E  EFD7  F008         	goto	l6355
  2791  001192                     u6160:
  2792  001192                     
  2793                           ; BSR set to: 0
  2794                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  2795  001192  0E24               	movlw	low _dbuf
  2796  001194  2597               	addwf	efgtoa@n& (0+255),w,b
  2797  001196  6E05               	movwf	strcpy@dest^0,c
  2798  001198  0E01               	movlw	high _dbuf
  2799  00119A  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2800  00119C  6E06               	movwf	(strcpy@dest+1)^0,c
  2801  00119E  0E55               	movlw	low STR_3
  2802  0011A0  6E07               	movwf	strcpy@src^0,c
  2803  0011A2  0E10               	movlw	high STR_3
  2804  0011A4  6E08               	movwf	(strcpy@src+1)^0,c
  2805  0011A6  EC8B  F022         	call	_strcpy	;wreg free
  2806                           
  2807                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  2808  0011AA  EFE3  F008         	goto	l6357
  2809  0011AE                     l6355:
  2810                           
  2811                           ; BSR set to: 0
  2812                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  2813  0011AE  0E24               	movlw	low _dbuf
  2814  0011B0  2597               	addwf	efgtoa@n& (0+255),w,b
  2815  0011B2  6E05               	movwf	strcpy@dest^0,c
  2816  0011B4  0E01               	movlw	high _dbuf
  2817  0011B6  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2818  0011B8  6E06               	movwf	(strcpy@dest+1)^0,c
  2819  0011BA  0E5D               	movlw	low STR_4
  2820  0011BC  6E07               	movwf	strcpy@src^0,c
  2821  0011BE  0E10               	movlw	high STR_4
  2822  0011C0  6E08               	movwf	(strcpy@src+1)^0,c
  2823  0011C2  EC8B  F022         	call	_strcpy	;wreg free
  2824  0011C6                     l6357:
  2825                           
  2826                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  2827  0011C6  0100               	movlb	0	; () banked
  2828  0011C8  0EFD               	movlw	253
  2829  0011CA  2783               	addwf	efgtoa@w& (0+255),f,b
  2830  0011CC  0EFF               	movlw	255
  2831  0011CE  2384               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2832  0011D0                     
  2833                           ; BSR set to: 0
  2834                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  2835  0011D0  C04F  F017         	movff	efgtoa@fp,pad@fp
  2836  0011D4  C050  F018         	movff	efgtoa@fp+1,pad@fp+1
  2837  0011D8  0E24               	movlw	low _dbuf
  2838  0011DA  6E19               	movwf	pad@buf^0,c
  2839  0011DC  0E01               	movlw	high _dbuf
  2840  0011DE  6E1A               	movwf	(pad@buf+1)^0,c
  2841  0011E0  C083  F01B         	movff	efgtoa@w,pad@p
  2842  0011E4  C084  F01C         	movff	efgtoa@w+1,pad@p+1
  2843  0011E8  EC9A  F01D         	call	_pad	;wreg free
  2844  0011EC  C017  F04F         	movff	?_pad,?_efgtoa
  2845  0011F0  C018  F050         	movff	?_pad+1,?_efgtoa+1
  2846  0011F4  EF87  F00E         	goto	l1466
  2847  0011F8                     l6363:
  2848                           
  2849                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 366:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2850  0011F8  C091  F005         	movff	efgtoa@g,___fpclassifyf@x
  2851  0011FC  C092  F006         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2852  001200  C093  F007         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2853  001204  C094  F008         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2854  001208  EC49  F01C         	call	___fpclassifyf	;wreg free
  2855  00120C  5005               	movf	?___fpclassifyf^0,w,c
  2856  00120E  1006               	iorwf	(?___fpclassifyf+1)^0,w,c
  2857  001210  A4D8               	btfss	status,2,c
  2858  001212  EF0D  F009         	goto	u6171
  2859  001216  EF0F  F009         	goto	u6170
  2860  00121A                     u6171:
  2861  00121A  EF66  F009         	goto	l6381
  2862  00121E                     u6170:
  2863  00121E  0EBF               	movlw	191
  2864  001220  0100               	movlb	0	; () banked
  2865  001222  6F60               	movwf	??_efgtoa& (0+255),b
  2866  001224  0EFF               	movlw	255
  2867  001226  6F61               	movwf	(??_efgtoa+1)& (0+255),b
  2868  001228  5055               	movf	efgtoa@c^0,w,c
  2869  00122A  6F62               	movwf	(??_efgtoa+2)& (0+255),b
  2870  00122C  6B63               	clrf	(??_efgtoa+3)& (0+255),b
  2871  00122E  5160               	movf	??_efgtoa& (0+255),w,b
  2872  001230  2762               	addwf	(??_efgtoa+2)& (0+255),f,b
  2873  001232  5161               	movf	(??_efgtoa+1)& (0+255),w,b
  2874  001234  2363               	addwfc	(??_efgtoa+3)& (0+255),f,b
  2875  001236  5163               	movf	(??_efgtoa+3)& (0+255),w,b
  2876  001238  E10A               	bnz	u6180
  2877  00123A  0E1A               	movlw	26
  2878  00123C  5D62               	subwf	(??_efgtoa+2)& (0+255),w,b
  2879  00123E  A0D8               	btfss	status,0,c
  2880  001240  EF24  F009         	goto	u6181
  2881  001244  EF27  F009         	goto	u6180
  2882  001248                     u6181:
  2883  001248  0E01               	movlw	1
  2884  00124A  EF28  F009         	goto	u6190
  2885  00124E                     u6180:
  2886  00124E  0E00               	movlw	0
  2887  001250                     u6190:
  2888  001250  6F69               	movwf	_efgtoa$2106& (0+255),b
  2889  001252  6B6A               	clrf	(_efgtoa$2106+1)& (0+255),b
  2890  001254                     
  2891                           ; BSR set to: 0
  2892  001254  5169               	movf	_efgtoa$2106& (0+255),w,b
  2893  001256  116A               	iorwf	(_efgtoa$2106+1)& (0+255),w,b
  2894  001258  B4D8               	btfsc	status,2,c
  2895  00125A  EF31  F009         	goto	u6201
  2896  00125E  EF33  F009         	goto	u6200
  2897  001262                     u6201:
  2898  001262  EF41  F009         	goto	l6373
  2899  001266                     u6200:
  2900  001266                     
  2901                           ; BSR set to: 0
  2902                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  2903  001266  0E24               	movlw	low _dbuf
  2904  001268  2597               	addwf	efgtoa@n& (0+255),w,b
  2905  00126A  6E05               	movwf	strcpy@dest^0,c
  2906  00126C  0E01               	movlw	high _dbuf
  2907  00126E  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2908  001270  6E06               	movwf	(strcpy@dest+1)^0,c
  2909  001272  0E59               	movlw	low STR_7
  2910  001274  6E07               	movwf	strcpy@src^0,c
  2911  001276  0E10               	movlw	high STR_7
  2912  001278  6E08               	movwf	(strcpy@src+1)^0,c
  2913  00127A  EC8B  F022         	call	_strcpy	;wreg free
  2914                           
  2915                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  2916  00127E  EF4D  F009         	goto	l6375
  2917  001282                     l6373:
  2918                           
  2919                           ; BSR set to: 0
  2920                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  2921  001282  0E24               	movlw	low _dbuf
  2922  001284  2597               	addwf	efgtoa@n& (0+255),w,b
  2923  001286  6E05               	movwf	strcpy@dest^0,c
  2924  001288  0E01               	movlw	high _dbuf
  2925  00128A  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2926  00128C  6E06               	movwf	(strcpy@dest+1)^0,c
  2927  00128E  0E61               	movlw	low STR_8
  2928  001290  6E07               	movwf	strcpy@src^0,c
  2929  001292  0E10               	movlw	high STR_8
  2930  001294  6E08               	movwf	(strcpy@src+1)^0,c
  2931  001296  EC8B  F022         	call	_strcpy	;wreg free
  2932  00129A                     l6375:
  2933                           
  2934                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 371:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  2935  00129A  0100               	movlb	0	; () banked
  2936  00129C  0EFD               	movlw	253
  2937  00129E  2783               	addwf	efgtoa@w& (0+255),f,b
  2938  0012A0  0EFF               	movlw	255
  2939  0012A2  2384               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2940  0012A4                     
  2941                           ; BSR set to: 0
  2942                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 372:         retu
      +                          rn pad(fp, &dbuf[0], w);
  2943  0012A4  C04F  F017         	movff	efgtoa@fp,pad@fp
  2944  0012A8  C050  F018         	movff	efgtoa@fp+1,pad@fp+1
  2945  0012AC  0E24               	movlw	low _dbuf
  2946  0012AE  6E19               	movwf	pad@buf^0,c
  2947  0012B0  0E01               	movlw	high _dbuf
  2948  0012B2  6E1A               	movwf	(pad@buf+1)^0,c
  2949  0012B4  C083  F01B         	movff	efgtoa@w,pad@p
  2950  0012B8  C084  F01C         	movff	efgtoa@w+1,pad@p+1
  2951  0012BC  EC9A  F01D         	call	_pad	;wreg free
  2952  0012C0  C017  F04F         	movff	?_pad,?_efgtoa
  2953  0012C4  C018  F050         	movff	?_pad+1,?_efgtoa+1
  2954  0012C8  EF87  F00E         	goto	l1466
  2955  0012CC                     l6381:
  2956                           
  2957                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  2958  0012CC  0E00               	movlw	0
  2959  0012CE  0100               	movlb	0	; () banked
  2960  0012D0  6F99               	movwf	efgtoa@u& (0+255),b
  2961  0012D2  0E00               	movlw	0
  2962  0012D4  6F9A               	movwf	(efgtoa@u+1)& (0+255),b
  2963  0012D6  0E80               	movlw	128
  2964  0012D8  6F9B               	movwf	(efgtoa@u+2)& (0+255),b
  2965  0012DA  0E3F               	movlw	63
  2966  0012DC  6F9C               	movwf	(efgtoa@u+3)& (0+255),b
  2967                           
  2968                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  2969  0012DE  0E00               	movlw	0
  2970  0012E0  6F96               	movwf	(efgtoa@e+1)& (0+255),b
  2971  0012E2  0E00               	movlw	0
  2972  0012E4  6F95               	movwf	efgtoa@e& (0+255),b
  2973  0012E6                     
  2974                           ; BSR set to: 0
  2975                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  2976  0012E6  C091  F005         	movff	efgtoa@g,___fleq@ff1
  2977  0012EA  C092  F006         	movff	efgtoa@g+1,___fleq@ff1+1
  2978  0012EE  C093  F007         	movff	efgtoa@g+2,___fleq@ff1+2
  2979  0012F2  C094  F008         	movff	efgtoa@g+3,___fleq@ff1+3
  2980  0012F6  0E00               	movlw	0
  2981  0012F8  6E09               	movwf	___fleq@ff2^0,c
  2982  0012FA  0E00               	movlw	0
  2983  0012FC  6E0A               	movwf	(___fleq@ff2+1)^0,c
  2984  0012FE  0E00               	movlw	0
  2985  001300  6E0B               	movwf	(___fleq@ff2+2)^0,c
  2986  001302  0E00               	movlw	0
  2987  001304  6E0C               	movwf	(___fleq@ff2+3)^0,c
  2988  001306  ECCE  F01F         	call	___fleq	;wreg free
  2989  00130A  B0D8               	btfsc	status,0,c
  2990  00130C  EF8A  F009         	goto	u6211
  2991  001310  EF8C  F009         	goto	u6210
  2992  001314                     u6211:
  2993  001314  EF0F  F00A         	goto	l6399
  2994  001318                     u6210:
  2995  001318  EFAB  F009         	goto	l6391
  2996  00131C                     l6387:
  2997                           
  2998                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  2999  00131C  C099  F005         	movff	efgtoa@u,___flmul@b
  3000  001320  C09A  F006         	movff	efgtoa@u+1,___flmul@b+1
  3001  001324  C09B  F007         	movff	efgtoa@u+2,___flmul@b+2
  3002  001328  C09C  F008         	movff	efgtoa@u+3,___flmul@b+3
  3003  00132C  0E00               	movlw	0
  3004  00132E  6E09               	movwf	___flmul@a^0,c
  3005  001330  0E00               	movlw	0
  3006  001332  6E0A               	movwf	(___flmul@a+1)^0,c
  3007  001334  0E20               	movlw	32
  3008  001336  6E0B               	movwf	(___flmul@a+2)^0,c
  3009  001338  0E41               	movlw	65
  3010  00133A  6E0C               	movwf	(___flmul@a+3)^0,c
  3011  00133C  EC1E  F014         	call	___flmul	;wreg free
  3012  001340  C005  F099         	movff	?___flmul,efgtoa@u
  3013  001344  C006  F09A         	movff	?___flmul+1,efgtoa@u+1
  3014  001348  C007  F09B         	movff	?___flmul+2,efgtoa@u+2
  3015  00134C  C008  F09C         	movff	?___flmul+3,efgtoa@u+3
  3016  001350                     
  3017                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  3018  001350  0100               	movlb	0	; () banked
  3019  001352  4B95               	infsnz	efgtoa@e& (0+255),f,b
  3020  001354  2B96               	incf	(efgtoa@e+1)& (0+255),f,b
  3021  001356                     l6391:
  3022                           
  3023                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  3024  001356  C091  F01E         	movff	efgtoa@g,___flge@ff1
  3025  00135A  C092  F01F         	movff	efgtoa@g+1,___flge@ff1+1
  3026  00135E  C093  F020         	movff	efgtoa@g+2,___flge@ff1+2
  3027  001362  C094  F021         	movff	efgtoa@g+3,___flge@ff1+3
  3028  001366  0E00               	movlw	0
  3029  001368  6E09               	movwf	___flmul@a^0,c
  3030  00136A  0E00               	movlw	0
  3031  00136C  6E0A               	movwf	(___flmul@a+1)^0,c
  3032  00136E  0E20               	movlw	32
  3033  001370  6E0B               	movwf	(___flmul@a+2)^0,c
  3034  001372  0E41               	movlw	65
  3035  001374  6E0C               	movwf	(___flmul@a+3)^0,c
  3036  001376  C099  F005         	movff	efgtoa@u,___flmul@b
  3037  00137A  C09A  F006         	movff	efgtoa@u+1,___flmul@b+1
  3038  00137E  C09B  F007         	movff	efgtoa@u+2,___flmul@b+2
  3039  001382  C09C  F008         	movff	efgtoa@u+3,___flmul@b+3
  3040  001386  EC1E  F014         	call	___flmul	;wreg free
  3041  00138A  C005  F022         	movff	?___flmul,___flge@ff2
  3042  00138E  C006  F023         	movff	?___flmul+1,___flge@ff2+1
  3043  001392  C007  F024         	movff	?___flmul+2,___flge@ff2+2
  3044  001396  C008  F025         	movff	?___flmul+3,___flge@ff2+3
  3045  00139A  ECC7  F01B         	call	___flge	;wreg free
  3046  00139E  B0D8               	btfsc	status,0,c
  3047  0013A0  EFD4  F009         	goto	u6221
  3048  0013A4  EFD6  F009         	goto	u6220
  3049  0013A8                     u6221:
  3050  0013A8  EF8E  F009         	goto	l6387
  3051  0013AC                     u6220:
  3052  0013AC  EFF6  F009         	goto	l6397
  3053  0013B0                     l6393:
  3054                           
  3055                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  3056  0013B0  C099  F01E         	movff	efgtoa@u,___fldiv@b
  3057  0013B4  C09A  F01F         	movff	efgtoa@u+1,___fldiv@b+1
  3058  0013B8  C09B  F020         	movff	efgtoa@u+2,___fldiv@b+2
  3059  0013BC  C09C  F021         	movff	efgtoa@u+3,___fldiv@b+3
  3060  0013C0  0E00               	movlw	0
  3061  0013C2  6E22               	movwf	___fldiv@a^0,c
  3062  0013C4  0E00               	movlw	0
  3063  0013C6  6E23               	movwf	(___fldiv@a+1)^0,c
  3064  0013C8  0E20               	movlw	32
  3065  0013CA  6E24               	movwf	(___fldiv@a+2)^0,c
  3066  0013CC  0E41               	movlw	65
  3067  0013CE  6E25               	movwf	(___fldiv@a+3)^0,c
  3068  0013D0  EC33  F016         	call	___fldiv	;wreg free
  3069  0013D4  C01E  F099         	movff	?___fldiv,efgtoa@u
  3070  0013D8  C01F  F09A         	movff	?___fldiv+1,efgtoa@u+1
  3071  0013DC  C020  F09B         	movff	?___fldiv+2,efgtoa@u+2
  3072  0013E0  C021  F09C         	movff	?___fldiv+3,efgtoa@u+3
  3073  0013E4                     
  3074                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  3075  0013E4  0100               	movlb	0	; () banked
  3076  0013E6  0795               	decf	efgtoa@e& (0+255),f,b
  3077  0013E8  A0D8               	btfss	status,0,c
  3078  0013EA  0796               	decf	(efgtoa@e+1)& (0+255),f,b
  3079  0013EC                     l6397:
  3080                           
  3081                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  3082  0013EC  C091  F01E         	movff	efgtoa@g,___flge@ff1
  3083  0013F0  C092  F01F         	movff	efgtoa@g+1,___flge@ff1+1
  3084  0013F4  C093  F020         	movff	efgtoa@g+2,___flge@ff1+2
  3085  0013F8  C094  F021         	movff	efgtoa@g+3,___flge@ff1+3
  3086  0013FC  C099  F022         	movff	efgtoa@u,___flge@ff2
  3087  001400  C09A  F023         	movff	efgtoa@u+1,___flge@ff2+1
  3088  001404  C09B  F024         	movff	efgtoa@u+2,___flge@ff2+2
  3089  001408  C09C  F025         	movff	efgtoa@u+3,___flge@ff2+3
  3090  00140C  ECC7  F01B         	call	___flge	;wreg free
  3091  001410  A0D8               	btfss	status,0,c
  3092  001412  EF0D  F00A         	goto	u6231
  3093  001416  EF0F  F00A         	goto	u6230
  3094  00141A                     u6231:
  3095  00141A  EFD8  F009         	goto	l6393
  3096  00141E                     u6230:
  3097  00141E                     l6399:
  3098                           
  3099                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  3100  00141E  C055  F00B         	movff	efgtoa@c,tolower@c
  3101  001422  6A0C               	clrf	(tolower@c+1)^0,c
  3102  001424  EC5B  F022         	call	_tolower	;wreg free
  3103  001428  500B               	movf	?_tolower^0,w,c
  3104  00142A  0100               	movlb	0	; () banked
  3105  00142C  6F86               	movwf	efgtoa@mode& (0+255),b
  3106  00142E                     
  3107                           ; BSR set to: 0
  3108                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  3109  00142E  C086  F085         	movff	efgtoa@mode,efgtoa@nmode
  3110  001432                     
  3111                           ; BSR set to: 0
  3112                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  3113  001432  0E67               	movlw	103
  3114  001434  1986               	xorwf	efgtoa@mode& (0+255),w,b
  3115  001436  A4D8               	btfss	status,2,c
  3116  001438  EF20  F00A         	goto	u6241
  3117  00143C  EF22  F00A         	goto	u6240
  3118  001440                     u6241:
  3119  001440  EF48  F00A         	goto	l6413
  3120  001444                     u6240:
  3121  001444                     
  3122                           ; BSR set to: 0
  3123                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  3124  001444  51F2               	movf	_prec& (0+255),w,b
  3125  001446  11F3               	iorwf	(_prec+1)& (0+255),w,b
  3126  001448  A4D8               	btfss	status,2,c
  3127  00144A  EF29  F00A         	goto	u6251
  3128  00144E  EF2B  F00A         	goto	u6250
  3129  001452                     u6251:
  3130  001452  EF2F  F00A         	goto	l6409
  3131  001456                     u6250:
  3132  001456                     
  3133                           ; BSR set to: 0
  3134                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  3135  001456  0E00               	movlw	0
  3136  001458  6FF3               	movwf	(_prec+1)& (0+255),b
  3137  00145A  0E01               	movlw	1
  3138  00145C  6FF2               	movwf	_prec& (0+255),b
  3139  00145E                     l6409:
  3140                           
  3141                           ; BSR set to: 0
  3142                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  3143  00145E  BFF3               	btfsc	(_prec+1)& (0+255),7,b
  3144  001460  EF3C  F00A         	goto	u6260
  3145  001464  51F3               	movf	(_prec+1)& (0+255),w,b
  3146  001466  E106               	bnz	u6261
  3147  001468  05F2               	decf	_prec& (0+255),w,b
  3148  00146A  B0D8               	btfsc	status,0,c
  3149  00146C  EF3A  F00A         	goto	u6261
  3150  001470  EF3C  F00A         	goto	u6260
  3151  001474                     u6261:
  3152  001474  EF42  F00A         	goto	l1484
  3153  001478                     u6260:
  3154  001478                     l6411:
  3155                           
  3156                           ; BSR set to: 0
  3157  001478  0E00               	movlw	0
  3158  00147A  6F82               	movwf	(efgtoa@p+1)& (0+255),b
  3159  00147C  0E06               	movlw	6
  3160  00147E  6F81               	movwf	efgtoa@p& (0+255),b
  3161  001480  EF51  F00A         	goto	l6419
  3162  001484                     l1484:
  3163                           
  3164                           ; BSR set to: 0
  3165  001484  C0F2  F081         	movff	_prec,efgtoa@p
  3166  001488  C0F3  F082         	movff	_prec+1,efgtoa@p+1
  3167  00148C  EF51  F00A         	goto	l6419
  3168  001490                     l6413:
  3169                           
  3170                           ; BSR set to: 0
  3171                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  3172  001490  BFF3               	btfsc	(_prec+1)& (0+255),7,b
  3173  001492  EF4D  F00A         	goto	u6271
  3174  001496  EF4F  F00A         	goto	u6270
  3175  00149A                     u6271:
  3176  00149A  EF3C  F00A         	goto	l6411
  3177  00149E                     u6270:
  3178  00149E  EF42  F00A         	goto	l1484
  3179  0014A2                     l6419:
  3180                           
  3181                           ; BSR set to: 0
  3182                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  3183  0014A2  0E67               	movlw	103
  3184  0014A4  1986               	xorwf	efgtoa@mode& (0+255),w,b
  3185  0014A6  A4D8               	btfss	status,2,c
  3186  0014A8  EF58  F00A         	goto	u6281
  3187  0014AC  EF5A  F00A         	goto	u6280
  3188  0014B0                     u6281:
  3189  0014B0  EF89  F00A         	goto	l6429
  3190  0014B4                     u6280:
  3191  0014B4                     
  3192                           ; BSR set to: 0
  3193                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  3194  0014B4  AF96               	btfss	(efgtoa@e+1)& (0+255),7,b
  3195  0014B6  EF68  F00A         	goto	u6290
  3196  0014BA  0EFC               	movlw	252
  3197  0014BC  5D95               	subwf	efgtoa@e& (0+255),w,b
  3198  0014BE  0EFF               	movlw	255
  3199  0014C0  5996               	subwfb	(efgtoa@e+1)& (0+255),w,b
  3200  0014C2  A0D8               	btfss	status,0,c
  3201  0014C4  EF66  F00A         	goto	u6291
  3202  0014C8  EF68  F00A         	goto	u6290
  3203  0014CC                     u6291:
  3204  0014CC  EF87  F00A         	goto	l6427
  3205  0014D0                     u6290:
  3206  0014D0                     
  3207                           ; BSR set to: 0
  3208  0014D0  0EFF               	movlw	255
  3209  0014D2  6F60               	movwf	??_efgtoa& (0+255),b
  3210  0014D4  0EFF               	movlw	255
  3211  0014D6  6F61               	movwf	(??_efgtoa+1)& (0+255),b
  3212  0014D8  C081  F062         	movff	efgtoa@p,??_efgtoa+2
  3213  0014DC  C082  F063         	movff	efgtoa@p+1,??_efgtoa+3
  3214  0014E0  5160               	movf	??_efgtoa& (0+255),w,b
  3215  0014E2  2762               	addwf	(??_efgtoa+2)& (0+255),f,b
  3216  0014E4  5161               	movf	(??_efgtoa+1)& (0+255),w,b
  3217  0014E6  2363               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3218  0014E8  5195               	movf	efgtoa@e& (0+255),w,b
  3219  0014EA  5D62               	subwf	(??_efgtoa+2)& (0+255),w,b
  3220  0014EC  5163               	movf	(??_efgtoa+3)& (0+255),w,b
  3221  0014EE  0A80               	xorlw	128
  3222  0014F0  6F64               	movwf	(??_efgtoa+4)& (0+255),b
  3223  0014F2  5196               	movf	(efgtoa@e+1)& (0+255),w,b
  3224  0014F4  0A80               	xorlw	128
  3225  0014F6  5964               	subwfb	(??_efgtoa+4)& (0+255),w,b
  3226  0014F8  A0D8               	btfss	status,0,c
  3227  0014FA  EF81  F00A         	goto	u6301
  3228  0014FE  EF83  F00A         	goto	u6300
  3229  001502                     u6301:
  3230  001502  EF87  F00A         	goto	l6427
  3231  001506                     u6300:
  3232  001506                     
  3233                           ; BSR set to: 0
  3234                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  3235  001506  0E66               	movlw	102
  3236  001508  6F85               	movwf	efgtoa@nmode& (0+255),b
  3237                           
  3238                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  3239  00150A  EF89  F00A         	goto	l6429
  3240  00150E                     l6427:
  3241                           
  3242                           ; BSR set to: 0
  3243                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  3244  00150E  0E65               	movlw	101
  3245  001510  6F85               	movwf	efgtoa@nmode& (0+255),b
  3246  001512                     l6429:
  3247                           
  3248                           ; BSR set to: 0
  3249                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 411:     m = p;
  3250  001512  C081  F077         	movff	efgtoa@p,efgtoa@m
  3251  001516  C082  F078         	movff	efgtoa@p+1,efgtoa@m+1
  3252  00151A                     
  3253                           ; BSR set to: 0
  3254                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  3255  00151A  0E67               	movlw	103
  3256  00151C  1986               	xorwf	efgtoa@mode& (0+255),w,b
  3257  00151E  A4D8               	btfss	status,2,c
  3258  001520  EF94  F00A         	goto	u6311
  3259  001524  EF96  F00A         	goto	u6310
  3260  001528                     u6311:
  3261  001528  EFA6  F00A         	goto	l6437
  3262  00152C                     u6310:
  3263  00152C                     
  3264                           ; BSR set to: 0
  3265  00152C  0E66               	movlw	102
  3266  00152E  1985               	xorwf	efgtoa@nmode& (0+255),w,b
  3267  001530  A4D8               	btfss	status,2,c
  3268  001532  EF9D  F00A         	goto	u6321
  3269  001536  EF9F  F00A         	goto	u6320
  3270  00153A                     u6321:
  3271  00153A  EFA8  F00A         	goto	l6439
  3272  00153E                     u6320:
  3273  00153E                     
  3274                           ; BSR set to: 0
  3275  00153E  BF96               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3276  001540  EFA6  F00A         	goto	u6330
  3277  001544  EFA4  F00A         	goto	u6331
  3278  001548                     u6331:
  3279  001548  EFA8  F00A         	goto	l6439
  3280  00154C                     u6330:
  3281  00154C                     l6437:
  3282                           
  3283                           ; BSR set to: 0
  3284                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 413:         ++m;
  3285  00154C  4B77               	infsnz	efgtoa@m& (0+255),f,b
  3286  00154E  2B78               	incf	(efgtoa@m+1)& (0+255),f,b
  3287  001550                     l6439:
  3288                           
  3289                           ; BSR set to: 0
  3290                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  3291  001550  0E66               	movlw	102
  3292  001552  1985               	xorwf	efgtoa@nmode& (0+255),w,b
  3293  001554  A4D8               	btfss	status,2,c
  3294  001556  EFAF  F00A         	goto	u6341
  3295  00155A  EFB1  F00A         	goto	u6340
  3296  00155E                     u6341:
  3297  00155E  EFD1  F00A         	goto	l6449
  3298  001562                     u6340:
  3299  001562                     
  3300                           ; BSR set to: 0
  3301                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  3302  001562  BF96               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3303  001564  EFB8  F00A         	goto	u6350
  3304  001568  EFB6  F00A         	goto	u6351
  3305  00156C                     u6351:
  3306  00156C  EFC4  F00A         	goto	l6445
  3307  001570                     u6350:
  3308  001570                     
  3309                           ; BSR set to: 0
  3310                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  3311  001570  0E00               	movlw	0
  3312  001572  6F99               	movwf	efgtoa@u& (0+255),b
  3313  001574  0E00               	movlw	0
  3314  001576  6F9A               	movwf	(efgtoa@u+1)& (0+255),b
  3315  001578  0E80               	movlw	128
  3316  00157A  6F9B               	movwf	(efgtoa@u+2)& (0+255),b
  3317  00157C  0E3F               	movlw	63
  3318  00157E  6F9C               	movwf	(efgtoa@u+3)& (0+255),b
  3319                           
  3320                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  3321  001580  0E00               	movlw	0
  3322  001582  6F96               	movwf	(efgtoa@e+1)& (0+255),b
  3323  001584  0E00               	movlw	0
  3324  001586  6F95               	movwf	efgtoa@e& (0+255),b
  3325  001588                     l6445:
  3326                           
  3327                           ; BSR set to: 0
  3328                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  3329  001588  0E67               	movlw	103
  3330  00158A  1986               	xorwf	efgtoa@mode& (0+255),w,b
  3331  00158C  B4D8               	btfsc	status,2,c
  3332  00158E  EFCB  F00A         	goto	u6361
  3333  001592  EFCD  F00A         	goto	u6360
  3334  001596                     u6361:
  3335  001596  EFD1  F00A         	goto	l6449
  3336  00159A                     u6360:
  3337  00159A                     
  3338                           ; BSR set to: 0
  3339                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  3340  00159A  5195               	movf	efgtoa@e& (0+255),w,b
  3341  00159C  2777               	addwf	efgtoa@m& (0+255),f,b
  3342  00159E  5196               	movf	(efgtoa@e+1)& (0+255),w,b
  3343  0015A0  2378               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3344  0015A2                     l6449:
  3345                           
  3346                           ; BSR set to: 0
  3347                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  3348  0015A2  0E00               	movlw	0
  3349  0015A4  6F90               	movwf	(efgtoa@i+1)& (0+255),b
  3350  0015A6  0E00               	movlw	0
  3351  0015A8  6F8F               	movwf	efgtoa@i& (0+255),b
  3352  0015AA                     
  3353                           ; BSR set to: 0
  3354                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 429:     h = g;
  3355  0015AA  C091  F087         	movff	efgtoa@g,efgtoa@h
  3356  0015AE  C092  F088         	movff	efgtoa@g+1,efgtoa@h+1
  3357  0015B2  C093  F089         	movff	efgtoa@g+2,efgtoa@h+2
  3358  0015B6  C094  F08A         	movff	efgtoa@g+3,efgtoa@h+3
  3359  0015BA                     
  3360                           ; BSR set to: 0
  3361                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  3362  0015BA  C099  F079         	movff	efgtoa@u,efgtoa@ou
  3363  0015BE  C09A  F07A         	movff	efgtoa@u+1,efgtoa@ou+1
  3364  0015C2  C09B  F07B         	movff	efgtoa@u+2,efgtoa@ou+2
  3365  0015C6  C09C  F07C         	movff	efgtoa@u+3,efgtoa@ou+3
  3366                           
  3367                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  3368  0015CA  EF62  F00B         	goto	l6463
  3369  0015CE                     l6455:
  3370                           
  3371                           ; BSR set to: 0
  3372                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  3373  0015CE  C087  F01E         	movff	efgtoa@h,___fldiv@b
  3374  0015D2  C088  F01F         	movff	efgtoa@h+1,___fldiv@b+1
  3375  0015D6  C089  F020         	movff	efgtoa@h+2,___fldiv@b+2
  3376  0015DA  C08A  F021         	movff	efgtoa@h+3,___fldiv@b+3
  3377  0015DE  C099  F022         	movff	efgtoa@u,___fldiv@a
  3378  0015E2  C09A  F023         	movff	efgtoa@u+1,___fldiv@a+1
  3379  0015E6  C09B  F024         	movff	efgtoa@u+2,___fldiv@a+2
  3380  0015EA  C09C  F025         	movff	efgtoa@u+3,___fldiv@a+3
  3381  0015EE  EC33  F016         	call	___fldiv	;wreg free
  3382  0015F2  C01E  F037         	movff	?___fldiv,floorf@x
  3383  0015F6  C01F  F038         	movff	?___fldiv+1,floorf@x+1
  3384  0015FA  C020  F039         	movff	?___fldiv+2,floorf@x+2
  3385  0015FE  C021  F03A         	movff	?___fldiv+3,floorf@x+3
  3386  001602  EC00  F018         	call	_floorf	;wreg free
  3387  001606  C037  F08B         	movff	?_floorf,efgtoa@l
  3388  00160A  C038  F08C         	movff	?_floorf+1,efgtoa@l+1
  3389  00160E  C039  F08D         	movff	?_floorf+2,efgtoa@l+2
  3390  001612  C03A  F08E         	movff	?_floorf+3,efgtoa@l+3
  3391                           
  3392                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  3393  001616  C08B  F005         	movff	efgtoa@l,___fltol@f1
  3394  00161A  C08C  F006         	movff	efgtoa@l+1,___fltol@f1+1
  3395  00161E  C08D  F007         	movff	efgtoa@l+2,___fltol@f1+2
  3396  001622  C08E  F008         	movff	efgtoa@l+3,___fltol@f1+3
  3397  001626  EC44  F01B         	call	___fltol	;wreg free
  3398  00162A  C005  F07D         	movff	?___fltol,efgtoa@d
  3399  00162E  C006  F07E         	movff	?___fltol+1,efgtoa@d+1
  3400  001632                     
  3401                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  3402  001632  C087  F047         	movff	efgtoa@h,___flsub@b
  3403  001636  C088  F048         	movff	efgtoa@h+1,___flsub@b+1
  3404  00163A  C089  F049         	movff	efgtoa@h+2,___flsub@b+2
  3405  00163E  C08A  F04A         	movff	efgtoa@h+3,___flsub@b+3
  3406  001642  C099  F009         	movff	efgtoa@u,___flmul@a
  3407  001646  C09A  F00A         	movff	efgtoa@u+1,___flmul@a+1
  3408  00164A  C09B  F00B         	movff	efgtoa@u+2,___flmul@a+2
  3409  00164E  C09C  F00C         	movff	efgtoa@u+3,___flmul@a+3
  3410  001652  C08B  F005         	movff	efgtoa@l,___flmul@b
  3411  001656  C08C  F006         	movff	efgtoa@l+1,___flmul@b+1
  3412  00165A  C08D  F007         	movff	efgtoa@l+2,___flmul@b+2
  3413  00165E  C08E  F008         	movff	efgtoa@l+3,___flmul@b+3
  3414  001662  EC1E  F014         	call	___flmul	;wreg free
  3415  001666  C005  F04B         	movff	?___flmul,___flsub@a
  3416  00166A  C006  F04C         	movff	?___flmul+1,___flsub@a+1
  3417  00166E  C007  F04D         	movff	?___flmul+2,___flsub@a+2
  3418  001672  C008  F04E         	movff	?___flmul+3,___flsub@a+3
  3419  001676  EC3C  F023         	call	___flsub	;wreg free
  3420  00167A  C047  F087         	movff	?___flsub,efgtoa@h
  3421  00167E  C048  F088         	movff	?___flsub+1,efgtoa@h+1
  3422  001682  C049  F089         	movff	?___flsub+2,efgtoa@h+2
  3423  001686  C04A  F08A         	movff	?___flsub+3,efgtoa@h+3
  3424  00168A                     
  3425                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  3426  00168A  C099  F01E         	movff	efgtoa@u,___fldiv@b
  3427  00168E  C09A  F01F         	movff	efgtoa@u+1,___fldiv@b+1
  3428  001692  C09B  F020         	movff	efgtoa@u+2,___fldiv@b+2
  3429  001696  C09C  F021         	movff	efgtoa@u+3,___fldiv@b+3
  3430  00169A  0E00               	movlw	0
  3431  00169C  6E22               	movwf	___fldiv@a^0,c
  3432  00169E  0E00               	movlw	0
  3433  0016A0  6E23               	movwf	(___fldiv@a+1)^0,c
  3434  0016A2  0E20               	movlw	32
  3435  0016A4  6E24               	movwf	(___fldiv@a+2)^0,c
  3436  0016A6  0E41               	movlw	65
  3437  0016A8  6E25               	movwf	(___fldiv@a+3)^0,c
  3438  0016AA  EC33  F016         	call	___fldiv	;wreg free
  3439  0016AE  C01E  F099         	movff	?___fldiv,efgtoa@u
  3440  0016B2  C01F  F09A         	movff	?___fldiv+1,efgtoa@u+1
  3441  0016B6  C020  F09B         	movff	?___fldiv+2,efgtoa@u+2
  3442  0016BA  C021  F09C         	movff	?___fldiv+3,efgtoa@u+3
  3443  0016BE                     
  3444                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 436:         ++i;
  3445  0016BE  0100               	movlb	0	; () banked
  3446  0016C0  4B8F               	infsnz	efgtoa@i& (0+255),f,b
  3447  0016C2  2B90               	incf	(efgtoa@i+1)& (0+255),f,b
  3448  0016C4                     l6463:
  3449                           
  3450                           ; BSR set to: 0
  3451                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  3452  0016C4  5177               	movf	efgtoa@m& (0+255),w,b
  3453  0016C6  5D8F               	subwf	efgtoa@i& (0+255),w,b
  3454  0016C8  5190               	movf	(efgtoa@i+1)& (0+255),w,b
  3455  0016CA  0A80               	xorlw	128
  3456  0016CC  6F60               	movwf	??_efgtoa& (0+255),b
  3457  0016CE  5178               	movf	(efgtoa@m+1)& (0+255),w,b
  3458  0016D0  0A80               	xorlw	128
  3459  0016D2  5960               	subwfb	??_efgtoa& (0+255),w,b
  3460  0016D4  A0D8               	btfss	status,0,c
  3461  0016D6  EF6F  F00B         	goto	u6371
  3462  0016DA  EF71  F00B         	goto	u6370
  3463  0016DE                     u6371:
  3464  0016DE  EFE7  F00A         	goto	l6455
  3465  0016E2                     u6370:
  3466  0016E2                     
  3467                           ; BSR set to: 0
  3468                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  3469  0016E2  C099  F005         	movff	efgtoa@u,___flmul@b
  3470  0016E6  C09A  F006         	movff	efgtoa@u+1,___flmul@b+1
  3471  0016EA  C09B  F007         	movff	efgtoa@u+2,___flmul@b+2
  3472  0016EE  C09C  F008         	movff	efgtoa@u+3,___flmul@b+3
  3473  0016F2  0E00               	movlw	0
  3474  0016F4  6E09               	movwf	___flmul@a^0,c
  3475  0016F6  0E00               	movlw	0
  3476  0016F8  6E0A               	movwf	(___flmul@a+1)^0,c
  3477  0016FA  0EA0               	movlw	160
  3478  0016FC  6E0B               	movwf	(___flmul@a+2)^0,c
  3479  0016FE  0E40               	movlw	64
  3480  001700  6E0C               	movwf	(___flmul@a+3)^0,c
  3481  001702  EC1E  F014         	call	___flmul	;wreg free
  3482  001706  C005  F08B         	movff	?___flmul,efgtoa@l
  3483  00170A  C006  F08C         	movff	?___flmul+1,efgtoa@l+1
  3484  00170E  C007  F08D         	movff	?___flmul+2,efgtoa@l+2
  3485  001712  C008  F08E         	movff	?___flmul+3,efgtoa@l+3
  3486  001716                     
  3487                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  3488  001716  C087  F01E         	movff	efgtoa@h,___flge@ff1
  3489  00171A  C088  F01F         	movff	efgtoa@h+1,___flge@ff1+1
  3490  00171E  C089  F020         	movff	efgtoa@h+2,___flge@ff1+2
  3491  001722  C08A  F021         	movff	efgtoa@h+3,___flge@ff1+3
  3492  001726  C08B  F022         	movff	efgtoa@l,___flge@ff2
  3493  00172A  C08C  F023         	movff	efgtoa@l+1,___flge@ff2+1
  3494  00172E  C08D  F024         	movff	efgtoa@l+2,___flge@ff2+2
  3495  001732  C08E  F025         	movff	efgtoa@l+3,___flge@ff2+3
  3496  001736  ECC7  F01B         	call	___flge	;wreg free
  3497  00173A  B0D8               	btfsc	status,0,c
  3498  00173C  EFA2  F00B         	goto	u6381
  3499  001740  EFA4  F00B         	goto	u6380
  3500  001744                     u6381:
  3501  001744  EFAF  F00B         	goto	l6471
  3502  001748                     u6380:
  3503  001748                     
  3504                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  3505  001748  0E00               	movlw	0
  3506  00174A  0100               	movlb	0	; () banked
  3507  00174C  6F8B               	movwf	efgtoa@l& (0+255),b
  3508  00174E  0E00               	movlw	0
  3509  001750  6F8C               	movwf	(efgtoa@l+1)& (0+255),b
  3510  001752  0E00               	movlw	0
  3511  001754  6F8D               	movwf	(efgtoa@l+2)& (0+255),b
  3512  001756  0E00               	movlw	0
  3513  001758  6F8E               	movwf	(efgtoa@l+3)& (0+255),b
  3514                           
  3515                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 443:     } else {
  3516  00175A  EFD8  F00B         	goto	l6477
  3517  00175E                     l6471:
  3518                           
  3519                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  3520  00175E  C087  F005         	movff	efgtoa@h,___fleq@ff1
  3521  001762  C088  F006         	movff	efgtoa@h+1,___fleq@ff1+1
  3522  001766  C089  F007         	movff	efgtoa@h+2,___fleq@ff1+2
  3523  00176A  C08A  F008         	movff	efgtoa@h+3,___fleq@ff1+3
  3524  00176E  C08B  F009         	movff	efgtoa@l,___fleq@ff2
  3525  001772  C08C  F00A         	movff	efgtoa@l+1,___fleq@ff2+1
  3526  001776  C08D  F00B         	movff	efgtoa@l+2,___fleq@ff2+2
  3527  00177A  C08E  F00C         	movff	efgtoa@l+3,___fleq@ff2+3
  3528  00177E  ECCE  F01F         	call	___fleq	;wreg free
  3529  001782  A0D8               	btfss	status,0,c
  3530  001784  EFC6  F00B         	goto	u6391
  3531  001788  EFC8  F00B         	goto	u6390
  3532  00178C                     u6391:
  3533  00178C  EFD8  F00B         	goto	l6477
  3534  001790                     u6390:
  3535  001790  0100               	movlb	0	; () banked
  3536  001792  B17D               	btfsc	efgtoa@d& (0+255),0,b
  3537  001794  EFCE  F00B         	goto	u6401
  3538  001798  EFD0  F00B         	goto	u6400
  3539  00179C                     u6401:
  3540  00179C  EFD8  F00B         	goto	l6477
  3541  0017A0                     u6400:
  3542  0017A0                     
  3543                           ; BSR set to: 0
  3544                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  3545  0017A0  0E00               	movlw	0
  3546  0017A2  6F8B               	movwf	efgtoa@l& (0+255),b
  3547  0017A4  0E00               	movlw	0
  3548  0017A6  6F8C               	movwf	(efgtoa@l+1)& (0+255),b
  3549  0017A8  0E00               	movlw	0
  3550  0017AA  6F8D               	movwf	(efgtoa@l+2)& (0+255),b
  3551  0017AC  0E00               	movlw	0
  3552  0017AE  6F8E               	movwf	(efgtoa@l+3)& (0+255),b
  3553  0017B0                     l6477:
  3554                           
  3555                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  3556  0017B0  C091  F037         	movff	efgtoa@g,___fladd@b
  3557  0017B4  C092  F038         	movff	efgtoa@g+1,___fladd@b+1
  3558  0017B8  C093  F039         	movff	efgtoa@g+2,___fladd@b+2
  3559  0017BC  C094  F03A         	movff	efgtoa@g+3,___fladd@b+3
  3560  0017C0  C08B  F03B         	movff	efgtoa@l,___fladd@a
  3561  0017C4  C08C  F03C         	movff	efgtoa@l+1,___fladd@a+1
  3562  0017C8  C08D  F03D         	movff	efgtoa@l+2,___fladd@a+2
  3563  0017CC  C08E  F03E         	movff	efgtoa@l+3,___fladd@a+3
  3564  0017D0  ECBE  F011         	call	___fladd	;wreg free
  3565  0017D4  C037  F087         	movff	?___fladd,efgtoa@h
  3566  0017D8  C038  F088         	movff	?___fladd+1,efgtoa@h+1
  3567  0017DC  C039  F089         	movff	?___fladd+2,efgtoa@h+2
  3568  0017E0  C03A  F08A         	movff	?___fladd+3,efgtoa@h+3
  3569  0017E4                     
  3570                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  3571  0017E4  C087  F01E         	movff	efgtoa@h,___flge@ff1
  3572  0017E8  C088  F01F         	movff	efgtoa@h+1,___flge@ff1+1
  3573  0017EC  C089  F020         	movff	efgtoa@h+2,___flge@ff1+2
  3574  0017F0  C08A  F021         	movff	efgtoa@h+3,___flge@ff1+3
  3575  0017F4  0E00               	movlw	0
  3576  0017F6  6E09               	movwf	___flmul@a^0,c
  3577  0017F8  0E00               	movlw	0
  3578  0017FA  6E0A               	movwf	(___flmul@a+1)^0,c
  3579  0017FC  0E20               	movlw	32
  3580  0017FE  6E0B               	movwf	(___flmul@a+2)^0,c
  3581  001800  0E41               	movlw	65
  3582  001802  6E0C               	movwf	(___flmul@a+3)^0,c
  3583  001804  C079  F005         	movff	efgtoa@ou,___flmul@b
  3584  001808  C07A  F006         	movff	efgtoa@ou+1,___flmul@b+1
  3585  00180C  C07B  F007         	movff	efgtoa@ou+2,___flmul@b+2
  3586  001810  C07C  F008         	movff	efgtoa@ou+3,___flmul@b+3
  3587  001814  EC1E  F014         	call	___flmul	;wreg free
  3588  001818  C005  F022         	movff	?___flmul,___flge@ff2
  3589  00181C  C006  F023         	movff	?___flmul+1,___flge@ff2+1
  3590  001820  C007  F024         	movff	?___flmul+2,___flge@ff2+2
  3591  001824  C008  F025         	movff	?___flmul+3,___flge@ff2+3
  3592  001828  ECC7  F01B         	call	___flge	;wreg free
  3593  00182C  A0D8               	btfss	status,0,c
  3594  00182E  EF1B  F00C         	goto	u6411
  3595  001832  EF1D  F00C         	goto	u6410
  3596  001836                     u6411:
  3597  001836  EF46  F00C         	goto	l6489
  3598  00183A                     u6410:
  3599  00183A                     
  3600                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 454:   e++;
  3601  00183A  0100               	movlb	0	; () banked
  3602  00183C  4B95               	infsnz	efgtoa@e& (0+255),f,b
  3603  00183E  2B96               	incf	(efgtoa@e+1)& (0+255),f,b
  3604  001840                     
  3605                           ; BSR set to: 0
  3606                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  3607  001840  C079  F005         	movff	efgtoa@ou,___flmul@b
  3608  001844  C07A  F006         	movff	efgtoa@ou+1,___flmul@b+1
  3609  001848  C07B  F007         	movff	efgtoa@ou+2,___flmul@b+2
  3610  00184C  C07C  F008         	movff	efgtoa@ou+3,___flmul@b+3
  3611  001850  0E00               	movlw	0
  3612  001852  6E09               	movwf	___flmul@a^0,c
  3613  001854  0E00               	movlw	0
  3614  001856  6E0A               	movwf	(___flmul@a+1)^0,c
  3615  001858  0E20               	movlw	32
  3616  00185A  6E0B               	movwf	(___flmul@a+2)^0,c
  3617  00185C  0E41               	movlw	65
  3618  00185E  6E0C               	movwf	(___flmul@a+3)^0,c
  3619  001860  EC1E  F014         	call	___flmul	;wreg free
  3620  001864  C005  F079         	movff	?___flmul,efgtoa@ou
  3621  001868  C006  F07A         	movff	?___flmul+1,efgtoa@ou+1
  3622  00186C  C007  F07B         	movff	?___flmul+2,efgtoa@ou+2
  3623  001870  C008  F07C         	movff	?___flmul+3,efgtoa@ou+3
  3624  001874                     
  3625                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  3626  001874  0E66               	movlw	102
  3627  001876  0100               	movlb	0	; () banked
  3628  001878  1985               	xorwf	efgtoa@nmode& (0+255),w,b
  3629  00187A  A4D8               	btfss	status,2,c
  3630  00187C  EF42  F00C         	goto	u6421
  3631  001880  EF44  F00C         	goto	u6420
  3632  001884                     u6421:
  3633  001884  EF46  F00C         	goto	l6489
  3634  001888                     u6420:
  3635  001888                     
  3636                           ; BSR set to: 0
  3637                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 458:    m++;
  3638  001888  4B77               	infsnz	efgtoa@m& (0+255),f,b
  3639  00188A  2B78               	incf	(efgtoa@m+1)& (0+255),f,b
  3640  00188C                     l6489:
  3641                           
  3642                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  3643  00188C  C079  F099         	movff	efgtoa@ou,efgtoa@u
  3644  001890  C07A  F09A         	movff	efgtoa@ou+1,efgtoa@u+1
  3645  001894  C07B  F09B         	movff	efgtoa@ou+2,efgtoa@u+2
  3646  001898  C07C  F09C         	movff	efgtoa@ou+3,efgtoa@u+3
  3647  00189C                     
  3648                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  3649  00189C  0E65               	movlw	101
  3650  00189E  0100               	movlb	0	; () banked
  3651  0018A0  1985               	xorwf	efgtoa@nmode& (0+255),w,b
  3652  0018A2  B4D8               	btfsc	status,2,c
  3653  0018A4  EF56  F00C         	goto	u6431
  3654  0018A8  EF58  F00C         	goto	u6430
  3655  0018AC                     u6431:
  3656  0018AC  EF5E  F00C         	goto	l6495
  3657  0018B0                     u6430:
  3658  0018B0                     
  3659                           ; BSR set to: 0
  3660  0018B0  C095  F075         	movff	efgtoa@e,efgtoa@ne
  3661  0018B4  C096  F076         	movff	efgtoa@e+1,efgtoa@ne+1
  3662  0018B8  EF62  F00C         	goto	l1512
  3663  0018BC                     l6495:
  3664                           
  3665                           ; BSR set to: 0
  3666  0018BC  0E00               	movlw	0
  3667  0018BE  6F76               	movwf	(efgtoa@ne+1)& (0+255),b
  3668  0018C0  0E00               	movlw	0
  3669  0018C2  6F75               	movwf	efgtoa@ne& (0+255),b
  3670  0018C4                     l1512:
  3671                           
  3672                           ; BSR set to: 0
  3673                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  3674  0018C4  0E00               	movlw	0
  3675  0018C6  6F74               	movwf	(efgtoa@pp+1)& (0+255),b
  3676  0018C8  0E00               	movlw	0
  3677  0018CA  6F73               	movwf	efgtoa@pp& (0+255),b
  3678                           
  3679                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  3680  0018CC  0E00               	movlw	0
  3681  0018CE  6F72               	movwf	(efgtoa@t+1)& (0+255),b
  3682  0018D0  0E00               	movlw	0
  3683  0018D2  6F71               	movwf	efgtoa@t& (0+255),b
  3684                           
  3685                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  3686  0018D4  0E00               	movlw	0
  3687  0018D6  6F90               	movwf	(efgtoa@i+1)& (0+255),b
  3688  0018D8  0E00               	movlw	0
  3689  0018DA  6F8F               	movwf	efgtoa@i& (0+255),b
  3690                           
  3691                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3692  0018DC  EF5D  F00D         	goto	l6545
  3693  0018E0                     l6497:
  3694                           
  3695                           ; BSR set to: 0
  3696                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  3697  0018E0  C087  F01E         	movff	efgtoa@h,___fldiv@b
  3698  0018E4  C088  F01F         	movff	efgtoa@h+1,___fldiv@b+1
  3699  0018E8  C089  F020         	movff	efgtoa@h+2,___fldiv@b+2
  3700  0018EC  C08A  F021         	movff	efgtoa@h+3,___fldiv@b+3
  3701  0018F0  C099  F022         	movff	efgtoa@u,___fldiv@a
  3702  0018F4  C09A  F023         	movff	efgtoa@u+1,___fldiv@a+1
  3703  0018F8  C09B  F024         	movff	efgtoa@u+2,___fldiv@a+2
  3704  0018FC  C09C  F025         	movff	efgtoa@u+3,___fldiv@a+3
  3705  001900  EC33  F016         	call	___fldiv	;wreg free
  3706  001904  C01E  F037         	movff	?___fldiv,floorf@x
  3707  001908  C01F  F038         	movff	?___fldiv+1,floorf@x+1
  3708  00190C  C020  F039         	movff	?___fldiv+2,floorf@x+2
  3709  001910  C021  F03A         	movff	?___fldiv+3,floorf@x+3
  3710  001914  EC00  F018         	call	_floorf	;wreg free
  3711  001918  C037  F08B         	movff	?_floorf,efgtoa@l
  3712  00191C  C038  F08C         	movff	?_floorf+1,efgtoa@l+1
  3713  001920  C039  F08D         	movff	?_floorf+2,efgtoa@l+2
  3714  001924  C03A  F08E         	movff	?_floorf+3,efgtoa@l+3
  3715                           
  3716                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  3717  001928  C08B  F005         	movff	efgtoa@l,___fltol@f1
  3718  00192C  C08C  F006         	movff	efgtoa@l+1,___fltol@f1+1
  3719  001930  C08D  F007         	movff	efgtoa@l+2,___fltol@f1+2
  3720  001934  C08E  F008         	movff	efgtoa@l+3,___fltol@f1+3
  3721  001938  EC44  F01B         	call	___fltol	;wreg free
  3722  00193C  C005  F07D         	movff	?___fltol,efgtoa@d
  3723  001940  C006  F07E         	movff	?___fltol+1,efgtoa@d+1
  3724  001944                     
  3725                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  3726  001944  0100               	movlb	0	; () banked
  3727  001946  B9F4               	btfsc	_flags& (0+255),4,b
  3728  001948  EFA8  F00C         	goto	u6441
  3729  00194C  EFAA  F00C         	goto	u6440
  3730  001950                     u6441:
  3731  001950  EFC7  F00C         	goto	l6509
  3732  001954                     u6440:
  3733  001954                     
  3734                           ; BSR set to: 0
  3735  001954  517D               	movf	efgtoa@d& (0+255),w,b
  3736  001956  117E               	iorwf	(efgtoa@d+1)& (0+255),w,b
  3737  001958  A4D8               	btfss	status,2,c
  3738  00195A  EFB1  F00C         	goto	u6451
  3739  00195E  EFB3  F00C         	goto	u6450
  3740  001962                     u6451:
  3741  001962  EFC7  F00C         	goto	l6509
  3742  001966                     u6450:
  3743  001966                     
  3744                           ; BSR set to: 0
  3745  001966  0E67               	movlw	103
  3746  001968  1986               	xorwf	efgtoa@mode& (0+255),w,b
  3747  00196A  A4D8               	btfss	status,2,c
  3748  00196C  EFBA  F00C         	goto	u6461
  3749  001970  EFBC  F00C         	goto	u6460
  3750  001974                     u6461:
  3751  001974  EFC7  F00C         	goto	l6509
  3752  001978                     u6460:
  3753  001978                     
  3754                           ; BSR set to: 0
  3755  001978  BF76               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3756  00197A  EFC3  F00C         	goto	u6470
  3757  00197E  EFC1  F00C         	goto	u6471
  3758  001982                     u6471:
  3759  001982  EFC7  F00C         	goto	l6509
  3760  001986                     u6470:
  3761  001986                     
  3762                           ; BSR set to: 0
  3763                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  3764  001986  4B71               	infsnz	efgtoa@t& (0+255),f,b
  3765  001988  2B72               	incf	(efgtoa@t+1)& (0+255),f,b
  3766                           
  3767                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  3768  00198A  EF11  F00D         	goto	l6537
  3769  00198E                     l6509:
  3770                           
  3771                           ; BSR set to: 0
  3772                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  3773  00198E  5173               	movf	efgtoa@pp& (0+255),w,b
  3774  001990  1174               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3775  001992  A4D8               	btfss	status,2,c
  3776  001994  EFCE  F00C         	goto	u6481
  3777  001998  EFD0  F00C         	goto	u6480
  3778  00199C                     u6481:
  3779  00199C  EFFA  F00C         	goto	l6529
  3780  0019A0                     u6480:
  3781  0019A0                     
  3782                           ; BSR set to: 0
  3783  0019A0  BF76               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3784  0019A2  EFD7  F00C         	goto	u6490
  3785  0019A6  EFD5  F00C         	goto	u6491
  3786  0019AA                     u6491:
  3787  0019AA  EFFA  F00C         	goto	l6529
  3788  0019AE                     u6490:
  3789  0019AE                     
  3790                           ; BSR set to: 0
  3791                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  3792  0019AE  0E24               	movlw	low _dbuf
  3793  0019B0  2597               	addwf	efgtoa@n& (0+255),w,b
  3794  0019B2  6ED9               	movwf	fsr2l,c
  3795  0019B4  0E01               	movlw	high _dbuf
  3796  0019B6  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3797  0019B8  6EDA               	movwf	fsr2h,c
  3798  0019BA  0E2E               	movlw	46
  3799  0019BC  6EDF               	movwf	indf2,c
  3800  0019BE                     
  3801                           ; BSR set to: 0
  3802  0019BE  4B97               	infsnz	efgtoa@n& (0+255),f,b
  3803  0019C0  2B98               	incf	(efgtoa@n+1)& (0+255),f,b
  3804  0019C2                     
  3805                           ; BSR set to: 0
  3806                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  3807  0019C2  0783               	decf	efgtoa@w& (0+255),f,b
  3808  0019C4  A0D8               	btfss	status,0,c
  3809  0019C6  0784               	decf	(efgtoa@w+1)& (0+255),f,b
  3810  0019C8                     
  3811                           ; BSR set to: 0
  3812                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  3813  0019C8  0E00               	movlw	0
  3814  0019CA  6F74               	movwf	(efgtoa@pp+1)& (0+255),b
  3815  0019CC  0E01               	movlw	1
  3816  0019CE  6F73               	movwf	efgtoa@pp& (0+255),b
  3817  0019D0  EFFA  F00C         	goto	l6529
  3818  0019D4                     l6521:
  3819                           
  3820                           ; BSR set to: 0
  3821                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  3822  0019D4  0E24               	movlw	low _dbuf
  3823  0019D6  2597               	addwf	efgtoa@n& (0+255),w,b
  3824  0019D8  6ED9               	movwf	fsr2l,c
  3825  0019DA  0E01               	movlw	high _dbuf
  3826  0019DC  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3827  0019DE  6EDA               	movwf	fsr2h,c
  3828  0019E0  0E30               	movlw	48
  3829  0019E2  6EDF               	movwf	indf2,c
  3830  0019E4                     
  3831                           ; BSR set to: 0
  3832  0019E4  4B97               	infsnz	efgtoa@n& (0+255),f,b
  3833  0019E6  2B98               	incf	(efgtoa@n+1)& (0+255),f,b
  3834  0019E8                     
  3835                           ; BSR set to: 0
  3836                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  3837  0019E8  0783               	decf	efgtoa@w& (0+255),f,b
  3838  0019EA  A0D8               	btfss	status,0,c
  3839  0019EC  0784               	decf	(efgtoa@w+1)& (0+255),f,b
  3840  0019EE                     
  3841                           ; BSR set to: 0
  3842                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  3843  0019EE  0771               	decf	efgtoa@t& (0+255),f,b
  3844  0019F0  A0D8               	btfss	status,0,c
  3845  0019F2  0772               	decf	(efgtoa@t+1)& (0+255),f,b
  3846  0019F4                     l6529:
  3847                           
  3848                           ; BSR set to: 0
  3849                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  3850  0019F4  5171               	movf	efgtoa@t& (0+255),w,b
  3851  0019F6  1172               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3852  0019F8  A4D8               	btfss	status,2,c
  3853  0019FA  EF01  F00D         	goto	u6501
  3854  0019FE  EF03  F00D         	goto	u6500
  3855  001A02                     u6501:
  3856  001A02  EFEA  F00C         	goto	l6521
  3857  001A06                     u6500:
  3858  001A06                     
  3859                           ; BSR set to: 0
  3860                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  3861  001A06  0E24               	movlw	low _dbuf
  3862  001A08  2597               	addwf	efgtoa@n& (0+255),w,b
  3863  001A0A  6ED9               	movwf	fsr2l,c
  3864  001A0C  0E01               	movlw	high _dbuf
  3865  001A0E  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3866  001A10  6EDA               	movwf	fsr2h,c
  3867  001A12  517D               	movf	efgtoa@d& (0+255),w,b
  3868  001A14  0F30               	addlw	48
  3869  001A16  6EDF               	movwf	indf2,c
  3870  001A18                     
  3871                           ; BSR set to: 0
  3872  001A18  4B97               	infsnz	efgtoa@n& (0+255),f,b
  3873  001A1A  2B98               	incf	(efgtoa@n+1)& (0+255),f,b
  3874  001A1C                     
  3875                           ; BSR set to: 0
  3876                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  3877  001A1C  0783               	decf	efgtoa@w& (0+255),f,b
  3878  001A1E  A0D8               	btfss	status,0,c
  3879  001A20  0784               	decf	(efgtoa@w+1)& (0+255),f,b
  3880  001A22                     l6537:
  3881                           
  3882                           ; BSR set to: 0
  3883                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  3884  001A22  C087  F047         	movff	efgtoa@h,___flsub@b
  3885  001A26  C088  F048         	movff	efgtoa@h+1,___flsub@b+1
  3886  001A2A  C089  F049         	movff	efgtoa@h+2,___flsub@b+2
  3887  001A2E  C08A  F04A         	movff	efgtoa@h+3,___flsub@b+3
  3888  001A32  C099  F009         	movff	efgtoa@u,___flmul@a
  3889  001A36  C09A  F00A         	movff	efgtoa@u+1,___flmul@a+1
  3890  001A3A  C09B  F00B         	movff	efgtoa@u+2,___flmul@a+2
  3891  001A3E  C09C  F00C         	movff	efgtoa@u+3,___flmul@a+3
  3892  001A42  C08B  F005         	movff	efgtoa@l,___flmul@b
  3893  001A46  C08C  F006         	movff	efgtoa@l+1,___flmul@b+1
  3894  001A4A  C08D  F007         	movff	efgtoa@l+2,___flmul@b+2
  3895  001A4E  C08E  F008         	movff	efgtoa@l+3,___flmul@b+3
  3896  001A52  EC1E  F014         	call	___flmul	;wreg free
  3897  001A56  C005  F04B         	movff	?___flmul,___flsub@a
  3898  001A5A  C006  F04C         	movff	?___flmul+1,___flsub@a+1
  3899  001A5E  C007  F04D         	movff	?___flmul+2,___flsub@a+2
  3900  001A62  C008  F04E         	movff	?___flmul+3,___flsub@a+3
  3901  001A66  EC3C  F023         	call	___flsub	;wreg free
  3902  001A6A  C047  F087         	movff	?___flsub,efgtoa@h
  3903  001A6E  C048  F088         	movff	?___flsub+1,efgtoa@h+1
  3904  001A72  C049  F089         	movff	?___flsub+2,efgtoa@h+2
  3905  001A76  C04A  F08A         	movff	?___flsub+3,efgtoa@h+3
  3906  001A7A                     
  3907                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  3908  001A7A  C099  F01E         	movff	efgtoa@u,___fldiv@b
  3909  001A7E  C09A  F01F         	movff	efgtoa@u+1,___fldiv@b+1
  3910  001A82  C09B  F020         	movff	efgtoa@u+2,___fldiv@b+2
  3911  001A86  C09C  F021         	movff	efgtoa@u+3,___fldiv@b+3
  3912  001A8A  0E00               	movlw	0
  3913  001A8C  6E22               	movwf	___fldiv@a^0,c
  3914  001A8E  0E00               	movlw	0
  3915  001A90  6E23               	movwf	(___fldiv@a+1)^0,c
  3916  001A92  0E20               	movlw	32
  3917  001A94  6E24               	movwf	(___fldiv@a+2)^0,c
  3918  001A96  0E41               	movlw	65
  3919  001A98  6E25               	movwf	(___fldiv@a+3)^0,c
  3920  001A9A  EC33  F016         	call	___fldiv	;wreg free
  3921  001A9E  C01E  F099         	movff	?___fldiv,efgtoa@u
  3922  001AA2  C01F  F09A         	movff	?___fldiv+1,efgtoa@u+1
  3923  001AA6  C020  F09B         	movff	?___fldiv+2,efgtoa@u+2
  3924  001AAA  C021  F09C         	movff	?___fldiv+3,efgtoa@u+3
  3925  001AAE                     
  3926                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  3927  001AAE  0100               	movlb	0	; () banked
  3928  001AB0  0775               	decf	efgtoa@ne& (0+255),f,b
  3929  001AB2  A0D8               	btfss	status,0,c
  3930  001AB4  0776               	decf	(efgtoa@ne+1)& (0+255),f,b
  3931  001AB6                     
  3932                           ; BSR set to: 0
  3933                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 490:         ++i;
  3934  001AB6  4B8F               	infsnz	efgtoa@i& (0+255),f,b
  3935  001AB8  2B90               	incf	(efgtoa@i+1)& (0+255),f,b
  3936  001ABA                     l6545:
  3937                           
  3938                           ; BSR set to: 0
  3939                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3940  001ABA  5177               	movf	efgtoa@m& (0+255),w,b
  3941  001ABC  5D8F               	subwf	efgtoa@i& (0+255),w,b
  3942  001ABE  5190               	movf	(efgtoa@i+1)& (0+255),w,b
  3943  001AC0  0A80               	xorlw	128
  3944  001AC2  6F60               	movwf	??_efgtoa& (0+255),b
  3945  001AC4  5178               	movf	(efgtoa@m+1)& (0+255),w,b
  3946  001AC6  0A80               	xorlw	128
  3947  001AC8  5960               	subwfb	??_efgtoa& (0+255),w,b
  3948  001ACA  B0D8               	btfsc	status,0,c
  3949  001ACC  EF6A  F00D         	goto	u6511
  3950  001AD0  EF6C  F00D         	goto	u6510
  3951  001AD4                     u6511:
  3952  001AD4  EF7A  F00D         	goto	l6549
  3953  001AD8                     u6510:
  3954  001AD8                     
  3955                           ; BSR set to: 0
  3956  001AD8  BF98               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3957  001ADA  EF78  F00D         	goto	u6521
  3958  001ADE  5198               	movf	(efgtoa@n+1)& (0+255),w,b
  3959  001AE0  E109               	bnz	u6520
  3960  001AE2  0E4B               	movlw	75
  3961  001AE4  5D97               	subwf	efgtoa@n& (0+255),w,b
  3962  001AE6  A0D8               	btfss	status,0,c
  3963  001AE8  EF78  F00D         	goto	u6521
  3964  001AEC  EF7A  F00D         	goto	u6520
  3965  001AF0                     u6521:
  3966  001AF0  EF70  F00C         	goto	l6497
  3967  001AF4                     u6520:
  3968  001AF4                     l6549:
  3969                           
  3970                           ; BSR set to: 0
  3971                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  3972  001AF4  5173               	movf	efgtoa@pp& (0+255),w,b
  3973  001AF6  1174               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3974  001AF8  A4D8               	btfss	status,2,c
  3975  001AFA  EF81  F00D         	goto	u6531
  3976  001AFE  EF83  F00D         	goto	u6530
  3977  001B02                     u6531:
  3978  001B02  EF94  F00D         	goto	l6557
  3979  001B06                     u6530:
  3980  001B06                     
  3981                           ; BSR set to: 0
  3982  001B06  A9F4               	btfss	_flags& (0+255),4,b
  3983  001B08  EF88  F00D         	goto	u6541
  3984  001B0C  EF8A  F00D         	goto	u6540
  3985  001B10                     u6541:
  3986  001B10  EF94  F00D         	goto	l6557
  3987  001B14                     u6540:
  3988  001B14                     
  3989                           ; BSR set to: 0
  3990                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  3991  001B14  0E24               	movlw	low _dbuf
  3992  001B16  2597               	addwf	efgtoa@n& (0+255),w,b
  3993  001B18  6ED9               	movwf	fsr2l,c
  3994  001B1A  0E01               	movlw	high _dbuf
  3995  001B1C  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3996  001B1E  6EDA               	movwf	fsr2h,c
  3997  001B20  0E2E               	movlw	46
  3998  001B22  6EDF               	movwf	indf2,c
  3999  001B24                     
  4000                           ; BSR set to: 0
  4001  001B24  4B97               	infsnz	efgtoa@n& (0+255),f,b
  4002  001B26  2B98               	incf	(efgtoa@n+1)& (0+255),f,b
  4003  001B28                     l6557:
  4004                           
  4005                           ; BSR set to: 0
  4006                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  4007  001B28  0E24               	movlw	low _dbuf
  4008  001B2A  2597               	addwf	efgtoa@n& (0+255),w,b
  4009  001B2C  6ED9               	movwf	fsr2l,c
  4010  001B2E  0E01               	movlw	high _dbuf
  4011  001B30  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4012  001B32  6EDA               	movwf	fsr2h,c
  4013  001B34  0E00               	movlw	0
  4014  001B36  6EDF               	movwf	indf2,c
  4015  001B38                     
  4016                           ; BSR set to: 0
  4017                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  4018  001B38  0E65               	movlw	101
  4019  001B3A  1985               	xorwf	efgtoa@nmode& (0+255),w,b
  4020  001B3C  A4D8               	btfss	status,2,c
  4021  001B3E  EFA3  F00D         	goto	u6551
  4022  001B42  EFA5  F00D         	goto	u6550
  4023  001B46                     u6551:
  4024  001B46  EF75  F00E         	goto	l6619
  4025  001B4A                     u6550:
  4026  001B4A                     
  4027                           ; BSR set to: 0
  4028                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  4029  001B4A  0E00               	movlw	0
  4030  001B4C  6F90               	movwf	(efgtoa@i+1)& (0+255),b
  4031  001B4E  0E4F               	movlw	79
  4032  001B50  6F8F               	movwf	efgtoa@i& (0+255),b
  4033  001B52                     
  4034                           ; BSR set to: 0
  4035                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  4036  001B52  0E24               	movlw	low _dbuf
  4037  001B54  258F               	addwf	efgtoa@i& (0+255),w,b
  4038  001B56  6ED9               	movwf	fsr2l,c
  4039  001B58  0E01               	movlw	high _dbuf
  4040  001B5A  2190               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4041  001B5C  6EDA               	movwf	fsr2h,c
  4042  001B5E  0E00               	movlw	0
  4043  001B60  6EDF               	movwf	indf2,c
  4044  001B62                     
  4045                           ; BSR set to: 0
  4046                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  4047  001B62  0E00               	movlw	0
  4048  001B64  6F80               	movwf	(efgtoa@sign+1)& (0+255),b
  4049  001B66  0E00               	movlw	0
  4050  001B68  6F7F               	movwf	efgtoa@sign& (0+255),b
  4051  001B6A                     
  4052                           ; BSR set to: 0
  4053                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  4054  001B6A  BF96               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4055  001B6C  EFBC  F00D         	goto	u6560
  4056  001B70  EFBA  F00D         	goto	u6561
  4057  001B74                     u6561:
  4058  001B74  EFC4  F00D         	goto	l6573
  4059  001B78                     u6560:
  4060  001B78                     
  4061                           ; BSR set to: 0
  4062                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  4063  001B78  0E00               	movlw	0
  4064  001B7A  6F80               	movwf	(efgtoa@sign+1)& (0+255),b
  4065  001B7C  0E01               	movlw	1
  4066  001B7E  6F7F               	movwf	efgtoa@sign& (0+255),b
  4067  001B80                     
  4068                           ; BSR set to: 0
  4069                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  4070  001B80  6D95               	negf	efgtoa@e& (0+255),b
  4071  001B82  1F96               	comf	(efgtoa@e+1)& (0+255),f,b
  4072  001B84  B0D8               	btfsc	status,0,c
  4073  001B86  2B96               	incf	(efgtoa@e+1)& (0+255),f,b
  4074  001B88                     l6573:
  4075                           
  4076                           ; BSR set to: 0
  4077                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  4078  001B88  0E00               	movlw	0
  4079  001B8A  6F82               	movwf	(efgtoa@p+1)& (0+255),b
  4080  001B8C  0E02               	movlw	2
  4081  001B8E  6F81               	movwf	efgtoa@p& (0+255),b
  4082                           
  4083                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  4084  001B90  EFF5  F00D         	goto	l6585
  4085  001B94                     l6575:
  4086                           
  4087                           ; BSR set to: 0
  4088                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  4089  001B94  078F               	decf	efgtoa@i& (0+255),f,b
  4090  001B96  A0D8               	btfss	status,0,c
  4091  001B98  0790               	decf	(efgtoa@i+1)& (0+255),f,b
  4092  001B9A                     
  4093                           ; BSR set to: 0
  4094                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  4095  001B9A  0E24               	movlw	low _dbuf
  4096  001B9C  258F               	addwf	efgtoa@i& (0+255),w,b
  4097  001B9E  6ED9               	movwf	fsr2l,c
  4098  001BA0  0E01               	movlw	high _dbuf
  4099  001BA2  2190               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4100  001BA4  6EDA               	movwf	fsr2h,c
  4101  001BA6  C095  F005         	movff	efgtoa@e,___awmod@dividend
  4102  001BAA  C096  F006         	movff	efgtoa@e+1,___awmod@dividend+1
  4103  001BAE  0E00               	movlw	0
  4104  001BB0  6E08               	movwf	(___awmod@divisor+1)^0,c
  4105  001BB2  0E0A               	movlw	10
  4106  001BB4  6E07               	movwf	___awmod@divisor^0,c
  4107  001BB6  EC20  F01F         	call	___awmod	;wreg free
  4108  001BBA  5005               	movf	?___awmod^0,w,c
  4109  001BBC  0F30               	addlw	48
  4110  001BBE  6EDF               	movwf	indf2,c
  4111  001BC0                     
  4112                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  4113  001BC0  C095  F005         	movff	efgtoa@e,___awdiv@dividend
  4114  001BC4  C096  F006         	movff	efgtoa@e+1,___awdiv@dividend+1
  4115  001BC8  0E00               	movlw	0
  4116  001BCA  6E08               	movwf	(___awdiv@divisor+1)^0,c
  4117  001BCC  0E0A               	movlw	10
  4118  001BCE  6E07               	movwf	___awdiv@divisor^0,c
  4119  001BD0  ECFD  F01D         	call	___awdiv	;wreg free
  4120  001BD4  C005  F095         	movff	?___awdiv,efgtoa@e
  4121  001BD8  C006  F096         	movff	?___awdiv+1,efgtoa@e+1
  4122  001BDC                     
  4123                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  4124  001BDC  0100               	movlb	0	; () banked
  4125  001BDE  0781               	decf	efgtoa@p& (0+255),f,b
  4126  001BE0  A0D8               	btfss	status,0,c
  4127  001BE2  0782               	decf	(efgtoa@p+1)& (0+255),f,b
  4128  001BE4                     
  4129                           ; BSR set to: 0
  4130                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  4131  001BE4  0783               	decf	efgtoa@w& (0+255),f,b
  4132  001BE6  A0D8               	btfss	status,0,c
  4133  001BE8  0784               	decf	(efgtoa@w+1)& (0+255),f,b
  4134  001BEA                     l6585:
  4135                           
  4136                           ; BSR set to: 0
  4137                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  4138  001BEA  5195               	movf	efgtoa@e& (0+255),w,b
  4139  001BEC  1196               	iorwf	(efgtoa@e+1)& (0+255),w,b
  4140  001BEE  A4D8               	btfss	status,2,c
  4141  001BF0  EFFC  F00D         	goto	u6571
  4142  001BF4  EFFE  F00D         	goto	u6570
  4143  001BF8                     u6571:
  4144  001BF8  EFCA  F00D         	goto	l6575
  4145  001BFC                     u6570:
  4146  001BFC                     
  4147                           ; BSR set to: 0
  4148  001BFC  BF82               	btfsc	(efgtoa@p+1)& (0+255),7,b
  4149  001BFE  EF0B  F00E         	goto	u6580
  4150  001C02  5182               	movf	(efgtoa@p+1)& (0+255),w,b
  4151  001C04  E106               	bnz	u6581
  4152  001C06  0581               	decf	efgtoa@p& (0+255),w,b
  4153  001C08  B0D8               	btfsc	status,0,c
  4154  001C0A  EF09  F00E         	goto	u6581
  4155  001C0E  EF0B  F00E         	goto	u6580
  4156  001C12                     u6581:
  4157  001C12  EFCA  F00D         	goto	l6575
  4158  001C16                     u6580:
  4159  001C16                     
  4160                           ; BSR set to: 0
  4161                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 514:         --i;
  4162  001C16  078F               	decf	efgtoa@i& (0+255),f,b
  4163  001C18  A0D8               	btfss	status,0,c
  4164  001C1A  0790               	decf	(efgtoa@i+1)& (0+255),f,b
  4165  001C1C                     
  4166                           ; BSR set to: 0
  4167                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  4168  001C1C  517F               	movf	efgtoa@sign& (0+255),w,b
  4169  001C1E  1180               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4170  001C20  A4D8               	btfss	status,2,c
  4171  001C22  EF15  F00E         	goto	u6591
  4172  001C26  EF17  F00E         	goto	u6590
  4173  001C2A                     u6591:
  4174  001C2A  EF1D  F00E         	goto	l6595
  4175  001C2E                     u6590:
  4176  001C2E                     
  4177                           ; BSR set to: 0
  4178  001C2E  0E00               	movlw	0
  4179  001C30  6F6C               	movwf	(_efgtoa$2110+1)& (0+255),b
  4180  001C32  0E2B               	movlw	43
  4181  001C34  6F6B               	movwf	_efgtoa$2110& (0+255),b
  4182  001C36  EF21  F00E         	goto	l6597
  4183  001C3A                     l6595:
  4184                           
  4185                           ; BSR set to: 0
  4186  001C3A  0E00               	movlw	0
  4187  001C3C  6F6C               	movwf	(_efgtoa$2110+1)& (0+255),b
  4188  001C3E  0E2D               	movlw	45
  4189  001C40  6F6B               	movwf	_efgtoa$2110& (0+255),b
  4190  001C42                     l6597:
  4191                           
  4192                           ; BSR set to: 0
  4193  001C42  0E24               	movlw	low _dbuf
  4194  001C44  258F               	addwf	efgtoa@i& (0+255),w,b
  4195  001C46  6ED9               	movwf	fsr2l,c
  4196  001C48  0E01               	movlw	high _dbuf
  4197  001C4A  2190               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4198  001C4C  6EDA               	movwf	fsr2h,c
  4199  001C4E  C06B  FFDF         	movff	_efgtoa$2110,indf2
  4200  001C52                     
  4201                           ; BSR set to: 0
  4202                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 516:         --w;
  4203  001C52  0783               	decf	efgtoa@w& (0+255),f,b
  4204  001C54  A0D8               	btfss	status,0,c
  4205  001C56  0784               	decf	(efgtoa@w+1)& (0+255),f,b
  4206  001C58                     
  4207                           ; BSR set to: 0
  4208                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 518:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  4209  001C58  078F               	decf	efgtoa@i& (0+255),f,b
  4210  001C5A  A0D8               	btfss	status,0,c
  4211  001C5C  0790               	decf	(efgtoa@i+1)& (0+255),f,b
  4212  001C5E                     
  4213                           ; BSR set to: 0
  4214  001C5E  0EBF               	movlw	191
  4215  001C60  6F60               	movwf	??_efgtoa& (0+255),b
  4216  001C62  0EFF               	movlw	255
  4217  001C64  6F61               	movwf	(??_efgtoa+1)& (0+255),b
  4218  001C66  5055               	movf	efgtoa@c^0,w,c
  4219  001C68  6F62               	movwf	(??_efgtoa+2)& (0+255),b
  4220  001C6A  6B63               	clrf	(??_efgtoa+3)& (0+255),b
  4221  001C6C  5160               	movf	??_efgtoa& (0+255),w,b
  4222  001C6E  2762               	addwf	(??_efgtoa+2)& (0+255),f,b
  4223  001C70  5161               	movf	(??_efgtoa+1)& (0+255),w,b
  4224  001C72  2363               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4225  001C74  5163               	movf	(??_efgtoa+3)& (0+255),w,b
  4226  001C76  E10A               	bnz	u6600
  4227  001C78  0E1A               	movlw	26
  4228  001C7A  5D62               	subwf	(??_efgtoa+2)& (0+255),w,b
  4229  001C7C  A0D8               	btfss	status,0,c
  4230  001C7E  EF43  F00E         	goto	u6601
  4231  001C82  EF46  F00E         	goto	u6600
  4232  001C86                     u6601:
  4233  001C86  0E01               	movlw	1
  4234  001C88  EF47  F00E         	goto	u6610
  4235  001C8C                     u6600:
  4236  001C8C  0E00               	movlw	0
  4237  001C8E                     u6610:
  4238  001C8E  6F6F               	movwf	_efgtoa$2112& (0+255),b
  4239  001C90  6B70               	clrf	(_efgtoa$2112+1)& (0+255),b
  4240  001C92                     
  4241                           ; BSR set to: 0
  4242  001C92  516F               	movf	_efgtoa$2112& (0+255),w,b
  4243  001C94  1170               	iorwf	(_efgtoa$2112+1)& (0+255),w,b
  4244  001C96  A4D8               	btfss	status,2,c
  4245  001C98  EF50  F00E         	goto	u6621
  4246  001C9C  EF52  F00E         	goto	u6620
  4247  001CA0                     u6621:
  4248  001CA0  EF58  F00E         	goto	l6611
  4249  001CA4                     u6620:
  4250  001CA4                     
  4251                           ; BSR set to: 0
  4252  001CA4  0E00               	movlw	0
  4253  001CA6  6F6E               	movwf	(_efgtoa$2111+1)& (0+255),b
  4254  001CA8  0E65               	movlw	101
  4255  001CAA  6F6D               	movwf	_efgtoa$2111& (0+255),b
  4256  001CAC  EF5C  F00E         	goto	l6613
  4257  001CB0                     l6611:
  4258                           
  4259                           ; BSR set to: 0
  4260  001CB0  0E00               	movlw	0
  4261  001CB2  6F6E               	movwf	(_efgtoa$2111+1)& (0+255),b
  4262  001CB4  0E45               	movlw	69
  4263  001CB6  6F6D               	movwf	_efgtoa$2111& (0+255),b
  4264  001CB8                     l6613:
  4265                           
  4266                           ; BSR set to: 0
  4267  001CB8  0E24               	movlw	low _dbuf
  4268  001CBA  258F               	addwf	efgtoa@i& (0+255),w,b
  4269  001CBC  6ED9               	movwf	fsr2l,c
  4270  001CBE  0E01               	movlw	high _dbuf
  4271  001CC0  2190               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4272  001CC2  6EDA               	movwf	fsr2h,c
  4273  001CC4  C06D  FFDF         	movff	_efgtoa$2111,indf2
  4274  001CC8                     
  4275                           ; BSR set to: 0
  4276                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 519:         --w;
  4277  001CC8  0783               	decf	efgtoa@w& (0+255),f,b
  4278  001CCA  A0D8               	btfss	status,0,c
  4279  001CCC  0784               	decf	(efgtoa@w+1)& (0+255),f,b
  4280  001CCE                     
  4281                           ; BSR set to: 0
  4282                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  4283  001CCE  0E24               	movlw	low _dbuf
  4284  001CD0  2597               	addwf	efgtoa@n& (0+255),w,b
  4285  001CD2  6E05               	movwf	strcpy@dest^0,c
  4286  001CD4  0E01               	movlw	high _dbuf
  4287  001CD6  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4288  001CD8  6E06               	movwf	(strcpy@dest+1)^0,c
  4289  001CDA  0E24               	movlw	low _dbuf
  4290  001CDC  258F               	addwf	efgtoa@i& (0+255),w,b
  4291  001CDE  6E07               	movwf	strcpy@src^0,c
  4292  001CE0  0E01               	movlw	high _dbuf
  4293  001CE2  2190               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4294  001CE4  6E08               	movwf	(strcpy@src+1)^0,c
  4295  001CE6  EC8B  F022         	call	_strcpy	;wreg free
  4296  001CEA                     l6619:
  4297                           
  4298                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 524:     return p
      +                          ad(fp, &dbuf[0], w);
  4299  001CEA  C04F  F017         	movff	efgtoa@fp,pad@fp
  4300  001CEE  C050  F018         	movff	efgtoa@fp+1,pad@fp+1
  4301  001CF2  0E24               	movlw	low _dbuf
  4302  001CF4  6E19               	movwf	pad@buf^0,c
  4303  001CF6  0E01               	movlw	high _dbuf
  4304  001CF8  6E1A               	movwf	(pad@buf+1)^0,c
  4305  001CFA  C083  F01B         	movff	efgtoa@w,pad@p
  4306  001CFE  C084  F01C         	movff	efgtoa@w+1,pad@p+1
  4307  001D02  EC9A  F01D         	call	_pad	;wreg free
  4308  001D06  C017  F04F         	movff	?_pad,?_efgtoa
  4309  001D0A  C018  F050         	movff	?_pad+1,?_efgtoa+1
  4310  001D0E                     l1466:
  4311  001D0E  0012               	return		;funcret
  4312  001D10                     __end_of_efgtoa:
  4313                           	callstack 0
  4314                           
  4315 ;; *************** function _tolower *****************
  4316 ;; Defined at:
  4317 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\tolower.c"
  4318 ;; Parameters:    Size  Location     Type
  4319 ;;  c               2   10[COMRAM] int 
  4320 ;; Auto vars:     Size  Location     Type
  4321 ;;		None
  4322 ;; Return value:  Size  Location     Type
  4323 ;;                  2   10[COMRAM] int 
  4324 ;; Registers used:
  4325 ;;		wreg, status,2, status,0
  4326 ;; Tracked objects:
  4327 ;;		On entry : 0/0
  4328 ;;		On exit  : 0/0
  4329 ;;		Unchanged: 0/0
  4330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4331 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4332 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4333 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4334 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4335 ;;Total ram usage:        8 bytes
  4336 ;; Hardware stack levels used: 1
  4337 ;; Hardware stack levels required when called: 5
  4338 ;; This function calls:
  4339 ;;		_isupper
  4340 ;; This function is called by:
  4341 ;;		_efgtoa
  4342 ;;		_vfpfcnvrt
  4343 ;; This function uses a non-reentrant model
  4344 ;;
  4345                           
  4346                           	psect	text6
  4347  0044B6                     __ptext6:
  4348                           	callstack 0
  4349  0044B6                     _tolower:
  4350                           	callstack 22
  4351  0044B6  0EBF               	movlw	191
  4352  0044B8  6E0D               	movwf	??_tolower^0,c
  4353  0044BA  0EFF               	movlw	255
  4354  0044BC  6E0E               	movwf	(??_tolower+1)^0,c
  4355  0044BE  C00B  F00F         	movff	tolower@c,??_tolower+2
  4356  0044C2  C00C  F010         	movff	tolower@c+1,??_tolower+3
  4357  0044C6  500D               	movf	??_tolower^0,w,c
  4358  0044C8  260F               	addwf	(??_tolower+2)^0,f,c
  4359  0044CA  500E               	movf	(??_tolower+1)^0,w,c
  4360  0044CC  2210               	addwfc	(??_tolower+3)^0,f,c
  4361  0044CE  5010               	movf	(??_tolower+3)^0,w,c
  4362  0044D0  E10A               	bnz	u4560
  4363  0044D2  0E1A               	movlw	26
  4364  0044D4  5C0F               	subwf	(??_tolower+2)^0,w,c
  4365  0044D6  A0D8               	btfss	status,0,c
  4366  0044D8  EF70  F022         	goto	u4561
  4367  0044DC  EF73  F022         	goto	u4560
  4368  0044E0                     u4561:
  4369  0044E0  0E01               	movlw	1
  4370  0044E2  EF74  F022         	goto	u4570
  4371  0044E6                     u4560:
  4372  0044E6  0E00               	movlw	0
  4373  0044E8                     u4570:
  4374  0044E8  6E11               	movwf	_tolower$2254^0,c
  4375  0044EA  6A12               	clrf	(_tolower$2254+1)^0,c
  4376  0044EC  5011               	movf	_tolower$2254^0,w,c
  4377  0044EE  1012               	iorwf	(_tolower$2254+1)^0,w,c
  4378  0044F0  B4D8               	btfsc	status,2,c
  4379  0044F2  EF7D  F022         	goto	u4581
  4380  0044F6  EF7F  F022         	goto	u4580
  4381  0044FA                     u4581:
  4382  0044FA  EF86  F022         	goto	l1715
  4383  0044FE                     u4580:
  4384  0044FE  0E20               	movlw	32
  4385  004500  100B               	iorwf	tolower@c^0,w,c
  4386  004502  6E0B               	movwf	?_tolower^0,c
  4387  004504  500C               	movf	(tolower@c+1)^0,w,c
  4388  004506  6E0C               	movwf	(?_tolower+1)^0,c
  4389  004508  EF8A  F022         	goto	l1720
  4390  00450C                     l1715:
  4391  00450C  C00B  F00B         	movff	tolower@c,?_tolower
  4392  004510  C00C  F00C         	movff	tolower@c+1,?_tolower+1
  4393  004514                     l1720:
  4394  004514  0012               	return		;funcret
  4395  004516                     __end_of_tolower:
  4396                           	callstack 0
  4397                           
  4398 ;; *************** function _isupper *****************
  4399 ;; Defined at:
  4400 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isupper.c"
  4401 ;; Parameters:    Size  Location     Type
  4402 ;;  c               2    4[COMRAM] int 
  4403 ;; Auto vars:     Size  Location     Type
  4404 ;;		None
  4405 ;; Return value:  Size  Location     Type
  4406 ;;                  2    4[COMRAM] int 
  4407 ;; Registers used:
  4408 ;;		wreg, status,2, status,0
  4409 ;; Tracked objects:
  4410 ;;		On entry : 0/0
  4411 ;;		On exit  : 0/0
  4412 ;;		Unchanged: 0/0
  4413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4414 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4416 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4417 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4418 ;;Total ram usage:        6 bytes
  4419 ;; Hardware stack levels used: 1
  4420 ;; Hardware stack levels required when called: 4
  4421 ;; This function calls:
  4422 ;;		Nothing
  4423 ;; This function is called by:
  4424 ;;		_efgtoa
  4425 ;;		_vfpfcnvrt
  4426 ;;		_tolower
  4427 ;; This function uses a non-reentrant model
  4428 ;;
  4429                           
  4430                           	psect	text7
  4431  004852                     __ptext7:
  4432                           	callstack 0
  4433  004852                     _isupper:
  4434                           	callstack 22
  4435  004852  0EBF               	movlw	191
  4436  004854  6E07               	movwf	??_isupper^0,c
  4437  004856  0EFF               	movlw	255
  4438  004858  6E08               	movwf	(??_isupper+1)^0,c
  4439  00485A  C005  F009         	movff	isupper@c,??_isupper+2
  4440  00485E  C006  F00A         	movff	isupper@c+1,??_isupper+3
  4441  004862  5007               	movf	??_isupper^0,w,c
  4442  004864  2609               	addwf	(??_isupper+2)^0,f,c
  4443  004866  5008               	movf	(??_isupper+1)^0,w,c
  4444  004868  220A               	addwfc	(??_isupper+3)^0,f,c
  4445  00486A  500A               	movf	(??_isupper+3)^0,w,c
  4446  00486C  E10A               	bnz	u3680
  4447  00486E  0E1A               	movlw	26
  4448  004870  5C09               	subwf	(??_isupper+2)^0,w,c
  4449  004872  A0D8               	btfss	status,0,c
  4450  004874  EF3E  F024         	goto	u3681
  4451  004878  EF41  F024         	goto	u3680
  4452  00487C                     u3681:
  4453  00487C  0E01               	movlw	1
  4454  00487E  EF42  F024         	goto	u3690
  4455  004882                     u3680:
  4456  004882  0E00               	movlw	0
  4457  004884                     u3690:
  4458  004884  6E05               	movwf	?_isupper^0,c
  4459  004886  6A06               	clrf	(?_isupper+1)^0,c
  4460  004888  0012               	return		;funcret
  4461  00488A                     __end_of_isupper:
  4462                           	callstack 0
  4463                           
  4464 ;; *************** function _strcpy *****************
  4465 ;; Defined at:
  4466 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strcpy.c"
  4467 ;; Parameters:    Size  Location     Type
  4468 ;;  dest            2    4[COMRAM] PTR unsigned char 
  4469 ;;		 -> dbuf(80), 
  4470 ;;  src             2    6[COMRAM] PTR const unsigned char 
  4471 ;;		 -> STR_8(4), STR_7(4), STR_4(4), STR_3(4), 
  4472 ;;		 -> dbuf(80), 
  4473 ;; Auto vars:     Size  Location     Type
  4474 ;;  d               2   12[COMRAM] PTR unsigned char 
  4475 ;;		 -> dbuf(80), 
  4476 ;;  s               2   10[COMRAM] PTR const unsigned char 
  4477 ;;		 -> STR_8(4), STR_7(4), STR_4(4), STR_3(4), 
  4478 ;;		 -> dbuf(80), 
  4479 ;; Return value:  Size  Location     Type
  4480 ;;                  2    4[COMRAM] PTR unsigned char 
  4481 ;; Registers used:
  4482 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4483 ;; Tracked objects:
  4484 ;;		On entry : 0/0
  4485 ;;		On exit  : 0/0
  4486 ;;		Unchanged: 0/0
  4487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4488 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4489 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4490 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4491 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4492 ;;Total ram usage:       10 bytes
  4493 ;; Hardware stack levels used: 1
  4494 ;; Hardware stack levels required when called: 4
  4495 ;; This function calls:
  4496 ;;		Nothing
  4497 ;; This function is called by:
  4498 ;;		_efgtoa
  4499 ;; This function uses a non-reentrant model
  4500 ;;
  4501                           
  4502                           	psect	text8
  4503  004516                     __ptext8:
  4504                           	callstack 0
  4505  004516                     _strcpy:
  4506                           	callstack 22
  4507  004516  C007  F00B         	movff	strcpy@src,strcpy@s
  4508  00451A  C008  F00C         	movff	strcpy@src+1,strcpy@s+1
  4509  00451E  C005  F00D         	movff	strcpy@dest,strcpy@d
  4510  004522  C006  F00E         	movff	strcpy@dest+1,strcpy@d+1
  4511  004526                     l5101:
  4512  004526  500B               	movf	strcpy@s^0,w,c
  4513  004528  6E09               	movwf	??_strcpy^0,c
  4514  00452A  500C               	movf	(strcpy@s+1)^0,w,c
  4515  00452C  6E0A               	movwf	(??_strcpy+1)^0,c
  4516  00452E  4A0B               	infsnz	strcpy@s^0,f,c
  4517  004530  2A0C               	incf	(strcpy@s+1)^0,f,c
  4518  004532  C009  FFF6         	movff	??_strcpy,tblptrl
  4519  004536  C00A  FFF7         	movff	??_strcpy+1,tblptrh
  4520  00453A  0E00               	movlw	low (__smallconst shr (0+16))
  4521  00453C  6EF8               	movwf	tblptru,c
  4522  00453E  C00D  FFD9         	movff	strcpy@d,fsr2l
  4523  004542  C00E  FFDA         	movff	strcpy@d+1,fsr2h
  4524  004546  4A0D               	infsnz	strcpy@d^0,f,c
  4525  004548  2A0E               	incf	(strcpy@d+1)^0,f,c
  4526  00454A  0E0F               	movlw	(high __ramtop+-1)
  4527  00454C  64F7               	cpfsgt	tblptrh,c
  4528  00454E  D003               	bra	u4547
  4529  004550  0008               	tblrd		*
  4530  004552  50F5               	movf	tablat,w,c
  4531  004554  D005               	bra	u4540
  4532  004556                     u4547:
  4533  004556  CFF6 FFE9          	movff	tblptrl,fsr0l
  4534  00455A  CFF7 FFEA          	movff	tblptrh,fsr0h
  4535  00455E  50EF               	movf	indf0,w,c
  4536  004560                     u4540:
  4537  004560  6EDF               	movwf	indf2,c
  4538  004562  50DF               	movf	indf2,w,c
  4539  004564  A4D8               	btfss	status,2,c
  4540  004566  EFB7  F022         	goto	u4551
  4541  00456A  EFB9  F022         	goto	u4550
  4542  00456E                     u4551:
  4543  00456E  EF93  F022         	goto	l5101
  4544  004572                     u4550:
  4545  004572  0012               	return		;funcret
  4546  004574                     __end_of_strcpy:
  4547                           	callstack 0
  4548                           
  4549 ;; *************** function _pad *****************
  4550 ;; Defined at:
  4551 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4552 ;; Parameters:    Size  Location     Type
  4553 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
  4554 ;;		 -> NULL(0), 
  4555 ;;  buf             2   24[COMRAM] PTR unsigned char 
  4556 ;;		 -> dbuf(80), 
  4557 ;;  p               2   26[COMRAM] int 
  4558 ;; Auto vars:     Size  Location     Type
  4559 ;;  w               2   31[COMRAM] int 
  4560 ;;  i               2   29[COMRAM] int 
  4561 ;; Return value:  Size  Location     Type
  4562 ;;                  2   22[COMRAM] int 
  4563 ;; Registers used:
  4564 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4565 ;; Tracked objects:
  4566 ;;		On entry : 0/0
  4567 ;;		On exit  : 0/0
  4568 ;;		Unchanged: 0/0
  4569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4570 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4571 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4572 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4573 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4574 ;;Total ram usage:       11 bytes
  4575 ;; Hardware stack levels used: 1
  4576 ;; Hardware stack levels required when called: 8
  4577 ;; This function calls:
  4578 ;;		_fputc
  4579 ;;		_fputs
  4580 ;;		_strlen
  4581 ;; This function is called by:
  4582 ;;		_efgtoa
  4583 ;; This function uses a non-reentrant model
  4584 ;;
  4585                           
  4586                           	psect	text9
  4587  003B34                     __ptext9:
  4588                           	callstack 0
  4589  003B34                     _pad:
  4590                           	callstack 18
  4591  003B34                     
  4592                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  4593  003B34  0100               	movlb	0	; () banked
  4594  003B36  A1F4               	btfss	_flags& (0+255),0,b
  4595  003B38  EFA0  F01D         	goto	u4431
  4596  003B3C  EFA2  F01D         	goto	u4430
  4597  003B40                     u4431:
  4598  003B40  EFAC  F01D         	goto	l5059
  4599  003B44                     u4430:
  4600  003B44                     
  4601                           ; BSR set to: 0
  4602                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  4603  003B44  C019  F010         	movff	pad@buf,fputs@s
  4604  003B48  C01A  F011         	movff	pad@buf+1,fputs@s+1
  4605  003B4C  C017  F012         	movff	pad@fp,fputs@fp
  4606  003B50  C018  F013         	movff	pad@fp+1,fputs@fp+1
  4607  003B54  EC82  F023         	call	_fputs	;wreg free
  4608  003B58                     l5059:
  4609                           
  4610                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  4611  003B58  BE1C               	btfsc	(pad@p+1)^0,7,c
  4612  003B5A  EFB1  F01D         	goto	u4441
  4613  003B5E  EFB3  F01D         	goto	u4440
  4614  003B62                     u4441:
  4615  003B62  EFB9  F01D         	goto	l5063
  4616  003B66                     u4440:
  4617  003B66  C01B  F020         	movff	pad@p,pad@w
  4618  003B6A  C01C  F021         	movff	pad@p+1,pad@w+1
  4619  003B6E  EFBD  F01D         	goto	l1443
  4620  003B72                     l5063:
  4621  003B72  0E00               	movlw	0
  4622  003B74  6E21               	movwf	(pad@w+1)^0,c
  4623  003B76  0E00               	movlw	0
  4624  003B78  6E20               	movwf	pad@w^0,c
  4625  003B7A                     l1443:
  4626                           
  4627                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  4628  003B7A  0E00               	movlw	0
  4629  003B7C  6E1F               	movwf	(pad@i+1)^0,c
  4630  003B7E  0E00               	movlw	0
  4631  003B80  6E1E               	movwf	pad@i^0,c
  4632                           
  4633                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4634  003B82  EFCF  F01D         	goto	l5069
  4635  003B86                     l5065:
  4636                           
  4637                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  4638  003B86  0E00               	movlw	0
  4639  003B88  6E08               	movwf	(fputc@c+1)^0,c
  4640  003B8A  0E20               	movlw	32
  4641  003B8C  6E07               	movwf	fputc@c^0,c
  4642  003B8E  C017  F009         	movff	pad@fp,fputc@fp
  4643  003B92  C018  F00A         	movff	pad@fp+1,fputc@fp+1
  4644  003B96  EC76  F020         	call	_fputc	;wreg free
  4645  003B9A                     
  4646                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  4647  003B9A  4A1E               	infsnz	pad@i^0,f,c
  4648  003B9C  2A1F               	incf	(pad@i+1)^0,f,c
  4649  003B9E                     l5069:
  4650                           
  4651                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4652  003B9E  5020               	movf	pad@w^0,w,c
  4653  003BA0  5C1E               	subwf	pad@i^0,w,c
  4654  003BA2  501F               	movf	(pad@i+1)^0,w,c
  4655  003BA4  0A80               	xorlw	128
  4656  003BA6  6E1D               	movwf	??_pad^0,c
  4657  003BA8  5021               	movf	(pad@w+1)^0,w,c
  4658  003BAA  0A80               	xorlw	128
  4659  003BAC  581D               	subwfb	??_pad^0,w,c
  4660  003BAE  A0D8               	btfss	status,0,c
  4661  003BB0  EFDC  F01D         	goto	u4451
  4662  003BB4  EFDE  F01D         	goto	u4450
  4663  003BB8                     u4451:
  4664  003BB8  EFC3  F01D         	goto	l5065
  4665  003BBC                     u4450:
  4666  003BBC                     
  4667                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  4668  003BBC  0100               	movlb	0	; () banked
  4669  003BBE  B1F4               	btfsc	_flags& (0+255),0,b
  4670  003BC0  EFE4  F01D         	goto	u4461
  4671  003BC4  EFE6  F01D         	goto	u4460
  4672  003BC8                     u4461:
  4673  003BC8  EFF0  F01D         	goto	l5073
  4674  003BCC                     u4460:
  4675  003BCC                     
  4676                           ; BSR set to: 0
  4677                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  4678  003BCC  C019  F010         	movff	pad@buf,fputs@s
  4679  003BD0  C01A  F011         	movff	pad@buf+1,fputs@s+1
  4680  003BD4  C017  F012         	movff	pad@fp,fputs@fp
  4681  003BD8  C018  F013         	movff	pad@fp+1,fputs@fp+1
  4682  003BDC  EC82  F023         	call	_fputs	;wreg free
  4683  003BE0                     l5073:
  4684                           
  4685                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  4686  003BE0  C019  F005         	movff	pad@buf,strlen@s
  4687  003BE4  C01A  F006         	movff	pad@buf+1,strlen@s+1
  4688  003BE8  EC7D  F024         	call	_strlen	;wreg free
  4689  003BEC  5020               	movf	pad@w^0,w,c
  4690  003BEE  2405               	addwf	?_strlen^0,w,c
  4691  003BF0  6E17               	movwf	?_pad^0,c
  4692  003BF2  5021               	movf	(pad@w+1)^0,w,c
  4693  003BF4  2006               	addwfc	(?_strlen+1)^0,w,c
  4694  003BF6  6E18               	movwf	(?_pad+1)^0,c
  4695  003BF8  0012               	return		;funcret
  4696  003BFA                     __end_of_pad:
  4697                           	callstack 0
  4698                           
  4699 ;; *************** function _strlen *****************
  4700 ;; Defined at:
  4701 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  4702 ;; Parameters:    Size  Location     Type
  4703 ;;  s               2    4[COMRAM] PTR const unsigned char 
  4704 ;;		 -> dbuf(80), 
  4705 ;; Auto vars:     Size  Location     Type
  4706 ;;  a               2    6[COMRAM] PTR const unsigned char 
  4707 ;;		 -> dbuf(80), 
  4708 ;; Return value:  Size  Location     Type
  4709 ;;                  2    4[COMRAM] unsigned int 
  4710 ;; Registers used:
  4711 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4712 ;; Tracked objects:
  4713 ;;		On entry : 0/0
  4714 ;;		On exit  : 0/0
  4715 ;;		Unchanged: 0/0
  4716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4717 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4718 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4720 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4721 ;;Total ram usage:        4 bytes
  4722 ;; Hardware stack levels used: 1
  4723 ;; Hardware stack levels required when called: 4
  4724 ;; This function calls:
  4725 ;;		Nothing
  4726 ;; This function is called by:
  4727 ;;		_pad
  4728 ;; This function uses a non-reentrant model
  4729 ;;
  4730                           
  4731                           	psect	text10
  4732  0048FA                     __ptext10:
  4733                           	callstack 0
  4734  0048FA                     _strlen:
  4735                           	callstack 21
  4736  0048FA  C005  F007         	movff	strlen@s,strlen@a
  4737  0048FE  C006  F008         	movff	strlen@s+1,strlen@a+1
  4738  004902  EF85  F024         	goto	l4561
  4739  004906                     l4559:
  4740  004906  4A05               	infsnz	strlen@s^0,f,c
  4741  004908  2A06               	incf	(strlen@s+1)^0,f,c
  4742  00490A                     l4561:
  4743  00490A  C005  FFD9         	movff	strlen@s,fsr2l
  4744  00490E  C006  FFDA         	movff	strlen@s+1,fsr2h
  4745  004912  50DF               	movf	indf2,w,c
  4746  004914  A4D8               	btfss	status,2,c
  4747  004916  EF8F  F024         	goto	u3671
  4748  00491A  EF91  F024         	goto	u3670
  4749  00491E                     u3671:
  4750  00491E  EF83  F024         	goto	l4559
  4751  004922                     u3670:
  4752  004922  5007               	movf	strlen@a^0,w,c
  4753  004924  5C05               	subwf	strlen@s^0,w,c
  4754  004926  6E05               	movwf	?_strlen^0,c
  4755  004928  5008               	movf	(strlen@a+1)^0,w,c
  4756  00492A  5806               	subwfb	(strlen@s+1)^0,w,c
  4757  00492C  6E06               	movwf	(?_strlen+1)^0,c
  4758  00492E  0012               	return		;funcret
  4759  004930                     __end_of_strlen:
  4760                           	callstack 0
  4761                           
  4762 ;; *************** function _fputs *****************
  4763 ;; Defined at:
  4764 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  4765 ;; Parameters:    Size  Location     Type
  4766 ;;  s               2   15[COMRAM] PTR const unsigned char 
  4767 ;;		 -> dbuf(80), 
  4768 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  4769 ;;		 -> NULL(0), 
  4770 ;; Auto vars:     Size  Location     Type
  4771 ;;  i               2   20[COMRAM] int 
  4772 ;;  c               1   19[COMRAM] unsigned char 
  4773 ;; Return value:  Size  Location     Type
  4774 ;;                  2   15[COMRAM] int 
  4775 ;; Registers used:
  4776 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4777 ;; Tracked objects:
  4778 ;;		On entry : 0/0
  4779 ;;		On exit  : 0/0
  4780 ;;		Unchanged: 0/0
  4781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4782 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4783 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4785 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4786 ;;Total ram usage:        7 bytes
  4787 ;; Hardware stack levels used: 1
  4788 ;; Hardware stack levels required when called: 7
  4789 ;; This function calls:
  4790 ;;		_fputc
  4791 ;; This function is called by:
  4792 ;;		_pad
  4793 ;; This function uses a non-reentrant model
  4794 ;;
  4795                           
  4796                           	psect	text11
  4797  004704                     __ptext11:
  4798                           	callstack 0
  4799  004704                     _fputs:
  4800                           	callstack 18
  4801  004704  0E00               	movlw	0
  4802  004706  6E16               	movwf	(fputs@i+1)^0,c
  4803  004708  0E00               	movlw	0
  4804  00470A  6E15               	movwf	fputs@i^0,c
  4805  00470C  EF93  F023         	goto	l4555
  4806  004710                     l4551:
  4807  004710  C014  F007         	movff	fputs@c,fputc@c
  4808  004714  6A08               	clrf	(fputc@c+1)^0,c
  4809  004716  C012  F009         	movff	fputs@fp,fputc@fp
  4810  00471A  C013  F00A         	movff	fputs@fp+1,fputc@fp+1
  4811  00471E  EC76  F020         	call	_fputc	;wreg free
  4812  004722  4A15               	infsnz	fputs@i^0,f,c
  4813  004724  2A16               	incf	(fputs@i+1)^0,f,c
  4814  004726                     l4555:
  4815  004726  5015               	movf	fputs@i^0,w,c
  4816  004728  2410               	addwf	fputs@s^0,w,c
  4817  00472A  6ED9               	movwf	fsr2l,c
  4818  00472C  5016               	movf	(fputs@i+1)^0,w,c
  4819  00472E  2011               	addwfc	(fputs@s+1)^0,w,c
  4820  004730  6EDA               	movwf	fsr2h,c
  4821  004732  50DF               	movf	indf2,w,c
  4822  004734  6E14               	movwf	fputs@c^0,c
  4823  004736  5014               	movf	fputs@c^0,w,c
  4824  004738  A4D8               	btfss	status,2,c
  4825  00473A  EFA1  F023         	goto	u3661
  4826  00473E  EFA3  F023         	goto	u3660
  4827  004742                     u3661:
  4828  004742  EF88  F023         	goto	l4551
  4829  004746                     u3660:
  4830  004746  0012               	return		;funcret
  4831  004748                     __end_of_fputs:
  4832                           	callstack 0
  4833                           
  4834 ;; *************** function _fputc *****************
  4835 ;; Defined at:
  4836 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  4837 ;; Parameters:    Size  Location     Type
  4838 ;;  c               2    6[COMRAM] int 
  4839 ;;  fp              2    8[COMRAM] PTR struct _IO_FILE
  4840 ;;		 -> NULL(0), 
  4841 ;; Auto vars:     Size  Location     Type
  4842 ;;		None
  4843 ;; Return value:  Size  Location     Type
  4844 ;;                  2    6[COMRAM] int 
  4845 ;; Registers used:
  4846 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4847 ;; Tracked objects:
  4848 ;;		On entry : 0/0
  4849 ;;		On exit  : 0/0
  4850 ;;		Unchanged: 0/0
  4851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4852 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4854 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4855 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4856 ;;Total ram usage:        9 bytes
  4857 ;; Hardware stack levels used: 1
  4858 ;; Hardware stack levels required when called: 6
  4859 ;; This function calls:
  4860 ;;		_putch
  4861 ;; This function is called by:
  4862 ;;		_pad
  4863 ;;		_vfpfcnvrt
  4864 ;;		_fputs
  4865 ;; This function uses a non-reentrant model
  4866 ;;
  4867                           
  4868                           	psect	text12
  4869  0040EC                     __ptext12:
  4870                           	callstack 0
  4871  0040EC                     _fputc:
  4872                           	callstack 21
  4873  0040EC  5009               	movf	fputc@fp^0,w,c
  4874  0040EE  100A               	iorwf	(fputc@fp+1)^0,w,c
  4875  0040F0  B4D8               	btfsc	status,2,c
  4876  0040F2  EF7D  F020         	goto	u3221
  4877  0040F6  EF7F  F020         	goto	u3220
  4878  0040FA                     u3221:
  4879  0040FA  EF88  F020         	goto	l4327
  4880  0040FE                     u3220:
  4881  0040FE  5009               	movf	fputc@fp^0,w,c
  4882  004100  100A               	iorwf	(fputc@fp+1)^0,w,c
  4883  004102  A4D8               	btfss	status,2,c
  4884  004104  EF86  F020         	goto	u3231
  4885  004108  EF88  F020         	goto	u3230
  4886  00410C                     u3231:
  4887  00410C  EF8D  F020         	goto	l4329
  4888  004110                     u3230:
  4889  004110                     l4327:
  4890  004110  5007               	movf	fputc@c^0,w,c
  4891  004112  EC03  F026         	call	_putch
  4892  004116  EFC0  F020         	goto	l1681
  4893  00411A                     l4329:
  4894  00411A  EE20 F004          	lfsr	2,4
  4895  00411E  5009               	movf	fputc@fp^0,w,c
  4896  004120  26D9               	addwf	fsr2l,f,c
  4897  004122  500A               	movf	(fputc@fp+1)^0,w,c
  4898  004124  22DA               	addwfc	fsr2h,f,c
  4899  004126  50DE               	movf	postinc2,w,c
  4900  004128  10DE               	iorwf	postinc2,w,c
  4901  00412A  B4D8               	btfsc	status,2,c
  4902  00412C  EF9A  F020         	goto	u3241
  4903  004130  EF9C  F020         	goto	u3240
  4904  004134                     u3241:
  4905  004134  EFB7  F020         	goto	l4333
  4906  004138                     u3240:
  4907  004138  EE20 F004          	lfsr	2,4
  4908  00413C  5009               	movf	fputc@fp^0,w,c
  4909  00413E  26D9               	addwf	fsr2l,f,c
  4910  004140  500A               	movf	(fputc@fp+1)^0,w,c
  4911  004142  22DA               	addwfc	fsr2h,f,c
  4912  004144  EE10 F002          	lfsr	1,2
  4913  004148  5009               	movf	fputc@fp^0,w,c
  4914  00414A  26E1               	addwf	fsr1l,f,c
  4915  00414C  500A               	movf	(fputc@fp+1)^0,w,c
  4916  00414E  22E2               	addwfc	fsr1h,f,c
  4917  004150  50DE               	movf	postinc2,w,c
  4918  004152  5CE6               	subwf	postinc1,w,c
  4919  004154  50E6               	movf	postinc1,w,c
  4920  004156  0A80               	xorlw	128
  4921  004158  6E0F               	movwf	(??_fputc+4)^0,c
  4922  00415A  50DE               	movf	postinc2,w,c
  4923  00415C  0A80               	xorlw	128
  4924  00415E  580F               	subwfb	(??_fputc+4)^0,w,c
  4925  004160  B0D8               	btfsc	status,0,c
  4926  004162  EFB5  F020         	goto	u3251
  4927  004166  EFB7  F020         	goto	u3250
  4928  00416A                     u3251:
  4929  00416A  EFC0  F020         	goto	l1681
  4930  00416E                     u3250:
  4931  00416E                     l4333:
  4932  00416E  EE20 F002          	lfsr	2,2
  4933  004172  5009               	movf	fputc@fp^0,w,c
  4934  004174  26D9               	addwf	fsr2l,f,c
  4935  004176  500A               	movf	(fputc@fp+1)^0,w,c
  4936  004178  22DA               	addwfc	fsr2h,f,c
  4937  00417A  2ADE               	incf	postinc2,f,c
  4938  00417C  0E00               	movlw	0
  4939  00417E  22DD               	addwfc	postdec2,f,c
  4940  004180                     l1681:
  4941  004180  0012               	return		;funcret
  4942  004182                     __end_of_fputc:
  4943                           	callstack 0
  4944                           
  4945 ;; *************** function _putch *****************
  4946 ;; Defined at:
  4947 ;;		line 201 in file "mcc_generated_files/eusart.c"
  4948 ;; Parameters:    Size  Location     Type
  4949 ;;  txData          1    wreg     unsigned char 
  4950 ;; Auto vars:     Size  Location     Type
  4951 ;;  txData          1    5[COMRAM] unsigned char 
  4952 ;; Return value:  Size  Location     Type
  4953 ;;                  1    wreg      void 
  4954 ;; Registers used:
  4955 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4956 ;; Tracked objects:
  4957 ;;		On entry : 0/0
  4958 ;;		On exit  : 0/0
  4959 ;;		Unchanged: 0/0
  4960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4962 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4964 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4965 ;;Total ram usage:        1 bytes
  4966 ;; Hardware stack levels used: 1
  4967 ;; Hardware stack levels required when called: 5
  4968 ;; This function calls:
  4969 ;;		_EUSART_Write
  4970 ;; This function is called by:
  4971 ;;		_fputc
  4972 ;; This function uses a non-reentrant model
  4973 ;;
  4974                           
  4975                           	psect	text13
  4976  004C06                     __ptext13:
  4977                           	callstack 0
  4978  004C06                     _putch:
  4979                           	callstack 21
  4980                           
  4981                           ;incstack = 0
  4982                           ;putch@txData stored from wreg
  4983  004C06  6E06               	movwf	putch@txData^0,c
  4984  004C08                     
  4985                           ;mcc_generated_files/eusart.c: 201: void putch(char txData);mcc_generated_files/eusart.c
      +                          : 202: {;mcc_generated_files/eusart.c: 203:     EUSART_Write(txData);
  4986  004C08  5006               	movf	putch@txData^0,w,c
  4987  004C0A  ECE7  F022         	call	_EUSART_Write
  4988  004C0E  0012               	return		;funcret
  4989  004C10                     __end_of_putch:
  4990                           	callstack 0
  4991                           
  4992 ;; *************** function _EUSART_Write *****************
  4993 ;; Defined at:
  4994 ;;		line 173 in file "mcc_generated_files/eusart.c"
  4995 ;; Parameters:    Size  Location     Type
  4996 ;;  txData          1    wreg     unsigned char 
  4997 ;; Auto vars:     Size  Location     Type
  4998 ;;  txData          1    4[COMRAM] unsigned char 
  4999 ;; Return value:  Size  Location     Type
  5000 ;;                  1    wreg      void 
  5001 ;; Registers used:
  5002 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5003 ;; Tracked objects:
  5004 ;;		On entry : 0/0
  5005 ;;		On exit  : 0/0
  5006 ;;		Unchanged: 0/0
  5007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5009 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5011 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5012 ;;Total ram usage:        1 bytes
  5013 ;; Hardware stack levels used: 1
  5014 ;; Hardware stack levels required when called: 4
  5015 ;; This function calls:
  5016 ;;		Nothing
  5017 ;; This function is called by:
  5018 ;;		_putch
  5019 ;; This function uses a non-reentrant model
  5020 ;;
  5021                           
  5022                           	psect	text14
  5023  0045CE                     __ptext14:
  5024                           	callstack 0
  5025  0045CE                     _EUSART_Write:
  5026                           	callstack 21
  5027                           
  5028                           ;incstack = 0
  5029                           ;EUSART_Write@txData stored from wreg
  5030  0045CE  6E05               	movwf	EUSART_Write@txData^0,c
  5031  0045D0                     l4131:
  5032                           
  5033                           ;mcc_generated_files/eusart.c: 175:     while(0 == eusartTxBufferRemaining)
  5034  0045D0  0100               	movlb	0	; () banked
  5035  0045D2  51FE               	movf	_eusartTxBufferRemaining& (0+255),w,b	;volatile
  5036  0045D4  B4D8               	btfsc	status,2,c
  5037  0045D6  EFEF  F022         	goto	u3081
  5038  0045DA  EFF1  F022         	goto	u3080
  5039  0045DE                     u3081:
  5040  0045DE  EFE8  F022         	goto	l4131
  5041  0045E2                     u3080:
  5042  0045E2                     
  5043                           ; BSR set to: 0
  5044                           ;mcc_generated_files/eusart.c: 179:     if(0 == PIE1bits.TX1IE)
  5045  0045E2  B89D               	btfsc	157,4,c	;volatile
  5046  0045E4  EFF6  F022         	goto	u3091
  5047  0045E8  EFF8  F022         	goto	u3090
  5048  0045EC                     u3091:
  5049  0045EC  EFFC  F022         	goto	l595
  5050  0045F0                     u3090:
  5051  0045F0                     
  5052                           ; BSR set to: 0
  5053                           ;mcc_generated_files/eusart.c: 180:     {;mcc_generated_files/eusart.c: 181:         TXR
      +                          EG = txData;
  5054  0045F0  C005  FFAD         	movff	EUSART_Write@txData,4013	;volatile
  5055                           
  5056                           ;mcc_generated_files/eusart.c: 182:     }
  5057  0045F4  EF11  F023         	goto	l4145
  5058  0045F8                     l595:
  5059                           
  5060                           ; BSR set to: 0
  5061                           ;mcc_generated_files/eusart.c: 184:     {;mcc_generated_files/eusart.c: 185:         PIE
      +                          1bits.TX1IE = 0;
  5062  0045F8  989D               	bcf	157,4,c	;volatile
  5063  0045FA                     
  5064                           ; BSR set to: 0
  5065                           ;mcc_generated_files/eusart.c: 186:         eusartTxBuffer[eusartTxHead++] = txData;
  5066  0045FA  0ED3               	movlw	low _eusartTxBuffer
  5067  0045FC  2459               	addwf	_eusartTxHead^0,w,c	;volatile
  5068  0045FE  6ED9               	movwf	fsr2l,c
  5069  004600  6ADA               	clrf	fsr2h,c
  5070  004602  0E00               	movlw	high _eusartTxBuffer
  5071  004604  22DA               	addwfc	fsr2h,f,c
  5072  004606  C005  FFDF         	movff	EUSART_Write@txData,indf2
  5073  00460A                     
  5074                           ; BSR set to: 0
  5075  00460A  2A59               	incf	_eusartTxHead^0,f,c	;volatile
  5076  00460C                     
  5077                           ; BSR set to: 0
  5078                           ;mcc_generated_files/eusart.c: 187:         if(sizeof(eusartTxBuffer) <= eusartTxHead)
  5079  00460C  0E07               	movlw	7
  5080  00460E  6459               	cpfsgt	_eusartTxHead^0,c	;volatile
  5081  004610  EF0C  F023         	goto	u3101
  5082  004614  EF0E  F023         	goto	u3100
  5083  004618                     u3101:
  5084  004618  EF10  F023         	goto	l4143
  5085  00461C                     u3100:
  5086  00461C                     
  5087                           ; BSR set to: 0
  5088                           ;mcc_generated_files/eusart.c: 188:         {;mcc_generated_files/eusart.c: 189:        
      +                               eusartTxHead = 0;
  5089  00461C  0E00               	movlw	0
  5090  00461E  6E59               	movwf	_eusartTxHead^0,c	;volatile
  5091  004620                     l4143:
  5092                           
  5093                           ; BSR set to: 0
  5094                           ;mcc_generated_files/eusart.c: 191:         eusartTxBufferRemaining--;
  5095  004620  07FE               	decf	_eusartTxBufferRemaining& (0+255),f,b	;volatile
  5096  004622                     l4145:
  5097                           
  5098                           ; BSR set to: 0
  5099                           ;mcc_generated_files/eusart.c: 193:     PIE1bits.TX1IE = 1;
  5100  004622  889D               	bsf	157,4,c	;volatile
  5101  004624                     
  5102                           ; BSR set to: 0
  5103  004624  0012               	return		;funcret
  5104  004626                     __end_of_EUSART_Write:
  5105                           	callstack 0
  5106                           
  5107 ;; *************** function _floorf *****************
  5108 ;; Defined at:
  5109 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\floorf.c"
  5110 ;; Parameters:    Size  Location     Type
  5111 ;;  x               4   54[COMRAM] float 
  5112 ;; Auto vars:     Size  Location     Type
  5113 ;;  u               4   70[COMRAM] struct .
  5114 ;;  m               4   64[COMRAM] unsigned long 
  5115 ;;  e               2   68[COMRAM] int 
  5116 ;; Return value:  Size  Location     Type
  5117 ;;                  4   54[COMRAM] float 
  5118 ;; Registers used:
  5119 ;;		wreg, status,2, status,0
  5120 ;; Tracked objects:
  5121 ;;		On entry : 0/0
  5122 ;;		On exit  : 0/0
  5123 ;;		Unchanged: 0/0
  5124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5125 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5126 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5127 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5128 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5129 ;;Total ram usage:       20 bytes
  5130 ;; Hardware stack levels used: 1
  5131 ;; Hardware stack levels required when called: 4
  5132 ;; This function calls:
  5133 ;;		Nothing
  5134 ;; This function is called by:
  5135 ;;		_efgtoa
  5136 ;; This function uses a non-reentrant model
  5137 ;;
  5138                           
  5139                           	psect	text15
  5140  003000                     __ptext15:
  5141                           	callstack 0
  5142  003000                     _floorf:
  5143                           	callstack 22
  5144  003000  C0DB  F047         	movff	floorf@F527,floorf@u
  5145  003004  C0DC  F048         	movff	floorf@F527+1,floorf@u+1
  5146  003008  C0DD  F049         	movff	floorf@F527+2,floorf@u+2
  5147  00300C  C0DE  F04A         	movff	floorf@F527+3,floorf@u+3
  5148  003010  C037  F047         	movff	floorf@x,floorf@u
  5149  003014  C038  F048         	movff	floorf@x+1,floorf@u+1
  5150  003018  C039  F049         	movff	floorf@x+2,floorf@u+2
  5151  00301C  C03A  F04A         	movff	floorf@x+3,floorf@u+3
  5152  003020  0E81               	movlw	129
  5153  003022  6E3B               	movwf	??_floorf^0,c
  5154  003024  0EFF               	movlw	255
  5155  003026  6E3C               	movwf	(??_floorf+1)^0,c
  5156  003028  C047  F03D         	movff	floorf@u,??_floorf+2
  5157  00302C  C048  F03E         	movff	floorf@u+1,??_floorf+3
  5158  003030  C049  F03F         	movff	floorf@u+2,??_floorf+4
  5159  003034  C04A  F040         	movff	floorf@u+3,??_floorf+5
  5160  003038  0E18               	movlw	24
  5161  00303A  EF24  F018         	goto	u4590
  5162  00303E                     u4595:
  5163  00303E  90D8               	bcf	status,0,c
  5164  003040  3240               	rrcf	(??_floorf+5)^0,f,c
  5165  003042  323F               	rrcf	(??_floorf+4)^0,f,c
  5166  003044  323E               	rrcf	(??_floorf+3)^0,f,c
  5167  003046  323D               	rrcf	(??_floorf+2)^0,f,c
  5168  003048                     u4590:
  5169  003048  2EE8               	decfsz	wreg,f,c
  5170  00304A  EF1F  F018         	goto	u4595
  5171  00304E  503D               	movf	(??_floorf+2)^0,w,c
  5172  003050  243B               	addwf	??_floorf^0,w,c
  5173  003052  6E45               	movwf	floorf@e^0,c
  5174  003054  0E00               	movlw	0
  5175  003056  203C               	addwfc	(??_floorf+1)^0,w,c
  5176  003058  6E46               	movwf	(floorf@e+1)^0,c
  5177  00305A  BE46               	btfsc	(floorf@e+1)^0,7,c
  5178  00305C  EF39  F018         	goto	u4601
  5179  003060  5046               	movf	(floorf@e+1)^0,w,c
  5180  003062  E109               	bnz	u4600
  5181  003064  0E17               	movlw	23
  5182  003066  5C45               	subwf	floorf@e^0,w,c
  5183  003068  A0D8               	btfss	status,0,c
  5184  00306A  EF39  F018         	goto	u4601
  5185  00306E  EF3B  F018         	goto	u4600
  5186  003072                     u4601:
  5187  003072  EF45  F018         	goto	l5119
  5188  003076                     u4600:
  5189  003076                     l5117:
  5190  003076  C037  F037         	movff	floorf@x,?_floorf
  5191  00307A  C038  F038         	movff	floorf@x+1,?_floorf+1
  5192  00307E  C039  F039         	movff	floorf@x+2,?_floorf+2
  5193  003082  C03A  F03A         	movff	floorf@x+3,?_floorf+3
  5194  003086  EF08  F019         	goto	l1642
  5195  00308A                     l5119:
  5196  00308A  BE46               	btfsc	(floorf@e+1)^0,7,c
  5197  00308C  EF4A  F018         	goto	u4611
  5198  003090  EF4C  F018         	goto	u4610
  5199  003094                     u4611:
  5200  003094  EFBC  F018         	goto	l5129
  5201  003098                     u4610:
  5202  003098  C045  F03B         	movff	floorf@e,??_floorf
  5203  00309C  0EFF               	movlw	255
  5204  00309E  6E3C               	movwf	(??_floorf+1)^0,c
  5205  0030A0  0EFF               	movlw	255
  5206  0030A2  6E3D               	movwf	(??_floorf+2)^0,c
  5207  0030A4  0E7F               	movlw	127
  5208  0030A6  6E3E               	movwf	(??_floorf+3)^0,c
  5209  0030A8  0E00               	movlw	0
  5210  0030AA  6E3F               	movwf	(??_floorf+4)^0,c
  5211  0030AC                     u4625:
  5212  0030AC  663B               	tstfsz	??_floorf^0,c
  5213  0030AE  EF5B  F018         	goto	u4626
  5214  0030B2  EF63  F018         	goto	u4627
  5215  0030B6                     u4626:
  5216  0030B6  343F               	rlcf	(??_floorf+4)^0,w,c
  5217  0030B8  323F               	rrcf	(??_floorf+4)^0,f,c
  5218  0030BA  323E               	rrcf	(??_floorf+3)^0,f,c
  5219  0030BC  323D               	rrcf	(??_floorf+2)^0,f,c
  5220  0030BE  323C               	rrcf	(??_floorf+1)^0,f,c
  5221  0030C0  2E3B               	decfsz	??_floorf^0,f,c
  5222  0030C2  EF56  F018         	goto	u4625
  5223  0030C6                     u4627:
  5224  0030C6  C03C  F041         	movff	??_floorf+1,floorf@m
  5225  0030CA  C03D  F042         	movff	??_floorf+2,floorf@m+1
  5226  0030CE  C03E  F043         	movff	??_floorf+3,floorf@m+2
  5227  0030D2  C03F  F044         	movff	??_floorf+4,floorf@m+3
  5228  0030D6  5041               	movf	floorf@m^0,w,c
  5229  0030D8  1447               	andwf	floorf@u^0,w,c
  5230  0030DA  6E3B               	movwf	??_floorf^0,c
  5231  0030DC  5042               	movf	(floorf@m+1)^0,w,c
  5232  0030DE  1448               	andwf	(floorf@u+1)^0,w,c
  5233  0030E0  6E3C               	movwf	(??_floorf+1)^0,c
  5234  0030E2  5043               	movf	(floorf@m+2)^0,w,c
  5235  0030E4  1449               	andwf	(floorf@u+2)^0,w,c
  5236  0030E6  6E3D               	movwf	(??_floorf+2)^0,c
  5237  0030E8  5044               	movf	(floorf@m+3)^0,w,c
  5238  0030EA  144A               	andwf	(floorf@u+3)^0,w,c
  5239  0030EC  6E3E               	movwf	(??_floorf+3)^0,c
  5240  0030EE  503B               	movf	??_floorf^0,w,c
  5241  0030F0  103C               	iorwf	(??_floorf+1)^0,w,c
  5242  0030F2  103D               	iorwf	(??_floorf+2)^0,w,c
  5243  0030F4  103E               	iorwf	(??_floorf+3)^0,w,c
  5244  0030F6  A4D8               	btfss	status,2,c
  5245  0030F8  EF80  F018         	goto	u4631
  5246  0030FC  EF82  F018         	goto	u4630
  5247  003100                     u4631:
  5248  003100  EF84  F018         	goto	l5125
  5249  003104                     u4630:
  5250  003104  EF3B  F018         	goto	l5117
  5251  003108                     l5125:
  5252  003108  C047  F03B         	movff	floorf@u,??_floorf
  5253  00310C  C048  F03C         	movff	floorf@u+1,??_floorf+1
  5254  003110  C049  F03D         	movff	floorf@u+2,??_floorf+2
  5255  003114  C04A  F03E         	movff	floorf@u+3,??_floorf+3
  5256  003118  0E20               	movlw	32
  5257  00311A  EF94  F018         	goto	u4640
  5258  00311E                     u4645:
  5259  00311E  90D8               	bcf	status,0,c
  5260  003120  323E               	rrcf	(??_floorf+3)^0,f,c
  5261  003122  323D               	rrcf	(??_floorf+2)^0,f,c
  5262  003124  323C               	rrcf	(??_floorf+1)^0,f,c
  5263  003126  323B               	rrcf	??_floorf^0,f,c
  5264  003128                     u4640:
  5265  003128  2EE8               	decfsz	wreg,f,c
  5266  00312A  EF8F  F018         	goto	u4645
  5267  00312E  503B               	movf	??_floorf^0,w,c
  5268  003130  103C               	iorwf	(??_floorf+1)^0,w,c
  5269  003132  103D               	iorwf	(??_floorf+2)^0,w,c
  5270  003134  103E               	iorwf	(??_floorf+3)^0,w,c
  5271  003136  B4D8               	btfsc	status,2,c
  5272  003138  EFA0  F018         	goto	u4651
  5273  00313C  EFA2  F018         	goto	u4650
  5274  003140                     u4651:
  5275  003140  EFAA  F018         	goto	l1645
  5276  003144                     u4650:
  5277  003144  5041               	movf	floorf@m^0,w,c
  5278  003146  2647               	addwf	floorf@u^0,f,c
  5279  003148  5042               	movf	(floorf@m+1)^0,w,c
  5280  00314A  2248               	addwfc	(floorf@u+1)^0,f,c
  5281  00314C  5043               	movf	(floorf@m+2)^0,w,c
  5282  00314E  2249               	addwfc	(floorf@u+2)^0,f,c
  5283  003150  5044               	movf	(floorf@m+3)^0,w,c
  5284  003152  224A               	addwfc	(floorf@u+3)^0,f,c
  5285  003154                     l1645:
  5286  003154  1C41               	comf	floorf@m^0,w,c
  5287  003156  6E3B               	movwf	??_floorf^0,c
  5288  003158  1C42               	comf	(floorf@m+1)^0,w,c
  5289  00315A  6E3C               	movwf	(??_floorf+1)^0,c
  5290  00315C  1C43               	comf	(floorf@m+2)^0,w,c
  5291  00315E  6E3D               	movwf	(??_floorf+2)^0,c
  5292  003160  1C44               	comf	(floorf@m+3)^0,w,c
  5293  003162  6E3E               	movwf	(??_floorf+3)^0,c
  5294  003164  503B               	movf	??_floorf^0,w,c
  5295  003166  1647               	andwf	floorf@u^0,f,c
  5296  003168  503C               	movf	(??_floorf+1)^0,w,c
  5297  00316A  1648               	andwf	(floorf@u+1)^0,f,c
  5298  00316C  503D               	movf	(??_floorf+2)^0,w,c
  5299  00316E  1649               	andwf	(floorf@u+2)^0,f,c
  5300  003170  503E               	movf	(??_floorf+3)^0,w,c
  5301  003172  164A               	andwf	(floorf@u+3)^0,f,c
  5302  003174  EF00  F019         	goto	l5137
  5303  003178                     l5129:
  5304  003178  C047  F03B         	movff	floorf@u,??_floorf
  5305  00317C  C048  F03C         	movff	floorf@u+1,??_floorf+1
  5306  003180  C049  F03D         	movff	floorf@u+2,??_floorf+2
  5307  003184  C04A  F03E         	movff	floorf@u+3,??_floorf+3
  5308  003188  0E20               	movlw	32
  5309  00318A  EFCC  F018         	goto	u4660
  5310  00318E                     u4665:
  5311  00318E  90D8               	bcf	status,0,c
  5312  003190  323E               	rrcf	(??_floorf+3)^0,f,c
  5313  003192  323D               	rrcf	(??_floorf+2)^0,f,c
  5314  003194  323C               	rrcf	(??_floorf+1)^0,f,c
  5315  003196  323B               	rrcf	??_floorf^0,f,c
  5316  003198                     u4660:
  5317  003198  2EE8               	decfsz	wreg,f,c
  5318  00319A  EFC7  F018         	goto	u4665
  5319  00319E  503B               	movf	??_floorf^0,w,c
  5320  0031A0  103C               	iorwf	(??_floorf+1)^0,w,c
  5321  0031A2  103D               	iorwf	(??_floorf+2)^0,w,c
  5322  0031A4  103E               	iorwf	(??_floorf+3)^0,w,c
  5323  0031A6  A4D8               	btfss	status,2,c
  5324  0031A8  EFD8  F018         	goto	u4671
  5325  0031AC  EFDA  F018         	goto	u4670
  5326  0031B0                     u4671:
  5327  0031B0  EFE4  F018         	goto	l5133
  5328  0031B4                     u4670:
  5329  0031B4  0E00               	movlw	0
  5330  0031B6  6E47               	movwf	floorf@u^0,c
  5331  0031B8  0E00               	movlw	0
  5332  0031BA  6E48               	movwf	(floorf@u+1)^0,c
  5333  0031BC  0E00               	movlw	0
  5334  0031BE  6E49               	movwf	(floorf@u+2)^0,c
  5335  0031C0  0E00               	movlw	0
  5336  0031C2  6E4A               	movwf	(floorf@u+3)^0,c
  5337  0031C4  EF00  F019         	goto	l5137
  5338  0031C8                     l5133:
  5339  0031C8  90D8               	bcf	status,0,c
  5340  0031CA  3447               	rlcf	floorf@u^0,w,c
  5341  0031CC  6E3B               	movwf	??_floorf^0,c
  5342  0031CE  3448               	rlcf	(floorf@u+1)^0,w,c
  5343  0031D0  6E3C               	movwf	(??_floorf+1)^0,c
  5344  0031D2  3449               	rlcf	(floorf@u+2)^0,w,c
  5345  0031D4  6E3D               	movwf	(??_floorf+2)^0,c
  5346  0031D6  344A               	rlcf	(floorf@u+3)^0,w,c
  5347  0031D8  6E3E               	movwf	(??_floorf+3)^0,c
  5348  0031DA  503B               	movf	??_floorf^0,w,c
  5349  0031DC  103C               	iorwf	(??_floorf+1)^0,w,c
  5350  0031DE  103D               	iorwf	(??_floorf+2)^0,w,c
  5351  0031E0  103E               	iorwf	(??_floorf+3)^0,w,c
  5352  0031E2  B4D8               	btfsc	status,2,c
  5353  0031E4  EFF6  F018         	goto	u4681
  5354  0031E8  EFF8  F018         	goto	u4680
  5355  0031EC                     u4681:
  5356  0031EC  EF00  F019         	goto	l5137
  5357  0031F0                     u4680:
  5358  0031F0  0E00               	movlw	0
  5359  0031F2  6E47               	movwf	floorf@u^0,c
  5360  0031F4  0E00               	movlw	0
  5361  0031F6  6E48               	movwf	(floorf@u+1)^0,c
  5362  0031F8  0E80               	movlw	128
  5363  0031FA  6E49               	movwf	(floorf@u+2)^0,c
  5364  0031FC  0EBF               	movlw	191
  5365  0031FE  6E4A               	movwf	(floorf@u+3)^0,c
  5366  003200                     l5137:
  5367  003200  C047  F037         	movff	floorf@u,?_floorf
  5368  003204  C048  F038         	movff	floorf@u+1,?_floorf+1
  5369  003208  C049  F039         	movff	floorf@u+2,?_floorf+2
  5370  00320C  C04A  F03A         	movff	floorf@u+3,?_floorf+3
  5371  003210                     l1642:
  5372  003210  0012               	return		;funcret
  5373  003212                     __end_of_floorf:
  5374                           	callstack 0
  5375                           
  5376 ;; *************** function ___fpclassifyf *****************
  5377 ;; Defined at:
  5378 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__fpclassifyf.c"
  5379 ;; Parameters:    Size  Location     Type
  5380 ;;  x               4    4[COMRAM] float 
  5381 ;; Auto vars:     Size  Location     Type
  5382 ;;  u               4   14[COMRAM] struct .
  5383 ;;  e               2   12[COMRAM] int 
  5384 ;; Return value:  Size  Location     Type
  5385 ;;                  2    4[COMRAM] int 
  5386 ;; Registers used:
  5387 ;;		wreg, status,2, status,0
  5388 ;; Tracked objects:
  5389 ;;		On entry : 0/0
  5390 ;;		On exit  : 0/0
  5391 ;;		Unchanged: 0/0
  5392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5393 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5394 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5395 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5396 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5397 ;;Total ram usage:       14 bytes
  5398 ;; Hardware stack levels used: 1
  5399 ;; Hardware stack levels required when called: 4
  5400 ;; This function calls:
  5401 ;;		Nothing
  5402 ;; This function is called by:
  5403 ;;		_efgtoa
  5404 ;; This function uses a non-reentrant model
  5405 ;;
  5406                           
  5407                           	psect	text16
  5408  003892                     __ptext16:
  5409                           	callstack 0
  5410  003892                     ___fpclassifyf:
  5411                           	callstack 22
  5412  003892  C0DF  F00F         	movff	___fpclassifyf@F465,___fpclassifyf@u
  5413  003896  C0E0  F010         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  5414  00389A  C0E1  F011         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  5415  00389E  C0E2  F012         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  5416  0038A2  C005  F00F         	movff	___fpclassifyf@x,___fpclassifyf@u
  5417  0038A6  C006  F010         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5418  0038AA  C007  F011         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5419  0038AE  C008  F012         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5420  0038B2  C00F  F009         	movff	___fpclassifyf@u,??___fpclassifyf
  5421  0038B6  C010  F00A         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5422  0038BA  C011  F00B         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5423  0038BE  C012  F00C         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5424  0038C2  0E18               	movlw	24
  5425  0038C4  EF69  F01C         	goto	u4470
  5426  0038C8                     u4475:
  5427  0038C8  90D8               	bcf	status,0,c
  5428  0038CA  320C               	rrcf	(??___fpclassifyf+3)^0,f,c
  5429  0038CC  320B               	rrcf	(??___fpclassifyf+2)^0,f,c
  5430  0038CE  320A               	rrcf	(??___fpclassifyf+1)^0,f,c
  5431  0038D0  3209               	rrcf	??___fpclassifyf^0,f,c
  5432  0038D2                     u4470:
  5433  0038D2  2EE8               	decfsz	wreg,f,c
  5434  0038D4  EF64  F01C         	goto	u4475
  5435  0038D8  5009               	movf	??___fpclassifyf^0,w,c
  5436  0038DA  6E0D               	movwf	___fpclassifyf@e^0,c
  5437  0038DC  6A0E               	clrf	(___fpclassifyf@e+1)^0,c
  5438  0038DE  500D               	movf	___fpclassifyf@e^0,w,c
  5439  0038E0  100E               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5440  0038E2  A4D8               	btfss	status,2,c
  5441  0038E4  EF76  F01C         	goto	u4481
  5442  0038E8  EF78  F01C         	goto	u4480
  5443  0038EC                     u4481:
  5444  0038EC  EF98  F01C         	goto	l5089
  5445  0038F0                     u4480:
  5446  0038F0  90D8               	bcf	status,0,c
  5447  0038F2  340F               	rlcf	___fpclassifyf@u^0,w,c
  5448  0038F4  6E09               	movwf	??___fpclassifyf^0,c
  5449  0038F6  3410               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5450  0038F8  6E0A               	movwf	(??___fpclassifyf+1)^0,c
  5451  0038FA  3411               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5452  0038FC  6E0B               	movwf	(??___fpclassifyf+2)^0,c
  5453  0038FE  3412               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5454  003900  6E0C               	movwf	(??___fpclassifyf+3)^0,c
  5455  003902  5009               	movf	??___fpclassifyf^0,w,c
  5456  003904  100A               	iorwf	(??___fpclassifyf+1)^0,w,c
  5457  003906  100B               	iorwf	(??___fpclassifyf+2)^0,w,c
  5458  003908  100C               	iorwf	(??___fpclassifyf+3)^0,w,c
  5459  00390A  A4D8               	btfss	status,2,c
  5460  00390C  EF8A  F01C         	goto	u4491
  5461  003910  EF8C  F01C         	goto	u4490
  5462  003914                     u4491:
  5463  003914  EF92  F01C         	goto	l5085
  5464  003918                     u4490:
  5465  003918  0E00               	movlw	0
  5466  00391A  6E06               	movwf	(?___fpclassifyf+1)^0,c
  5467  00391C  0E02               	movlw	2
  5468  00391E  6E05               	movwf	?___fpclassifyf^0,c
  5469  003920  EFC7  F01C         	goto	l1604
  5470  003924                     l5085:
  5471  003924  0E00               	movlw	0
  5472  003926  6E06               	movwf	(?___fpclassifyf+1)^0,c
  5473  003928  0E03               	movlw	3
  5474  00392A  6E05               	movwf	?___fpclassifyf^0,c
  5475  00392C  EFC7  F01C         	goto	l1604
  5476  003930                     l5089:
  5477  003930  280D               	incf	___fpclassifyf@e^0,w,c
  5478  003932  100E               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5479  003934  A4D8               	btfss	status,2,c
  5480  003936  EF9F  F01C         	goto	u4501
  5481  00393A  EFA1  F01C         	goto	u4500
  5482  00393E                     u4501:
  5483  00393E  EFC3  F01C         	goto	l5095
  5484  003942                     u4500:
  5485  003942  C00F  F009         	movff	___fpclassifyf@u,??___fpclassifyf
  5486  003946  C010  F00A         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5487  00394A  C011  F00B         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5488  00394E  C012  F00C         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5489  003952  0E09               	movlw	9
  5490  003954                     u4515:
  5491  003954  90D8               	bcf	status,0,c
  5492  003956  3609               	rlcf	??___fpclassifyf^0,f,c
  5493  003958  360A               	rlcf	(??___fpclassifyf+1)^0,f,c
  5494  00395A  360B               	rlcf	(??___fpclassifyf+2)^0,f,c
  5495  00395C  360C               	rlcf	(??___fpclassifyf+3)^0,f,c
  5496  00395E  2EE8               	decfsz	wreg,f,c
  5497  003960  EFAA  F01C         	goto	u4515
  5498  003964  5009               	movf	??___fpclassifyf^0,w,c
  5499  003966  100A               	iorwf	(??___fpclassifyf+1)^0,w,c
  5500  003968  100B               	iorwf	(??___fpclassifyf+2)^0,w,c
  5501  00396A  100C               	iorwf	(??___fpclassifyf+3)^0,w,c
  5502  00396C  B4D8               	btfsc	status,2,c
  5503  00396E  EFBB  F01C         	goto	u4521
  5504  003972  EFBE  F01C         	goto	u4520
  5505  003976                     u4521:
  5506  003976  0E01               	movlw	1
  5507  003978  EFBF  F01C         	goto	u4530
  5508  00397C                     u4520:
  5509  00397C  0E00               	movlw	0
  5510  00397E                     u4530:
  5511  00397E  6E05               	movwf	?___fpclassifyf^0,c
  5512  003980  6A06               	clrf	(?___fpclassifyf+1)^0,c
  5513  003982  EFC7  F01C         	goto	l1604
  5514  003986                     l5095:
  5515  003986  0E00               	movlw	0
  5516  003988  6E06               	movwf	(?___fpclassifyf+1)^0,c
  5517  00398A  0E04               	movlw	4
  5518  00398C  6E05               	movwf	?___fpclassifyf^0,c
  5519  00398E                     l1604:
  5520  00398E  0012               	return		;funcret
  5521  003990                     __end_of___fpclassifyf:
  5522                           	callstack 0
  5523                           
  5524 ;; *************** function ___fltol *****************
  5525 ;; Defined at:
  5526 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  5527 ;; Parameters:    Size  Location     Type
  5528 ;;  f1              4    4[COMRAM] int 
  5529 ;; Auto vars:     Size  Location     Type
  5530 ;;  exp1            1   13[COMRAM] unsigned char 
  5531 ;;  sign1           1   12[COMRAM] unsigned char 
  5532 ;; Return value:  Size  Location     Type
  5533 ;;                  4    4[COMRAM] long 
  5534 ;; Registers used:
  5535 ;;		wreg, status,2, status,0
  5536 ;; Tracked objects:
  5537 ;;		On entry : 0/0
  5538 ;;		On exit  : 0/0
  5539 ;;		Unchanged: 0/0
  5540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5541 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5542 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5543 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5544 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5545 ;;Total ram usage:       10 bytes
  5546 ;; Hardware stack levels used: 1
  5547 ;; Hardware stack levels required when called: 4
  5548 ;; This function calls:
  5549 ;;		Nothing
  5550 ;; This function is called by:
  5551 ;;		_efgtoa
  5552 ;; This function uses a non-reentrant model
  5553 ;;
  5554                           
  5555                           	psect	text17
  5556  003688                     __ptext17:
  5557                           	callstack 0
  5558  003688                     ___fltol:
  5559                           	callstack 22
  5560  003688  3407               	rlcf	(___fltol@f1+2)^0,w,c
  5561  00368A  3408               	rlcf	(___fltol@f1+3)^0,w,c
  5562  00368C  6E0E               	movwf	___fltol@exp1^0,c
  5563  00368E  500E               	movf	___fltol@exp1^0,w,c
  5564  003690  A4D8               	btfss	status,2,c
  5565  003692  EF4D  F01B         	goto	u4361
  5566  003696  EF4F  F01B         	goto	u4360
  5567  00369A                     u4361:
  5568  00369A  EF59  F01B         	goto	l5017
  5569  00369E                     u4360:
  5570  00369E                     l5013:
  5571  00369E  0E00               	movlw	0
  5572  0036A0  6E05               	movwf	?___fltol^0,c
  5573  0036A2  0E00               	movlw	0
  5574  0036A4  6E06               	movwf	(?___fltol+1)^0,c
  5575  0036A6  0E00               	movlw	0
  5576  0036A8  6E07               	movwf	(?___fltol+2)^0,c
  5577  0036AA  0E00               	movlw	0
  5578  0036AC  6E08               	movwf	(?___fltol+3)^0,c
  5579  0036AE  EFC6  F01B         	goto	l1021
  5580  0036B2                     l5017:
  5581  0036B2  C005  F009         	movff	___fltol@f1,??___fltol
  5582  0036B6  C006  F00A         	movff	___fltol@f1+1,??___fltol+1
  5583  0036BA  C007  F00B         	movff	___fltol@f1+2,??___fltol+2
  5584  0036BE  C008  F00C         	movff	___fltol@f1+3,??___fltol+3
  5585  0036C2  0E20               	movlw	32
  5586  0036C4  EF69  F01B         	goto	u4370
  5587  0036C8                     u4375:
  5588  0036C8  90D8               	bcf	status,0,c
  5589  0036CA  320C               	rrcf	(??___fltol+3)^0,f,c
  5590  0036CC  320B               	rrcf	(??___fltol+2)^0,f,c
  5591  0036CE  320A               	rrcf	(??___fltol+1)^0,f,c
  5592  0036D0  3209               	rrcf	??___fltol^0,f,c
  5593  0036D2                     u4370:
  5594  0036D2  2EE8               	decfsz	wreg,f,c
  5595  0036D4  EF64  F01B         	goto	u4375
  5596  0036D8  5009               	movf	??___fltol^0,w,c
  5597  0036DA  6E0D               	movwf	___fltol@sign1^0,c
  5598  0036DC  8E07               	bsf	(___fltol@f1+2)^0,7,c
  5599  0036DE  0EFF               	movlw	255
  5600  0036E0  1605               	andwf	___fltol@f1^0,f,c
  5601  0036E2  0EFF               	movlw	255
  5602  0036E4  1606               	andwf	(___fltol@f1+1)^0,f,c
  5603  0036E6  0EFF               	movlw	255
  5604  0036E8  1607               	andwf	(___fltol@f1+2)^0,f,c
  5605  0036EA  0E00               	movlw	0
  5606  0036EC  1608               	andwf	(___fltol@f1+3)^0,f,c
  5607  0036EE  0E96               	movlw	150
  5608  0036F0  5E0E               	subwf	___fltol@exp1^0,f,c
  5609  0036F2  BE0E               	btfsc	___fltol@exp1^0,7,c
  5610  0036F4  EF80  F01B         	goto	u4380
  5611  0036F8  EF7E  F01B         	goto	u4381
  5612  0036FC                     u4381:
  5613  0036FC  EF96  F01B         	goto	l5037
  5614  003700                     u4380:
  5615  003700  500E               	movf	___fltol@exp1^0,w,c
  5616  003702  0A80               	xorlw	128
  5617  003704  0F97               	addlw	151
  5618  003706  B0D8               	btfsc	status,0,c
  5619  003708  EF88  F01B         	goto	u4391
  5620  00370C  EF8A  F01B         	goto	u4390
  5621  003710                     u4391:
  5622  003710  EF8C  F01B         	goto	l5033
  5623  003714                     u4390:
  5624  003714  EF4F  F01B         	goto	l5013
  5625  003718                     l5033:
  5626  003718  90D8               	bcf	status,0,c
  5627  00371A  3208               	rrcf	(___fltol@f1+3)^0,f,c
  5628  00371C  3207               	rrcf	(___fltol@f1+2)^0,f,c
  5629  00371E  3206               	rrcf	(___fltol@f1+1)^0,f,c
  5630  003720  3205               	rrcf	___fltol@f1^0,f,c
  5631  003722  3E0E               	incfsz	___fltol@exp1^0,f,c
  5632  003724  EF8C  F01B         	goto	l5033
  5633  003728  EFAE  F01B         	goto	l5047
  5634  00372C                     l5037:
  5635  00372C  0E1F               	movlw	31
  5636  00372E  640E               	cpfsgt	___fltol@exp1^0,c
  5637  003730  EF9C  F01B         	goto	u4401
  5638  003734  EF9E  F01B         	goto	u4400
  5639  003738                     u4401:
  5640  003738  EFA6  F01B         	goto	l5045
  5641  00373C                     u4400:
  5642  00373C  EF4F  F01B         	goto	l5013
  5643  003740                     l5043:
  5644  003740  90D8               	bcf	status,0,c
  5645  003742  3605               	rlcf	___fltol@f1^0,f,c
  5646  003744  3606               	rlcf	(___fltol@f1+1)^0,f,c
  5647  003746  3607               	rlcf	(___fltol@f1+2)^0,f,c
  5648  003748  3608               	rlcf	(___fltol@f1+3)^0,f,c
  5649  00374A  060E               	decf	___fltol@exp1^0,f,c
  5650  00374C                     l5045:
  5651  00374C  500E               	movf	___fltol@exp1^0,w,c
  5652  00374E  A4D8               	btfss	status,2,c
  5653  003750  EFAC  F01B         	goto	u4411
  5654  003754  EFAE  F01B         	goto	u4410
  5655  003758                     u4411:
  5656  003758  EFA0  F01B         	goto	l5043
  5657  00375C                     u4410:
  5658  00375C                     l5047:
  5659  00375C  500D               	movf	___fltol@sign1^0,w,c
  5660  00375E  B4D8               	btfsc	status,2,c
  5661  003760  EFB4  F01B         	goto	u4421
  5662  003764  EFB6  F01B         	goto	u4420
  5663  003768                     u4421:
  5664  003768  EFBE  F01B         	goto	l5051
  5665  00376C                     u4420:
  5666  00376C  1E08               	comf	(___fltol@f1+3)^0,f,c
  5667  00376E  1E07               	comf	(___fltol@f1+2)^0,f,c
  5668  003770  1E06               	comf	(___fltol@f1+1)^0,f,c
  5669  003772  6C05               	negf	___fltol@f1^0,c
  5670  003774  0E00               	movlw	0
  5671  003776  2206               	addwfc	(___fltol@f1+1)^0,f,c
  5672  003778  2207               	addwfc	(___fltol@f1+2)^0,f,c
  5673  00377A  2208               	addwfc	(___fltol@f1+3)^0,f,c
  5674  00377C                     l5051:
  5675  00377C  C005  F005         	movff	___fltol@f1,?___fltol
  5676  003780  C006  F006         	movff	___fltol@f1+1,?___fltol+1
  5677  003784  C007  F007         	movff	___fltol@f1+2,?___fltol+2
  5678  003788  C008  F008         	movff	___fltol@f1+3,?___fltol+3
  5679  00378C                     l1021:
  5680  00378C  0012               	return		;funcret
  5681  00378E                     __end_of___fltol:
  5682                           	callstack 0
  5683                           
  5684 ;; *************** function ___flsub *****************
  5685 ;; Defined at:
  5686 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  5687 ;; Parameters:    Size  Location     Type
  5688 ;;  b               4   70[COMRAM] long 
  5689 ;;  a               4   74[COMRAM] long 
  5690 ;; Auto vars:     Size  Location     Type
  5691 ;;		None
  5692 ;; Return value:  Size  Location     Type
  5693 ;;                  4   70[COMRAM] long 
  5694 ;; Registers used:
  5695 ;;		wreg, status,2, status,0, cstack
  5696 ;; Tracked objects:
  5697 ;;		On entry : 0/0
  5698 ;;		On exit  : 0/0
  5699 ;;		Unchanged: 0/0
  5700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5701 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5704 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5705 ;;Total ram usage:        8 bytes
  5706 ;; Hardware stack levels used: 1
  5707 ;; Hardware stack levels required when called: 5
  5708 ;; This function calls:
  5709 ;;		___fladd
  5710 ;; This function is called by:
  5711 ;;		_efgtoa
  5712 ;; This function uses a non-reentrant model
  5713 ;;
  5714                           
  5715                           	psect	text18
  5716  004678                     __ptext18:
  5717                           	callstack 0
  5718  004678                     ___flsub:
  5719                           	callstack 21
  5720  004678  0E00               	movlw	0
  5721  00467A  1A4B               	xorwf	___flsub@a^0,f,c
  5722  00467C  0E00               	movlw	0
  5723  00467E  1A4C               	xorwf	(___flsub@a+1)^0,f,c
  5724  004680  0E00               	movlw	0
  5725  004682  1A4D               	xorwf	(___flsub@a+2)^0,f,c
  5726  004684  0E80               	movlw	128
  5727  004686  1A4E               	xorwf	(___flsub@a+3)^0,f,c
  5728  004688  C047  F037         	movff	___flsub@b,___fladd@b
  5729  00468C  C048  F038         	movff	___flsub@b+1,___fladd@b+1
  5730  004690  C049  F039         	movff	___flsub@b+2,___fladd@b+2
  5731  004694  C04A  F03A         	movff	___flsub@b+3,___fladd@b+3
  5732  004698  C04B  F03B         	movff	___flsub@a,___fladd@a
  5733  00469C  C04C  F03C         	movff	___flsub@a+1,___fladd@a+1
  5734  0046A0  C04D  F03D         	movff	___flsub@a+2,___fladd@a+2
  5735  0046A4  C04E  F03E         	movff	___flsub@a+3,___fladd@a+3
  5736  0046A8  ECBE  F011         	call	___fladd	;wreg free
  5737  0046AC  C037  F047         	movff	?___fladd,?___flsub
  5738  0046B0  C038  F048         	movff	?___fladd+1,?___flsub+1
  5739  0046B4  C039  F049         	movff	?___fladd+2,?___flsub+2
  5740  0046B8  C03A  F04A         	movff	?___fladd+3,?___flsub+3
  5741  0046BC  0012               	return		;funcret
  5742  0046BE                     __end_of___flsub:
  5743                           	callstack 0
  5744                           
  5745 ;; *************** function ___flneg *****************
  5746 ;; Defined at:
  5747 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flneg.c"
  5748 ;; Parameters:    Size  Location     Type
  5749 ;;  f1              4    4[COMRAM] long 
  5750 ;; Auto vars:     Size  Location     Type
  5751 ;;		None
  5752 ;; Return value:  Size  Location     Type
  5753 ;;                  4    4[COMRAM] long 
  5754 ;; Registers used:
  5755 ;;		wreg, status,2, status,0
  5756 ;; Tracked objects:
  5757 ;;		On entry : 0/0
  5758 ;;		On exit  : 0/0
  5759 ;;		Unchanged: 0/0
  5760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5761 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5764 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5765 ;;Total ram usage:        4 bytes
  5766 ;; Hardware stack levels used: 1
  5767 ;; Hardware stack levels required when called: 4
  5768 ;; This function calls:
  5769 ;;		Nothing
  5770 ;; This function is called by:
  5771 ;;		_efgtoa
  5772 ;; This function uses a non-reentrant model
  5773 ;;
  5774                           
  5775                           	psect	text19
  5776  00488A                     __ptext19:
  5777                           	callstack 0
  5778  00488A                     ___flneg:
  5779                           	callstack 22
  5780  00488A  5005               	movf	___flneg@f1^0,w,c
  5781  00488C  1006               	iorwf	(___flneg@f1+1)^0,w,c
  5782  00488E  1007               	iorwf	(___flneg@f1+2)^0,w,c
  5783  004890  1008               	iorwf	(___flneg@f1+3)^0,w,c
  5784  004892  B4D8               	btfsc	status,2,c
  5785  004894  EF4E  F024         	goto	u4351
  5786  004898  EF50  F024         	goto	u4350
  5787  00489C                     u4351:
  5788  00489C  EF58  F024         	goto	l5007
  5789  0048A0                     u4350:
  5790  0048A0  0E00               	movlw	0
  5791  0048A2  1A05               	xorwf	___flneg@f1^0,f,c
  5792  0048A4  0E00               	movlw	0
  5793  0048A6  1A06               	xorwf	(___flneg@f1+1)^0,f,c
  5794  0048A8  0E00               	movlw	0
  5795  0048AA  1A07               	xorwf	(___flneg@f1+2)^0,f,c
  5796  0048AC  0E80               	movlw	128
  5797  0048AE  1A08               	xorwf	(___flneg@f1+3)^0,f,c
  5798  0048B0                     l5007:
  5799  0048B0  C005  F005         	movff	___flneg@f1,?___flneg
  5800  0048B4  C006  F006         	movff	___flneg@f1+1,?___flneg+1
  5801  0048B8  C007  F007         	movff	___flneg@f1+2,?___flneg+2
  5802  0048BC  C008  F008         	movff	___flneg@f1+3,?___flneg+3
  5803  0048C0  0012               	return		;funcret
  5804  0048C2                     __end_of___flneg:
  5805                           	callstack 0
  5806                           
  5807 ;; *************** function ___fleq *****************
  5808 ;; Defined at:
  5809 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fleq.c"
  5810 ;; Parameters:    Size  Location     Type
  5811 ;;  ff1             4    4[COMRAM] long 
  5812 ;;  ff2             4    8[COMRAM] long 
  5813 ;; Auto vars:     Size  Location     Type
  5814 ;;		None
  5815 ;; Return value:  Size  Location     Type
  5816 ;;		None               void
  5817 ;; Registers used:
  5818 ;;		wreg, status,2, status,0
  5819 ;; Tracked objects:
  5820 ;;		On entry : 0/0
  5821 ;;		On exit  : 0/0
  5822 ;;		Unchanged: 0/0
  5823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5824 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5826 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5827 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5828 ;;Total ram usage:       12 bytes
  5829 ;; Hardware stack levels used: 1
  5830 ;; Hardware stack levels required when called: 4
  5831 ;; This function calls:
  5832 ;;		Nothing
  5833 ;; This function is called by:
  5834 ;;		_efgtoa
  5835 ;; This function uses a non-reentrant model
  5836 ;;
  5837                           
  5838                           	psect	text20
  5839  003F9C                     __ptext20:
  5840                           	callstack 0
  5841  003F9C                     ___fleq:
  5842                           	callstack 22
  5843  003F9C  0E00               	movlw	0
  5844  003F9E  1405               	andwf	___fleq@ff1^0,w,c
  5845  003FA0  6E0D               	movwf	??___fleq^0,c
  5846  003FA2  0E00               	movlw	0
  5847  003FA4  1406               	andwf	(___fleq@ff1+1)^0,w,c
  5848  003FA6  6E0E               	movwf	(??___fleq+1)^0,c
  5849  003FA8  0E80               	movlw	128
  5850  003FAA  1407               	andwf	(___fleq@ff1+2)^0,w,c
  5851  003FAC  6E0F               	movwf	(??___fleq+2)^0,c
  5852  003FAE  0E7F               	movlw	127
  5853  003FB0  1408               	andwf	(___fleq@ff1+3)^0,w,c
  5854  003FB2  6E10               	movwf	(??___fleq+3)^0,c
  5855  003FB4  500D               	movf	??___fleq^0,w,c
  5856  003FB6  100E               	iorwf	(??___fleq+1)^0,w,c
  5857  003FB8  100F               	iorwf	(??___fleq+2)^0,w,c
  5858  003FBA  1010               	iorwf	(??___fleq+3)^0,w,c
  5859  003FBC  A4D8               	btfss	status,2,c
  5860  003FBE  EFE3  F01F         	goto	u4271
  5861  003FC2  EFE5  F01F         	goto	u4270
  5862  003FC6                     u4271:
  5863  003FC6  EFED  F01F         	goto	l4969
  5864  003FCA                     u4270:
  5865  003FCA  0E00               	movlw	0
  5866  003FCC  6E05               	movwf	___fleq@ff1^0,c
  5867  003FCE  0E00               	movlw	0
  5868  003FD0  6E06               	movwf	(___fleq@ff1+1)^0,c
  5869  003FD2  0E00               	movlw	0
  5870  003FD4  6E07               	movwf	(___fleq@ff1+2)^0,c
  5871  003FD6  0E00               	movlw	0
  5872  003FD8  6E08               	movwf	(___fleq@ff1+3)^0,c
  5873  003FDA                     l4969:
  5874  003FDA  0E00               	movlw	0
  5875  003FDC  1409               	andwf	___fleq@ff2^0,w,c
  5876  003FDE  6E0D               	movwf	??___fleq^0,c
  5877  003FE0  0E00               	movlw	0
  5878  003FE2  140A               	andwf	(___fleq@ff2+1)^0,w,c
  5879  003FE4  6E0E               	movwf	(??___fleq+1)^0,c
  5880  003FE6  0E80               	movlw	128
  5881  003FE8  140B               	andwf	(___fleq@ff2+2)^0,w,c
  5882  003FEA  6E0F               	movwf	(??___fleq+2)^0,c
  5883  003FEC  0E7F               	movlw	127
  5884  003FEE  140C               	andwf	(___fleq@ff2+3)^0,w,c
  5885  003FF0  6E10               	movwf	(??___fleq+3)^0,c
  5886  003FF2  500D               	movf	??___fleq^0,w,c
  5887  003FF4  100E               	iorwf	(??___fleq+1)^0,w,c
  5888  003FF6  100F               	iorwf	(??___fleq+2)^0,w,c
  5889  003FF8  1010               	iorwf	(??___fleq+3)^0,w,c
  5890  003FFA  A4D8               	btfss	status,2,c
  5891  003FFC  EF02  F020         	goto	u4281
  5892  004000  EF04  F020         	goto	u4280
  5893  004004                     u4281:
  5894  004004  EF0C  F020         	goto	l4973
  5895  004008                     u4280:
  5896  004008  0E00               	movlw	0
  5897  00400A  6E09               	movwf	___fleq@ff2^0,c
  5898  00400C  0E00               	movlw	0
  5899  00400E  6E0A               	movwf	(___fleq@ff2+1)^0,c
  5900  004010  0E00               	movlw	0
  5901  004012  6E0B               	movwf	(___fleq@ff2+2)^0,c
  5902  004014  0E00               	movlw	0
  5903  004016  6E0C               	movwf	(___fleq@ff2+3)^0,c
  5904  004018                     l4973:
  5905  004018  5009               	movf	___fleq@ff2^0,w,c
  5906  00401A  1805               	xorwf	___fleq@ff1^0,w,c
  5907  00401C  E10F               	bnz	u4290
  5908  00401E  500A               	movf	(___fleq@ff2+1)^0,w,c
  5909  004020  1806               	xorwf	(___fleq@ff1+1)^0,w,c
  5910  004022  E10C               	bnz	u4290
  5911  004024  500B               	movf	(___fleq@ff2+2)^0,w,c
  5912  004026  1807               	xorwf	(___fleq@ff1+2)^0,w,c
  5913  004028  E109               	bnz	u4290
  5914  00402A  500C               	movf	(___fleq@ff2+3)^0,w,c
  5915  00402C  1808               	xorwf	(___fleq@ff1+3)^0,w,c
  5916  00402E  B4D8               	btfsc	status,2,c
  5917  004030  EF1C  F020         	goto	u4291
  5918  004034  EF1E  F020         	goto	u4290
  5919  004038                     u4291:
  5920  004038  EF21  F020         	goto	l4977
  5921  00403C                     u4290:
  5922  00403C  90D8               	bcf	status,0,c
  5923  00403E  EF22  F020         	goto	l983
  5924  004042                     l4977:
  5925  004042  80D8               	bsf	status,0,c
  5926  004044                     l983:
  5927  004044  0012               	return		;funcret
  5928  004046                     __end_of___fleq:
  5929                           	callstack 0
  5930                           
  5931 ;; *************** function ___awmod *****************
  5932 ;; Defined at:
  5933 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  5934 ;; Parameters:    Size  Location     Type
  5935 ;;  dividend        2    4[COMRAM] int 
  5936 ;;  divisor         2    6[COMRAM] int 
  5937 ;; Auto vars:     Size  Location     Type
  5938 ;;  sign            1    9[COMRAM] unsigned char 
  5939 ;;  counter         1    8[COMRAM] unsigned char 
  5940 ;; Return value:  Size  Location     Type
  5941 ;;                  2    4[COMRAM] int 
  5942 ;; Registers used:
  5943 ;;		wreg, status,2, status,0
  5944 ;; Tracked objects:
  5945 ;;		On entry : 0/0
  5946 ;;		On exit  : 0/0
  5947 ;;		Unchanged: 0/0
  5948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5949 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5950 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5952 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5953 ;;Total ram usage:        6 bytes
  5954 ;; Hardware stack levels used: 1
  5955 ;; Hardware stack levels required when called: 4
  5956 ;; This function calls:
  5957 ;;		Nothing
  5958 ;; This function is called by:
  5959 ;;		_efgtoa
  5960 ;; This function uses a non-reentrant model
  5961 ;;
  5962                           
  5963                           	psect	text21
  5964  003E40                     __ptext21:
  5965                           	callstack 0
  5966  003E40                     ___awmod:
  5967                           	callstack 22
  5968  003E40  0E00               	movlw	0
  5969  003E42  6E0A               	movwf	___awmod@sign^0,c
  5970  003E44  BE06               	btfsc	(___awmod@dividend+1)^0,7,c
  5971  003E46  EF29  F01F         	goto	u4210
  5972  003E4A  EF27  F01F         	goto	u4211
  5973  003E4E                     u4211:
  5974  003E4E  EF2F  F01F         	goto	l4937
  5975  003E52                     u4210:
  5976  003E52  6C05               	negf	___awmod@dividend^0,c
  5977  003E54  1E06               	comf	(___awmod@dividend+1)^0,f,c
  5978  003E56  B0D8               	btfsc	status,0,c
  5979  003E58  2A06               	incf	(___awmod@dividend+1)^0,f,c
  5980  003E5A  0E01               	movlw	1
  5981  003E5C  6E0A               	movwf	___awmod@sign^0,c
  5982  003E5E                     l4937:
  5983  003E5E  BE08               	btfsc	(___awmod@divisor+1)^0,7,c
  5984  003E60  EF36  F01F         	goto	u4220
  5985  003E64  EF34  F01F         	goto	u4221
  5986  003E68                     u4221:
  5987  003E68  EF3A  F01F         	goto	l4941
  5988  003E6C                     u4220:
  5989  003E6C  6C07               	negf	___awmod@divisor^0,c
  5990  003E6E  1E08               	comf	(___awmod@divisor+1)^0,f,c
  5991  003E70  B0D8               	btfsc	status,0,c
  5992  003E72  2A08               	incf	(___awmod@divisor+1)^0,f,c
  5993  003E74                     l4941:
  5994  003E74  5007               	movf	___awmod@divisor^0,w,c
  5995  003E76  1008               	iorwf	(___awmod@divisor+1)^0,w,c
  5996  003E78  B4D8               	btfsc	status,2,c
  5997  003E7A  EF41  F01F         	goto	u4231
  5998  003E7E  EF43  F01F         	goto	u4230
  5999  003E82                     u4231:
  6000  003E82  EF67  F01F         	goto	l4957
  6001  003E86                     u4230:
  6002  003E86  0E01               	movlw	1
  6003  003E88  6E09               	movwf	___awmod@counter^0,c
  6004  003E8A  EF4B  F01F         	goto	l4947
  6005  003E8E                     l4945:
  6006  003E8E  90D8               	bcf	status,0,c
  6007  003E90  3607               	rlcf	___awmod@divisor^0,f,c
  6008  003E92  3608               	rlcf	(___awmod@divisor+1)^0,f,c
  6009  003E94  2A09               	incf	___awmod@counter^0,f,c
  6010  003E96                     l4947:
  6011  003E96  AE08               	btfss	(___awmod@divisor+1)^0,7,c
  6012  003E98  EF50  F01F         	goto	u4241
  6013  003E9C  EF52  F01F         	goto	u4240
  6014  003EA0                     u4241:
  6015  003EA0  EF47  F01F         	goto	l4945
  6016  003EA4                     u4240:
  6017  003EA4                     l4949:
  6018  003EA4  5007               	movf	___awmod@divisor^0,w,c
  6019  003EA6  5C05               	subwf	___awmod@dividend^0,w,c
  6020  003EA8  5008               	movf	(___awmod@divisor+1)^0,w,c
  6021  003EAA  5806               	subwfb	(___awmod@dividend+1)^0,w,c
  6022  003EAC  A0D8               	btfss	status,0,c
  6023  003EAE  EF5B  F01F         	goto	u4251
  6024  003EB2  EF5D  F01F         	goto	u4250
  6025  003EB6                     u4251:
  6026  003EB6  EF61  F01F         	goto	l4953
  6027  003EBA                     u4250:
  6028  003EBA  5007               	movf	___awmod@divisor^0,w,c
  6029  003EBC  5E05               	subwf	___awmod@dividend^0,f,c
  6030  003EBE  5008               	movf	(___awmod@divisor+1)^0,w,c
  6031  003EC0  5A06               	subwfb	(___awmod@dividend+1)^0,f,c
  6032  003EC2                     l4953:
  6033  003EC2  90D8               	bcf	status,0,c
  6034  003EC4  3208               	rrcf	(___awmod@divisor+1)^0,f,c
  6035  003EC6  3207               	rrcf	___awmod@divisor^0,f,c
  6036  003EC8  2E09               	decfsz	___awmod@counter^0,f,c
  6037  003ECA  EF52  F01F         	goto	l4949
  6038  003ECE                     l4957:
  6039  003ECE  500A               	movf	___awmod@sign^0,w,c
  6040  003ED0  B4D8               	btfsc	status,2,c
  6041  003ED2  EF6D  F01F         	goto	u4261
  6042  003ED6  EF6F  F01F         	goto	u4260
  6043  003EDA                     u4261:
  6044  003EDA  EF73  F01F         	goto	l4961
  6045  003EDE                     u4260:
  6046  003EDE  6C05               	negf	___awmod@dividend^0,c
  6047  003EE0  1E06               	comf	(___awmod@dividend+1)^0,f,c
  6048  003EE2  B0D8               	btfsc	status,0,c
  6049  003EE4  2A06               	incf	(___awmod@dividend+1)^0,f,c
  6050  003EE6                     l4961:
  6051  003EE6  C005  F005         	movff	___awmod@dividend,?___awmod
  6052  003EEA  C006  F006         	movff	___awmod@dividend+1,?___awmod+1
  6053  003EEE  0012               	return		;funcret
  6054  003EF0                     __end_of___awmod:
  6055                           	callstack 0
  6056                           
  6057 ;; *************** function ___awdiv *****************
  6058 ;; Defined at:
  6059 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  6060 ;; Parameters:    Size  Location     Type
  6061 ;;  dividend        2    4[COMRAM] int 
  6062 ;;  divisor         2    6[COMRAM] int 
  6063 ;; Auto vars:     Size  Location     Type
  6064 ;;  quotient        2   10[COMRAM] int 
  6065 ;;  sign            1    9[COMRAM] unsigned char 
  6066 ;;  counter         1    8[COMRAM] unsigned char 
  6067 ;; Return value:  Size  Location     Type
  6068 ;;                  2    4[COMRAM] int 
  6069 ;; Registers used:
  6070 ;;		wreg, status,2, status,0
  6071 ;; Tracked objects:
  6072 ;;		On entry : 0/0
  6073 ;;		On exit  : 0/0
  6074 ;;		Unchanged: 0/0
  6075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6076 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6077 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6079 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6080 ;;Total ram usage:        8 bytes
  6081 ;; Hardware stack levels used: 1
  6082 ;; Hardware stack levels required when called: 4
  6083 ;; This function calls:
  6084 ;;		Nothing
  6085 ;; This function is called by:
  6086 ;;		_efgtoa
  6087 ;; This function uses a non-reentrant model
  6088 ;;
  6089                           
  6090                           	psect	text22
  6091  003BFA                     __ptext22:
  6092                           	callstack 0
  6093  003BFA                     ___awdiv:
  6094                           	callstack 22
  6095  003BFA  0E00               	movlw	0
  6096  003BFC  6E0A               	movwf	___awdiv@sign^0,c
  6097  003BFE  BE08               	btfsc	(___awdiv@divisor+1)^0,7,c
  6098  003C00  EF06  F01E         	goto	u4150
  6099  003C04  EF04  F01E         	goto	u4151
  6100  003C08                     u4151:
  6101  003C08  EF0C  F01E         	goto	l4893
  6102  003C0C                     u4150:
  6103  003C0C  6C07               	negf	___awdiv@divisor^0,c
  6104  003C0E  1E08               	comf	(___awdiv@divisor+1)^0,f,c
  6105  003C10  B0D8               	btfsc	status,0,c
  6106  003C12  2A08               	incf	(___awdiv@divisor+1)^0,f,c
  6107  003C14  0E01               	movlw	1
  6108  003C16  6E0A               	movwf	___awdiv@sign^0,c
  6109  003C18                     l4893:
  6110  003C18  BE06               	btfsc	(___awdiv@dividend+1)^0,7,c
  6111  003C1A  EF13  F01E         	goto	u4160
  6112  003C1E  EF11  F01E         	goto	u4161
  6113  003C22                     u4161:
  6114  003C22  EF19  F01E         	goto	l4899
  6115  003C26                     u4160:
  6116  003C26  6C05               	negf	___awdiv@dividend^0,c
  6117  003C28  1E06               	comf	(___awdiv@dividend+1)^0,f,c
  6118  003C2A  B0D8               	btfsc	status,0,c
  6119  003C2C  2A06               	incf	(___awdiv@dividend+1)^0,f,c
  6120  003C2E  0E01               	movlw	1
  6121  003C30  1A0A               	xorwf	___awdiv@sign^0,f,c
  6122  003C32                     l4899:
  6123  003C32  0E00               	movlw	0
  6124  003C34  6E0C               	movwf	(___awdiv@quotient+1)^0,c
  6125  003C36  0E00               	movlw	0
  6126  003C38  6E0B               	movwf	___awdiv@quotient^0,c
  6127  003C3A  5007               	movf	___awdiv@divisor^0,w,c
  6128  003C3C  1008               	iorwf	(___awdiv@divisor+1)^0,w,c
  6129  003C3E  B4D8               	btfsc	status,2,c
  6130  003C40  EF24  F01E         	goto	u4171
  6131  003C44  EF26  F01E         	goto	u4170
  6132  003C48                     u4171:
  6133  003C48  EF4E  F01E         	goto	l4921
  6134  003C4C                     u4170:
  6135  003C4C  0E01               	movlw	1
  6136  003C4E  6E09               	movwf	___awdiv@counter^0,c
  6137  003C50  EF2E  F01E         	goto	l4907
  6138  003C54                     l4905:
  6139  003C54  90D8               	bcf	status,0,c
  6140  003C56  3607               	rlcf	___awdiv@divisor^0,f,c
  6141  003C58  3608               	rlcf	(___awdiv@divisor+1)^0,f,c
  6142  003C5A  2A09               	incf	___awdiv@counter^0,f,c
  6143  003C5C                     l4907:
  6144  003C5C  AE08               	btfss	(___awdiv@divisor+1)^0,7,c
  6145  003C5E  EF33  F01E         	goto	u4181
  6146  003C62  EF35  F01E         	goto	u4180
  6147  003C66                     u4181:
  6148  003C66  EF2A  F01E         	goto	l4905
  6149  003C6A                     u4180:
  6150  003C6A                     l4909:
  6151  003C6A  90D8               	bcf	status,0,c
  6152  003C6C  360B               	rlcf	___awdiv@quotient^0,f,c
  6153  003C6E  360C               	rlcf	(___awdiv@quotient+1)^0,f,c
  6154  003C70  5007               	movf	___awdiv@divisor^0,w,c
  6155  003C72  5C05               	subwf	___awdiv@dividend^0,w,c
  6156  003C74  5008               	movf	(___awdiv@divisor+1)^0,w,c
  6157  003C76  5806               	subwfb	(___awdiv@dividend+1)^0,w,c
  6158  003C78  A0D8               	btfss	status,0,c
  6159  003C7A  EF41  F01E         	goto	u4191
  6160  003C7E  EF43  F01E         	goto	u4190
  6161  003C82                     u4191:
  6162  003C82  EF48  F01E         	goto	l4917
  6163  003C86                     u4190:
  6164  003C86  5007               	movf	___awdiv@divisor^0,w,c
  6165  003C88  5E05               	subwf	___awdiv@dividend^0,f,c
  6166  003C8A  5008               	movf	(___awdiv@divisor+1)^0,w,c
  6167  003C8C  5A06               	subwfb	(___awdiv@dividend+1)^0,f,c
  6168  003C8E  800B               	bsf	___awdiv@quotient^0,0,c
  6169  003C90                     l4917:
  6170  003C90  90D8               	bcf	status,0,c
  6171  003C92  3208               	rrcf	(___awdiv@divisor+1)^0,f,c
  6172  003C94  3207               	rrcf	___awdiv@divisor^0,f,c
  6173  003C96  2E09               	decfsz	___awdiv@counter^0,f,c
  6174  003C98  EF35  F01E         	goto	l4909
  6175  003C9C                     l4921:
  6176  003C9C  500A               	movf	___awdiv@sign^0,w,c
  6177  003C9E  B4D8               	btfsc	status,2,c
  6178  003CA0  EF54  F01E         	goto	u4201
  6179  003CA4  EF56  F01E         	goto	u4200
  6180  003CA8                     u4201:
  6181  003CA8  EF5A  F01E         	goto	l4925
  6182  003CAC                     u4200:
  6183  003CAC  6C0B               	negf	___awdiv@quotient^0,c
  6184  003CAE  1E0C               	comf	(___awdiv@quotient+1)^0,f,c
  6185  003CB0  B0D8               	btfsc	status,0,c
  6186  003CB2  2A0C               	incf	(___awdiv@quotient+1)^0,f,c
  6187  003CB4                     l4925:
  6188  003CB4  C00B  F005         	movff	___awdiv@quotient,?___awdiv
  6189  003CB8  C00C  F006         	movff	___awdiv@quotient+1,?___awdiv+1
  6190  003CBC  0012               	return		;funcret
  6191  003CBE                     __end_of___awdiv:
  6192                           	callstack 0
  6193                           
  6194 ;; *************** function _atoi *****************
  6195 ;; Defined at:
  6196 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\atoi.c"
  6197 ;; Parameters:    Size  Location     Type
  6198 ;;  s               2   11[COMRAM] PTR const unsigned char 
  6199 ;;		 -> STR_2(29), STR_1(23), 
  6200 ;; Auto vars:     Size  Location     Type
  6201 ;;  n               2   24[COMRAM] int 
  6202 ;;  neg             2   17[COMRAM] int 
  6203 ;; Return value:  Size  Location     Type
  6204 ;;                  2   11[COMRAM] int 
  6205 ;; Registers used:
  6206 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6207 ;; Tracked objects:
  6208 ;;		On entry : 0/0
  6209 ;;		On exit  : 0/0
  6210 ;;		Unchanged: 0/0
  6211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6212 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6213 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6214 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6215 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6216 ;;Total ram usage:       15 bytes
  6217 ;; Hardware stack levels used: 1
  6218 ;; Hardware stack levels required when called: 5
  6219 ;; This function calls:
  6220 ;;		___wmul
  6221 ;;		_isdigit
  6222 ;;		_isspace
  6223 ;; This function is called by:
  6224 ;;		_vfpfcnvrt
  6225 ;; This function uses a non-reentrant model
  6226 ;;
  6227                           
  6228                           	psect	text23
  6229  0033C6                     __ptext23:
  6230                           	callstack 0
  6231  0033C6                     _atoi:
  6232                           	callstack 22
  6233  0033C6  0E00               	movlw	0
  6234  0033C8  6E1A               	movwf	(atoi@n+1)^0,c
  6235  0033CA  0E00               	movlw	0
  6236  0033CC  6E19               	movwf	atoi@n^0,c
  6237  0033CE  0E00               	movlw	0
  6238  0033D0  6E13               	movwf	(atoi@neg+1)^0,c
  6239  0033D2  0E00               	movlw	0
  6240  0033D4  6E12               	movwf	atoi@neg^0,c
  6241  0033D6  EFEF  F019         	goto	l5541
  6242  0033DA                     l5539:
  6243  0033DA  4A0C               	infsnz	atoi@s^0,f,c
  6244  0033DC  2A0D               	incf	(atoi@s+1)^0,f,c
  6245  0033DE                     l5541:
  6246  0033DE  0E01               	movlw	1
  6247  0033E0  6E18               	movwf	_atoi$2166^0,c
  6248  0033E2  C00C  FFF6         	movff	atoi@s,tblptrl
  6249  0033E6  C00D  FFF7         	movff	atoi@s+1,tblptrh
  6250  0033EA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6251  0033EA  6AF8               	clrf	tblptru,c
  6252  0033EC                     	endif
  6253  0033EC                     	if	0	;tblptru may be non-zero
  6254  0033EC                     	endif
  6255  0033EC  0008               	tblrd		*
  6256  0033EE  50F5               	movf	tablat,w,c
  6257  0033F0  0A20               	xorlw	32
  6258  0033F2  B4D8               	btfsc	status,2,c
  6259  0033F4  EFFE  F019         	goto	u5291
  6260  0033F8  EF00  F01A         	goto	u5290
  6261  0033FC                     u5291:
  6262  0033FC  EF1E  F01A         	goto	l5549
  6263  003400                     u5290:
  6264  003400  0EF7               	movlw	247
  6265  003402  6E0E               	movwf	??_atoi^0,c
  6266  003404  0EFF               	movlw	255
  6267  003406  6E0F               	movwf	(??_atoi+1)^0,c
  6268  003408  C00C  FFF6         	movff	atoi@s,tblptrl
  6269  00340C  C00D  FFF7         	movff	atoi@s+1,tblptrh
  6270  003410                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6271  003410  6AF8               	clrf	tblptru,c
  6272  003412                     	endif
  6273  003412                     	if	0	;tblptru may be non-zero
  6274  003412                     	endif
  6275  003412  0008               	tblrd		*
  6276  003414  50F5               	movf	tablat,w,c
  6277  003416  6E10               	movwf	(??_atoi+2)^0,c
  6278  003418  6A11               	clrf	(??_atoi+3)^0,c
  6279  00341A  500E               	movf	??_atoi^0,w,c
  6280  00341C  2610               	addwf	(??_atoi+2)^0,f,c
  6281  00341E  500F               	movf	(??_atoi+1)^0,w,c
  6282  003420  2211               	addwfc	(??_atoi+3)^0,f,c
  6283  003422  5011               	movf	(??_atoi+3)^0,w,c
  6284  003424  E109               	bnz	u5300
  6285  003426  0E05               	movlw	5
  6286  003428  5C10               	subwf	(??_atoi+2)^0,w,c
  6287  00342A  A0D8               	btfss	status,0,c
  6288  00342C  EF1A  F01A         	goto	u5301
  6289  003430  EF1C  F01A         	goto	u5300
  6290  003434                     u5301:
  6291  003434  EF1E  F01A         	goto	l5549
  6292  003438                     u5300:
  6293  003438  0E00               	movlw	0
  6294  00343A  6E18               	movwf	_atoi$2166^0,c
  6295  00343C                     l5549:
  6296  00343C  C018  F014         	movff	_atoi$2166,_atoi$2165
  6297  003440  6A15               	clrf	(_atoi$2165+1)^0,c
  6298  003442  5014               	movf	_atoi$2165^0,w,c
  6299  003444  1015               	iorwf	(_atoi$2165+1)^0,w,c
  6300  003446  A4D8               	btfss	status,2,c
  6301  003448  EF28  F01A         	goto	u5311
  6302  00344C  EF2A  F01A         	goto	u5310
  6303  003450                     u5311:
  6304  003450  EFED  F019         	goto	l5539
  6305  003454                     u5310:
  6306  003454  EF34  F01A         	goto	l5559
  6307  003458                     l5555:
  6308  003458  0E00               	movlw	0
  6309  00345A  6E13               	movwf	(atoi@neg+1)^0,c
  6310  00345C  0E01               	movlw	1
  6311  00345E  6E12               	movwf	atoi@neg^0,c
  6312  003460                     l5557:
  6313  003460  4A0C               	infsnz	atoi@s^0,f,c
  6314  003462  2A0D               	incf	(atoi@s+1)^0,f,c
  6315  003464  EF6B  F01A         	goto	l5565
  6316  003468                     l5559:
  6317  003468  C00C  FFF6         	movff	atoi@s,tblptrl
  6318  00346C  C00D  FFF7         	movff	atoi@s+1,tblptrh
  6319  003470                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6320  003470  6AF8               	clrf	tblptru,c
  6321  003472                     	endif
  6322  003472                     	if	0	;tblptru may be non-zero
  6323  003472                     	endif
  6324  003472  0008               	tblrd		*
  6325  003474  50F5               	movf	tablat,w,c
  6326  003476  6E0E               	movwf	??_atoi^0,c
  6327  003478  6A0F               	clrf	(??_atoi+1)^0,c
  6328                           
  6329                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6330                           ; Switch size 1, requested type "simple"
  6331                           ; Number of cases is 1, Range of values is 0 to 0
  6332                           ; switch strategies available:
  6333                           ; Name         Instructions Cycles
  6334                           ; simple_byte            4     3 (average)
  6335                           ;	Chosen strategy is simple_byte
  6336  00347A  500F               	movf	(??_atoi+1)^0,w,c
  6337  00347C  0A00               	xorlw	0	; case 0
  6338  00347E  B4D8               	btfsc	status,2,c
  6339  003480  EF44  F01A         	goto	l6963
  6340  003484  EF6B  F01A         	goto	l5565
  6341  003488                     l6963:
  6342                           
  6343                           ; Switch size 1, requested type "simple"
  6344                           ; Number of cases is 2, Range of values is 43 to 45
  6345                           ; switch strategies available:
  6346                           ; Name         Instructions Cycles
  6347                           ; simple_byte            7     4 (average)
  6348                           ;	Chosen strategy is simple_byte
  6349  003488  500E               	movf	??_atoi^0,w,c
  6350  00348A  0A2B               	xorlw	43	; case 43
  6351  00348C  B4D8               	btfsc	status,2,c
  6352  00348E  EF30  F01A         	goto	l5557
  6353  003492  0A06               	xorlw	6	; case 45
  6354  003494  B4D8               	btfsc	status,2,c
  6355  003496  EF2C  F01A         	goto	l5555
  6356  00349A  EF6B  F01A         	goto	l5565
  6357  00349E                     l5561:
  6358  00349E  C019  F005         	movff	atoi@n,___wmul@multiplier
  6359  0034A2  C01A  F006         	movff	atoi@n+1,___wmul@multiplier+1
  6360  0034A6  0E00               	movlw	0
  6361  0034A8  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  6362  0034AA  0E0A               	movlw	10
  6363  0034AC  6E07               	movwf	___wmul@multiplicand^0,c
  6364  0034AE  EC5D  F025         	call	___wmul	;wreg free
  6365  0034B2  C00C  FFF6         	movff	atoi@s,tblptrl
  6366  0034B6  C00D  FFF7         	movff	atoi@s+1,tblptrh
  6367  0034BA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6368  0034BA  6AF8               	clrf	tblptru,c
  6369  0034BC                     	endif
  6370  0034BC                     	if	0	;tblptru may be non-zero
  6371  0034BC                     	endif
  6372  0034BC  0008               	tblrd		*
  6373  0034BE  50F5               	movf	tablat,w,c
  6374  0034C0  5E05               	subwf	?___wmul^0,f,c
  6375  0034C2  0E00               	movlw	0
  6376  0034C4  5A06               	subwfb	(?___wmul+1)^0,f,c
  6377  0034C6  0E30               	movlw	48
  6378  0034C8  2405               	addwf	?___wmul^0,w,c
  6379  0034CA  6E19               	movwf	atoi@n^0,c
  6380  0034CC  0E00               	movlw	0
  6381  0034CE  2006               	addwfc	(?___wmul+1)^0,w,c
  6382  0034D0  6E1A               	movwf	(atoi@n+1)^0,c
  6383  0034D2  EF30  F01A         	goto	l5557
  6384  0034D6                     l5565:
  6385  0034D6  0ED0               	movlw	208
  6386  0034D8  6E0E               	movwf	??_atoi^0,c
  6387  0034DA  0EFF               	movlw	255
  6388  0034DC  6E0F               	movwf	(??_atoi+1)^0,c
  6389  0034DE  C00C  FFF6         	movff	atoi@s,tblptrl
  6390  0034E2  C00D  FFF7         	movff	atoi@s+1,tblptrh
  6391  0034E6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6392  0034E6  6AF8               	clrf	tblptru,c
  6393  0034E8                     	endif
  6394  0034E8                     	if	0	;tblptru may be non-zero
  6395  0034E8                     	endif
  6396  0034E8  0008               	tblrd		*
  6397  0034EA  50F5               	movf	tablat,w,c
  6398  0034EC  6E10               	movwf	(??_atoi+2)^0,c
  6399  0034EE  6A11               	clrf	(??_atoi+3)^0,c
  6400  0034F0  500E               	movf	??_atoi^0,w,c
  6401  0034F2  2610               	addwf	(??_atoi+2)^0,f,c
  6402  0034F4  500F               	movf	(??_atoi+1)^0,w,c
  6403  0034F6  2211               	addwfc	(??_atoi+3)^0,f,c
  6404  0034F8  5011               	movf	(??_atoi+3)^0,w,c
  6405  0034FA  E10A               	bnz	u5320
  6406  0034FC  0E0A               	movlw	10
  6407  0034FE  5C10               	subwf	(??_atoi+2)^0,w,c
  6408  003500  A0D8               	btfss	status,0,c
  6409  003502  EF85  F01A         	goto	u5321
  6410  003506  EF88  F01A         	goto	u5320
  6411  00350A                     u5321:
  6412  00350A  0E01               	movlw	1
  6413  00350C  EF89  F01A         	goto	u5330
  6414  003510                     u5320:
  6415  003510  0E00               	movlw	0
  6416  003512                     u5330:
  6417  003512  6E16               	movwf	_atoi$2167^0,c
  6418  003514  6A17               	clrf	(_atoi$2167+1)^0,c
  6419  003516  5016               	movf	_atoi$2167^0,w,c
  6420  003518  1017               	iorwf	(_atoi$2167+1)^0,w,c
  6421  00351A  A4D8               	btfss	status,2,c
  6422  00351C  EF92  F01A         	goto	u5341
  6423  003520  EF94  F01A         	goto	u5340
  6424  003524                     u5341:
  6425  003524  EF4F  F01A         	goto	l5561
  6426  003528                     u5340:
  6427  003528  5012               	movf	atoi@neg^0,w,c
  6428  00352A  1013               	iorwf	(atoi@neg+1)^0,w,c
  6429  00352C  A4D8               	btfss	status,2,c
  6430  00352E  EF9B  F01A         	goto	u5351
  6431  003532  EF9D  F01A         	goto	u5350
  6432  003536                     u5351:
  6433  003536  EFAB  F01A         	goto	l1633
  6434  00353A                     u5350:
  6435  00353A  C019  F00E         	movff	atoi@n,??_atoi
  6436  00353E  C01A  F00F         	movff	atoi@n+1,??_atoi+1
  6437  003542  1E0E               	comf	??_atoi^0,f,c
  6438  003544  1E0F               	comf	(??_atoi+1)^0,f,c
  6439  003546  4A0E               	infsnz	??_atoi^0,f,c
  6440  003548  2A0F               	incf	(??_atoi+1)^0,f,c
  6441  00354A  C00E  F00C         	movff	??_atoi,?_atoi
  6442  00354E  C00F  F00D         	movff	??_atoi+1,?_atoi+1
  6443  003552  EFAF  F01A         	goto	l1636
  6444  003556                     l1633:
  6445  003556  C019  F00C         	movff	atoi@n,?_atoi
  6446  00355A  C01A  F00D         	movff	atoi@n+1,?_atoi+1
  6447  00355E                     l1636:
  6448  00355E  0012               	return		;funcret
  6449  003560                     __end_of_atoi:
  6450                           	callstack 0
  6451                           
  6452 ;; *************** function _isspace *****************
  6453 ;; Defined at:
  6454 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isspace.c"
  6455 ;; Parameters:    Size  Location     Type
  6456 ;;  c               2    4[COMRAM] int 
  6457 ;; Auto vars:     Size  Location     Type
  6458 ;;		None
  6459 ;; Return value:  Size  Location     Type
  6460 ;;                  2    4[COMRAM] int 
  6461 ;; Registers used:
  6462 ;;		wreg, status,2, status,0
  6463 ;; Tracked objects:
  6464 ;;		On entry : 0/0
  6465 ;;		On exit  : 0/0
  6466 ;;		Unchanged: 0/0
  6467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6468 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6469 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6470 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6471 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6472 ;;Total ram usage:        7 bytes
  6473 ;; Hardware stack levels used: 1
  6474 ;; Hardware stack levels required when called: 4
  6475 ;; This function calls:
  6476 ;;		Nothing
  6477 ;; This function is called by:
  6478 ;;		_atoi
  6479 ;; This function uses a non-reentrant model
  6480 ;;
  6481                           
  6482                           	psect	text24
  6483  004626                     __ptext24:
  6484                           	callstack 0
  6485  004626                     _isspace:
  6486                           	callstack 22
  6487  004626  0E01               	movlw	1
  6488  004628  6E0B               	movwf	_isspace$2196^0,c
  6489  00462A  0E20               	movlw	32
  6490  00462C  1805               	xorwf	isspace@c^0,w,c
  6491  00462E  1006               	iorwf	(isspace@c+1)^0,w,c
  6492  004630  B4D8               	btfsc	status,2,c
  6493  004632  EF1D  F023         	goto	u4711
  6494  004636  EF1F  F023         	goto	u4710
  6495  00463A                     u4711:
  6496  00463A  EF38  F023         	goto	l5153
  6497  00463E                     u4710:
  6498  00463E  0EF7               	movlw	247
  6499  004640  6E07               	movwf	??_isspace^0,c
  6500  004642  0EFF               	movlw	255
  6501  004644  6E08               	movwf	(??_isspace+1)^0,c
  6502  004646  C005  F009         	movff	isspace@c,??_isspace+2
  6503  00464A  C006  F00A         	movff	isspace@c+1,??_isspace+3
  6504  00464E  5007               	movf	??_isspace^0,w,c
  6505  004650  2609               	addwf	(??_isspace+2)^0,f,c
  6506  004652  5008               	movf	(??_isspace+1)^0,w,c
  6507  004654  220A               	addwfc	(??_isspace+3)^0,f,c
  6508  004656  500A               	movf	(??_isspace+3)^0,w,c
  6509  004658  E109               	bnz	u4720
  6510  00465A  0E05               	movlw	5
  6511  00465C  5C09               	subwf	(??_isspace+2)^0,w,c
  6512  00465E  A0D8               	btfss	status,0,c
  6513  004660  EF34  F023         	goto	u4721
  6514  004664  EF36  F023         	goto	u4720
  6515  004668                     u4721:
  6516  004668  EF38  F023         	goto	l5153
  6517  00466C                     u4720:
  6518  00466C  0E00               	movlw	0
  6519  00466E  6E0B               	movwf	_isspace$2196^0,c
  6520  004670                     l5153:
  6521  004670  C00B  F005         	movff	_isspace$2196,?_isspace
  6522  004674  6A06               	clrf	(?_isspace+1)^0,c
  6523  004676  0012               	return		;funcret
  6524  004678                     __end_of_isspace:
  6525                           	callstack 0
  6526                           
  6527 ;; *************** function _isdigit *****************
  6528 ;; Defined at:
  6529 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isdigit.c"
  6530 ;; Parameters:    Size  Location     Type
  6531 ;;  c               2    4[COMRAM] int 
  6532 ;; Auto vars:     Size  Location     Type
  6533 ;;		None
  6534 ;; Return value:  Size  Location     Type
  6535 ;;                  2    4[COMRAM] int 
  6536 ;; Registers used:
  6537 ;;		wreg, status,2, status,0
  6538 ;; Tracked objects:
  6539 ;;		On entry : 0/0
  6540 ;;		On exit  : 0/0
  6541 ;;		Unchanged: 0/0
  6542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6543 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6545 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6546 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6547 ;;Total ram usage:        6 bytes
  6548 ;; Hardware stack levels used: 1
  6549 ;; Hardware stack levels required when called: 4
  6550 ;; This function calls:
  6551 ;;		Nothing
  6552 ;; This function is called by:
  6553 ;;		_vfpfcnvrt
  6554 ;;		_atoi
  6555 ;; This function uses a non-reentrant model
  6556 ;;
  6557                           
  6558                           	psect	text25
  6559  0048C2                     __ptext25:
  6560                           	callstack 0
  6561  0048C2                     _isdigit:
  6562                           	callstack 23
  6563  0048C2  0ED0               	movlw	208
  6564  0048C4  6E07               	movwf	??_isdigit^0,c
  6565  0048C6  0EFF               	movlw	255
  6566  0048C8  6E08               	movwf	(??_isdigit+1)^0,c
  6567  0048CA  C005  F009         	movff	isdigit@c,??_isdigit+2
  6568  0048CE  C006  F00A         	movff	isdigit@c+1,??_isdigit+3
  6569  0048D2  5007               	movf	??_isdigit^0,w,c
  6570  0048D4  2609               	addwf	(??_isdigit+2)^0,f,c
  6571  0048D6  5008               	movf	(??_isdigit+1)^0,w,c
  6572  0048D8  220A               	addwfc	(??_isdigit+3)^0,f,c
  6573  0048DA  500A               	movf	(??_isdigit+3)^0,w,c
  6574  0048DC  E10A               	bnz	u4690
  6575  0048DE  0E0A               	movlw	10
  6576  0048E0  5C09               	subwf	(??_isdigit+2)^0,w,c
  6577  0048E2  A0D8               	btfss	status,0,c
  6578  0048E4  EF76  F024         	goto	u4691
  6579  0048E8  EF79  F024         	goto	u4690
  6580  0048EC                     u4691:
  6581  0048EC  0E01               	movlw	1
  6582  0048EE  EF7A  F024         	goto	u4700
  6583  0048F2                     u4690:
  6584  0048F2  0E00               	movlw	0
  6585  0048F4                     u4700:
  6586  0048F4  6E05               	movwf	?_isdigit^0,c
  6587  0048F6  6A06               	clrf	(?_isdigit+1)^0,c
  6588  0048F8  0012               	return		;funcret
  6589  0048FA                     __end_of_isdigit:
  6590                           	callstack 0
  6591                           
  6592 ;; *************** function ___wmul *****************
  6593 ;; Defined at:
  6594 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  6595 ;; Parameters:    Size  Location     Type
  6596 ;;  multiplier      2    4[COMRAM] unsigned int 
  6597 ;;  multiplicand    2    6[COMRAM] unsigned int 
  6598 ;; Auto vars:     Size  Location     Type
  6599 ;;  product         2    8[COMRAM] unsigned int 
  6600 ;; Return value:  Size  Location     Type
  6601 ;;                  2    4[COMRAM] unsigned int 
  6602 ;; Registers used:
  6603 ;;		wreg, status,2, status,0, prodl, prodh
  6604 ;; Tracked objects:
  6605 ;;		On entry : 0/0
  6606 ;;		On exit  : 0/0
  6607 ;;		Unchanged: 0/0
  6608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6609 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6610 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6612 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6613 ;;Total ram usage:        6 bytes
  6614 ;; Hardware stack levels used: 1
  6615 ;; Hardware stack levels required when called: 4
  6616 ;; This function calls:
  6617 ;;		Nothing
  6618 ;; This function is called by:
  6619 ;;		_atoi
  6620 ;; This function uses a non-reentrant model
  6621 ;;
  6622                           
  6623                           	psect	text26
  6624  004ABA                     __ptext26:
  6625                           	callstack 0
  6626  004ABA                     ___wmul:
  6627                           	callstack 22
  6628  004ABA  5005               	movf	___wmul@multiplier^0,w,c
  6629  004ABC  0207               	mulwf	___wmul@multiplicand^0,c
  6630  004ABE  CFF3 F009          	movff	prodl,___wmul@product
  6631  004AC2  CFF4 F00A          	movff	prodh,___wmul@product+1
  6632  004AC6  5005               	movf	___wmul@multiplier^0,w,c
  6633  004AC8  0208               	mulwf	(___wmul@multiplicand+1)^0,c
  6634  004ACA  50F3               	movf	243,w,c
  6635  004ACC  260A               	addwf	(___wmul@product+1)^0,f,c
  6636  004ACE  5006               	movf	(___wmul@multiplier+1)^0,w,c
  6637  004AD0  0207               	mulwf	___wmul@multiplicand^0,c
  6638  004AD2  50F3               	movf	243,w,c
  6639  004AD4  260A               	addwf	(___wmul@product+1)^0,f,c
  6640  004AD6  C009  F005         	movff	___wmul@product,?___wmul
  6641  004ADA  C00A  F006         	movff	___wmul@product+1,?___wmul+1
  6642  004ADE  0012               	return		;funcret
  6643  004AE0                     __end_of___wmul:
  6644                           	callstack 0
  6645                           
  6646 ;; *************** function _SYSTEM_Initialize *****************
  6647 ;; Defined at:
  6648 ;;		line 50 in file "mcc_generated_files/mcc.c"
  6649 ;; Parameters:    Size  Location     Type
  6650 ;;		None
  6651 ;; Auto vars:     Size  Location     Type
  6652 ;;		None
  6653 ;; Return value:  Size  Location     Type
  6654 ;;                  1    wreg      void 
  6655 ;; Registers used:
  6656 ;;		wreg, status,2, status,0, cstack
  6657 ;; Tracked objects:
  6658 ;;		On entry : 0/0
  6659 ;;		On exit  : 0/0
  6660 ;;		Unchanged: 0/0
  6661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6665 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6666 ;;Total ram usage:        0 bytes
  6667 ;; Hardware stack levels used: 1
  6668 ;; Hardware stack levels required when called: 6
  6669 ;; This function calls:
  6670 ;;		_EUSART_Initialize
  6671 ;;		_I2C_Initialize
  6672 ;;		_INTERRUPT_Initialize
  6673 ;;		_OSCILLATOR_Initialize
  6674 ;;		_PIN_MANAGER_Initialize
  6675 ;; This function is called by:
  6676 ;;		_main
  6677 ;; This function uses a non-reentrant model
  6678 ;;
  6679                           
  6680                           	psect	text27
  6681  004B74                     __ptext27:
  6682                           	callstack 0
  6683  004B74                     _SYSTEM_Initialize:
  6684                           	callstack 24
  6685  004B74                     
  6686                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  6687  004B74  EC5A  F026         	call	_INTERRUPT_Initialize	;wreg free
  6688  004B78                     
  6689                           ;mcc_generated_files/mcc.c: 54:     I2C_Initialize();
  6690  004B78  ECC5  F025         	call	_I2C_Initialize	;wreg free
  6691  004B7C                     
  6692                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
  6693  004B7C  EC98  F024         	call	_PIN_MANAGER_Initialize	;wreg free
  6694  004B80                     
  6695                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
  6696  004B80  EC08  F026         	call	_OSCILLATOR_Initialize	;wreg free
  6697  004B84                     
  6698                           ;mcc_generated_files/mcc.c: 57:     EUSART_Initialize();
  6699  004B84  EC83  F021         	call	_EUSART_Initialize	;wreg free
  6700  004B88  0012               	return		;funcret
  6701  004B8A                     __end_of_SYSTEM_Initialize:
  6702                           	callstack 0
  6703                           
  6704 ;; *************** function _PIN_MANAGER_Initialize *****************
  6705 ;; Defined at:
  6706 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  6707 ;; Parameters:    Size  Location     Type
  6708 ;;		None
  6709 ;; Auto vars:     Size  Location     Type
  6710 ;;		None
  6711 ;; Return value:  Size  Location     Type
  6712 ;;                  1    wreg      void 
  6713 ;; Registers used:
  6714 ;;		wreg, status,2
  6715 ;; Tracked objects:
  6716 ;;		On entry : 0/0
  6717 ;;		On exit  : 0/0
  6718 ;;		Unchanged: 0/0
  6719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6724 ;;Total ram usage:        0 bytes
  6725 ;; Hardware stack levels used: 1
  6726 ;; Hardware stack levels required when called: 4
  6727 ;; This function calls:
  6728 ;;		Nothing
  6729 ;; This function is called by:
  6730 ;;		_SYSTEM_Initialize
  6731 ;; This function uses a non-reentrant model
  6732 ;;
  6733                           
  6734                           	psect	text28
  6735  004930                     __ptext28:
  6736                           	callstack 0
  6737  004930                     _PIN_MANAGER_Initialize:
  6738                           	callstack 25
  6739  004930                     
  6740                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  6741  004930  0E00               	movlw	0
  6742  004932  6E8D               	movwf	141,c	;volatile
  6743                           
  6744                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  6745  004934  0E00               	movlw	0
  6746  004936  6E8C               	movwf	140,c	;volatile
  6747                           
  6748                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  6749  004938  0E00               	movlw	0
  6750  00493A  6E89               	movwf	137,c	;volatile
  6751                           
  6752                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  6753  00493C  0E00               	movlw	0
  6754  00493E  6E8A               	movwf	138,c	;volatile
  6755                           
  6756                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  6757  004940  0E00               	movlw	0
  6758  004942  6E8B               	movwf	139,c	;volatile
  6759                           
  6760                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  6761  004944  0E07               	movlw	7
  6762  004946  6E96               	movwf	150,c	;volatile
  6763  004948                     
  6764                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFF;
  6765  004948  6892               	setf	146,c	;volatile
  6766  00494A                     
  6767                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
  6768  00494A  6893               	setf	147,c	;volatile
  6769                           
  6770                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xBF;
  6771  00494C  0EBF               	movlw	191
  6772  00494E  6E94               	movwf	148,c	;volatile
  6773  004950                     
  6774                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
  6775  004950  6895               	setf	149,c	;volatile
  6776  004952                     
  6777                           ;mcc_generated_files/pin_manager.c: 78:     ANSEL = 0xFF;
  6778  004952  687E               	setf	126,c	;volatile
  6779                           
  6780                           ;mcc_generated_files/pin_manager.c: 79:     ANSELH = 0x1F;
  6781  004954  0E1F               	movlw	31
  6782  004956  6E7F               	movwf	127,c	;volatile
  6783                           
  6784                           ;mcc_generated_files/pin_manager.c: 84:     WPUB = 0x00;
  6785  004958  0E00               	movlw	0
  6786  00495A  6E7C               	movwf	124,c	;volatile
  6787  00495C                     
  6788                           ;mcc_generated_files/pin_manager.c: 85:     INTCON2bits.nRBPU = 1;
  6789  00495C  8EF1               	bsf	241,7,c	;volatile
  6790  00495E  0012               	return		;funcret
  6791  004960                     __end_of_PIN_MANAGER_Initialize:
  6792                           	callstack 0
  6793                           
  6794 ;; *************** function _OSCILLATOR_Initialize *****************
  6795 ;; Defined at:
  6796 ;;		line 60 in file "mcc_generated_files/mcc.c"
  6797 ;; Parameters:    Size  Location     Type
  6798 ;;		None
  6799 ;; Auto vars:     Size  Location     Type
  6800 ;;		None
  6801 ;; Return value:  Size  Location     Type
  6802 ;;                  1    wreg      void 
  6803 ;; Registers used:
  6804 ;;		wreg, status,2
  6805 ;; Tracked objects:
  6806 ;;		On entry : 0/0
  6807 ;;		On exit  : 0/0
  6808 ;;		Unchanged: 0/0
  6809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6813 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6814 ;;Total ram usage:        0 bytes
  6815 ;; Hardware stack levels used: 1
  6816 ;; Hardware stack levels required when called: 4
  6817 ;; This function calls:
  6818 ;;		Nothing
  6819 ;; This function is called by:
  6820 ;;		_SYSTEM_Initialize
  6821 ;; This function uses a non-reentrant model
  6822 ;;
  6823                           
  6824                           	psect	text29
  6825  004C10                     __ptext29:
  6826                           	callstack 0
  6827  004C10                     _OSCILLATOR_Initialize:
  6828                           	callstack 25
  6829  004C10                     
  6830                           ;mcc_generated_files/mcc.c: 63:     OSCCON = 0x60;
  6831  004C10  0E60               	movlw	96
  6832  004C12  6ED3               	movwf	211,c	;volatile
  6833                           
  6834                           ;mcc_generated_files/mcc.c: 65:     OSCTUNE = 0x00;
  6835  004C14  0E00               	movlw	0
  6836  004C16  6E9B               	movwf	155,c	;volatile
  6837  004C18  0012               	return		;funcret
  6838  004C1A                     __end_of_OSCILLATOR_Initialize:
  6839                           	callstack 0
  6840                           
  6841 ;; *************** function _INTERRUPT_Initialize *****************
  6842 ;; Defined at:
  6843 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  6844 ;; Parameters:    Size  Location     Type
  6845 ;;		None
  6846 ;; Auto vars:     Size  Location     Type
  6847 ;;		None
  6848 ;; Return value:  Size  Location     Type
  6849 ;;                  1    wreg      void 
  6850 ;; Registers used:
  6851 ;;		None
  6852 ;; Tracked objects:
  6853 ;;		On entry : 0/0
  6854 ;;		On exit  : 0/0
  6855 ;;		Unchanged: 0/0
  6856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6860 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6861 ;;Total ram usage:        0 bytes
  6862 ;; Hardware stack levels used: 1
  6863 ;; Hardware stack levels required when called: 4
  6864 ;; This function calls:
  6865 ;;		Nothing
  6866 ;; This function is called by:
  6867 ;;		_SYSTEM_Initialize
  6868 ;; This function uses a non-reentrant model
  6869 ;;
  6870                           
  6871                           	psect	text30
  6872  004CB4                     __ptext30:
  6873                           	callstack 0
  6874  004CB4                     _INTERRUPT_Initialize:
  6875                           	callstack 25
  6876  004CB4                     
  6877                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  6878  004CB4  9ED0               	bcf	208,7,c	;volatile
  6879  004CB6  0012               	return		;funcret
  6880  004CB8                     __end_of_INTERRUPT_Initialize:
  6881                           	callstack 0
  6882                           
  6883 ;; *************** function _I2C_Initialize *****************
  6884 ;; Defined at:
  6885 ;;		line 167 in file "mcc_generated_files/i2c_master.c"
  6886 ;; Parameters:    Size  Location     Type
  6887 ;;		None
  6888 ;; Auto vars:     Size  Location     Type
  6889 ;;		None
  6890 ;; Return value:  Size  Location     Type
  6891 ;;                  1    wreg      void 
  6892 ;; Registers used:
  6893 ;;		wreg, status,2
  6894 ;; Tracked objects:
  6895 ;;		On entry : 0/0
  6896 ;;		On exit  : 0/0
  6897 ;;		Unchanged: 0/0
  6898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6903 ;;Total ram usage:        0 bytes
  6904 ;; Hardware stack levels used: 1
  6905 ;; Hardware stack levels required when called: 4
  6906 ;; This function calls:
  6907 ;;		Nothing
  6908 ;; This function is called by:
  6909 ;;		_SYSTEM_Initialize
  6910 ;; This function uses a non-reentrant model
  6911 ;;
  6912                           
  6913                           	psect	text31
  6914  004B8A                     __ptext31:
  6915                           	callstack 0
  6916  004B8A                     _I2C_Initialize:
  6917                           	callstack 25
  6918  004B8A                     
  6919                           ;mcc_generated_files/i2c_master.c: 169:     SSPSTAT = 0x00;
  6920  004B8A  0E00               	movlw	0
  6921  004B8C  6EC7               	movwf	199,c	;volatile
  6922                           
  6923                           ;mcc_generated_files/i2c_master.c: 170:     SSPCON1 = 0x08;
  6924  004B8E  0E08               	movlw	8
  6925  004B90  6EC6               	movwf	198,c	;volatile
  6926                           
  6927                           ;mcc_generated_files/i2c_master.c: 171:     SSPCON2 = 0x00;
  6928  004B92  0E00               	movlw	0
  6929  004B94  6EC5               	movwf	197,c	;volatile
  6930                           
  6931                           ;mcc_generated_files/i2c_master.c: 172:     SSPADD = 0x13;
  6932  004B96  0E13               	movlw	19
  6933  004B98  6EC8               	movwf	200,c	;volatile
  6934  004B9A                     
  6935                           ;mcc_generated_files/i2c_master.c: 173:     SSPCON1bits.SSPEN = 0;
  6936  004B9A  9AC6               	bcf	198,5,c	;volatile
  6937  004B9C  0012               	return		;funcret
  6938  004B9E                     __end_of_I2C_Initialize:
  6939                           	callstack 0
  6940                           
  6941 ;; *************** function _EUSART_Initialize *****************
  6942 ;; Defined at:
  6943 ;;		line 88 in file "mcc_generated_files/eusart.c"
  6944 ;; Parameters:    Size  Location     Type
  6945 ;;		None
  6946 ;; Auto vars:     Size  Location     Type
  6947 ;;		None
  6948 ;; Return value:  Size  Location     Type
  6949 ;;                  1    wreg      void 
  6950 ;; Registers used:
  6951 ;;		wreg, status,2, status,0, cstack
  6952 ;; Tracked objects:
  6953 ;;		On entry : 0/0
  6954 ;;		On exit  : 0/0
  6955 ;;		Unchanged: 0/0
  6956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6960 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6961 ;;Total ram usage:        0 bytes
  6962 ;; Hardware stack levels used: 1
  6963 ;; Hardware stack levels required when called: 5
  6964 ;; This function calls:
  6965 ;;		_EUSART_SetErrorHandler
  6966 ;;		_EUSART_SetFramingErrorHandler
  6967 ;;		_EUSART_SetOverrunErrorHandler
  6968 ;;		_EUSART_SetRxInterruptHandler
  6969 ;;		_EUSART_SetTxInterruptHandler
  6970 ;; This function is called by:
  6971 ;;		_SYSTEM_Initialize
  6972 ;; This function uses a non-reentrant model
  6973 ;;
  6974                           
  6975                           	psect	text32
  6976  004306                     __ptext32:
  6977                           	callstack 0
  6978  004306                     _EUSART_Initialize:
  6979                           	callstack 24
  6980  004306                     
  6981                           ;mcc_generated_files/eusart.c: 91:     PIE1bits.RC1IE = 0;
  6982  004306  9A9D               	bcf	157,5,c	;volatile
  6983  004308                     
  6984                           ;mcc_generated_files/eusart.c: 92:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  6985  004308  0E82               	movlw	low _EUSART_Receive_ISR
  6986  00430A  6E05               	movwf	EUSART_SetRxInterruptHandler@interruptHandler^0,c
  6987  00430C  0E3D               	movlw	high _EUSART_Receive_ISR
  6988  00430E  6E06               	movwf	(EUSART_SetRxInterruptHandler@interruptHandler+1)^0,c
  6989  004310  EC12  F026         	call	_EUSART_SetRxInterruptHandler	;wreg free
  6990  004314                     
  6991                           ;mcc_generated_files/eusart.c: 93:     PIE1bits.TX1IE = 0;
  6992  004314  989D               	bcf	157,4,c	;volatile
  6993                           
  6994                           ;mcc_generated_files/eusart.c: 94:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR)
      +                          ;
  6995  004316  0ED0               	movlw	low _EUSART_Transmit_ISR
  6996  004318  6E05               	movwf	EUSART_SetTxInterruptHandler@interruptHandler^0,c
  6997  00431A  0E47               	movlw	high _EUSART_Transmit_ISR
  6998  00431C  6E06               	movwf	(EUSART_SetTxInterruptHandler@interruptHandler+1)^0,c
  6999  00431E  EC0D  F026         	call	_EUSART_SetTxInterruptHandler	;wreg free
  7000  004322                     
  7001                           ;mcc_generated_files/eusart.c: 98:     BAUDCON = 0x08;
  7002  004322  0E08               	movlw	8
  7003  004324  6EB8               	movwf	184,c	;volatile
  7004  004326                     
  7005                           ;mcc_generated_files/eusart.c: 101:     RCSTA = 0x90;
  7006  004326  0E90               	movlw	144
  7007  004328  6EAB               	movwf	171,c	;volatile
  7008  00432A                     
  7009                           ;mcc_generated_files/eusart.c: 104:     TXSTA = 0x24;
  7010  00432A  0E24               	movlw	36
  7011  00432C  6EAC               	movwf	172,c	;volatile
  7012  00432E                     
  7013                           ;mcc_generated_files/eusart.c: 107:     SPBRG = 0xCF;
  7014  00432E  0ECF               	movlw	207
  7015  004330  6EAF               	movwf	175,c	;volatile
  7016  004332                     
  7017                           ;mcc_generated_files/eusart.c: 110:     SPBRGH = 0x00;
  7018  004332  0E00               	movlw	0
  7019  004334  6EB0               	movwf	176,c	;volatile
  7020  004336                     
  7021                           ;mcc_generated_files/eusart.c: 113:     EUSART_SetFramingErrorHandler(EUSART_DefaultFram
      +                          ingErrorHandler);
  7022  004336  0EE4               	movlw	low _EUSART_DefaultFramingErrorHandler
  7023  004338  6E05               	movwf	EUSART_SetFramingErrorHandler@interruptHandler^0,c
  7024  00433A  0E4C               	movlw	high _EUSART_DefaultFramingErrorHandler
  7025  00433C  6E06               	movwf	(EUSART_SetFramingErrorHandler@interruptHandler+1)^0,c
  7026  00433E  EC1C  F026         	call	_EUSART_SetFramingErrorHandler	;wreg free
  7027  004342                     
  7028                           ;mcc_generated_files/eusart.c: 114:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOver
      +                          runErrorHandler);
  7029  004342  0EA8               	movlw	low _EUSART_DefaultOverrunErrorHandler
  7030  004344  6E05               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler^0,c
  7031  004346  0E4C               	movlw	high _EUSART_DefaultOverrunErrorHandler
  7032  004348  6E06               	movwf	(EUSART_SetOverrunErrorHandler@interruptHandler+1)^0,c
  7033  00434A  EC17  F026         	call	_EUSART_SetOverrunErrorHandler	;wreg free
  7034  00434E                     
  7035                           ;mcc_generated_files/eusart.c: 115:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandle
      +                          r);
  7036  00434E  0EAE               	movlw	low _EUSART_DefaultErrorHandler
  7037  004350  6E05               	movwf	EUSART_SetErrorHandler@interruptHandler^0,c
  7038  004352  0E4C               	movlw	high _EUSART_DefaultErrorHandler
  7039  004354  6E06               	movwf	(EUSART_SetErrorHandler@interruptHandler+1)^0,c
  7040  004356  EC21  F026         	call	_EUSART_SetErrorHandler	;wreg free
  7041                           
  7042                           ;mcc_generated_files/eusart.c: 117:     eusartRxLastError.status = 0;
  7043  00435A  0E00               	movlw	0
  7044  00435C  0100               	movlb	0	; () banked
  7045  00435E  6FF6               	movwf	_eusartRxLastError& (0+255),b	;volatile
  7046                           
  7047                           ;mcc_generated_files/eusart.c: 120:     eusartTxHead = 0;
  7048  004360  0E00               	movlw	0
  7049  004362  6E59               	movwf	_eusartTxHead^0,c	;volatile
  7050                           
  7051                           ;mcc_generated_files/eusart.c: 121:     eusartTxTail = 0;
  7052  004364  0E00               	movlw	0
  7053  004366  6E58               	movwf	_eusartTxTail^0,c	;volatile
  7054                           
  7055                           ;mcc_generated_files/eusart.c: 122:     eusartTxBufferRemaining = sizeof(eusartTxBuffer)
      +                          ;
  7056  004368  0E08               	movlw	8
  7057  00436A  6FFE               	movwf	_eusartTxBufferRemaining& (0+255),b	;volatile
  7058                           
  7059                           ;mcc_generated_files/eusart.c: 124:     eusartRxHead = 0;
  7060  00436C  0E00               	movlw	0
  7061  00436E  6E57               	movwf	_eusartRxHead^0,c	;volatile
  7062                           
  7063                           ;mcc_generated_files/eusart.c: 125:     eusartRxTail = 0;
  7064  004370  0E00               	movlw	0
  7065  004372  6E56               	movwf	_eusartRxTail^0,c	;volatile
  7066                           
  7067                           ;mcc_generated_files/eusart.c: 126:     eusartRxCount = 0;
  7068  004374  0E00               	movlw	0
  7069  004376  6FF7               	movwf	_eusartRxCount& (0+255),b	;volatile
  7070  004378                     
  7071                           ; BSR set to: 0
  7072                           ;mcc_generated_files/eusart.c: 129:     PIE1bits.RC1IE = 1;
  7073  004378  8A9D               	bsf	157,5,c	;volatile
  7074  00437A                     
  7075                           ; BSR set to: 0
  7076  00437A  0012               	return		;funcret
  7077  00437C                     __end_of_EUSART_Initialize:
  7078                           	callstack 0
  7079                           
  7080 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  7081 ;; Defined at:
  7082 ;;		line 285 in file "mcc_generated_files/eusart.c"
  7083 ;; Parameters:    Size  Location     Type
  7084 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  7085 ;;		 -> EUSART_Transmit_ISR(1), 
  7086 ;; Auto vars:     Size  Location     Type
  7087 ;;		None
  7088 ;; Return value:  Size  Location     Type
  7089 ;;                  1    wreg      void 
  7090 ;; Registers used:
  7091 ;;		wreg, status,2, status,0
  7092 ;; Tracked objects:
  7093 ;;		On entry : 0/0
  7094 ;;		On exit  : 0/0
  7095 ;;		Unchanged: 0/0
  7096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7097 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7100 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7101 ;;Total ram usage:        2 bytes
  7102 ;; Hardware stack levels used: 1
  7103 ;; Hardware stack levels required when called: 4
  7104 ;; This function calls:
  7105 ;;		Nothing
  7106 ;; This function is called by:
  7107 ;;		_EUSART_Initialize
  7108 ;; This function uses a non-reentrant model
  7109 ;;
  7110                           
  7111                           	psect	text33
  7112  004C1A                     __ptext33:
  7113                           	callstack 0
  7114  004C1A                     _EUSART_SetTxInterruptHandler:
  7115                           	callstack 24
  7116  004C1A                     
  7117                           ;mcc_generated_files/eusart.c: 286:     EUSART_TxDefaultInterruptHandler = interruptHand
      +                          ler;
  7118  004C1A  C005  F0FC         	movff	EUSART_SetTxInterruptHandler@interruptHandler,_EUSART_TxDefaultInterruptHandler
  7119  004C1E  C006  F0FD         	movff	EUSART_SetTxInterruptHandler@interruptHandler+1,_EUSART_TxDefaultInterruptHandler
      +                          +1
  7120  004C22  0012               	return		;funcret
  7121  004C24                     __end_of_EUSART_SetTxInterruptHandler:
  7122                           	callstack 0
  7123                           
  7124 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  7125 ;; Defined at:
  7126 ;;		line 289 in file "mcc_generated_files/eusart.c"
  7127 ;; Parameters:    Size  Location     Type
  7128 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  7129 ;;		 -> EUSART_Receive_ISR(1), 
  7130 ;; Auto vars:     Size  Location     Type
  7131 ;;		None
  7132 ;; Return value:  Size  Location     Type
  7133 ;;                  1    wreg      void 
  7134 ;; Registers used:
  7135 ;;		wreg, status,2, status,0
  7136 ;; Tracked objects:
  7137 ;;		On entry : 0/0
  7138 ;;		On exit  : 0/0
  7139 ;;		Unchanged: 0/0
  7140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7141 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7144 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7145 ;;Total ram usage:        2 bytes
  7146 ;; Hardware stack levels used: 1
  7147 ;; Hardware stack levels required when called: 4
  7148 ;; This function calls:
  7149 ;;		Nothing
  7150 ;; This function is called by:
  7151 ;;		_EUSART_Initialize
  7152 ;; This function uses a non-reentrant model
  7153 ;;
  7154                           
  7155                           	psect	text34
  7156  004C24                     __ptext34:
  7157                           	callstack 0
  7158  004C24                     _EUSART_SetRxInterruptHandler:
  7159                           	callstack 24
  7160  004C24                     
  7161                           ;mcc_generated_files/eusart.c: 290:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
  7162  004C24  C005  F0FA         	movff	EUSART_SetRxInterruptHandler@interruptHandler,_EUSART_RxDefaultInterruptHandler
  7163  004C28  C006  F0FB         	movff	EUSART_SetRxInterruptHandler@interruptHandler+1,_EUSART_RxDefaultInterruptHandler
      +                          +1
  7164  004C2C  0012               	return		;funcret
  7165  004C2E                     __end_of_EUSART_SetRxInterruptHandler:
  7166                           	callstack 0
  7167                           
  7168 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  7169 ;; Defined at:
  7170 ;;		line 277 in file "mcc_generated_files/eusart.c"
  7171 ;; Parameters:    Size  Location     Type
  7172 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  7173 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  7174 ;; Auto vars:     Size  Location     Type
  7175 ;;		None
  7176 ;; Return value:  Size  Location     Type
  7177 ;;                  1    wreg      void 
  7178 ;; Registers used:
  7179 ;;		wreg, status,2, status,0
  7180 ;; Tracked objects:
  7181 ;;		On entry : 0/0
  7182 ;;		On exit  : 0/0
  7183 ;;		Unchanged: 0/0
  7184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7185 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7188 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7189 ;;Total ram usage:        2 bytes
  7190 ;; Hardware stack levels used: 1
  7191 ;; Hardware stack levels required when called: 4
  7192 ;; This function calls:
  7193 ;;		Nothing
  7194 ;; This function is called by:
  7195 ;;		_EUSART_Initialize
  7196 ;; This function uses a non-reentrant model
  7197 ;;
  7198                           
  7199                           	psect	text35
  7200  004C2E                     __ptext35:
  7201                           	callstack 0
  7202  004C2E                     _EUSART_SetOverrunErrorHandler:
  7203                           	callstack 24
  7204  004C2E                     
  7205                           ;mcc_generated_files/eusart.c: 278:     EUSART_OverrunErrorHandler = interruptHandler;
  7206  004C2E  C005  F186         	movff	EUSART_SetOverrunErrorHandler@interruptHandler,_EUSART_OverrunErrorHandler
  7207  004C32  C006  F187         	movff	EUSART_SetOverrunErrorHandler@interruptHandler+1,_EUSART_OverrunErrorHandler+1
  7208  004C36  0012               	return		;funcret
  7209  004C38                     __end_of_EUSART_SetOverrunErrorHandler:
  7210                           	callstack 0
  7211                           
  7212 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  7213 ;; Defined at:
  7214 ;;		line 273 in file "mcc_generated_files/eusart.c"
  7215 ;; Parameters:    Size  Location     Type
  7216 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  7217 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  7218 ;; Auto vars:     Size  Location     Type
  7219 ;;		None
  7220 ;; Return value:  Size  Location     Type
  7221 ;;                  1    wreg      void 
  7222 ;; Registers used:
  7223 ;;		wreg, status,2, status,0
  7224 ;; Tracked objects:
  7225 ;;		On entry : 0/0
  7226 ;;		On exit  : 0/0
  7227 ;;		Unchanged: 0/0
  7228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7229 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7232 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7233 ;;Total ram usage:        2 bytes
  7234 ;; Hardware stack levels used: 1
  7235 ;; Hardware stack levels required when called: 4
  7236 ;; This function calls:
  7237 ;;		Nothing
  7238 ;; This function is called by:
  7239 ;;		_EUSART_Initialize
  7240 ;; This function uses a non-reentrant model
  7241 ;;
  7242                           
  7243                           	psect	text36
  7244  004C38                     __ptext36:
  7245                           	callstack 0
  7246  004C38                     _EUSART_SetFramingErrorHandler:
  7247                           	callstack 24
  7248  004C38                     
  7249                           ;mcc_generated_files/eusart.c: 274:     EUSART_FramingErrorHandler = interruptHandler;
  7250  004C38  C005  F0F8         	movff	EUSART_SetFramingErrorHandler@interruptHandler,_EUSART_FramingErrorHandler
  7251  004C3C  C006  F0F9         	movff	EUSART_SetFramingErrorHandler@interruptHandler+1,_EUSART_FramingErrorHandler+1
  7252  004C40  0012               	return		;funcret
  7253  004C42                     __end_of_EUSART_SetFramingErrorHandler:
  7254                           	callstack 0
  7255                           
  7256 ;; *************** function _EUSART_SetErrorHandler *****************
  7257 ;; Defined at:
  7258 ;;		line 281 in file "mcc_generated_files/eusart.c"
  7259 ;; Parameters:    Size  Location     Type
  7260 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  7261 ;;		 -> EUSART_DefaultErrorHandler(1), 
  7262 ;; Auto vars:     Size  Location     Type
  7263 ;;		None
  7264 ;; Return value:  Size  Location     Type
  7265 ;;                  1    wreg      void 
  7266 ;; Registers used:
  7267 ;;		wreg, status,2, status,0
  7268 ;; Tracked objects:
  7269 ;;		On entry : 0/0
  7270 ;;		On exit  : 0/0
  7271 ;;		Unchanged: 0/0
  7272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7273 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7276 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7277 ;;Total ram usage:        2 bytes
  7278 ;; Hardware stack levels used: 1
  7279 ;; Hardware stack levels required when called: 4
  7280 ;; This function calls:
  7281 ;;		Nothing
  7282 ;; This function is called by:
  7283 ;;		_EUSART_Initialize
  7284 ;; This function uses a non-reentrant model
  7285 ;;
  7286                           
  7287                           	psect	text37
  7288  004C42                     __ptext37:
  7289                           	callstack 0
  7290  004C42                     _EUSART_SetErrorHandler:
  7291                           	callstack 24
  7292  004C42                     
  7293                           ;mcc_generated_files/eusart.c: 282:     EUSART_ErrorHandler = interruptHandler;
  7294  004C42  C005  F184         	movff	EUSART_SetErrorHandler@interruptHandler,_EUSART_ErrorHandler
  7295  004C46  C006  F185         	movff	EUSART_SetErrorHandler@interruptHandler+1,_EUSART_ErrorHandler+1
  7296  004C4A  0012               	return		;funcret
  7297  004C4C                     __end_of_EUSART_SetErrorHandler:
  7298                           	callstack 0
  7299                           
  7300 ;; *************** function _SHT40_temp_GetValue *****************
  7301 ;; Defined at:
  7302 ;;		line 28 in file "sht40.c"
  7303 ;; Parameters:    Size  Location     Type
  7304 ;;		None
  7305 ;; Auto vars:     Size  Location     Type
  7306 ;;  tempDataAnz     4   78[COMRAM] float 
  7307 ;;  buffer          2   76[COMRAM] unsigned short 
  7308 ;; Return value:  Size  Location     Type
  7309 ;;                  4   70[COMRAM] float 
  7310 ;; Registers used:
  7311 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7312 ;; Tracked objects:
  7313 ;;		On entry : 0/0
  7314 ;;		On exit  : 0/0
  7315 ;;		Unchanged: 0/0
  7316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7317 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7318 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7319 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7320 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7321 ;;Total ram usage:       12 bytes
  7322 ;; Hardware stack levels used: 1
  7323 ;; Hardware stack levels required when called: 14
  7324 ;; This function calls:
  7325 ;;		_SHT40_Read
  7326 ;;		___fladd
  7327 ;;		___fldiv
  7328 ;;		___flmul
  7329 ;;		___xxtofl
  7330 ;; This function is called by:
  7331 ;;		_main
  7332 ;; This function uses a non-reentrant model
  7333 ;;
  7334                           
  7335                           	psect	text38
  7336  003A6C                     __ptext38:
  7337                           	callstack 0
  7338  003A6C                     _SHT40_temp_GetValue:
  7339                           	callstack 16
  7340  003A6C                     
  7341                           ;sht40.c: 29:     float tempDataAnz;;sht40.c: 30:     uint16_t buffer;;sht40.c: 32:     
      +                          SHT40_Read();
  7342  003A6C  ECA4  F023         	call	_SHT40_Read	;wreg free
  7343  003A70                     
  7344                           ;sht40.c: 33:     buffer = readBuffer[0] * 256 + readBuffer[1];
  7345  003A70  0101               	movlb	1	; () banked
  7346  003A72  5174               	movf	_readBuffer& (0+255),w,b
  7347  003A74  6E4C               	movwf	(??_SHT40_temp_GetValue+1)^0,c
  7348  003A76  6A4B               	clrf	??_SHT40_temp_GetValue^0,c
  7349  003A78  5175               	movf	(_readBuffer+1)& (0+255),w,b
  7350  003A7A  244B               	addwf	??_SHT40_temp_GetValue^0,w,c
  7351  003A7C  6E4D               	movwf	SHT40_temp_GetValue@buffer^0,c
  7352  003A7E  0E00               	movlw	0
  7353  003A80  204C               	addwfc	(??_SHT40_temp_GetValue+1)^0,w,c
  7354  003A82  6E4E               	movwf	(SHT40_temp_GetValue@buffer+1)^0,c
  7355  003A84                     
  7356                           ; BSR set to: 1
  7357                           ;sht40.c: 34:     tempDataAnz = buffer;
  7358  003A84  C04D  F005         	movff	SHT40_temp_GetValue@buffer,___xxtofl@val
  7359  003A88  C04E  F006         	movff	SHT40_temp_GetValue@buffer+1,___xxtofl@val+1
  7360  003A8C  6A07               	clrf	(___xxtofl@val+2)^0,c
  7361  003A8E  6A08               	clrf	(___xxtofl@val+3)^0,c
  7362  003A90  0E00               	movlw	0
  7363  003A92  EC09  F019         	call	___xxtofl
  7364  003A96  C005  F04F         	movff	?___xxtofl,SHT40_temp_GetValue@tempDataAnz
  7365  003A9A  C006  F050         	movff	?___xxtofl+1,SHT40_temp_GetValue@tempDataAnz+1
  7366  003A9E  C007  F051         	movff	?___xxtofl+2,SHT40_temp_GetValue@tempDataAnz+2
  7367  003AA2  C008  F052         	movff	?___xxtofl+3,SHT40_temp_GetValue@tempDataAnz+3
  7368  003AA6                     
  7369                           ;sht40.c: 35:     tempDataAnz = -45 + 175 * tempDataAnz/65535;
  7370  003AA6  0E00               	movlw	0
  7371  003AA8  6E22               	movwf	___fldiv@a^0,c
  7372  003AAA  0EFF               	movlw	255
  7373  003AAC  6E23               	movwf	(___fldiv@a+1)^0,c
  7374  003AAE  0E7F               	movlw	127
  7375  003AB0  6E24               	movwf	(___fldiv@a+2)^0,c
  7376  003AB2  0E47               	movlw	71
  7377  003AB4  6E25               	movwf	(___fldiv@a+3)^0,c
  7378  003AB6  0E00               	movlw	0
  7379  003AB8  6E09               	movwf	___flmul@a^0,c
  7380  003ABA  0E00               	movlw	0
  7381  003ABC  6E0A               	movwf	(___flmul@a+1)^0,c
  7382  003ABE  0E2F               	movlw	47
  7383  003AC0  6E0B               	movwf	(___flmul@a+2)^0,c
  7384  003AC2  0E43               	movlw	67
  7385  003AC4  6E0C               	movwf	(___flmul@a+3)^0,c
  7386  003AC6  C04F  F005         	movff	SHT40_temp_GetValue@tempDataAnz,___flmul@b
  7387  003ACA  C050  F006         	movff	SHT40_temp_GetValue@tempDataAnz+1,___flmul@b+1
  7388  003ACE  C051  F007         	movff	SHT40_temp_GetValue@tempDataAnz+2,___flmul@b+2
  7389  003AD2  C052  F008         	movff	SHT40_temp_GetValue@tempDataAnz+3,___flmul@b+3
  7390  003AD6  EC1E  F014         	call	___flmul	;wreg free
  7391  003ADA  C005  F01E         	movff	?___flmul,___fldiv@b
  7392  003ADE  C006  F01F         	movff	?___flmul+1,___fldiv@b+1
  7393  003AE2  C007  F020         	movff	?___flmul+2,___fldiv@b+2
  7394  003AE6  C008  F021         	movff	?___flmul+3,___fldiv@b+3
  7395  003AEA  EC33  F016         	call	___fldiv	;wreg free
  7396  003AEE  C01E  F037         	movff	?___fldiv,___fladd@b
  7397  003AF2  C01F  F038         	movff	?___fldiv+1,___fladd@b+1
  7398  003AF6  C020  F039         	movff	?___fldiv+2,___fladd@b+2
  7399  003AFA  C021  F03A         	movff	?___fldiv+3,___fladd@b+3
  7400  003AFE  0E00               	movlw	0
  7401  003B00  6E3B               	movwf	___fladd@a^0,c
  7402  003B02  0E00               	movlw	0
  7403  003B04  6E3C               	movwf	(___fladd@a+1)^0,c
  7404  003B06  0E34               	movlw	52
  7405  003B08  6E3D               	movwf	(___fladd@a+2)^0,c
  7406  003B0A  0EC2               	movlw	194
  7407  003B0C  6E3E               	movwf	(___fladd@a+3)^0,c
  7408  003B0E  ECBE  F011         	call	___fladd	;wreg free
  7409  003B12  C037  F04F         	movff	?___fladd,SHT40_temp_GetValue@tempDataAnz
  7410  003B16  C038  F050         	movff	?___fladd+1,SHT40_temp_GetValue@tempDataAnz+1
  7411  003B1A  C039  F051         	movff	?___fladd+2,SHT40_temp_GetValue@tempDataAnz+2
  7412  003B1E  C03A  F052         	movff	?___fladd+3,SHT40_temp_GetValue@tempDataAnz+3
  7413  003B22                     
  7414                           ;sht40.c: 37:     return tempDataAnz;
  7415  003B22  C04F  F047         	movff	SHT40_temp_GetValue@tempDataAnz,?_SHT40_temp_GetValue
  7416  003B26  C050  F048         	movff	SHT40_temp_GetValue@tempDataAnz+1,?_SHT40_temp_GetValue+1
  7417  003B2A  C051  F049         	movff	SHT40_temp_GetValue@tempDataAnz+2,?_SHT40_temp_GetValue+2
  7418  003B2E  C052  F04A         	movff	SHT40_temp_GetValue@tempDataAnz+3,?_SHT40_temp_GetValue+3
  7419  003B32  0012               	return		;funcret
  7420  003B34                     __end_of_SHT40_temp_GetValue:
  7421                           	callstack 0
  7422                           
  7423 ;; *************** function _SHT40_humy_GetValue *****************
  7424 ;; Defined at:
  7425 ;;		line 40 in file "sht40.c"
  7426 ;; Parameters:    Size  Location     Type
  7427 ;;		None
  7428 ;; Auto vars:     Size  Location     Type
  7429 ;;  pressDataAnz    4   78[COMRAM] float 
  7430 ;;  buffer          2   76[COMRAM] unsigned short 
  7431 ;; Return value:  Size  Location     Type
  7432 ;;                  4   70[COMRAM] float 
  7433 ;; Registers used:
  7434 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7435 ;; Tracked objects:
  7436 ;;		On entry : 0/0
  7437 ;;		On exit  : 0/0
  7438 ;;		Unchanged: 0/0
  7439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7440 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7441 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7442 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7443 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7444 ;;Total ram usage:       12 bytes
  7445 ;; Hardware stack levels used: 1
  7446 ;; Hardware stack levels required when called: 14
  7447 ;; This function calls:
  7448 ;;		_SHT40_Read
  7449 ;;		___fladd
  7450 ;;		___fldiv
  7451 ;;		___flge
  7452 ;;		___flmul
  7453 ;;		___xxtofl
  7454 ;; This function is called by:
  7455 ;;		_main
  7456 ;; This function uses a non-reentrant model
  7457 ;;
  7458                           
  7459                           	psect	text39
  7460  003560                     __ptext39:
  7461                           	callstack 0
  7462  003560                     _SHT40_humy_GetValue:
  7463                           	callstack 16
  7464  003560                     
  7465                           ;sht40.c: 41:     float pressDataAnz;;sht40.c: 42:     uint16_t buffer;;sht40.c: 44:    
      +                           SHT40_Read();
  7466  003560  ECA4  F023         	call	_SHT40_Read	;wreg free
  7467  003564                     
  7468                           ;sht40.c: 45:     buffer = readBuffer[3] * 256 + readBuffer[4];
  7469  003564  0101               	movlb	1	; () banked
  7470  003566  5177               	movf	(_readBuffer+3)& (0+255),w,b
  7471  003568  6E4C               	movwf	(??_SHT40_humy_GetValue+1)^0,c
  7472  00356A  6A4B               	clrf	??_SHT40_humy_GetValue^0,c
  7473  00356C  5178               	movf	(_readBuffer+4)& (0+255),w,b
  7474  00356E  244B               	addwf	??_SHT40_humy_GetValue^0,w,c
  7475  003570  6E4D               	movwf	SHT40_humy_GetValue@buffer^0,c
  7476  003572  0E00               	movlw	0
  7477  003574  204C               	addwfc	(??_SHT40_humy_GetValue+1)^0,w,c
  7478  003576  6E4E               	movwf	(SHT40_humy_GetValue@buffer+1)^0,c
  7479  003578                     
  7480                           ; BSR set to: 1
  7481                           ;sht40.c: 46:     pressDataAnz = buffer;
  7482  003578  C04D  F005         	movff	SHT40_humy_GetValue@buffer,___xxtofl@val
  7483  00357C  C04E  F006         	movff	SHT40_humy_GetValue@buffer+1,___xxtofl@val+1
  7484  003580  6A07               	clrf	(___xxtofl@val+2)^0,c
  7485  003582  6A08               	clrf	(___xxtofl@val+3)^0,c
  7486  003584  0E00               	movlw	0
  7487  003586  EC09  F019         	call	___xxtofl
  7488  00358A  C005  F04F         	movff	?___xxtofl,SHT40_humy_GetValue@pressDataAnz
  7489  00358E  C006  F050         	movff	?___xxtofl+1,SHT40_humy_GetValue@pressDataAnz+1
  7490  003592  C007  F051         	movff	?___xxtofl+2,SHT40_humy_GetValue@pressDataAnz+2
  7491  003596  C008  F052         	movff	?___xxtofl+3,SHT40_humy_GetValue@pressDataAnz+3
  7492  00359A                     
  7493                           ;sht40.c: 47:     pressDataAnz = -6 + 125 * pressDataAnz/65535;
  7494  00359A  0E00               	movlw	0
  7495  00359C  6E22               	movwf	___fldiv@a^0,c
  7496  00359E  0EFF               	movlw	255
  7497  0035A0  6E23               	movwf	(___fldiv@a+1)^0,c
  7498  0035A2  0E7F               	movlw	127
  7499  0035A4  6E24               	movwf	(___fldiv@a+2)^0,c
  7500  0035A6  0E47               	movlw	71
  7501  0035A8  6E25               	movwf	(___fldiv@a+3)^0,c
  7502  0035AA  0E00               	movlw	0
  7503  0035AC  6E09               	movwf	___flmul@a^0,c
  7504  0035AE  0E00               	movlw	0
  7505  0035B0  6E0A               	movwf	(___flmul@a+1)^0,c
  7506  0035B2  0EFA               	movlw	250
  7507  0035B4  6E0B               	movwf	(___flmul@a+2)^0,c
  7508  0035B6  0E42               	movlw	66
  7509  0035B8  6E0C               	movwf	(___flmul@a+3)^0,c
  7510  0035BA  C04F  F005         	movff	SHT40_humy_GetValue@pressDataAnz,___flmul@b
  7511  0035BE  C050  F006         	movff	SHT40_humy_GetValue@pressDataAnz+1,___flmul@b+1
  7512  0035C2  C051  F007         	movff	SHT40_humy_GetValue@pressDataAnz+2,___flmul@b+2
  7513  0035C6  C052  F008         	movff	SHT40_humy_GetValue@pressDataAnz+3,___flmul@b+3
  7514  0035CA  EC1E  F014         	call	___flmul	;wreg free
  7515  0035CE  C005  F01E         	movff	?___flmul,___fldiv@b
  7516  0035D2  C006  F01F         	movff	?___flmul+1,___fldiv@b+1
  7517  0035D6  C007  F020         	movff	?___flmul+2,___fldiv@b+2
  7518  0035DA  C008  F021         	movff	?___flmul+3,___fldiv@b+3
  7519  0035DE  EC33  F016         	call	___fldiv	;wreg free
  7520  0035E2  C01E  F037         	movff	?___fldiv,___fladd@b
  7521  0035E6  C01F  F038         	movff	?___fldiv+1,___fladd@b+1
  7522  0035EA  C020  F039         	movff	?___fldiv+2,___fladd@b+2
  7523  0035EE  C021  F03A         	movff	?___fldiv+3,___fladd@b+3
  7524  0035F2  0E00               	movlw	0
  7525  0035F4  6E3B               	movwf	___fladd@a^0,c
  7526  0035F6  0E00               	movlw	0
  7527  0035F8  6E3C               	movwf	(___fladd@a+1)^0,c
  7528  0035FA  0EC0               	movlw	192
  7529  0035FC  6E3D               	movwf	(___fladd@a+2)^0,c
  7530  0035FE  0EC0               	movlw	192
  7531  003600  6E3E               	movwf	(___fladd@a+3)^0,c
  7532  003602  ECBE  F011         	call	___fladd	;wreg free
  7533  003606  C037  F04F         	movff	?___fladd,SHT40_humy_GetValue@pressDataAnz
  7534  00360A  C038  F050         	movff	?___fladd+1,SHT40_humy_GetValue@pressDataAnz+1
  7535  00360E  C039  F051         	movff	?___fladd+2,SHT40_humy_GetValue@pressDataAnz+2
  7536  003612  C03A  F052         	movff	?___fladd+3,SHT40_humy_GetValue@pressDataAnz+3
  7537  003616                     
  7538                           ;sht40.c: 49:     if(pressDataAnz > 100){
  7539  003616  0E00               	movlw	0
  7540  003618  6E1E               	movwf	___flge@ff1^0,c
  7541  00361A  0E00               	movlw	0
  7542  00361C  6E1F               	movwf	(___flge@ff1+1)^0,c
  7543  00361E  0EC8               	movlw	200
  7544  003620  6E20               	movwf	(___flge@ff1+2)^0,c
  7545  003622  0E42               	movlw	66
  7546  003624  6E21               	movwf	(___flge@ff1+3)^0,c
  7547  003626  C04F  F022         	movff	SHT40_humy_GetValue@pressDataAnz,___flge@ff2
  7548  00362A  C050  F023         	movff	SHT40_humy_GetValue@pressDataAnz+1,___flge@ff2+1
  7549  00362E  C051  F024         	movff	SHT40_humy_GetValue@pressDataAnz+2,___flge@ff2+2
  7550  003632  C052  F025         	movff	SHT40_humy_GetValue@pressDataAnz+3,___flge@ff2+3
  7551  003636  ECC7  F01B         	call	___flge	;wreg free
  7552  00363A  B0D8               	btfsc	status,0,c
  7553  00363C  EF22  F01B         	goto	u5901
  7554  003640  EF24  F01B         	goto	u5900
  7555  003644                     u5901:
  7556  003644  EF2C  F01B         	goto	l5999
  7557  003648                     u5900:
  7558  003648                     
  7559                           ;sht40.c: 50:         pressDataAnz = 100;
  7560  003648  0E00               	movlw	0
  7561  00364A  6E4F               	movwf	SHT40_humy_GetValue@pressDataAnz^0,c
  7562  00364C  0E00               	movlw	0
  7563  00364E  6E50               	movwf	(SHT40_humy_GetValue@pressDataAnz+1)^0,c
  7564  003650  0EC8               	movlw	200
  7565  003652  6E51               	movwf	(SHT40_humy_GetValue@pressDataAnz+2)^0,c
  7566  003654  0E42               	movlw	66
  7567  003656  6E52               	movwf	(SHT40_humy_GetValue@pressDataAnz+3)^0,c
  7568  003658                     l5999:
  7569                           
  7570                           ;sht40.c: 52:     if (pressDataAnz < 0){
  7571  003658  BE52               	btfsc	(SHT40_humy_GetValue@pressDataAnz+3)^0,7,c
  7572  00365A  EF33  F01B         	goto	u5910
  7573  00365E  EF31  F01B         	goto	u5911
  7574  003662                     u5911:
  7575  003662  EF3B  F01B         	goto	l6003
  7576  003666                     u5910:
  7577  003666                     
  7578                           ;sht40.c: 53:         pressDataAnz = 0;
  7579  003666  0E00               	movlw	0
  7580  003668  6E4F               	movwf	SHT40_humy_GetValue@pressDataAnz^0,c
  7581  00366A  0E00               	movlw	0
  7582  00366C  6E50               	movwf	(SHT40_humy_GetValue@pressDataAnz+1)^0,c
  7583  00366E  0E00               	movlw	0
  7584  003670  6E51               	movwf	(SHT40_humy_GetValue@pressDataAnz+2)^0,c
  7585  003672  0E00               	movlw	0
  7586  003674  6E52               	movwf	(SHT40_humy_GetValue@pressDataAnz+3)^0,c
  7587  003676                     l6003:
  7588                           
  7589                           ;sht40.c: 56:     return pressDataAnz;
  7590  003676  C04F  F047         	movff	SHT40_humy_GetValue@pressDataAnz,?_SHT40_humy_GetValue
  7591  00367A  C050  F048         	movff	SHT40_humy_GetValue@pressDataAnz+1,?_SHT40_humy_GetValue+1
  7592  00367E  C051  F049         	movff	SHT40_humy_GetValue@pressDataAnz+2,?_SHT40_humy_GetValue+2
  7593  003682  C052  F04A         	movff	SHT40_humy_GetValue@pressDataAnz+3,?_SHT40_humy_GetValue+3
  7594  003686  0012               	return		;funcret
  7595  003688                     __end_of_SHT40_humy_GetValue:
  7596                           	callstack 0
  7597                           
  7598 ;; *************** function ___xxtofl *****************
  7599 ;; Defined at:
  7600 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  7601 ;; Parameters:    Size  Location     Type
  7602 ;;  sign            1    wreg     unsigned char 
  7603 ;;  val             4    4[COMRAM] long 
  7604 ;; Auto vars:     Size  Location     Type
  7605 ;;  sign            1   12[COMRAM] unsigned char 
  7606 ;;  arg             4   14[COMRAM] unsigned long 
  7607 ;;  exp             1   13[COMRAM] unsigned char 
  7608 ;; Return value:  Size  Location     Type
  7609 ;;                  4    4[COMRAM] unsigned char 
  7610 ;; Registers used:
  7611 ;;		wreg, status,2, status,0
  7612 ;; Tracked objects:
  7613 ;;		On entry : 0/0
  7614 ;;		On exit  : 0/0
  7615 ;;		Unchanged: 0/0
  7616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7617 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7618 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7619 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7620 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7621 ;;Total ram usage:       14 bytes
  7622 ;; Hardware stack levels used: 1
  7623 ;; Hardware stack levels required when called: 4
  7624 ;; This function calls:
  7625 ;;		Nothing
  7626 ;; This function is called by:
  7627 ;;		_SHT40_temp_GetValue
  7628 ;;		_SHT40_humy_GetValue
  7629 ;; This function uses a non-reentrant model
  7630 ;;
  7631                           
  7632                           	psect	text40
  7633  003212                     __ptext40:
  7634                           	callstack 0
  7635  003212                     ___xxtofl:
  7636                           	callstack 25
  7637                           
  7638                           ;incstack = 0
  7639                           ;___xxtofl@sign stored from wreg
  7640  003212  6E0D               	movwf	___xxtofl@sign^0,c
  7641  003214  500D               	movf	___xxtofl@sign^0,w,c
  7642  003216  B4D8               	btfsc	status,2,c
  7643  003218  EF10  F019         	goto	u5671
  7644  00321C  EF12  F019         	goto	u5670
  7645  003220                     u5671:
  7646  003220  EF34  F019         	goto	l1379
  7647  003224                     u5670:
  7648  003224  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  7649  003226  EF19  F019         	goto	u5680
  7650  00322A  EF17  F019         	goto	u5681
  7651  00322E                     u5681:
  7652  00322E  EF34  F019         	goto	l1379
  7653  003232                     u5680:
  7654  003232  C005  F009         	movff	___xxtofl@val,??___xxtofl
  7655  003236  C006  F00A         	movff	___xxtofl@val+1,??___xxtofl+1
  7656  00323A  C007  F00B         	movff	___xxtofl@val+2,??___xxtofl+2
  7657  00323E  C008  F00C         	movff	___xxtofl@val+3,??___xxtofl+3
  7658  003242  1E09               	comf	??___xxtofl^0,f,c
  7659  003244  1E0A               	comf	(??___xxtofl+1)^0,f,c
  7660  003246  1E0B               	comf	(??___xxtofl+2)^0,f,c
  7661  003248  1E0C               	comf	(??___xxtofl+3)^0,f,c
  7662  00324A  2A09               	incf	??___xxtofl^0,f,c
  7663  00324C  0E00               	movlw	0
  7664  00324E  220A               	addwfc	(??___xxtofl+1)^0,f,c
  7665  003250  220B               	addwfc	(??___xxtofl+2)^0,f,c
  7666  003252  220C               	addwfc	(??___xxtofl+3)^0,f,c
  7667  003254  C009  F00F         	movff	??___xxtofl,___xxtofl@arg
  7668  003258  C00A  F010         	movff	??___xxtofl+1,___xxtofl@arg+1
  7669  00325C  C00B  F011         	movff	??___xxtofl+2,___xxtofl@arg+2
  7670  003260  C00C  F012         	movff	??___xxtofl+3,___xxtofl@arg+3
  7671  003264  EF3C  F019         	goto	l5849
  7672  003268                     l1379:
  7673  003268  C005  F00F         	movff	___xxtofl@val,___xxtofl@arg
  7674  00326C  C006  F010         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7675  003270  C007  F011         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7676  003274  C008  F012         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7677  003278                     l5849:
  7678  003278  5005               	movf	___xxtofl@val^0,w,c
  7679  00327A  1006               	iorwf	(___xxtofl@val+1)^0,w,c
  7680  00327C  1007               	iorwf	(___xxtofl@val+2)^0,w,c
  7681  00327E  1008               	iorwf	(___xxtofl@val+3)^0,w,c
  7682  003280  A4D8               	btfss	status,2,c
  7683  003282  EF45  F019         	goto	u5691
  7684  003286  EF47  F019         	goto	u5690
  7685  00328A                     u5691:
  7686  00328A  EF51  F019         	goto	l5855
  7687  00328E                     u5690:
  7688  00328E  0E00               	movlw	0
  7689  003290  6E05               	movwf	?___xxtofl^0,c
  7690  003292  0E00               	movlw	0
  7691  003294  6E06               	movwf	(?___xxtofl+1)^0,c
  7692  003296  0E00               	movlw	0
  7693  003298  6E07               	movwf	(?___xxtofl+2)^0,c
  7694  00329A  0E00               	movlw	0
  7695  00329C  6E08               	movwf	(?___xxtofl+3)^0,c
  7696  00329E  EFE2  F019         	goto	l1382
  7697  0032A2                     l5855:
  7698  0032A2  0E96               	movlw	150
  7699  0032A4  6E0E               	movwf	___xxtofl@exp^0,c
  7700  0032A6  EF5B  F019         	goto	l5859
  7701  0032AA                     l5857:
  7702  0032AA  2A0E               	incf	___xxtofl@exp^0,f,c
  7703  0032AC  90D8               	bcf	status,0,c
  7704  0032AE  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  7705  0032B0  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  7706  0032B2  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  7707  0032B4  320F               	rrcf	___xxtofl@arg^0,f,c
  7708  0032B6                     l5859:
  7709  0032B6  0E00               	movlw	0
  7710  0032B8  140F               	andwf	___xxtofl@arg^0,w,c
  7711  0032BA  6E09               	movwf	??___xxtofl^0,c
  7712  0032BC  0E00               	movlw	0
  7713  0032BE  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  7714  0032C0  6E0A               	movwf	(??___xxtofl+1)^0,c
  7715  0032C2  0E00               	movlw	0
  7716  0032C4  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  7717  0032C6  6E0B               	movwf	(??___xxtofl+2)^0,c
  7718  0032C8  0EFE               	movlw	254
  7719  0032CA  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  7720  0032CC  6E0C               	movwf	(??___xxtofl+3)^0,c
  7721  0032CE  5009               	movf	??___xxtofl^0,w,c
  7722  0032D0  100A               	iorwf	(??___xxtofl+1)^0,w,c
  7723  0032D2  100B               	iorwf	(??___xxtofl+2)^0,w,c
  7724  0032D4  100C               	iorwf	(??___xxtofl+3)^0,w,c
  7725  0032D6  A4D8               	btfss	status,2,c
  7726  0032D8  EF70  F019         	goto	u5701
  7727  0032DC  EF72  F019         	goto	u5700
  7728  0032E0                     u5701:
  7729  0032E0  EF55  F019         	goto	l5857
  7730  0032E4                     u5700:
  7731  0032E4  EF80  F019         	goto	l1386
  7732  0032E8                     l5861:
  7733  0032E8  2A0E               	incf	___xxtofl@exp^0,f,c
  7734  0032EA  0E01               	movlw	1
  7735  0032EC  260F               	addwf	___xxtofl@arg^0,f,c
  7736  0032EE  0E00               	movlw	0
  7737  0032F0  2210               	addwfc	(___xxtofl@arg+1)^0,f,c
  7738  0032F2  2211               	addwfc	(___xxtofl@arg+2)^0,f,c
  7739  0032F4  2212               	addwfc	(___xxtofl@arg+3)^0,f,c
  7740  0032F6  90D8               	bcf	status,0,c
  7741  0032F8  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  7742  0032FA  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  7743  0032FC  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  7744  0032FE  320F               	rrcf	___xxtofl@arg^0,f,c
  7745  003300                     l1386:
  7746  003300  0E00               	movlw	0
  7747  003302  140F               	andwf	___xxtofl@arg^0,w,c
  7748  003304  6E09               	movwf	??___xxtofl^0,c
  7749  003306  0E00               	movlw	0
  7750  003308  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  7751  00330A  6E0A               	movwf	(??___xxtofl+1)^0,c
  7752  00330C  0E00               	movlw	0
  7753  00330E  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  7754  003310  6E0B               	movwf	(??___xxtofl+2)^0,c
  7755  003312  0EFF               	movlw	255
  7756  003314  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  7757  003316  6E0C               	movwf	(??___xxtofl+3)^0,c
  7758  003318  5009               	movf	??___xxtofl^0,w,c
  7759  00331A  100A               	iorwf	(??___xxtofl+1)^0,w,c
  7760  00331C  100B               	iorwf	(??___xxtofl+2)^0,w,c
  7761  00331E  100C               	iorwf	(??___xxtofl+3)^0,w,c
  7762  003320  A4D8               	btfss	status,2,c
  7763  003322  EF95  F019         	goto	u5711
  7764  003326  EF97  F019         	goto	u5710
  7765  00332A                     u5711:
  7766  00332A  EF74  F019         	goto	l5861
  7767  00332E                     u5710:
  7768  00332E  EF9F  F019         	goto	l5869
  7769  003332                     l5867:
  7770  003332  060E               	decf	___xxtofl@exp^0,f,c
  7771  003334  90D8               	bcf	status,0,c
  7772  003336  360F               	rlcf	___xxtofl@arg^0,f,c
  7773  003338  3610               	rlcf	(___xxtofl@arg+1)^0,f,c
  7774  00333A  3611               	rlcf	(___xxtofl@arg+2)^0,f,c
  7775  00333C  3612               	rlcf	(___xxtofl@arg+3)^0,f,c
  7776  00333E                     l5869:
  7777  00333E  BE11               	btfsc	(___xxtofl@arg+2)^0,7,c
  7778  003340  EFA4  F019         	goto	u5721
  7779  003344  EFA6  F019         	goto	u5720
  7780  003348                     u5721:
  7781  003348  EFAE  F019         	goto	l1393
  7782  00334C                     u5720:
  7783  00334C  0E02               	movlw	2
  7784  00334E  600E               	cpfslt	___xxtofl@exp^0,c
  7785  003350  EFAC  F019         	goto	u5731
  7786  003354  EFAE  F019         	goto	u5730
  7787  003358                     u5731:
  7788  003358  EF99  F019         	goto	l5867
  7789  00335C                     u5730:
  7790  00335C                     l1393:
  7791  00335C  B00E               	btfsc	___xxtofl@exp^0,0,c
  7792  00335E  EFB3  F019         	goto	u5741
  7793  003362  EFB5  F019         	goto	u5740
  7794  003366                     u5741:
  7795  003366  EFB6  F019         	goto	l5875
  7796  00336A                     u5740:
  7797  00336A  9E11               	bcf	(___xxtofl@arg+2)^0,7,c
  7798  00336C                     l5875:
  7799  00336C  90D8               	bcf	status,0,c
  7800  00336E  320E               	rrcf	___xxtofl@exp^0,f,c
  7801  003370  C00E  F009         	movff	___xxtofl@exp,??___xxtofl
  7802  003374  6A0A               	clrf	(??___xxtofl+1)^0,c
  7803  003376  6A0B               	clrf	(??___xxtofl+2)^0,c
  7804  003378  6A0C               	clrf	(??___xxtofl+3)^0,c
  7805  00337A  C009  F00C         	movff	??___xxtofl,??___xxtofl+3
  7806  00337E  6A0B               	clrf	(??___xxtofl+2)^0,c
  7807  003380  6A0A               	clrf	(??___xxtofl+1)^0,c
  7808  003382  6A09               	clrf	??___xxtofl^0,c
  7809  003384  5009               	movf	??___xxtofl^0,w,c
  7810  003386  120F               	iorwf	___xxtofl@arg^0,f,c
  7811  003388  500A               	movf	(??___xxtofl+1)^0,w,c
  7812  00338A  1210               	iorwf	(___xxtofl@arg+1)^0,f,c
  7813  00338C  500B               	movf	(??___xxtofl+2)^0,w,c
  7814  00338E  1211               	iorwf	(___xxtofl@arg+2)^0,f,c
  7815  003390  500C               	movf	(??___xxtofl+3)^0,w,c
  7816  003392  1212               	iorwf	(___xxtofl@arg+3)^0,f,c
  7817  003394  500D               	movf	___xxtofl@sign^0,w,c
  7818  003396  B4D8               	btfsc	status,2,c
  7819  003398  EFD0  F019         	goto	u5751
  7820  00339C  EFD2  F019         	goto	u5750
  7821  0033A0                     u5751:
  7822  0033A0  EFDA  F019         	goto	l5885
  7823  0033A4                     u5750:
  7824  0033A4  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  7825  0033A6  EFD9  F019         	goto	u5760
  7826  0033AA  EFD7  F019         	goto	u5761
  7827  0033AE                     u5761:
  7828  0033AE  EFDA  F019         	goto	l5885
  7829  0033B2                     u5760:
  7830  0033B2  8E12               	bsf	(___xxtofl@arg+3)^0,7,c
  7831  0033B4                     l5885:
  7832  0033B4  C00F  F005         	movff	___xxtofl@arg,?___xxtofl
  7833  0033B8  C010  F006         	movff	___xxtofl@arg+1,?___xxtofl+1
  7834  0033BC  C011  F007         	movff	___xxtofl@arg+2,?___xxtofl+2
  7835  0033C0  C012  F008         	movff	___xxtofl@arg+3,?___xxtofl+3
  7836  0033C4                     l1382:
  7837  0033C4  0012               	return		;funcret
  7838  0033C6                     __end_of___xxtofl:
  7839                           	callstack 0
  7840                           
  7841 ;; *************** function ___flmul *****************
  7842 ;; Defined at:
  7843 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
  7844 ;; Parameters:    Size  Location     Type
  7845 ;;  b               4    4[COMRAM] unsigned char 
  7846 ;;  a               4    8[COMRAM] unsigned char 
  7847 ;; Auto vars:     Size  Location     Type
  7848 ;;  prod            4   23[COMRAM] struct .
  7849 ;;  grs             4   17[COMRAM] unsigned long 
  7850 ;;  temp            2   27[COMRAM] struct .
  7851 ;;  bexp            1   22[COMRAM] unsigned char 
  7852 ;;  aexp            1   21[COMRAM] unsigned char 
  7853 ;;  sign            1   16[COMRAM] unsigned char 
  7854 ;; Return value:  Size  Location     Type
  7855 ;;                  4    4[COMRAM] unsigned char 
  7856 ;; Registers used:
  7857 ;;		wreg, status,2, status,0, prodl, prodh
  7858 ;; Tracked objects:
  7859 ;;		On entry : 0/0
  7860 ;;		On exit  : 0/0
  7861 ;;		Unchanged: 0/0
  7862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7863 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7864 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7865 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7866 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7867 ;;Total ram usage:       25 bytes
  7868 ;; Hardware stack levels used: 1
  7869 ;; Hardware stack levels required when called: 4
  7870 ;; This function calls:
  7871 ;;		Nothing
  7872 ;; This function is called by:
  7873 ;;		_SHT40_temp_GetValue
  7874 ;;		_SHT40_humy_GetValue
  7875 ;;		_efgtoa
  7876 ;; This function uses a non-reentrant model
  7877 ;;
  7878                           
  7879                           	psect	text41
  7880  00283C                     __ptext41:
  7881                           	callstack 0
  7882  00283C                     ___flmul:
  7883                           	callstack 22
  7884  00283C  5008               	movf	(___flmul@b+3)^0,w,c
  7885  00283E  0B80               	andlw	128
  7886  002840  6E11               	movwf	___flmul@sign^0,c
  7887  002842  5008               	movf	(___flmul@b+3)^0,w,c
  7888  002844  2408               	addwf	(___flmul@b+3)^0,w,c
  7889  002846  6E17               	movwf	___flmul@bexp^0,c
  7890  002848  AE07               	btfss	(___flmul@b+2)^0,7,c
  7891  00284A  EF29  F014         	goto	u3961
  7892  00284E  EF2B  F014         	goto	u3960
  7893  002852                     u3961:
  7894  002852  EF2C  F014         	goto	l4755
  7895  002856                     u3960:
  7896  002856  8017               	bsf	___flmul@bexp^0,0,c
  7897  002858                     l4755:
  7898  002858  5017               	movf	___flmul@bexp^0,w,c
  7899  00285A  B4D8               	btfsc	status,2,c
  7900  00285C  EF32  F014         	goto	u3971
  7901  002860  EF34  F014         	goto	u3970
  7902  002864                     u3971:
  7903  002864  EF47  F014         	goto	l4763
  7904  002868                     u3970:
  7905  002868  2817               	incf	___flmul@bexp^0,w,c
  7906  00286A  A4D8               	btfss	status,2,c
  7907  00286C  EF3A  F014         	goto	u3981
  7908  002870  EF3C  F014         	goto	u3980
  7909  002874                     u3981:
  7910  002874  EF44  F014         	goto	l4761
  7911  002878                     u3980:
  7912  002878  0E00               	movlw	0
  7913  00287A  6E05               	movwf	___flmul@b^0,c
  7914  00287C  0E00               	movlw	0
  7915  00287E  6E06               	movwf	(___flmul@b+1)^0,c
  7916  002880  0E00               	movlw	0
  7917  002882  6E07               	movwf	(___flmul@b+2)^0,c
  7918  002884  0E00               	movlw	0
  7919  002886  6E08               	movwf	(___flmul@b+3)^0,c
  7920  002888                     l4761:
  7921  002888  8E07               	bsf	(___flmul@b+2)^0,7,c
  7922  00288A  EF4F  F014         	goto	l4765
  7923  00288E                     l4763:
  7924  00288E  0E00               	movlw	0
  7925  002890  6E05               	movwf	___flmul@b^0,c
  7926  002892  0E00               	movlw	0
  7927  002894  6E06               	movwf	(___flmul@b+1)^0,c
  7928  002896  0E00               	movlw	0
  7929  002898  6E07               	movwf	(___flmul@b+2)^0,c
  7930  00289A  0E00               	movlw	0
  7931  00289C  6E08               	movwf	(___flmul@b+3)^0,c
  7932  00289E                     l4765:
  7933  00289E  500C               	movf	(___flmul@a+3)^0,w,c
  7934  0028A0  0B80               	andlw	128
  7935  0028A2  1A11               	xorwf	___flmul@sign^0,f,c
  7936  0028A4  500C               	movf	(___flmul@a+3)^0,w,c
  7937  0028A6  240C               	addwf	(___flmul@a+3)^0,w,c
  7938  0028A8  6E16               	movwf	___flmul@aexp^0,c
  7939  0028AA  AE0B               	btfss	(___flmul@a+2)^0,7,c
  7940  0028AC  EF5A  F014         	goto	u3991
  7941  0028B0  EF5C  F014         	goto	u3990
  7942  0028B4                     u3991:
  7943  0028B4  EF5D  F014         	goto	l4773
  7944  0028B8                     u3990:
  7945  0028B8  8016               	bsf	___flmul@aexp^0,0,c
  7946  0028BA                     l4773:
  7947  0028BA  5016               	movf	___flmul@aexp^0,w,c
  7948  0028BC  B4D8               	btfsc	status,2,c
  7949  0028BE  EF63  F014         	goto	u4001
  7950  0028C2  EF65  F014         	goto	u4000
  7951  0028C6                     u4001:
  7952  0028C6  EF78  F014         	goto	l4781
  7953  0028CA                     u4000:
  7954  0028CA  2816               	incf	___flmul@aexp^0,w,c
  7955  0028CC  A4D8               	btfss	status,2,c
  7956  0028CE  EF6B  F014         	goto	u4011
  7957  0028D2  EF6D  F014         	goto	u4010
  7958  0028D6                     u4011:
  7959  0028D6  EF75  F014         	goto	l4779
  7960  0028DA                     u4010:
  7961  0028DA  0E00               	movlw	0
  7962  0028DC  6E09               	movwf	___flmul@a^0,c
  7963  0028DE  0E00               	movlw	0
  7964  0028E0  6E0A               	movwf	(___flmul@a+1)^0,c
  7965  0028E2  0E00               	movlw	0
  7966  0028E4  6E0B               	movwf	(___flmul@a+2)^0,c
  7967  0028E6  0E00               	movlw	0
  7968  0028E8  6E0C               	movwf	(___flmul@a+3)^0,c
  7969  0028EA                     l4779:
  7970  0028EA  8E0B               	bsf	(___flmul@a+2)^0,7,c
  7971  0028EC  EF80  F014         	goto	l1338
  7972  0028F0                     l4781:
  7973  0028F0  0E00               	movlw	0
  7974  0028F2  6E09               	movwf	___flmul@a^0,c
  7975  0028F4  0E00               	movlw	0
  7976  0028F6  6E0A               	movwf	(___flmul@a+1)^0,c
  7977  0028F8  0E00               	movlw	0
  7978  0028FA  6E0B               	movwf	(___flmul@a+2)^0,c
  7979  0028FC  0E00               	movlw	0
  7980  0028FE  6E0C               	movwf	(___flmul@a+3)^0,c
  7981  002900                     l1338:
  7982  002900  5016               	movf	___flmul@aexp^0,w,c
  7983  002902  B4D8               	btfsc	status,2,c
  7984  002904  EF86  F014         	goto	u4021
  7985  002908  EF88  F014         	goto	u4020
  7986  00290C                     u4021:
  7987  00290C  EF90  F014         	goto	l4785
  7988  002910                     u4020:
  7989  002910  5017               	movf	___flmul@bexp^0,w,c
  7990  002912  A4D8               	btfss	status,2,c
  7991  002914  EF8E  F014         	goto	u4031
  7992  002918  EF90  F014         	goto	u4030
  7993  00291C                     u4031:
  7994  00291C  EF9A  F014         	goto	l4789
  7995  002920                     u4030:
  7996  002920                     l4785:
  7997  002920  0E00               	movlw	0
  7998  002922  6E05               	movwf	?___flmul^0,c
  7999  002924  0E00               	movlw	0
  8000  002926  6E06               	movwf	(?___flmul+1)^0,c
  8001  002928  0E00               	movlw	0
  8002  00292A  6E07               	movwf	(?___flmul+2)^0,c
  8003  00292C  0E00               	movlw	0
  8004  00292E  6E08               	movwf	(?___flmul+3)^0,c
  8005  002930  EF32  F016         	goto	l1342
  8006  002934                     l4789:
  8007  002934  500B               	movf	(___flmul@a+2)^0,w,c
  8008  002936  0205               	mulwf	___flmul@b^0,c
  8009  002938  CFF3 F01C          	movff	prodl,___flmul@temp
  8010  00293C  CFF4 F01D          	movff	prodh,___flmul@temp+1
  8011  002940  501C               	movf	___flmul@temp^0,w,c
  8012  002942  6E12               	movwf	___flmul@grs^0,c
  8013  002944  6A13               	clrf	(___flmul@grs+1)^0,c
  8014  002946  6A14               	clrf	(___flmul@grs+2)^0,c
  8015  002948  6A15               	clrf	(___flmul@grs+3)^0,c
  8016  00294A  501D               	movf	(___flmul@temp+1)^0,w,c
  8017  00294C  6E18               	movwf	___flmul@prod^0,c
  8018  00294E  6A19               	clrf	(___flmul@prod+1)^0,c
  8019  002950  6A1A               	clrf	(___flmul@prod+2)^0,c
  8020  002952  6A1B               	clrf	(___flmul@prod+3)^0,c
  8021  002954  500A               	movf	(___flmul@a+1)^0,w,c
  8022  002956  0206               	mulwf	(___flmul@b+1)^0,c
  8023  002958  CFF3 F01C          	movff	prodl,___flmul@temp
  8024  00295C  CFF4 F01D          	movff	prodh,___flmul@temp+1
  8025  002960  501C               	movf	___flmul@temp^0,w,c
  8026  002962  2612               	addwf	___flmul@grs^0,f,c
  8027  002964  0E00               	movlw	0
  8028  002966  2213               	addwfc	(___flmul@grs+1)^0,f,c
  8029  002968  2214               	addwfc	(___flmul@grs+2)^0,f,c
  8030  00296A  2215               	addwfc	(___flmul@grs+3)^0,f,c
  8031  00296C  501D               	movf	(___flmul@temp+1)^0,w,c
  8032  00296E  2618               	addwf	___flmul@prod^0,f,c
  8033  002970  0E00               	movlw	0
  8034  002972  2219               	addwfc	(___flmul@prod+1)^0,f,c
  8035  002974  221A               	addwfc	(___flmul@prod+2)^0,f,c
  8036  002976  221B               	addwfc	(___flmul@prod+3)^0,f,c
  8037  002978  5009               	movf	___flmul@a^0,w,c
  8038  00297A  0207               	mulwf	(___flmul@b+2)^0,c
  8039  00297C  CFF3 F01C          	movff	prodl,___flmul@temp
  8040  002980  CFF4 F01D          	movff	prodh,___flmul@temp+1
  8041  002984  501C               	movf	___flmul@temp^0,w,c
  8042  002986  2612               	addwf	___flmul@grs^0,f,c
  8043  002988  0E00               	movlw	0
  8044  00298A  2213               	addwfc	(___flmul@grs+1)^0,f,c
  8045  00298C  2214               	addwfc	(___flmul@grs+2)^0,f,c
  8046  00298E  2215               	addwfc	(___flmul@grs+3)^0,f,c
  8047  002990  501D               	movf	(___flmul@temp+1)^0,w,c
  8048  002992  2618               	addwf	___flmul@prod^0,f,c
  8049  002994  0E00               	movlw	0
  8050  002996  2219               	addwfc	(___flmul@prod+1)^0,f,c
  8051  002998  221A               	addwfc	(___flmul@prod+2)^0,f,c
  8052  00299A  221B               	addwfc	(___flmul@prod+3)^0,f,c
  8053  00299C  C014  F015         	movff	___flmul@grs+2,___flmul@grs+3
  8054  0029A0  C013  F014         	movff	___flmul@grs+1,___flmul@grs+2
  8055  0029A4  C012  F013         	movff	___flmul@grs,___flmul@grs+1
  8056  0029A8  6A12               	clrf	___flmul@grs^0,c
  8057  0029AA  5009               	movf	___flmul@a^0,w,c
  8058  0029AC  0206               	mulwf	(___flmul@b+1)^0,c
  8059  0029AE  CFF3 F01C          	movff	prodl,___flmul@temp
  8060  0029B2  CFF4 F01D          	movff	prodh,___flmul@temp+1
  8061  0029B6  501C               	movf	___flmul@temp^0,w,c
  8062  0029B8  2612               	addwf	___flmul@grs^0,f,c
  8063  0029BA  501D               	movf	(___flmul@temp+1)^0,w,c
  8064  0029BC  2213               	addwfc	(___flmul@grs+1)^0,f,c
  8065  0029BE  0E00               	movlw	0
  8066  0029C0  2214               	addwfc	(___flmul@grs+2)^0,f,c
  8067  0029C2  0E00               	movlw	0
  8068  0029C4  2215               	addwfc	(___flmul@grs+3)^0,f,c
  8069  0029C6  500A               	movf	(___flmul@a+1)^0,w,c
  8070  0029C8  0205               	mulwf	___flmul@b^0,c
  8071  0029CA  CFF3 F01C          	movff	prodl,___flmul@temp
  8072  0029CE  CFF4 F01D          	movff	prodh,___flmul@temp+1
  8073  0029D2  501C               	movf	___flmul@temp^0,w,c
  8074  0029D4  2612               	addwf	___flmul@grs^0,f,c
  8075  0029D6  501D               	movf	(___flmul@temp+1)^0,w,c
  8076  0029D8  2213               	addwfc	(___flmul@grs+1)^0,f,c
  8077  0029DA  0E00               	movlw	0
  8078  0029DC  2214               	addwfc	(___flmul@grs+2)^0,f,c
  8079  0029DE  0E00               	movlw	0
  8080  0029E0  2215               	addwfc	(___flmul@grs+3)^0,f,c
  8081  0029E2  C014  F015         	movff	___flmul@grs+2,___flmul@grs+3
  8082  0029E6  C013  F014         	movff	___flmul@grs+1,___flmul@grs+2
  8083  0029EA  C012  F013         	movff	___flmul@grs,___flmul@grs+1
  8084  0029EE  6A12               	clrf	___flmul@grs^0,c
  8085  0029F0  5009               	movf	___flmul@a^0,w,c
  8086  0029F2  0205               	mulwf	___flmul@b^0,c
  8087  0029F4  CFF3 F01C          	movff	prodl,___flmul@temp
  8088  0029F8  CFF4 F01D          	movff	prodh,___flmul@temp+1
  8089  0029FC  501C               	movf	___flmul@temp^0,w,c
  8090  0029FE  2612               	addwf	___flmul@grs^0,f,c
  8091  002A00  501D               	movf	(___flmul@temp+1)^0,w,c
  8092  002A02  2213               	addwfc	(___flmul@grs+1)^0,f,c
  8093  002A04  0E00               	movlw	0
  8094  002A06  2214               	addwfc	(___flmul@grs+2)^0,f,c
  8095  002A08  0E00               	movlw	0
  8096  002A0A  2215               	addwfc	(___flmul@grs+3)^0,f,c
  8097  002A0C  500B               	movf	(___flmul@a+2)^0,w,c
  8098  002A0E  0206               	mulwf	(___flmul@b+1)^0,c
  8099  002A10  CFF3 F01C          	movff	prodl,___flmul@temp
  8100  002A14  CFF4 F01D          	movff	prodh,___flmul@temp+1
  8101  002A18  501C               	movf	___flmul@temp^0,w,c
  8102  002A1A  2618               	addwf	___flmul@prod^0,f,c
  8103  002A1C  501D               	movf	(___flmul@temp+1)^0,w,c
  8104  002A1E  2219               	addwfc	(___flmul@prod+1)^0,f,c
  8105  002A20  0E00               	movlw	0
  8106  002A22  221A               	addwfc	(___flmul@prod+2)^0,f,c
  8107  002A24  0E00               	movlw	0
  8108  002A26  221B               	addwfc	(___flmul@prod+3)^0,f,c
  8109  002A28  500A               	movf	(___flmul@a+1)^0,w,c
  8110  002A2A  0207               	mulwf	(___flmul@b+2)^0,c
  8111  002A2C  CFF3 F01C          	movff	prodl,___flmul@temp
  8112  002A30  CFF4 F01D          	movff	prodh,___flmul@temp+1
  8113  002A34  501C               	movf	___flmul@temp^0,w,c
  8114  002A36  2618               	addwf	___flmul@prod^0,f,c
  8115  002A38  501D               	movf	(___flmul@temp+1)^0,w,c
  8116  002A3A  2219               	addwfc	(___flmul@prod+1)^0,f,c
  8117  002A3C  0E00               	movlw	0
  8118  002A3E  221A               	addwfc	(___flmul@prod+2)^0,f,c
  8119  002A40  0E00               	movlw	0
  8120  002A42  221B               	addwfc	(___flmul@prod+3)^0,f,c
  8121  002A44  500B               	movf	(___flmul@a+2)^0,w,c
  8122  002A46  0207               	mulwf	(___flmul@b+2)^0,c
  8123  002A48  CFF3 F01C          	movff	prodl,___flmul@temp
  8124  002A4C  CFF4 F01D          	movff	prodh,___flmul@temp+1
  8125  002A50  501C               	movf	___flmul@temp^0,w,c
  8126  002A52  6E0D               	movwf	??___flmul^0,c
  8127  002A54  501D               	movf	(___flmul@temp+1)^0,w,c
  8128  002A56  6E0E               	movwf	(??___flmul+1)^0,c
  8129  002A58  6A0F               	clrf	(??___flmul+2)^0,c
  8130  002A5A  6A10               	clrf	(??___flmul+3)^0,c
  8131  002A5C  C00F  F010         	movff	??___flmul+2,??___flmul+3
  8132  002A60  C00E  F00F         	movff	??___flmul+1,??___flmul+2
  8133  002A64  C00D  F00E         	movff	??___flmul,??___flmul+1
  8134  002A68  6A0D               	clrf	??___flmul^0,c
  8135  002A6A  500D               	movf	??___flmul^0,w,c
  8136  002A6C  2618               	addwf	___flmul@prod^0,f,c
  8137  002A6E  500E               	movf	(??___flmul+1)^0,w,c
  8138  002A70  2219               	addwfc	(___flmul@prod+1)^0,f,c
  8139  002A72  500F               	movf	(??___flmul+2)^0,w,c
  8140  002A74  221A               	addwfc	(___flmul@prod+2)^0,f,c
  8141  002A76  5010               	movf	(??___flmul+3)^0,w,c
  8142  002A78  221B               	addwfc	(___flmul@prod+3)^0,f,c
  8143  002A7A  C012  F00D         	movff	___flmul@grs,??___flmul
  8144  002A7E  C013  F00E         	movff	___flmul@grs+1,??___flmul+1
  8145  002A82  C014  F00F         	movff	___flmul@grs+2,??___flmul+2
  8146  002A86  C015  F010         	movff	___flmul@grs+3,??___flmul+3
  8147  002A8A  0E19               	movlw	25
  8148  002A8C  EF4D  F015         	goto	u4040
  8149  002A90                     u4045:
  8150  002A90  90D8               	bcf	status,0,c
  8151  002A92  3210               	rrcf	(??___flmul+3)^0,f,c
  8152  002A94  320F               	rrcf	(??___flmul+2)^0,f,c
  8153  002A96  320E               	rrcf	(??___flmul+1)^0,f,c
  8154  002A98  320D               	rrcf	??___flmul^0,f,c
  8155  002A9A                     u4040:
  8156  002A9A  2EE8               	decfsz	wreg,f,c
  8157  002A9C  EF48  F015         	goto	u4045
  8158  002AA0  500D               	movf	??___flmul^0,w,c
  8159  002AA2  2618               	addwf	___flmul@prod^0,f,c
  8160  002AA4  500E               	movf	(??___flmul+1)^0,w,c
  8161  002AA6  2219               	addwfc	(___flmul@prod+1)^0,f,c
  8162  002AA8  500F               	movf	(??___flmul+2)^0,w,c
  8163  002AAA  221A               	addwfc	(___flmul@prod+2)^0,f,c
  8164  002AAC  5010               	movf	(??___flmul+3)^0,w,c
  8165  002AAE  221B               	addwfc	(___flmul@prod+3)^0,f,c
  8166  002AB0  C014  F015         	movff	___flmul@grs+2,___flmul@grs+3
  8167  002AB4  C013  F014         	movff	___flmul@grs+1,___flmul@grs+2
  8168  002AB8  C012  F013         	movff	___flmul@grs,___flmul@grs+1
  8169  002ABC  6A12               	clrf	___flmul@grs^0,c
  8170  002ABE  5016               	movf	___flmul@aexp^0,w,c
  8171  002AC0  C017  F00D         	movff	___flmul@bexp,??___flmul
  8172  002AC4  6A0E               	clrf	(??___flmul+1)^0,c
  8173  002AC6  260D               	addwf	??___flmul^0,f,c
  8174  002AC8  0E00               	movlw	0
  8175  002ACA  220E               	addwfc	(??___flmul+1)^0,f,c
  8176  002ACC  0E82               	movlw	130
  8177  002ACE  240D               	addwf	??___flmul^0,w,c
  8178  002AD0  6E1C               	movwf	___flmul@temp^0,c
  8179  002AD2  0EFF               	movlw	255
  8180  002AD4  200E               	addwfc	(??___flmul+1)^0,w,c
  8181  002AD6  6E1D               	movwf	(___flmul@temp+1)^0,c
  8182  002AD8  EF83  F015         	goto	l4837
  8183  002ADC                     l4831:
  8184  002ADC  90D8               	bcf	status,0,c
  8185  002ADE  3618               	rlcf	___flmul@prod^0,f,c
  8186  002AE0  3619               	rlcf	(___flmul@prod+1)^0,f,c
  8187  002AE2  361A               	rlcf	(___flmul@prod+2)^0,f,c
  8188  002AE4  361B               	rlcf	(___flmul@prod+3)^0,f,c
  8189  002AE6  AE15               	btfss	(___flmul@grs+3)^0,7,c
  8190  002AE8  EF78  F015         	goto	u4051
  8191  002AEC  EF7A  F015         	goto	u4050
  8192  002AF0                     u4051:
  8193  002AF0  EF7B  F015         	goto	l1345
  8194  002AF4                     u4050:
  8195  002AF4  8018               	bsf	___flmul@prod^0,0,c
  8196  002AF6                     l1345:
  8197  002AF6  90D8               	bcf	status,0,c
  8198  002AF8  3612               	rlcf	___flmul@grs^0,f,c
  8199  002AFA  3613               	rlcf	(___flmul@grs+1)^0,f,c
  8200  002AFC  3614               	rlcf	(___flmul@grs+2)^0,f,c
  8201  002AFE  3615               	rlcf	(___flmul@grs+3)^0,f,c
  8202  002B00  061C               	decf	___flmul@temp^0,f,c
  8203  002B02  A0D8               	btfss	status,0,c
  8204  002B04  061D               	decf	(___flmul@temp+1)^0,f,c
  8205  002B06                     l4837:
  8206  002B06  AE1A               	btfss	(___flmul@prod+2)^0,7,c
  8207  002B08  EF88  F015         	goto	u4061
  8208  002B0C  EF8A  F015         	goto	u4060
  8209  002B10                     u4061:
  8210  002B10  EF6E  F015         	goto	l4831
  8211  002B14                     u4060:
  8212  002B14  0E00               	movlw	0
  8213  002B16  6E16               	movwf	___flmul@aexp^0,c
  8214  002B18  AE15               	btfss	(___flmul@grs+3)^0,7,c
  8215  002B1A  EF91  F015         	goto	u4071
  8216  002B1E  EF93  F015         	goto	u4070
  8217  002B22                     u4071:
  8218  002B22  EFB7  F015         	goto	l1347
  8219  002B26                     u4070:
  8220  002B26  0EFF               	movlw	255
  8221  002B28  1412               	andwf	___flmul@grs^0,w,c
  8222  002B2A  6E0D               	movwf	??___flmul^0,c
  8223  002B2C  0EFF               	movlw	255
  8224  002B2E  1413               	andwf	(___flmul@grs+1)^0,w,c
  8225  002B30  6E0E               	movwf	(??___flmul+1)^0,c
  8226  002B32  0EFF               	movlw	255
  8227  002B34  1414               	andwf	(___flmul@grs+2)^0,w,c
  8228  002B36  6E0F               	movwf	(??___flmul+2)^0,c
  8229  002B38  0E7F               	movlw	127
  8230  002B3A  1415               	andwf	(___flmul@grs+3)^0,w,c
  8231  002B3C  6E10               	movwf	(??___flmul+3)^0,c
  8232  002B3E  500D               	movf	??___flmul^0,w,c
  8233  002B40  100E               	iorwf	(??___flmul+1)^0,w,c
  8234  002B42  100F               	iorwf	(??___flmul+2)^0,w,c
  8235  002B44  1010               	iorwf	(??___flmul+3)^0,w,c
  8236  002B46  B4D8               	btfsc	status,2,c
  8237  002B48  EFA8  F015         	goto	u4081
  8238  002B4C  EFAA  F015         	goto	u4080
  8239  002B50                     u4081:
  8240  002B50  EFAE  F015         	goto	l1348
  8241  002B54                     u4080:
  8242  002B54                     l4845:
  8243  002B54  0E01               	movlw	1
  8244  002B56  6E16               	movwf	___flmul@aexp^0,c
  8245  002B58  EFB7  F015         	goto	l1347
  8246  002B5C                     l1348:
  8247  002B5C  A018               	btfss	___flmul@prod^0,0,c
  8248  002B5E  EFB3  F015         	goto	u4091
  8249  002B62  EFB5  F015         	goto	u4090
  8250  002B66                     u4091:
  8251  002B66  EFB7  F015         	goto	l1347
  8252  002B6A                     u4090:
  8253  002B6A  EFAA  F015         	goto	l4845
  8254  002B6E                     l1347:
  8255  002B6E  5016               	movf	___flmul@aexp^0,w,c
  8256  002B70  B4D8               	btfsc	status,2,c
  8257  002B72  EFBD  F015         	goto	u4101
  8258  002B76  EFBF  F015         	goto	u4100
  8259  002B7A                     u4101:
  8260  002B7A  EFE3  F015         	goto	l4857
  8261  002B7E                     u4100:
  8262  002B7E  0E01               	movlw	1
  8263  002B80  2618               	addwf	___flmul@prod^0,f,c
  8264  002B82  0E00               	movlw	0
  8265  002B84  2219               	addwfc	(___flmul@prod+1)^0,f,c
  8266  002B86  221A               	addwfc	(___flmul@prod+2)^0,f,c
  8267  002B88  221B               	addwfc	(___flmul@prod+3)^0,f,c
  8268  002B8A  A01B               	btfss	(___flmul@prod+3)^0,0,c
  8269  002B8C  EFCA  F015         	goto	u4111
  8270  002B90  EFCC  F015         	goto	u4110
  8271  002B94                     u4111:
  8272  002B94  EFE3  F015         	goto	l4857
  8273  002B98                     u4110:
  8274  002B98  C018  F00D         	movff	___flmul@prod,??___flmul
  8275  002B9C  C019  F00E         	movff	___flmul@prod+1,??___flmul+1
  8276  002BA0  C01A  F00F         	movff	___flmul@prod+2,??___flmul+2
  8277  002BA4  C01B  F010         	movff	___flmul@prod+3,??___flmul+3
  8278  002BA8  3410               	rlcf	(??___flmul+3)^0,w,c
  8279  002BAA  3210               	rrcf	(??___flmul+3)^0,f,c
  8280  002BAC  320F               	rrcf	(??___flmul+2)^0,f,c
  8281  002BAE  320E               	rrcf	(??___flmul+1)^0,f,c
  8282  002BB0  320D               	rrcf	??___flmul^0,f,c
  8283  002BB2  C00D  F018         	movff	??___flmul,___flmul@prod
  8284  002BB6  C00E  F019         	movff	??___flmul+1,___flmul@prod+1
  8285  002BBA  C00F  F01A         	movff	??___flmul+2,___flmul@prod+2
  8286  002BBE  C010  F01B         	movff	??___flmul+3,___flmul@prod+3
  8287  002BC2  4A1C               	infsnz	___flmul@temp^0,f,c
  8288  002BC4  2A1D               	incf	(___flmul@temp+1)^0,f,c
  8289  002BC6                     l4857:
  8290  002BC6  BE1D               	btfsc	(___flmul@temp+1)^0,7,c
  8291  002BC8  EFEE  F015         	goto	u4121
  8292  002BCC  501D               	movf	(___flmul@temp+1)^0,w,c
  8293  002BCE  E108               	bnz	u4120
  8294  002BD0  281C               	incf	___flmul@temp^0,w,c
  8295  002BD2  A0D8               	btfss	status,0,c
  8296  002BD4  EFEE  F015         	goto	u4121
  8297  002BD8  EFF0  F015         	goto	u4120
  8298  002BDC                     u4121:
  8299  002BDC  EFFA  F015         	goto	l4861
  8300  002BE0                     u4120:
  8301  002BE0  0E00               	movlw	0
  8302  002BE2  6E18               	movwf	___flmul@prod^0,c
  8303  002BE4  0E00               	movlw	0
  8304  002BE6  6E19               	movwf	(___flmul@prod+1)^0,c
  8305  002BE8  0E80               	movlw	128
  8306  002BEA  6E1A               	movwf	(___flmul@prod+2)^0,c
  8307  002BEC  0E7F               	movlw	127
  8308  002BEE  6E1B               	movwf	(___flmul@prod+3)^0,c
  8309  002BF0  EF28  F016         	goto	l4873
  8310  002BF4                     l4861:
  8311  002BF4  BE1D               	btfsc	(___flmul@temp+1)^0,7,c
  8312  002BF6  EF07  F016         	goto	u4130
  8313  002BFA  501D               	movf	(___flmul@temp+1)^0,w,c
  8314  002BFC  E106               	bnz	u4131
  8315  002BFE  041C               	decf	___flmul@temp^0,w,c
  8316  002C00  B0D8               	btfsc	status,0,c
  8317  002C02  EF05  F016         	goto	u4131
  8318  002C06  EF07  F016         	goto	u4130
  8319  002C0A                     u4131:
  8320  002C0A  EF13  F016         	goto	l1355
  8321  002C0E                     u4130:
  8322  002C0E  0E00               	movlw	0
  8323  002C10  6E18               	movwf	___flmul@prod^0,c
  8324  002C12  0E00               	movlw	0
  8325  002C14  6E19               	movwf	(___flmul@prod+1)^0,c
  8326  002C16  0E00               	movlw	0
  8327  002C18  6E1A               	movwf	(___flmul@prod+2)^0,c
  8328  002C1A  0E00               	movlw	0
  8329  002C1C  6E1B               	movwf	(___flmul@prod+3)^0,c
  8330  002C1E  0E00               	movlw	0
  8331  002C20  6E11               	movwf	___flmul@sign^0,c
  8332  002C22  EF28  F016         	goto	l4873
  8333  002C26                     l1355:
  8334  002C26  C01C  F017         	movff	___flmul@temp,___flmul@bexp
  8335  002C2A  0EFF               	movlw	255
  8336  002C2C  1618               	andwf	___flmul@prod^0,f,c
  8337  002C2E  0EFF               	movlw	255
  8338  002C30  1619               	andwf	(___flmul@prod+1)^0,f,c
  8339  002C32  0E7F               	movlw	127
  8340  002C34  161A               	andwf	(___flmul@prod+2)^0,f,c
  8341  002C36  0E00               	movlw	0
  8342  002C38  161B               	andwf	(___flmul@prod+3)^0,f,c
  8343  002C3A  A017               	btfss	___flmul@bexp^0,0,c
  8344  002C3C  EF22  F016         	goto	u4141
  8345  002C40  EF24  F016         	goto	u4140
  8346  002C44                     u4141:
  8347  002C44  EF25  F016         	goto	l4871
  8348  002C48                     u4140:
  8349  002C48  8E1A               	bsf	(___flmul@prod+2)^0,7,c
  8350  002C4A                     l4871:
  8351  002C4A  90D8               	bcf	status,0,c
  8352  002C4C  3017               	rrcf	___flmul@bexp^0,w,c
  8353  002C4E  6E1B               	movwf	(___flmul@prod+3)^0,c
  8354  002C50                     l4873:
  8355  002C50  5011               	movf	___flmul@sign^0,w,c
  8356  002C52  121B               	iorwf	(___flmul@prod+3)^0,f,c
  8357  002C54  C018  F005         	movff	___flmul@prod,?___flmul
  8358  002C58  C019  F006         	movff	___flmul@prod+1,?___flmul+1
  8359  002C5C  C01A  F007         	movff	___flmul@prod+2,?___flmul+2
  8360  002C60  C01B  F008         	movff	___flmul@prod+3,?___flmul+3
  8361  002C64                     l1342:
  8362  002C64  0012               	return		;funcret
  8363  002C66                     __end_of___flmul:
  8364                           	callstack 0
  8365                           
  8366 ;; *************** function ___flge *****************
  8367 ;; Defined at:
  8368 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  8369 ;; Parameters:    Size  Location     Type
  8370 ;;  ff1             4   29[COMRAM] unsigned char 
  8371 ;;  ff2             4   33[COMRAM] unsigned char 
  8372 ;; Auto vars:     Size  Location     Type
  8373 ;;		None
  8374 ;; Return value:  Size  Location     Type
  8375 ;;		None               void
  8376 ;; Registers used:
  8377 ;;		wreg, status,2, status,0
  8378 ;; Tracked objects:
  8379 ;;		On entry : 0/0
  8380 ;;		On exit  : 0/0
  8381 ;;		Unchanged: 0/0
  8382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8383 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8385 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8386 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8387 ;;Total ram usage:       12 bytes
  8388 ;; Hardware stack levels used: 1
  8389 ;; Hardware stack levels required when called: 4
  8390 ;; This function calls:
  8391 ;;		Nothing
  8392 ;; This function is called by:
  8393 ;;		_SHT40_humy_GetValue
  8394 ;;		_efgtoa
  8395 ;; This function uses a non-reentrant model
  8396 ;;
  8397                           
  8398                           	psect	text42
  8399  00378E                     __ptext42:
  8400                           	callstack 0
  8401  00378E                     ___flge:
  8402                           	callstack 22
  8403  00378E  0E00               	movlw	0
  8404  003790  141E               	andwf	___flge@ff1^0,w,c
  8405  003792  6E26               	movwf	??___flge^0,c
  8406  003794  0E00               	movlw	0
  8407  003796  141F               	andwf	(___flge@ff1+1)^0,w,c
  8408  003798  6E27               	movwf	(??___flge+1)^0,c
  8409  00379A  0E80               	movlw	128
  8410  00379C  1420               	andwf	(___flge@ff1+2)^0,w,c
  8411  00379E  6E28               	movwf	(??___flge+2)^0,c
  8412  0037A0  0E7F               	movlw	127
  8413  0037A2  1421               	andwf	(___flge@ff1+3)^0,w,c
  8414  0037A4  6E29               	movwf	(??___flge+3)^0,c
  8415  0037A6  5026               	movf	??___flge^0,w,c
  8416  0037A8  1027               	iorwf	(??___flge+1)^0,w,c
  8417  0037AA  1028               	iorwf	(??___flge+2)^0,w,c
  8418  0037AC  1029               	iorwf	(??___flge+3)^0,w,c
  8419  0037AE  A4D8               	btfss	status,2,c
  8420  0037B0  EFDC  F01B         	goto	u4301
  8421  0037B4  EFDE  F01B         	goto	u4300
  8422  0037B8                     u4301:
  8423  0037B8  EFE6  F01B         	goto	l4985
  8424  0037BC                     u4300:
  8425  0037BC  0E00               	movlw	0
  8426  0037BE  6E1E               	movwf	___flge@ff1^0,c
  8427  0037C0  0E00               	movlw	0
  8428  0037C2  6E1F               	movwf	(___flge@ff1+1)^0,c
  8429  0037C4  0E00               	movlw	0
  8430  0037C6  6E20               	movwf	(___flge@ff1+2)^0,c
  8431  0037C8  0E00               	movlw	0
  8432  0037CA  6E21               	movwf	(___flge@ff1+3)^0,c
  8433  0037CC                     l4985:
  8434  0037CC  0E00               	movlw	0
  8435  0037CE  1422               	andwf	___flge@ff2^0,w,c
  8436  0037D0  6E26               	movwf	??___flge^0,c
  8437  0037D2  0E00               	movlw	0
  8438  0037D4  1423               	andwf	(___flge@ff2+1)^0,w,c
  8439  0037D6  6E27               	movwf	(??___flge+1)^0,c
  8440  0037D8  0E80               	movlw	128
  8441  0037DA  1424               	andwf	(___flge@ff2+2)^0,w,c
  8442  0037DC  6E28               	movwf	(??___flge+2)^0,c
  8443  0037DE  0E7F               	movlw	127
  8444  0037E0  1425               	andwf	(___flge@ff2+3)^0,w,c
  8445  0037E2  6E29               	movwf	(??___flge+3)^0,c
  8446  0037E4  5026               	movf	??___flge^0,w,c
  8447  0037E6  1027               	iorwf	(??___flge+1)^0,w,c
  8448  0037E8  1028               	iorwf	(??___flge+2)^0,w,c
  8449  0037EA  1029               	iorwf	(??___flge+3)^0,w,c
  8450  0037EC  A4D8               	btfss	status,2,c
  8451  0037EE  EFFB  F01B         	goto	u4311
  8452  0037F2  EFFD  F01B         	goto	u4310
  8453  0037F6                     u4311:
  8454  0037F6  EF05  F01C         	goto	l4989
  8455  0037FA                     u4310:
  8456  0037FA  0E00               	movlw	0
  8457  0037FC  6E22               	movwf	___flge@ff2^0,c
  8458  0037FE  0E00               	movlw	0
  8459  003800  6E23               	movwf	(___flge@ff2+1)^0,c
  8460  003802  0E00               	movlw	0
  8461  003804  6E24               	movwf	(___flge@ff2+2)^0,c
  8462  003806  0E00               	movlw	0
  8463  003808  6E25               	movwf	(___flge@ff2+3)^0,c
  8464  00380A                     l4989:
  8465  00380A  AE21               	btfss	(___flge@ff1+3)^0,7,c
  8466  00380C  EF0A  F01C         	goto	u4321
  8467  003810  EF0C  F01C         	goto	u4320
  8468  003814                     u4321:
  8469  003814  EF15  F01C         	goto	l4993
  8470  003818                     u4320:
  8471  003818  6C1E               	negf	___flge@ff1^0,c
  8472  00381A  1E1F               	comf	(___flge@ff1+1)^0,f,c
  8473  00381C  B0D8               	btfsc	status,0,c
  8474  00381E  2A1F               	incf	(___flge@ff1+1)^0,f,c
  8475  003820  1E20               	comf	(___flge@ff1+2)^0,f,c
  8476  003822  B0D8               	btfsc	status,0,c
  8477  003824  2A20               	incf	(___flge@ff1+2)^0,f,c
  8478  003826  0E80               	movlw	128
  8479  003828  5621               	subfwb	(___flge@ff1+3)^0,f,c
  8480  00382A                     l4993:
  8481  00382A  AE25               	btfss	(___flge@ff2+3)^0,7,c
  8482  00382C  EF1A  F01C         	goto	u4331
  8483  003830  EF1C  F01C         	goto	u4330
  8484  003834                     u4331:
  8485  003834  EF25  F01C         	goto	l989
  8486  003838                     u4330:
  8487  003838  6C22               	negf	___flge@ff2^0,c
  8488  00383A  1E23               	comf	(___flge@ff2+1)^0,f,c
  8489  00383C  B0D8               	btfsc	status,0,c
  8490  00383E  2A23               	incf	(___flge@ff2+1)^0,f,c
  8491  003840  1E24               	comf	(___flge@ff2+2)^0,f,c
  8492  003842  B0D8               	btfsc	status,0,c
  8493  003844  2A24               	incf	(___flge@ff2+2)^0,f,c
  8494  003846  0E80               	movlw	128
  8495  003848  5625               	subfwb	(___flge@ff2+3)^0,f,c
  8496  00384A                     l989:
  8497  00384A  0E00               	movlw	0
  8498  00384C  1A1E               	xorwf	___flge@ff1^0,f,c
  8499  00384E  0E00               	movlw	0
  8500  003850  1A1F               	xorwf	(___flge@ff1+1)^0,f,c
  8501  003852  0E00               	movlw	0
  8502  003854  1A20               	xorwf	(___flge@ff1+2)^0,f,c
  8503  003856  0E80               	movlw	128
  8504  003858  1A21               	xorwf	(___flge@ff1+3)^0,f,c
  8505  00385A  0E00               	movlw	0
  8506  00385C  1A22               	xorwf	___flge@ff2^0,f,c
  8507  00385E  0E00               	movlw	0
  8508  003860  1A23               	xorwf	(___flge@ff2+1)^0,f,c
  8509  003862  0E00               	movlw	0
  8510  003864  1A24               	xorwf	(___flge@ff2+2)^0,f,c
  8511  003866  0E80               	movlw	128
  8512  003868  1A25               	xorwf	(___flge@ff2+3)^0,f,c
  8513  00386A  5022               	movf	___flge@ff2^0,w,c
  8514  00386C  5C1E               	subwf	___flge@ff1^0,w,c
  8515  00386E  5023               	movf	(___flge@ff2+1)^0,w,c
  8516  003870  581F               	subwfb	(___flge@ff1+1)^0,w,c
  8517  003872  5024               	movf	(___flge@ff2+2)^0,w,c
  8518  003874  5820               	subwfb	(___flge@ff1+2)^0,w,c
  8519  003876  5025               	movf	(___flge@ff2+3)^0,w,c
  8520  003878  5821               	subwfb	(___flge@ff1+3)^0,w,c
  8521  00387A  B0D8               	btfsc	status,0,c
  8522  00387C  EF42  F01C         	goto	u4341
  8523  003880  EF44  F01C         	goto	u4340
  8524  003884                     u4341:
  8525  003884  EF47  F01C         	goto	l4999
  8526  003888                     u4340:
  8527  003888  90D8               	bcf	status,0,c
  8528  00388A  EF48  F01C         	goto	l994
  8529  00388E                     l4999:
  8530  00388E  80D8               	bsf	status,0,c
  8531  003890                     l994:
  8532  003890  0012               	return		;funcret
  8533  003892                     __end_of___flge:
  8534                           	callstack 0
  8535                           
  8536 ;; *************** function ___fldiv *****************
  8537 ;; Defined at:
  8538 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
  8539 ;; Parameters:    Size  Location     Type
  8540 ;;  b               4   29[COMRAM] unsigned char 
  8541 ;;  a               4   33[COMRAM] unsigned char 
  8542 ;; Auto vars:     Size  Location     Type
  8543 ;;  grs             4   48[COMRAM] unsigned long 
  8544 ;;  rem             4   41[COMRAM] unsigned long 
  8545 ;;  new_exp         2   46[COMRAM] short 
  8546 ;;  aexp            1   53[COMRAM] unsigned char 
  8547 ;;  bexp            1   52[COMRAM] unsigned char 
  8548 ;;  sign            1   45[COMRAM] unsigned char 
  8549 ;; Return value:  Size  Location     Type
  8550 ;;                  4   29[COMRAM] unsigned char 
  8551 ;; Registers used:
  8552 ;;		wreg, status,2, status,0
  8553 ;; Tracked objects:
  8554 ;;		On entry : 0/0
  8555 ;;		On exit  : 0/0
  8556 ;;		Unchanged: 0/0
  8557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8558 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8559 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8560 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8561 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8562 ;;Total ram usage:       25 bytes
  8563 ;; Hardware stack levels used: 1
  8564 ;; Hardware stack levels required when called: 4
  8565 ;; This function calls:
  8566 ;;		Nothing
  8567 ;; This function is called by:
  8568 ;;		_SHT40_temp_GetValue
  8569 ;;		_SHT40_humy_GetValue
  8570 ;;		_efgtoa
  8571 ;; This function uses a non-reentrant model
  8572 ;;
  8573                           
  8574                           	psect	text43
  8575  002C66                     __ptext43:
  8576                           	callstack 0
  8577  002C66                     ___fldiv:
  8578                           	callstack 22
  8579  002C66  5021               	movf	(___fldiv@b+3)^0,w,c
  8580  002C68  0B80               	andlw	128
  8581  002C6A  6E2E               	movwf	___fldiv@sign^0,c
  8582  002C6C  5021               	movf	(___fldiv@b+3)^0,w,c
  8583  002C6E  2421               	addwf	(___fldiv@b+3)^0,w,c
  8584  002C70  6E35               	movwf	___fldiv@bexp^0,c
  8585  002C72  AE20               	btfss	(___fldiv@b+2)^0,7,c
  8586  002C74  EF3E  F016         	goto	u3731
  8587  002C78  EF40  F016         	goto	u3730
  8588  002C7C                     u3731:
  8589  002C7C  EF41  F016         	goto	l4617
  8590  002C80                     u3730:
  8591  002C80  8035               	bsf	___fldiv@bexp^0,0,c
  8592  002C82                     l4617:
  8593  002C82  5035               	movf	___fldiv@bexp^0,w,c
  8594  002C84  B4D8               	btfsc	status,2,c
  8595  002C86  EF47  F016         	goto	u3741
  8596  002C8A  EF49  F016         	goto	u3740
  8597  002C8E                     u3741:
  8598  002C8E  EF5E  F016         	goto	l4627
  8599  002C92                     u3740:
  8600  002C92  2835               	incf	___fldiv@bexp^0,w,c
  8601  002C94  A4D8               	btfss	status,2,c
  8602  002C96  EF4F  F016         	goto	u3751
  8603  002C9A  EF51  F016         	goto	u3750
  8604  002C9E                     u3751:
  8605  002C9E  EF59  F016         	goto	l4623
  8606  002CA2                     u3750:
  8607  002CA2  0E00               	movlw	0
  8608  002CA4  6E1E               	movwf	___fldiv@b^0,c
  8609  002CA6  0E00               	movlw	0
  8610  002CA8  6E1F               	movwf	(___fldiv@b+1)^0,c
  8611  002CAA  0E00               	movlw	0
  8612  002CAC  6E20               	movwf	(___fldiv@b+2)^0,c
  8613  002CAE  0E00               	movlw	0
  8614  002CB0  6E21               	movwf	(___fldiv@b+3)^0,c
  8615  002CB2                     l4623:
  8616  002CB2  8E20               	bsf	(___fldiv@b+2)^0,7,c
  8617  002CB4  0E00               	movlw	0
  8618  002CB6  6E21               	movwf	(___fldiv@b+3)^0,c
  8619  002CB8  EF66  F016         	goto	l4629
  8620  002CBC                     l4627:
  8621  002CBC  0E00               	movlw	0
  8622  002CBE  6E1E               	movwf	___fldiv@b^0,c
  8623  002CC0  0E00               	movlw	0
  8624  002CC2  6E1F               	movwf	(___fldiv@b+1)^0,c
  8625  002CC4  0E00               	movlw	0
  8626  002CC6  6E20               	movwf	(___fldiv@b+2)^0,c
  8627  002CC8  0E00               	movlw	0
  8628  002CCA  6E21               	movwf	(___fldiv@b+3)^0,c
  8629  002CCC                     l4629:
  8630  002CCC  5025               	movf	(___fldiv@a+3)^0,w,c
  8631  002CCE  0B80               	andlw	128
  8632  002CD0  1A2E               	xorwf	___fldiv@sign^0,f,c
  8633  002CD2  5025               	movf	(___fldiv@a+3)^0,w,c
  8634  002CD4  2425               	addwf	(___fldiv@a+3)^0,w,c
  8635  002CD6  6E36               	movwf	___fldiv@aexp^0,c
  8636  002CD8  AE24               	btfss	(___fldiv@a+2)^0,7,c
  8637  002CDA  EF71  F016         	goto	u3761
  8638  002CDE  EF73  F016         	goto	u3760
  8639  002CE2                     u3761:
  8640  002CE2  EF74  F016         	goto	l4637
  8641  002CE6                     u3760:
  8642  002CE6  8036               	bsf	___fldiv@aexp^0,0,c
  8643  002CE8                     l4637:
  8644  002CE8  5036               	movf	___fldiv@aexp^0,w,c
  8645  002CEA  B4D8               	btfsc	status,2,c
  8646  002CEC  EF7A  F016         	goto	u3771
  8647  002CF0  EF7C  F016         	goto	u3770
  8648  002CF4                     u3771:
  8649  002CF4  EF91  F016         	goto	l4647
  8650  002CF8                     u3770:
  8651  002CF8  2836               	incf	___fldiv@aexp^0,w,c
  8652  002CFA  A4D8               	btfss	status,2,c
  8653  002CFC  EF82  F016         	goto	u3781
  8654  002D00  EF84  F016         	goto	u3780
  8655  002D04                     u3781:
  8656  002D04  EF8C  F016         	goto	l4643
  8657  002D08                     u3780:
  8658  002D08  0E00               	movlw	0
  8659  002D0A  6E22               	movwf	___fldiv@a^0,c
  8660  002D0C  0E00               	movlw	0
  8661  002D0E  6E23               	movwf	(___fldiv@a+1)^0,c
  8662  002D10  0E00               	movlw	0
  8663  002D12  6E24               	movwf	(___fldiv@a+2)^0,c
  8664  002D14  0E00               	movlw	0
  8665  002D16  6E25               	movwf	(___fldiv@a+3)^0,c
  8666  002D18                     l4643:
  8667  002D18  8E24               	bsf	(___fldiv@a+2)^0,7,c
  8668  002D1A  0E00               	movlw	0
  8669  002D1C  6E25               	movwf	(___fldiv@a+3)^0,c
  8670  002D1E  EF99  F016         	goto	l4649
  8671  002D22                     l4647:
  8672  002D22  0E00               	movlw	0
  8673  002D24  6E22               	movwf	___fldiv@a^0,c
  8674  002D26  0E00               	movlw	0
  8675  002D28  6E23               	movwf	(___fldiv@a+1)^0,c
  8676  002D2A  0E00               	movlw	0
  8677  002D2C  6E24               	movwf	(___fldiv@a+2)^0,c
  8678  002D2E  0E00               	movlw	0
  8679  002D30  6E25               	movwf	(___fldiv@a+3)^0,c
  8680  002D32                     l4649:
  8681  002D32  5022               	movf	___fldiv@a^0,w,c
  8682  002D34  1023               	iorwf	(___fldiv@a+1)^0,w,c
  8683  002D36  1024               	iorwf	(___fldiv@a+2)^0,w,c
  8684  002D38  1025               	iorwf	(___fldiv@a+3)^0,w,c
  8685  002D3A  A4D8               	btfss	status,2,c
  8686  002D3C  EFA2  F016         	goto	u3791
  8687  002D40  EFA4  F016         	goto	u3790
  8688  002D44                     u3791:
  8689  002D44  EFBC  F016         	goto	l4661
  8690  002D48                     u3790:
  8691  002D48  0E00               	movlw	0
  8692  002D4A  6E1E               	movwf	___fldiv@b^0,c
  8693  002D4C  0E00               	movlw	0
  8694  002D4E  6E1F               	movwf	(___fldiv@b+1)^0,c
  8695  002D50  0E00               	movlw	0
  8696  002D52  6E20               	movwf	(___fldiv@b+2)^0,c
  8697  002D54  0E00               	movlw	0
  8698  002D56  6E21               	movwf	(___fldiv@b+3)^0,c
  8699  002D58  0E80               	movlw	128
  8700  002D5A  1220               	iorwf	(___fldiv@b+2)^0,f,c
  8701  002D5C  0E7F               	movlw	127
  8702  002D5E  1221               	iorwf	(___fldiv@b+3)^0,f,c
  8703  002D60                     l4655:
  8704  002D60  502E               	movf	___fldiv@sign^0,w,c
  8705  002D62  1221               	iorwf	(___fldiv@b+3)^0,f,c
  8706  002D64  C01E  F01E         	movff	___fldiv@b,?___fldiv
  8707  002D68  C01F  F01F         	movff	___fldiv@b+1,?___fldiv+1
  8708  002D6C  C020  F020         	movff	___fldiv@b+2,?___fldiv+2
  8709  002D70  C021  F021         	movff	___fldiv@b+3,?___fldiv+3
  8710  002D74  EFFF  F017         	goto	l1306
  8711  002D78                     l4661:
  8712  002D78  5035               	movf	___fldiv@bexp^0,w,c
  8713  002D7A  A4D8               	btfss	status,2,c
  8714  002D7C  EFC2  F016         	goto	u3801
  8715  002D80  EFC4  F016         	goto	u3800
  8716  002D84                     u3801:
  8717  002D84  EFCE  F016         	goto	l4669
  8718  002D88                     u3800:
  8719  002D88  0E00               	movlw	0
  8720  002D8A  6E1E               	movwf	?___fldiv^0,c
  8721  002D8C  0E00               	movlw	0
  8722  002D8E  6E1F               	movwf	(?___fldiv+1)^0,c
  8723  002D90  0E00               	movlw	0
  8724  002D92  6E20               	movwf	(?___fldiv+2)^0,c
  8725  002D94  0E00               	movlw	0
  8726  002D96  6E21               	movwf	(?___fldiv+3)^0,c
  8727  002D98  EFFF  F017         	goto	l1306
  8728  002D9C                     l4669:
  8729  002D9C  5036               	movf	___fldiv@aexp^0,w,c
  8730  002D9E  C035  F026         	movff	___fldiv@bexp,??___fldiv
  8731  002DA2  6A27               	clrf	(??___fldiv+1)^0,c
  8732  002DA4  5E26               	subwf	??___fldiv^0,f,c
  8733  002DA6  0E00               	movlw	0
  8734  002DA8  5A27               	subwfb	(??___fldiv+1)^0,f,c
  8735  002DAA  0E7F               	movlw	127
  8736  002DAC  2426               	addwf	??___fldiv^0,w,c
  8737  002DAE  6E2F               	movwf	___fldiv@new_exp^0,c
  8738  002DB0  0E00               	movlw	0
  8739  002DB2  2027               	addwfc	(??___fldiv+1)^0,w,c
  8740  002DB4  6E30               	movwf	(___fldiv@new_exp+1)^0,c
  8741  002DB6  C01E  F02A         	movff	___fldiv@b,___fldiv@rem
  8742  002DBA  C01F  F02B         	movff	___fldiv@b+1,___fldiv@rem+1
  8743  002DBE  C020  F02C         	movff	___fldiv@b+2,___fldiv@rem+2
  8744  002DC2  C021  F02D         	movff	___fldiv@b+3,___fldiv@rem+3
  8745  002DC6  0E00               	movlw	0
  8746  002DC8  6E1E               	movwf	___fldiv@b^0,c
  8747  002DCA  0E00               	movlw	0
  8748  002DCC  6E1F               	movwf	(___fldiv@b+1)^0,c
  8749  002DCE  0E00               	movlw	0
  8750  002DD0  6E20               	movwf	(___fldiv@b+2)^0,c
  8751  002DD2  0E00               	movlw	0
  8752  002DD4  6E21               	movwf	(___fldiv@b+3)^0,c
  8753  002DD6  0E00               	movlw	0
  8754  002DD8  6E31               	movwf	___fldiv@grs^0,c
  8755  002DDA  0E00               	movlw	0
  8756  002DDC  6E32               	movwf	(___fldiv@grs+1)^0,c
  8757  002DDE  0E00               	movlw	0
  8758  002DE0  6E33               	movwf	(___fldiv@grs+2)^0,c
  8759  002DE2  0E00               	movlw	0
  8760  002DE4  6E34               	movwf	(___fldiv@grs+3)^0,c
  8761  002DE6  0E00               	movlw	0
  8762  002DE8  6E36               	movwf	___fldiv@aexp^0,c
  8763  002DEA  EF2F  F017         	goto	l1308
  8764  002DEE                     l4679:
  8765  002DEE  5036               	movf	___fldiv@aexp^0,w,c
  8766  002DF0  B4D8               	btfsc	status,2,c
  8767  002DF2  EFFD  F016         	goto	u3811
  8768  002DF6  EFFF  F016         	goto	u3810
  8769  002DFA                     u3811:
  8770  002DFA  EF16  F017         	goto	l4687
  8771  002DFE                     u3810:
  8772  002DFE  90D8               	bcf	status,0,c
  8773  002E00  362A               	rlcf	___fldiv@rem^0,f,c
  8774  002E02  362B               	rlcf	(___fldiv@rem+1)^0,f,c
  8775  002E04  362C               	rlcf	(___fldiv@rem+2)^0,f,c
  8776  002E06  362D               	rlcf	(___fldiv@rem+3)^0,f,c
  8777  002E08  90D8               	bcf	status,0,c
  8778  002E0A  361E               	rlcf	___fldiv@b^0,f,c
  8779  002E0C  361F               	rlcf	(___fldiv@b+1)^0,f,c
  8780  002E0E  3620               	rlcf	(___fldiv@b+2)^0,f,c
  8781  002E10  3621               	rlcf	(___fldiv@b+3)^0,f,c
  8782  002E12  AE34               	btfss	(___fldiv@grs+3)^0,7,c
  8783  002E14  EF0E  F017         	goto	u3821
  8784  002E18  EF10  F017         	goto	u3820
  8785  002E1C                     u3821:
  8786  002E1C  EF11  F017         	goto	l1311
  8787  002E20                     u3820:
  8788  002E20  801E               	bsf	___fldiv@b^0,0,c
  8789  002E22                     l1311:
  8790  002E22  90D8               	bcf	status,0,c
  8791  002E24  3631               	rlcf	___fldiv@grs^0,f,c
  8792  002E26  3632               	rlcf	(___fldiv@grs+1)^0,f,c
  8793  002E28  3633               	rlcf	(___fldiv@grs+2)^0,f,c
  8794  002E2A  3634               	rlcf	(___fldiv@grs+3)^0,f,c
  8795  002E2C                     l4687:
  8796  002E2C  5022               	movf	___fldiv@a^0,w,c
  8797  002E2E  5C2A               	subwf	___fldiv@rem^0,w,c
  8798  002E30  5023               	movf	(___fldiv@a+1)^0,w,c
  8799  002E32  582B               	subwfb	(___fldiv@rem+1)^0,w,c
  8800  002E34  5024               	movf	(___fldiv@a+2)^0,w,c
  8801  002E36  582C               	subwfb	(___fldiv@rem+2)^0,w,c
  8802  002E38  5025               	movf	(___fldiv@a+3)^0,w,c
  8803  002E3A  582D               	subwfb	(___fldiv@rem+3)^0,w,c
  8804  002E3C  A0D8               	btfss	status,0,c
  8805  002E3E  EF23  F017         	goto	u3831
  8806  002E42  EF25  F017         	goto	u3830
  8807  002E46                     u3831:
  8808  002E46  EF2E  F017         	goto	l4693
  8809  002E4A                     u3830:
  8810  002E4A  8C34               	bsf	(___fldiv@grs+3)^0,6,c
  8811  002E4C  5022               	movf	___fldiv@a^0,w,c
  8812  002E4E  5E2A               	subwf	___fldiv@rem^0,f,c
  8813  002E50  5023               	movf	(___fldiv@a+1)^0,w,c
  8814  002E52  5A2B               	subwfb	(___fldiv@rem+1)^0,f,c
  8815  002E54  5024               	movf	(___fldiv@a+2)^0,w,c
  8816  002E56  5A2C               	subwfb	(___fldiv@rem+2)^0,f,c
  8817  002E58  5025               	movf	(___fldiv@a+3)^0,w,c
  8818  002E5A  5A2D               	subwfb	(___fldiv@rem+3)^0,f,c
  8819  002E5C                     l4693:
  8820  002E5C  2A36               	incf	___fldiv@aexp^0,f,c
  8821  002E5E                     l1308:
  8822  002E5E  0E19               	movlw	25
  8823  002E60  6436               	cpfsgt	___fldiv@aexp^0,c
  8824  002E62  EF35  F017         	goto	u3841
  8825  002E66  EF37  F017         	goto	u3840
  8826  002E6A                     u3841:
  8827  002E6A  EFF7  F016         	goto	l4679
  8828  002E6E                     u3840:
  8829  002E6E  502A               	movf	___fldiv@rem^0,w,c
  8830  002E70  102B               	iorwf	(___fldiv@rem+1)^0,w,c
  8831  002E72  102C               	iorwf	(___fldiv@rem+2)^0,w,c
  8832  002E74  102D               	iorwf	(___fldiv@rem+3)^0,w,c
  8833  002E76  B4D8               	btfsc	status,2,c
  8834  002E78  EF40  F017         	goto	u3851
  8835  002E7C  EF42  F017         	goto	u3850
  8836  002E80                     u3851:
  8837  002E80  EF5A  F017         	goto	l4705
  8838  002E84                     u3850:
  8839  002E84  8031               	bsf	___fldiv@grs^0,0,c
  8840  002E86  EF5A  F017         	goto	l4705
  8841  002E8A                     l4699:
  8842  002E8A  90D8               	bcf	status,0,c
  8843  002E8C  361E               	rlcf	___fldiv@b^0,f,c
  8844  002E8E  361F               	rlcf	(___fldiv@b+1)^0,f,c
  8845  002E90  3620               	rlcf	(___fldiv@b+2)^0,f,c
  8846  002E92  3621               	rlcf	(___fldiv@b+3)^0,f,c
  8847  002E94  AE34               	btfss	(___fldiv@grs+3)^0,7,c
  8848  002E96  EF4F  F017         	goto	u3861
  8849  002E9A  EF51  F017         	goto	u3860
  8850  002E9E                     u3861:
  8851  002E9E  EF52  F017         	goto	l1317
  8852  002EA2                     u3860:
  8853  002EA2  801E               	bsf	___fldiv@b^0,0,c
  8854  002EA4                     l1317:
  8855  002EA4  90D8               	bcf	status,0,c
  8856  002EA6  3631               	rlcf	___fldiv@grs^0,f,c
  8857  002EA8  3632               	rlcf	(___fldiv@grs+1)^0,f,c
  8858  002EAA  3633               	rlcf	(___fldiv@grs+2)^0,f,c
  8859  002EAC  3634               	rlcf	(___fldiv@grs+3)^0,f,c
  8860  002EAE  062F               	decf	___fldiv@new_exp^0,f,c
  8861  002EB0  A0D8               	btfss	status,0,c
  8862  002EB2  0630               	decf	(___fldiv@new_exp+1)^0,f,c
  8863  002EB4                     l4705:
  8864  002EB4  AE20               	btfss	(___fldiv@b+2)^0,7,c
  8865  002EB6  EF5F  F017         	goto	u3871
  8866  002EBA  EF61  F017         	goto	u3870
  8867  002EBE                     u3871:
  8868  002EBE  EF45  F017         	goto	l4699
  8869  002EC2                     u3870:
  8870  002EC2  0E00               	movlw	0
  8871  002EC4  6E36               	movwf	___fldiv@aexp^0,c
  8872  002EC6  AE34               	btfss	(___fldiv@grs+3)^0,7,c
  8873  002EC8  EF68  F017         	goto	u3881
  8874  002ECC  EF6A  F017         	goto	u3880
  8875  002ED0                     u3881:
  8876  002ED0  EF8E  F017         	goto	l1319
  8877  002ED4                     u3880:
  8878  002ED4  0EFF               	movlw	255
  8879  002ED6  1431               	andwf	___fldiv@grs^0,w,c
  8880  002ED8  6E26               	movwf	??___fldiv^0,c
  8881  002EDA  0EFF               	movlw	255
  8882  002EDC  1432               	andwf	(___fldiv@grs+1)^0,w,c
  8883  002EDE  6E27               	movwf	(??___fldiv+1)^0,c
  8884  002EE0  0EFF               	movlw	255
  8885  002EE2  1433               	andwf	(___fldiv@grs+2)^0,w,c
  8886  002EE4  6E28               	movwf	(??___fldiv+2)^0,c
  8887  002EE6  0E7F               	movlw	127
  8888  002EE8  1434               	andwf	(___fldiv@grs+3)^0,w,c
  8889  002EEA  6E29               	movwf	(??___fldiv+3)^0,c
  8890  002EEC  5026               	movf	??___fldiv^0,w,c
  8891  002EEE  1027               	iorwf	(??___fldiv+1)^0,w,c
  8892  002EF0  1028               	iorwf	(??___fldiv+2)^0,w,c
  8893  002EF2  1029               	iorwf	(??___fldiv+3)^0,w,c
  8894  002EF4  B4D8               	btfsc	status,2,c
  8895  002EF6  EF7F  F017         	goto	u3891
  8896  002EFA  EF81  F017         	goto	u3890
  8897  002EFE                     u3891:
  8898  002EFE  EF85  F017         	goto	l1320
  8899  002F02                     u3890:
  8900  002F02                     l4713:
  8901  002F02  0E01               	movlw	1
  8902  002F04  6E36               	movwf	___fldiv@aexp^0,c
  8903  002F06  EF8E  F017         	goto	l1319
  8904  002F0A                     l1320:
  8905  002F0A  A01E               	btfss	___fldiv@b^0,0,c
  8906  002F0C  EF8A  F017         	goto	u3901
  8907  002F10  EF8C  F017         	goto	u3900
  8908  002F14                     u3901:
  8909  002F14  EF8E  F017         	goto	l1319
  8910  002F18                     u3900:
  8911  002F18  EF81  F017         	goto	l4713
  8912  002F1C                     l1319:
  8913  002F1C  5036               	movf	___fldiv@aexp^0,w,c
  8914  002F1E  B4D8               	btfsc	status,2,c
  8915  002F20  EF94  F017         	goto	u3911
  8916  002F24  EF96  F017         	goto	u3910
  8917  002F28                     u3911:
  8918  002F28  EFBA  F017         	goto	l4725
  8919  002F2C                     u3910:
  8920  002F2C  0E01               	movlw	1
  8921  002F2E  261E               	addwf	___fldiv@b^0,f,c
  8922  002F30  0E00               	movlw	0
  8923  002F32  221F               	addwfc	(___fldiv@b+1)^0,f,c
  8924  002F34  2220               	addwfc	(___fldiv@b+2)^0,f,c
  8925  002F36  2221               	addwfc	(___fldiv@b+3)^0,f,c
  8926  002F38  A021               	btfss	(___fldiv@b+3)^0,0,c
  8927  002F3A  EFA1  F017         	goto	u3921
  8928  002F3E  EFA3  F017         	goto	u3920
  8929  002F42                     u3921:
  8930  002F42  EFBA  F017         	goto	l4725
  8931  002F46                     u3920:
  8932  002F46  C01E  F026         	movff	___fldiv@b,??___fldiv
  8933  002F4A  C01F  F027         	movff	___fldiv@b+1,??___fldiv+1
  8934  002F4E  C020  F028         	movff	___fldiv@b+2,??___fldiv+2
  8935  002F52  C021  F029         	movff	___fldiv@b+3,??___fldiv+3
  8936  002F56  3429               	rlcf	(??___fldiv+3)^0,w,c
  8937  002F58  3229               	rrcf	(??___fldiv+3)^0,f,c
  8938  002F5A  3228               	rrcf	(??___fldiv+2)^0,f,c
  8939  002F5C  3227               	rrcf	(??___fldiv+1)^0,f,c
  8940  002F5E  3226               	rrcf	??___fldiv^0,f,c
  8941  002F60  C026  F01E         	movff	??___fldiv,___fldiv@b
  8942  002F64  C027  F01F         	movff	??___fldiv+1,___fldiv@b+1
  8943  002F68  C028  F020         	movff	??___fldiv+2,___fldiv@b+2
  8944  002F6C  C029  F021         	movff	??___fldiv+3,___fldiv@b+3
  8945  002F70  4A2F               	infsnz	___fldiv@new_exp^0,f,c
  8946  002F72  2A30               	incf	(___fldiv@new_exp+1)^0,f,c
  8947  002F74                     l4725:
  8948  002F74  BE30               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8949  002F76  EFC5  F017         	goto	u3931
  8950  002F7A  5030               	movf	(___fldiv@new_exp+1)^0,w,c
  8951  002F7C  E108               	bnz	u3930
  8952  002F7E  282F               	incf	___fldiv@new_exp^0,w,c
  8953  002F80  A0D8               	btfss	status,0,c
  8954  002F82  EFC5  F017         	goto	u3931
  8955  002F86  EFC7  F017         	goto	u3930
  8956  002F8A                     u3931:
  8957  002F8A  EFD2  F017         	goto	l4729
  8958  002F8E                     u3930:
  8959  002F8E  0E00               	movlw	0
  8960  002F90  6E30               	movwf	(___fldiv@new_exp+1)^0,c
  8961  002F92  682F               	setf	___fldiv@new_exp^0,c
  8962  002F94  0E00               	movlw	0
  8963  002F96  6E1E               	movwf	___fldiv@b^0,c
  8964  002F98  0E00               	movlw	0
  8965  002F9A  6E1F               	movwf	(___fldiv@b+1)^0,c
  8966  002F9C  0E00               	movlw	0
  8967  002F9E  6E20               	movwf	(___fldiv@b+2)^0,c
  8968  002FA0  0E00               	movlw	0
  8969  002FA2  6E21               	movwf	(___fldiv@b+3)^0,c
  8970  002FA4                     l4729:
  8971  002FA4  BE30               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8972  002FA6  EFDF  F017         	goto	u3940
  8973  002FAA  5030               	movf	(___fldiv@new_exp+1)^0,w,c
  8974  002FAC  E106               	bnz	u3941
  8975  002FAE  042F               	decf	___fldiv@new_exp^0,w,c
  8976  002FB0  B0D8               	btfsc	status,0,c
  8977  002FB2  EFDD  F017         	goto	u3941
  8978  002FB6  EFDF  F017         	goto	u3940
  8979  002FBA                     u3941:
  8980  002FBA  EFED  F017         	goto	l4733
  8981  002FBE                     u3940:
  8982  002FBE  0E00               	movlw	0
  8983  002FC0  6E30               	movwf	(___fldiv@new_exp+1)^0,c
  8984  002FC2  0E00               	movlw	0
  8985  002FC4  6E2F               	movwf	___fldiv@new_exp^0,c
  8986  002FC6  0E00               	movlw	0
  8987  002FC8  6E1E               	movwf	___fldiv@b^0,c
  8988  002FCA  0E00               	movlw	0
  8989  002FCC  6E1F               	movwf	(___fldiv@b+1)^0,c
  8990  002FCE  0E00               	movlw	0
  8991  002FD0  6E20               	movwf	(___fldiv@b+2)^0,c
  8992  002FD2  0E00               	movlw	0
  8993  002FD4  6E21               	movwf	(___fldiv@b+3)^0,c
  8994  002FD6  0E00               	movlw	0
  8995  002FD8  6E2E               	movwf	___fldiv@sign^0,c
  8996  002FDA                     l4733:
  8997  002FDA  C02F  F035         	movff	___fldiv@new_exp,___fldiv@bexp
  8998  002FDE  A035               	btfss	___fldiv@bexp^0,0,c
  8999  002FE0  EFF4  F017         	goto	u3951
  9000  002FE4  EFF6  F017         	goto	u3950
  9001  002FE8                     u3951:
  9002  002FE8  EFF9  F017         	goto	l4739
  9003  002FEC                     u3950:
  9004  002FEC  8E20               	bsf	(___fldiv@b+2)^0,7,c
  9005  002FEE  EFFA  F017         	goto	l4741
  9006  002FF2                     l4739:
  9007  002FF2  9E20               	bcf	(___fldiv@b+2)^0,7,c
  9008  002FF4                     l4741:
  9009  002FF4  90D8               	bcf	status,0,c
  9010  002FF6  3035               	rrcf	___fldiv@bexp^0,w,c
  9011  002FF8  6E21               	movwf	(___fldiv@b+3)^0,c
  9012  002FFA  EFB0  F016         	goto	l4655
  9013  002FFE                     l1306:
  9014  002FFE  0012               	return		;funcret
  9015  003000                     __end_of___fldiv:
  9016                           	callstack 0
  9017                           
  9018 ;; *************** function ___fladd *****************
  9019 ;; Defined at:
  9020 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  9021 ;; Parameters:    Size  Location     Type
  9022 ;;  b               4   54[COMRAM] unsigned char 
  9023 ;;  a               4   58[COMRAM] unsigned char 
  9024 ;; Auto vars:     Size  Location     Type
  9025 ;;  grs             1   69[COMRAM] unsigned char 
  9026 ;;  bexp            1   68[COMRAM] unsigned char 
  9027 ;;  aexp            1   67[COMRAM] unsigned char 
  9028 ;;  signs           1   66[COMRAM] unsigned char 
  9029 ;; Return value:  Size  Location     Type
  9030 ;;                  4   54[COMRAM] unsigned char 
  9031 ;; Registers used:
  9032 ;;		wreg, status,2, status,0
  9033 ;; Tracked objects:
  9034 ;;		On entry : 0/0
  9035 ;;		On exit  : 0/0
  9036 ;;		Unchanged: 0/0
  9037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9038 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9039 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9040 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9041 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9042 ;;Total ram usage:       16 bytes
  9043 ;; Hardware stack levels used: 1
  9044 ;; Hardware stack levels required when called: 4
  9045 ;; This function calls:
  9046 ;;		Nothing
  9047 ;; This function is called by:
  9048 ;;		_SHT40_temp_GetValue
  9049 ;;		_SHT40_humy_GetValue
  9050 ;;		___flsub
  9051 ;;		_efgtoa
  9052 ;; This function uses a non-reentrant model
  9053 ;;
  9054                           
  9055                           	psect	text44
  9056  00237C                     __ptext44:
  9057                           	callstack 0
  9058  00237C                     ___fladd:
  9059                           	callstack 21
  9060  00237C  503A               	movf	(___fladd@b+3)^0,w,c
  9061  00237E  0B80               	andlw	128
  9062  002380  6E43               	movwf	___fladd@signs^0,c
  9063  002382  503A               	movf	(___fladd@b+3)^0,w,c
  9064  002384  243A               	addwf	(___fladd@b+3)^0,w,c
  9065  002386  6E45               	movwf	___fladd@bexp^0,c
  9066  002388  AE39               	btfss	(___fladd@b+2)^0,7,c
  9067  00238A  EFC9  F011         	goto	u3271
  9068  00238E  EFCB  F011         	goto	u3270
  9069  002392                     u3271:
  9070  002392  EFCC  F011         	goto	l4353
  9071  002396                     u3270:
  9072  002396  8045               	bsf	___fladd@bexp^0,0,c
  9073  002398                     l4353:
  9074  002398  5045               	movf	___fladd@bexp^0,w,c
  9075  00239A  B4D8               	btfsc	status,2,c
  9076  00239C  EFD2  F011         	goto	u3281
  9077  0023A0  EFD4  F011         	goto	u3280
  9078  0023A4                     u3281:
  9079  0023A4  EFE9  F011         	goto	l4363
  9080  0023A8                     u3280:
  9081  0023A8  2845               	incf	___fladd@bexp^0,w,c
  9082  0023AA  A4D8               	btfss	status,2,c
  9083  0023AC  EFDA  F011         	goto	u3291
  9084  0023B0  EFDC  F011         	goto	u3290
  9085  0023B4                     u3291:
  9086  0023B4  EFE4  F011         	goto	l4359
  9087  0023B8                     u3290:
  9088  0023B8  0E00               	movlw	0
  9089  0023BA  6E37               	movwf	___fladd@b^0,c
  9090  0023BC  0E00               	movlw	0
  9091  0023BE  6E38               	movwf	(___fladd@b+1)^0,c
  9092  0023C0  0E00               	movlw	0
  9093  0023C2  6E39               	movwf	(___fladd@b+2)^0,c
  9094  0023C4  0E00               	movlw	0
  9095  0023C6  6E3A               	movwf	(___fladd@b+3)^0,c
  9096  0023C8                     l4359:
  9097  0023C8  8E39               	bsf	(___fladd@b+2)^0,7,c
  9098  0023CA  0E00               	movlw	0
  9099  0023CC  6E3A               	movwf	(___fladd@b+3)^0,c
  9100  0023CE  EFF1  F011         	goto	l4365
  9101  0023D2                     l4363:
  9102  0023D2  0E00               	movlw	0
  9103  0023D4  6E37               	movwf	___fladd@b^0,c
  9104  0023D6  0E00               	movlw	0
  9105  0023D8  6E38               	movwf	(___fladd@b+1)^0,c
  9106  0023DA  0E00               	movlw	0
  9107  0023DC  6E39               	movwf	(___fladd@b+2)^0,c
  9108  0023DE  0E00               	movlw	0
  9109  0023E0  6E3A               	movwf	(___fladd@b+3)^0,c
  9110  0023E2                     l4365:
  9111  0023E2  503E               	movf	(___fladd@a+3)^0,w,c
  9112  0023E4  0B80               	andlw	128
  9113  0023E6  6E44               	movwf	___fladd@aexp^0,c
  9114  0023E8  5043               	movf	___fladd@signs^0,w,c
  9115  0023EA  1844               	xorwf	___fladd@aexp^0,w,c
  9116  0023EC  B4D8               	btfsc	status,2,c
  9117  0023EE  EFFB  F011         	goto	u3301
  9118  0023F2  EFFD  F011         	goto	u3300
  9119  0023F6                     u3301:
  9120  0023F6  EFFE  F011         	goto	l4371
  9121  0023FA                     u3300:
  9122  0023FA  8C43               	bsf	___fladd@signs^0,6,c
  9123  0023FC                     l4371:
  9124  0023FC  503E               	movf	(___fladd@a+3)^0,w,c
  9125  0023FE  243E               	addwf	(___fladd@a+3)^0,w,c
  9126  002400  6E44               	movwf	___fladd@aexp^0,c
  9127  002402  AE3D               	btfss	(___fladd@a+2)^0,7,c
  9128  002404  EF06  F012         	goto	u3311
  9129  002408  EF08  F012         	goto	u3310
  9130  00240C                     u3311:
  9131  00240C  EF09  F012         	goto	l4377
  9132  002410                     u3310:
  9133  002410  8044               	bsf	___fladd@aexp^0,0,c
  9134  002412                     l4377:
  9135  002412  5044               	movf	___fladd@aexp^0,w,c
  9136  002414  B4D8               	btfsc	status,2,c
  9137  002416  EF0F  F012         	goto	u3321
  9138  00241A  EF11  F012         	goto	u3320
  9139  00241E                     u3321:
  9140  00241E  EF26  F012         	goto	l4387
  9141  002422                     u3320:
  9142  002422  2844               	incf	___fladd@aexp^0,w,c
  9143  002424  A4D8               	btfss	status,2,c
  9144  002426  EF17  F012         	goto	u3331
  9145  00242A  EF19  F012         	goto	u3330
  9146  00242E                     u3331:
  9147  00242E  EF21  F012         	goto	l4383
  9148  002432                     u3330:
  9149  002432  0E00               	movlw	0
  9150  002434  6E3B               	movwf	___fladd@a^0,c
  9151  002436  0E00               	movlw	0
  9152  002438  6E3C               	movwf	(___fladd@a+1)^0,c
  9153  00243A  0E00               	movlw	0
  9154  00243C  6E3D               	movwf	(___fladd@a+2)^0,c
  9155  00243E  0E00               	movlw	0
  9156  002440  6E3E               	movwf	(___fladd@a+3)^0,c
  9157  002442                     l4383:
  9158  002442  8E3D               	bsf	(___fladd@a+2)^0,7,c
  9159  002444  0E00               	movlw	0
  9160  002446  6E3E               	movwf	(___fladd@a+3)^0,c
  9161  002448  EF2E  F012         	goto	l4389
  9162  00244C                     l4387:
  9163  00244C  0E00               	movlw	0
  9164  00244E  6E3B               	movwf	___fladd@a^0,c
  9165  002450  0E00               	movlw	0
  9166  002452  6E3C               	movwf	(___fladd@a+1)^0,c
  9167  002454  0E00               	movlw	0
  9168  002456  6E3D               	movwf	(___fladd@a+2)^0,c
  9169  002458  0E00               	movlw	0
  9170  00245A  6E3E               	movwf	(___fladd@a+3)^0,c
  9171  00245C                     l4389:
  9172  00245C  5045               	movf	___fladd@bexp^0,w,c
  9173  00245E  5C44               	subwf	___fladd@aexp^0,w,c
  9174  002460  B0D8               	btfsc	status,0,c
  9175  002462  EF35  F012         	goto	u3341
  9176  002466  EF37  F012         	goto	u3340
  9177  00246A                     u3341:
  9178  00246A  EF5E  F012         	goto	l4425
  9179  00246E                     u3340:
  9180  00246E  AC43               	btfss	___fladd@signs^0,6,c
  9181  002470  EF3C  F012         	goto	u3351
  9182  002474  EF3E  F012         	goto	u3350
  9183  002478                     u3351:
  9184  002478  EF40  F012         	goto	l4395
  9185  00247C                     u3350:
  9186  00247C  0E80               	movlw	128
  9187  00247E  1A43               	xorwf	___fladd@signs^0,f,c
  9188  002480                     l4395:
  9189  002480  C045  F046         	movff	___fladd@bexp,___fladd@grs
  9190  002484  C044  F045         	movff	___fladd@aexp,___fladd@bexp
  9191  002488  C046  F044         	movff	___fladd@grs,___fladd@aexp
  9192  00248C  C037  F046         	movff	___fladd@b,___fladd@grs
  9193  002490  C03B  F037         	movff	___fladd@a,___fladd@b
  9194  002494  C046  F03B         	movff	___fladd@grs,___fladd@a
  9195  002498  C038  F046         	movff	___fladd@b+1,___fladd@grs
  9196  00249C  C03C  F038         	movff	___fladd@a+1,___fladd@b+1
  9197  0024A0  C046  F03C         	movff	___fladd@grs,___fladd@a+1
  9198  0024A4  C039  F046         	movff	___fladd@b+2,___fladd@grs
  9199  0024A8  C03D  F039         	movff	___fladd@a+2,___fladd@b+2
  9200  0024AC  C046  F03D         	movff	___fladd@grs,___fladd@a+2
  9201  0024B0  C03A  F046         	movff	___fladd@b+3,___fladd@grs
  9202  0024B4  C03E  F03A         	movff	___fladd@a+3,___fladd@b+3
  9203  0024B8  C046  F03E         	movff	___fladd@grs,___fladd@a+3
  9204  0024BC                     l4425:
  9205  0024BC  0E00               	movlw	0
  9206  0024BE  6E46               	movwf	___fladd@grs^0,c
  9207  0024C0  5045               	movf	___fladd@bexp^0,w,c
  9208  0024C2  C044  F03F         	movff	___fladd@aexp,??___fladd
  9209  0024C6  6A40               	clrf	(??___fladd+1)^0,c
  9210  0024C8  5E3F               	subwf	??___fladd^0,f,c
  9211  0024CA  0E00               	movlw	0
  9212  0024CC  5A40               	subwfb	(??___fladd+1)^0,f,c
  9213  0024CE  BE40               	btfsc	(??___fladd+1)^0,7,c
  9214  0024D0  EF73  F012         	goto	u3361
  9215  0024D4  5040               	movf	(??___fladd+1)^0,w,c
  9216  0024D6  E109               	bnz	u3360
  9217  0024D8  0E1A               	movlw	26
  9218  0024DA  5C3F               	subwf	??___fladd^0,w,c
  9219  0024DC  A0D8               	btfss	status,0,c
  9220  0024DE  EF73  F012         	goto	u3361
  9221  0024E2  EF75  F012         	goto	u3360
  9222  0024E6                     u3361:
  9223  0024E6  EFAC  F012         	goto	l1253
  9224  0024EA                     u3360:
  9225  0024EA  5037               	movf	___fladd@b^0,w,c
  9226  0024EC  1038               	iorwf	(___fladd@b+1)^0,w,c
  9227  0024EE  1039               	iorwf	(___fladd@b+2)^0,w,c
  9228  0024F0  103A               	iorwf	(___fladd@b+3)^0,w,c
  9229  0024F2  A4D8               	btfss	status,2,c
  9230  0024F4  EF7E  F012         	goto	u3371
  9231  0024F8  EF81  F012         	goto	u3370
  9232  0024FC                     u3371:
  9233  0024FC  0E01               	movlw	1
  9234  0024FE  EF82  F012         	goto	u3380
  9235  002502                     u3370:
  9236  002502  0E00               	movlw	0
  9237  002504                     u3380:
  9238  002504  6E46               	movwf	___fladd@grs^0,c
  9239  002506  0E00               	movlw	0
  9240  002508  6E37               	movwf	___fladd@b^0,c
  9241  00250A  0E00               	movlw	0
  9242  00250C  6E38               	movwf	(___fladd@b+1)^0,c
  9243  00250E  0E00               	movlw	0
  9244  002510  6E39               	movwf	(___fladd@b+2)^0,c
  9245  002512  0E00               	movlw	0
  9246  002514  6E3A               	movwf	(___fladd@b+3)^0,c
  9247  002516  C044  F045         	movff	___fladd@aexp,___fladd@bexp
  9248  00251A  EFB5  F012         	goto	l1252
  9249  00251E                     l1254:
  9250  00251E  A046               	btfss	___fladd@grs^0,0,c
  9251  002520  EF94  F012         	goto	u3391
  9252  002524  EF96  F012         	goto	u3390
  9253  002528                     u3391:
  9254  002528  EF9C  F012         	goto	l4437
  9255  00252C                     u3390:
  9256  00252C  90D8               	bcf	status,0,c
  9257  00252E  3046               	rrcf	___fladd@grs^0,w,c
  9258  002530  0901               	iorlw	1
  9259  002532  6E46               	movwf	___fladd@grs^0,c
  9260  002534  EF9E  F012         	goto	l4439
  9261  002538                     l4437:
  9262  002538  90D8               	bcf	status,0,c
  9263  00253A  3246               	rrcf	___fladd@grs^0,f,c
  9264  00253C                     l4439:
  9265  00253C  A037               	btfss	___fladd@b^0,0,c
  9266  00253E  EFA3  F012         	goto	u3401
  9267  002542  EFA5  F012         	goto	u3400
  9268  002546                     u3401:
  9269  002546  EFA6  F012         	goto	l4443
  9270  00254A                     u3400:
  9271  00254A  8E46               	bsf	___fladd@grs^0,7,c
  9272  00254C                     l4443:
  9273  00254C  343A               	rlcf	(___fladd@b+3)^0,w,c
  9274  00254E  323A               	rrcf	(___fladd@b+3)^0,f,c
  9275  002550  3239               	rrcf	(___fladd@b+2)^0,f,c
  9276  002552  3238               	rrcf	(___fladd@b+1)^0,f,c
  9277  002554  3237               	rrcf	___fladd@b^0,f,c
  9278  002556  2A45               	incf	___fladd@bexp^0,f,c
  9279  002558                     l1253:
  9280  002558  5044               	movf	___fladd@aexp^0,w,c
  9281  00255A  5C45               	subwf	___fladd@bexp^0,w,c
  9282  00255C  A0D8               	btfss	status,0,c
  9283  00255E  EFB3  F012         	goto	u3411
  9284  002562  EFB5  F012         	goto	u3410
  9285  002566                     u3411:
  9286  002566  EF8F  F012         	goto	l1254
  9287  00256A                     u3410:
  9288  00256A                     l1252:
  9289  00256A  BC43               	btfsc	___fladd@signs^0,6,c
  9290  00256C  EFBA  F012         	goto	u3421
  9291  002570  EFBC  F012         	goto	u3420
  9292  002574                     u3421:
  9293  002574  EFFC  F012         	goto	l4471
  9294  002578                     u3420:
  9295  002578  5045               	movf	___fladd@bexp^0,w,c
  9296  00257A  A4D8               	btfss	status,2,c
  9297  00257C  EFC2  F012         	goto	u3431
  9298  002580  EFC4  F012         	goto	u3430
  9299  002584                     u3431:
  9300  002584  EFCE  F012         	goto	l4453
  9301  002588                     u3430:
  9302  002588  0E00               	movlw	0
  9303  00258A  6E37               	movwf	?___fladd^0,c
  9304  00258C  0E00               	movlw	0
  9305  00258E  6E38               	movwf	(?___fladd+1)^0,c
  9306  002590  0E00               	movlw	0
  9307  002592  6E39               	movwf	(?___fladd+2)^0,c
  9308  002594  0E00               	movlw	0
  9309  002596  6E3A               	movwf	(?___fladd+3)^0,c
  9310  002598  EF1D  F014         	goto	l1261
  9311  00259C                     l4453:
  9312  00259C  503B               	movf	___fladd@a^0,w,c
  9313  00259E  2637               	addwf	___fladd@b^0,f,c
  9314  0025A0  503C               	movf	(___fladd@a+1)^0,w,c
  9315  0025A2  2238               	addwfc	(___fladd@b+1)^0,f,c
  9316  0025A4  503D               	movf	(___fladd@a+2)^0,w,c
  9317  0025A6  2239               	addwfc	(___fladd@b+2)^0,f,c
  9318  0025A8  503E               	movf	(___fladd@a+3)^0,w,c
  9319  0025AA  223A               	addwfc	(___fladd@b+3)^0,f,c
  9320  0025AC  A03A               	btfss	(___fladd@b+3)^0,0,c
  9321  0025AE  EFDB  F012         	goto	u3441
  9322  0025B2  EFDD  F012         	goto	u3440
  9323  0025B6                     u3441:
  9324  0025B6  EF89  F013         	goto	l4507
  9325  0025BA                     u3440:
  9326  0025BA  A046               	btfss	___fladd@grs^0,0,c
  9327  0025BC  EFE2  F012         	goto	u3451
  9328  0025C0  EFE4  F012         	goto	u3450
  9329  0025C4                     u3451:
  9330  0025C4  EFEA  F012         	goto	l4461
  9331  0025C8                     u3450:
  9332  0025C8  90D8               	bcf	status,0,c
  9333  0025CA  3046               	rrcf	___fladd@grs^0,w,c
  9334  0025CC  0901               	iorlw	1
  9335  0025CE  6E46               	movwf	___fladd@grs^0,c
  9336  0025D0  EFEC  F012         	goto	l4463
  9337  0025D4                     l4461:
  9338  0025D4  90D8               	bcf	status,0,c
  9339  0025D6  3246               	rrcf	___fladd@grs^0,f,c
  9340  0025D8                     l4463:
  9341  0025D8  A037               	btfss	___fladd@b^0,0,c
  9342  0025DA  EFF1  F012         	goto	u3461
  9343  0025DE  EFF3  F012         	goto	u3460
  9344  0025E2                     u3461:
  9345  0025E2  EFF4  F012         	goto	l4467
  9346  0025E6                     u3460:
  9347  0025E6  8E46               	bsf	___fladd@grs^0,7,c
  9348  0025E8                     l4467:
  9349  0025E8  343A               	rlcf	(___fladd@b+3)^0,w,c
  9350  0025EA  323A               	rrcf	(___fladd@b+3)^0,f,c
  9351  0025EC  3239               	rrcf	(___fladd@b+2)^0,f,c
  9352  0025EE  3238               	rrcf	(___fladd@b+1)^0,f,c
  9353  0025F0  3237               	rrcf	___fladd@b^0,f,c
  9354  0025F2  2A45               	incf	___fladd@bexp^0,f,c
  9355  0025F4  EF89  F013         	goto	l4507
  9356  0025F8                     l4471:
  9357  0025F8  503B               	movf	___fladd@a^0,w,c
  9358  0025FA  5C37               	subwf	___fladd@b^0,w,c
  9359  0025FC  503C               	movf	(___fladd@a+1)^0,w,c
  9360  0025FE  5838               	subwfb	(___fladd@b+1)^0,w,c
  9361  002600  503D               	movf	(___fladd@a+2)^0,w,c
  9362  002602  5839               	subwfb	(___fladd@b+2)^0,w,c
  9363  002604  503A               	movf	(___fladd@b+3)^0,w,c
  9364  002606  0A80               	xorlw	128
  9365  002608  6E3F               	movwf	??___fladd^0,c
  9366  00260A  503E               	movf	(___fladd@a+3)^0,w,c
  9367  00260C  0A80               	xorlw	128
  9368  00260E  583F               	subwfb	??___fladd^0,w,c
  9369  002610  B0D8               	btfsc	status,0,c
  9370  002612  EF0D  F013         	goto	u3471
  9371  002616  EF0F  F013         	goto	u3470
  9372  00261A                     u3471:
  9373  00261A  EF3A  F013         	goto	l4481
  9374  00261E                     u3470:
  9375  00261E  5037               	movf	___fladd@b^0,w,c
  9376  002620  5C3B               	subwf	___fladd@a^0,w,c
  9377  002622  6E3F               	movwf	??___fladd^0,c
  9378  002624  5038               	movf	(___fladd@b+1)^0,w,c
  9379  002626  583C               	subwfb	(___fladd@a+1)^0,w,c
  9380  002628  6E40               	movwf	(??___fladd+1)^0,c
  9381  00262A  5039               	movf	(___fladd@b+2)^0,w,c
  9382  00262C  583D               	subwfb	(___fladd@a+2)^0,w,c
  9383  00262E  6E41               	movwf	(??___fladd+2)^0,c
  9384  002630  503A               	movf	(___fladd@b+3)^0,w,c
  9385  002632  583E               	subwfb	(___fladd@a+3)^0,w,c
  9386  002634  6E42               	movwf	(??___fladd+3)^0,c
  9387  002636  0EFF               	movlw	255
  9388  002638  243F               	addwf	??___fladd^0,w,c
  9389  00263A  6E37               	movwf	___fladd@b^0,c
  9390  00263C  0EFF               	movlw	255
  9391  00263E  2040               	addwfc	(??___fladd+1)^0,w,c
  9392  002640  6E38               	movwf	(___fladd@b+1)^0,c
  9393  002642  0EFF               	movlw	255
  9394  002644  2041               	addwfc	(??___fladd+2)^0,w,c
  9395  002646  6E39               	movwf	(___fladd@b+2)^0,c
  9396  002648  0EFF               	movlw	255
  9397  00264A  2042               	addwfc	(??___fladd+3)^0,w,c
  9398  00264C  6E3A               	movwf	(___fladd@b+3)^0,c
  9399  00264E  0E80               	movlw	128
  9400  002650  1A43               	xorwf	___fladd@signs^0,f,c
  9401  002652  6C46               	negf	___fladd@grs^0,c
  9402  002654  5046               	movf	___fladd@grs^0,w,c
  9403  002656  A4D8               	btfss	status,2,c
  9404  002658  EF30  F013         	goto	u3481
  9405  00265C  EF32  F013         	goto	u3480
  9406  002660                     u3481:
  9407  002660  EF42  F013         	goto	l1269
  9408  002664                     u3480:
  9409  002664  0E01               	movlw	1
  9410  002666  2637               	addwf	___fladd@b^0,f,c
  9411  002668  0E00               	movlw	0
  9412  00266A  2238               	addwfc	(___fladd@b+1)^0,f,c
  9413  00266C  2239               	addwfc	(___fladd@b+2)^0,f,c
  9414  00266E  223A               	addwfc	(___fladd@b+3)^0,f,c
  9415  002670  EF42  F013         	goto	l1269
  9416  002674                     l4481:
  9417  002674  503B               	movf	___fladd@a^0,w,c
  9418  002676  5E37               	subwf	___fladd@b^0,f,c
  9419  002678  503C               	movf	(___fladd@a+1)^0,w,c
  9420  00267A  5A38               	subwfb	(___fladd@b+1)^0,f,c
  9421  00267C  503D               	movf	(___fladd@a+2)^0,w,c
  9422  00267E  5A39               	subwfb	(___fladd@b+2)^0,f,c
  9423  002680  503E               	movf	(___fladd@a+3)^0,w,c
  9424  002682  5A3A               	subwfb	(___fladd@b+3)^0,f,c
  9425  002684                     l1269:
  9426  002684  5037               	movf	___fladd@b^0,w,c
  9427  002686  1038               	iorwf	(___fladd@b+1)^0,w,c
  9428  002688  1039               	iorwf	(___fladd@b+2)^0,w,c
  9429  00268A  103A               	iorwf	(___fladd@b+3)^0,w,c
  9430  00268C  A4D8               	btfss	status,2,c
  9431  00268E  EF4B  F013         	goto	u3491
  9432  002692  EF4D  F013         	goto	u3490
  9433  002696                     u3491:
  9434  002696  EF82  F013         	goto	l4505
  9435  00269A                     u3490:
  9436  00269A  5046               	movf	___fladd@grs^0,w,c
  9437  00269C  A4D8               	btfss	status,2,c
  9438  00269E  EF53  F013         	goto	u3501
  9439  0026A2  EF55  F013         	goto	u3500
  9440  0026A6                     u3501:
  9441  0026A6  EF82  F013         	goto	l4505
  9442  0026AA                     u3500:
  9443  0026AA  0E00               	movlw	0
  9444  0026AC  6E37               	movwf	?___fladd^0,c
  9445  0026AE  0E00               	movlw	0
  9446  0026B0  6E38               	movwf	(?___fladd+1)^0,c
  9447  0026B2  0E00               	movlw	0
  9448  0026B4  6E39               	movwf	(?___fladd+2)^0,c
  9449  0026B6  0E00               	movlw	0
  9450  0026B8  6E3A               	movwf	(?___fladd+3)^0,c
  9451  0026BA  EF1D  F014         	goto	l1261
  9452  0026BE                     l4489:
  9453  0026BE  90D8               	bcf	status,0,c
  9454  0026C0  3637               	rlcf	___fladd@b^0,f,c
  9455  0026C2  3638               	rlcf	(___fladd@b+1)^0,f,c
  9456  0026C4  3639               	rlcf	(___fladd@b+2)^0,f,c
  9457  0026C6  363A               	rlcf	(___fladd@b+3)^0,f,c
  9458  0026C8  AE46               	btfss	___fladd@grs^0,7,c
  9459  0026CA  EF69  F013         	goto	u3511
  9460  0026CE  EF6B  F013         	goto	u3510
  9461  0026D2                     u3511:
  9462  0026D2  EF6C  F013         	goto	l4495
  9463  0026D6                     u3510:
  9464  0026D6  8037               	bsf	___fladd@b^0,0,c
  9465  0026D8                     l4495:
  9466  0026D8  A046               	btfss	___fladd@grs^0,0,c
  9467  0026DA  EF71  F013         	goto	u3521
  9468  0026DE  EF73  F013         	goto	u3520
  9469  0026E2                     u3521:
  9470  0026E2  EF77  F013         	goto	l4499
  9471  0026E6                     u3520:
  9472  0026E6  80D8               	bsf	status,0,c
  9473  0026E8  3646               	rlcf	___fladd@grs^0,f,c
  9474  0026EA  EF79  F013         	goto	l4501
  9475  0026EE                     l4499:
  9476  0026EE  90D8               	bcf	status,0,c
  9477  0026F0  3646               	rlcf	___fladd@grs^0,f,c
  9478  0026F2                     l4501:
  9479  0026F2  5045               	movf	___fladd@bexp^0,w,c
  9480  0026F4  B4D8               	btfsc	status,2,c
  9481  0026F6  EF7F  F013         	goto	u3531
  9482  0026FA  EF81  F013         	goto	u3530
  9483  0026FE                     u3531:
  9484  0026FE  EF82  F013         	goto	l4505
  9485  002702                     u3530:
  9486  002702  0645               	decf	___fladd@bexp^0,f,c
  9487  002704                     l4505:
  9488  002704  AE39               	btfss	(___fladd@b+2)^0,7,c
  9489  002706  EF87  F013         	goto	u3541
  9490  00270A  EF89  F013         	goto	u3540
  9491  00270E                     u3541:
  9492  00270E  EF5F  F013         	goto	l4489
  9493  002712                     u3540:
  9494  002712                     l4507:
  9495  002712  0E00               	movlw	0
  9496  002714  6E44               	movwf	___fladd@aexp^0,c
  9497  002716  AE46               	btfss	___fladd@grs^0,7,c
  9498  002718  EF90  F013         	goto	u3551
  9499  00271C  EF92  F013         	goto	u3550
  9500  002720                     u3551:
  9501  002720  EFAA  F013         	goto	l1278
  9502  002724                     u3550:
  9503  002724  C046  F03F         	movff	___fladd@grs,??___fladd
  9504  002728  0E7F               	movlw	127
  9505  00272A  163F               	andwf	??___fladd^0,f,c
  9506  00272C  B4D8               	btfsc	status,2,c
  9507  00272E  EF9B  F013         	goto	u3561
  9508  002732  EF9D  F013         	goto	u3560
  9509  002736                     u3561:
  9510  002736  EFA1  F013         	goto	l1279
  9511  00273A                     u3560:
  9512  00273A                     l4513:
  9513  00273A  0E01               	movlw	1
  9514  00273C  6E44               	movwf	___fladd@aexp^0,c
  9515  00273E  EFAA  F013         	goto	l1278
  9516  002742                     l1279:
  9517  002742  A037               	btfss	___fladd@b^0,0,c
  9518  002744  EFA6  F013         	goto	u3571
  9519  002748  EFA8  F013         	goto	u3570
  9520  00274C                     u3571:
  9521  00274C  EFAA  F013         	goto	l1278
  9522  002750                     u3570:
  9523  002750  EF9D  F013         	goto	l4513
  9524  002754                     l1278:
  9525  002754  5044               	movf	___fladd@aexp^0,w,c
  9526  002756  B4D8               	btfsc	status,2,c
  9527  002758  EFB0  F013         	goto	u3581
  9528  00275C  EFB2  F013         	goto	u3580
  9529  002760                     u3581:
  9530  002760  EFDD  F013         	goto	l4525
  9531  002764                     u3580:
  9532  002764  0E01               	movlw	1
  9533  002766  2637               	addwf	___fladd@b^0,f,c
  9534  002768  0E00               	movlw	0
  9535  00276A  2238               	addwfc	(___fladd@b+1)^0,f,c
  9536  00276C  2239               	addwfc	(___fladd@b+2)^0,f,c
  9537  00276E  223A               	addwfc	(___fladd@b+3)^0,f,c
  9538  002770  A03A               	btfss	(___fladd@b+3)^0,0,c
  9539  002772  EFBD  F013         	goto	u3591
  9540  002776  EFBF  F013         	goto	u3590
  9541  00277A                     u3591:
  9542  00277A  EFDD  F013         	goto	l4525
  9543  00277E                     u3590:
  9544  00277E  C037  F03F         	movff	___fladd@b,??___fladd
  9545  002782  C038  F040         	movff	___fladd@b+1,??___fladd+1
  9546  002786  C039  F041         	movff	___fladd@b+2,??___fladd+2
  9547  00278A  C03A  F042         	movff	___fladd@b+3,??___fladd+3
  9548  00278E  3442               	rlcf	(??___fladd+3)^0,w,c
  9549  002790  3242               	rrcf	(??___fladd+3)^0,f,c
  9550  002792  3241               	rrcf	(??___fladd+2)^0,f,c
  9551  002794  3240               	rrcf	(??___fladd+1)^0,f,c
  9552  002796  323F               	rrcf	??___fladd^0,f,c
  9553  002798  C03F  F037         	movff	??___fladd,___fladd@b
  9554  00279C  C040  F038         	movff	??___fladd+1,___fladd@b+1
  9555  0027A0  C041  F039         	movff	??___fladd+2,___fladd@b+2
  9556  0027A4  C042  F03A         	movff	??___fladd+3,___fladd@b+3
  9557  0027A8  2845               	incf	___fladd@bexp^0,w,c
  9558  0027AA  B4D8               	btfsc	status,2,c
  9559  0027AC  EFDA  F013         	goto	u3601
  9560  0027B0  EFDC  F013         	goto	u3600
  9561  0027B4                     u3601:
  9562  0027B4  EFDD  F013         	goto	l4525
  9563  0027B8                     u3600:
  9564  0027B8  2A45               	incf	___fladd@bexp^0,f,c
  9565  0027BA                     l4525:
  9566  0027BA  2845               	incf	___fladd@bexp^0,w,c
  9567  0027BC  B4D8               	btfsc	status,2,c
  9568  0027BE  EFE3  F013         	goto	u3611
  9569  0027C2  EFE5  F013         	goto	u3610
  9570  0027C6                     u3611:
  9571  0027C6  EFED  F013         	goto	l4529
  9572  0027CA                     u3610:
  9573  0027CA  5045               	movf	___fladd@bexp^0,w,c
  9574  0027CC  A4D8               	btfss	status,2,c
  9575  0027CE  EFEB  F013         	goto	u3621
  9576  0027D2  EFED  F013         	goto	u3620
  9577  0027D6                     u3621:
  9578  0027D6  EFFF  F013         	goto	l4533
  9579  0027DA                     u3620:
  9580  0027DA                     l4529:
  9581  0027DA  0E00               	movlw	0
  9582  0027DC  6E37               	movwf	___fladd@b^0,c
  9583  0027DE  0E00               	movlw	0
  9584  0027E0  6E38               	movwf	(___fladd@b+1)^0,c
  9585  0027E2  0E00               	movlw	0
  9586  0027E4  6E39               	movwf	(___fladd@b+2)^0,c
  9587  0027E6  0E00               	movlw	0
  9588  0027E8  6E3A               	movwf	(___fladd@b+3)^0,c
  9589  0027EA  5045               	movf	___fladd@bexp^0,w,c
  9590  0027EC  A4D8               	btfss	status,2,c
  9591  0027EE  EFFB  F013         	goto	u3631
  9592  0027F2  EFFD  F013         	goto	u3630
  9593  0027F6                     u3631:
  9594  0027F6  EFFF  F013         	goto	l4533
  9595  0027FA                     u3630:
  9596  0027FA  0E00               	movlw	0
  9597  0027FC  6E43               	movwf	___fladd@signs^0,c
  9598  0027FE                     l4533:
  9599  0027FE  A045               	btfss	___fladd@bexp^0,0,c
  9600  002800  EF04  F014         	goto	u3641
  9601  002804  EF06  F014         	goto	u3640
  9602  002808                     u3641:
  9603  002808  EF09  F014         	goto	l4537
  9604  00280C                     u3640:
  9605  00280C  8E39               	bsf	(___fladd@b+2)^0,7,c
  9606  00280E  EF0A  F014         	goto	l4539
  9607  002812                     l4537:
  9608  002812  9E39               	bcf	(___fladd@b+2)^0,7,c
  9609  002814                     l4539:
  9610  002814  90D8               	bcf	status,0,c
  9611  002816  3045               	rrcf	___fladd@bexp^0,w,c
  9612  002818  6E3A               	movwf	(___fladd@b+3)^0,c
  9613  00281A  AE43               	btfss	___fladd@signs^0,7,c
  9614  00281C  EF12  F014         	goto	u3651
  9615  002820  EF14  F014         	goto	u3650
  9616  002824                     u3651:
  9617  002824  EF15  F014         	goto	l4545
  9618  002828                     u3650:
  9619  002828  8E3A               	bsf	(___fladd@b+3)^0,7,c
  9620  00282A                     l4545:
  9621  00282A  C037  F037         	movff	___fladd@b,?___fladd
  9622  00282E  C038  F038         	movff	___fladd@b+1,?___fladd+1
  9623  002832  C039  F039         	movff	___fladd@b+2,?___fladd+2
  9624  002836  C03A  F03A         	movff	___fladd@b+3,?___fladd+3
  9625  00283A                     l1261:
  9626  00283A  0012               	return		;funcret
  9627  00283C                     __end_of___fladd:
  9628                           	callstack 0
  9629                           
  9630 ;; *************** function _SHT40_Read *****************
  9631 ;; Defined at:
  9632 ;;		line 20 in file "sht40.c"
  9633 ;; Parameters:    Size  Location     Type
  9634 ;;		None
  9635 ;; Auto vars:     Size  Location     Type
  9636 ;;  regist          1   27[COMRAM] unsigned char 
  9637 ;; Return value:  Size  Location     Type
  9638 ;;                  1    wreg      void 
  9639 ;; Registers used:
  9640 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9641 ;; Tracked objects:
  9642 ;;		On entry : 0/0
  9643 ;;		On exit  : 0/0
  9644 ;;		Unchanged: 0/0
  9645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9647 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9648 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9649 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9650 ;;Total ram usage:        2 bytes
  9651 ;; Hardware stack levels used: 1
  9652 ;; Hardware stack levels required when called: 13
  9653 ;; This function calls:
  9654 ;;		_I2C_ReadNBytes
  9655 ;;		_I2C_WriteNBytes
  9656 ;; This function is called by:
  9657 ;;		_SHT40_temp_GetValue
  9658 ;;		_SHT40_humy_GetValue
  9659 ;; This function uses a non-reentrant model
  9660 ;;
  9661                           
  9662                           	psect	text45
  9663  004748                     __ptext45:
  9664                           	callstack 0
  9665  004748                     _SHT40_Read:
  9666                           	callstack 16
  9667  004748                     
  9668                           ;sht40.c: 21:     uint8_t regist = 0xFD;
  9669  004748  0EFD               	movlw	253
  9670  00474A  6E1C               	movwf	SHT40_Read@regist^0,c
  9671  00474C                     
  9672                           ;sht40.c: 23:     I2C_WriteNBytes(0x44, &regist, 1);
  9673  00474C  0E1C               	movlw	low SHT40_Read@regist
  9674  00474E  6E16               	movwf	I2C_WriteNBytes@data^0,c
  9675  004750  0E00               	movlw	high SHT40_Read@regist
  9676  004752  6E17               	movwf	(I2C_WriteNBytes@data+1)^0,c
  9677  004754  0E00               	movlw	0
  9678  004756  6E19               	movwf	(I2C_WriteNBytes@len+1)^0,c
  9679  004758  0E01               	movlw	1
  9680  00475A  6E18               	movwf	I2C_WriteNBytes@len^0,c
  9681  00475C  0E44               	movlw	68
  9682  00475E  ECBA  F022         	call	_I2C_WriteNBytes
  9683  004762                     
  9684                           ;sht40.c: 24:     _delay((unsigned long)((10)*(8000000/4000.0)));
  9685  004762  0E1A               	movlw	26
  9686  004764  6E1B               	movwf	??_SHT40_Read^0,c
  9687  004766  0EF8               	movlw	248
  9688  004768                     u6877:
  9689  004768  2EE8               	decfsz	wreg,f,c
  9690  00476A  D7FE               	bra	u6877
  9691  00476C  2E1B               	decfsz	??_SHT40_Read^0,f,c
  9692  00476E  D7FC               	bra	u6877
  9693  004770  F000 F000          	nop2	
  9694  004774                     
  9695                           ;sht40.c: 25:     I2C_ReadNBytes(0x44, &readBuffer, 6);
  9696  004774  0E74               	movlw	low _readBuffer
  9697  004776  6E16               	movwf	I2C_ReadNBytes@data^0,c
  9698  004778  0E01               	movlw	high _readBuffer
  9699  00477A  6E17               	movwf	(I2C_ReadNBytes@data+1)^0,c
  9700  00477C  0E00               	movlw	0
  9701  00477E  6E19               	movwf	(I2C_ReadNBytes@len+1)^0,c
  9702  004780  0E06               	movlw	6
  9703  004782  6E18               	movwf	I2C_ReadNBytes@len^0,c
  9704  004784  0E44               	movlw	68
  9705  004786  EC5F  F023         	call	_I2C_ReadNBytes
  9706  00478A  0012               	return		;funcret
  9707  00478C                     __end_of_SHT40_Read:
  9708                           	callstack 0
  9709                           
  9710 ;; *************** function _I2C_WriteNBytes *****************
  9711 ;; Defined at:
  9712 ;;		line 111 in file "mcc_generated_files/examples/i2c_master_example.c"
  9713 ;; Parameters:    Size  Location     Type
  9714 ;;  address         1    wreg     unsigned char 
  9715 ;;  data            2   21[COMRAM] PTR unsigned char 
  9716 ;;		 -> SHT40_Read@regist(1), 
  9717 ;;  len             2   23[COMRAM] unsigned int 
  9718 ;; Auto vars:     Size  Location     Type
  9719 ;;  address         1   25[COMRAM] unsigned char 
  9720 ;; Return value:  Size  Location     Type
  9721 ;;                  1    wreg      void 
  9722 ;; Registers used:
  9723 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9724 ;; Tracked objects:
  9725 ;;		On entry : 0/0
  9726 ;;		On exit  : 0/0
  9727 ;;		Unchanged: 0/0
  9728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9729 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9730 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9732 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9733 ;;Total ram usage:        5 bytes
  9734 ;; Hardware stack levels used: 1
  9735 ;; Hardware stack levels required when called: 12
  9736 ;; This function calls:
  9737 ;;		_I2C_Close
  9738 ;;		_I2C_MasterWrite
  9739 ;;		_I2C_Open
  9740 ;;		_I2C_SetAddressNackCallback
  9741 ;;		_I2C_SetBuffer
  9742 ;; This function is called by:
  9743 ;;		_SHT40_Read
  9744 ;; This function uses a non-reentrant model
  9745 ;;
  9746                           
  9747                           	psect	text46
  9748  004574                     __ptext46:
  9749                           	callstack 0
  9750  004574                     _I2C_WriteNBytes:
  9751                           	callstack 16
  9752                           
  9753                           ;incstack = 0
  9754                           ;I2C_WriteNBytes@address stored from wreg
  9755  004574  6E1A               	movwf	I2C_WriteNBytes@address^0,c
  9756  004576                     l5601:
  9757  004576  501A               	movf	I2C_WriteNBytes@address^0,w,c
  9758  004578  ECC1  F020         	call	_I2C_Open
  9759  00457C  0900               	iorlw	0
  9760  00457E  B4D8               	btfsc	status,2,c
  9761  004580  EFC4  F022         	goto	u5411
  9762  004584  EFC6  F022         	goto	u5410
  9763  004588                     u5411:
  9764  004588  EFBB  F022         	goto	l5601
  9765  00458C                     u5410:
  9766  00458C                     
  9767                           ;mcc_generated_files/examples/i2c_master_example.c: 114:     I2C_SetBuffer(data,len);
  9768  00458C  C016  F005         	movff	I2C_WriteNBytes@data,I2C_SetBuffer@buffer
  9769  004590  C017  F006         	movff	I2C_WriteNBytes@data+1,I2C_SetBuffer@buffer+1
  9770  004594  C018  F007         	movff	I2C_WriteNBytes@len,I2C_SetBuffer@bufferSize
  9771  004598  C019  F008         	movff	I2C_WriteNBytes@len+1,I2C_SetBuffer@bufferSize+1
  9772  00459C  EC70  F025         	call	_I2C_SetBuffer	;wreg free
  9773  0045A0                     
  9774                           ;mcc_generated_files/examples/i2c_master_example.c: 115:     I2C_SetAddressNackCallback(
      +                          ((void*)0),((void*)0));
  9775  0045A0  0E00               	movlw	0
  9776  0045A2  6E0A               	movwf	I2C_SetAddressNackCallback@cb^0,c
  9777  0045A4  0E00               	movlw	0
  9778  0045A6  6E0B               	movwf	(I2C_SetAddressNackCallback@cb+1)^0,c
  9779  0045A8  0E00               	movlw	0
  9780  0045AA  6E0C               	movwf	I2C_SetAddressNackCallback@ptr^0,c
  9781  0045AC  0E00               	movlw	0
  9782  0045AE  6E0D               	movwf	(I2C_SetAddressNackCallback@ptr+1)^0,c
  9783  0045B0  ECA2  F025         	call	_I2C_SetAddressNackCallback	;wreg free
  9784  0045B4                     
  9785                           ;mcc_generated_files/examples/i2c_master_example.c: 116:     I2C_MasterWrite();
  9786  0045B4  EC26  F026         	call	_I2C_MasterWrite	;wreg free
  9787  0045B8                     l5609:
  9788  0045B8  EC08  F025         	call	_I2C_Close	;wreg free
  9789  0045BC  06E8               	decf	wreg,f,c
  9790  0045BE  B4D8               	btfsc	status,2,c
  9791  0045C0  EFE4  F022         	goto	u5421
  9792  0045C4  EFE6  F022         	goto	u5420
  9793  0045C8                     u5421:
  9794  0045C8  EFDC  F022         	goto	l5609
  9795  0045CC                     u5420:
  9796  0045CC  0012               	return		;funcret
  9797  0045CE                     __end_of_I2C_WriteNBytes:
  9798                           	callstack 0
  9799                           
  9800 ;; *************** function _I2C_SetAddressNackCallback *****************
  9801 ;; Defined at:
  9802 ;;		line 283 in file "mcc_generated_files/i2c_master.c"
  9803 ;; Parameters:    Size  Location     Type
  9804 ;;  cb              2    9[COMRAM] PTR FTN(PTR void ,)enum 
  9805 ;;		 -> Absolute function(1), 
  9806 ;;  ptr             2   11[COMRAM] PTR void 
  9807 ;;		 -> NULL(0), 
  9808 ;; Auto vars:     Size  Location     Type
  9809 ;;		None
  9810 ;; Return value:  Size  Location     Type
  9811 ;;                  1    wreg      void 
  9812 ;; Registers used:
  9813 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9814 ;; Tracked objects:
  9815 ;;		On entry : 0/0
  9816 ;;		On exit  : 0/0
  9817 ;;		Unchanged: 0/0
  9818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9819 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9822 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9823 ;;Total ram usage:        4 bytes
  9824 ;; Hardware stack levels used: 1
  9825 ;; Hardware stack levels required when called: 5
  9826 ;; This function calls:
  9827 ;;		_I2C_SetCallback
  9828 ;; This function is called by:
  9829 ;;		_I2C_WriteNBytes
  9830 ;;		_I2C_Read1ByteRegister
  9831 ;;		_I2C_Read2ByteRegister
  9832 ;;		_I2C_Write1ByteRegister
  9833 ;;		_I2C_Write2ByteRegister
  9834 ;;		_I2C_ReadDataBlock
  9835 ;; This function uses a non-reentrant model
  9836 ;;
  9837                           
  9838                           	psect	text47
  9839  004B44                     __ptext47:
  9840                           	callstack 0
  9841  004B44                     _I2C_SetAddressNackCallback:
  9842                           	callstack 22
  9843  004B44                     
  9844                           ;mcc_generated_files/i2c_master.c: 283: void I2C_SetAddressNackCallback(i2c_callback_t c
      +                          b, void *ptr);mcc_generated_files/i2c_master.c: 284: {;mcc_generated_files/i2c_master.c:
      +                           285:     I2C_SetCallback(I2C_ADDR_NACK, cb, ptr);
  9845  004B44  C00A  F005         	movff	I2C_SetAddressNackCallback@cb,I2C_SetCallback@cb
  9846  004B48  C00B  F006         	movff	I2C_SetAddressNackCallback@cb+1,I2C_SetCallback@cb+1
  9847  004B4C  C00C  F007         	movff	I2C_SetAddressNackCallback@ptr,I2C_SetCallback@ptr
  9848  004B50  C00D  F008         	movff	I2C_SetAddressNackCallback@ptr+1,I2C_SetCallback@ptr+1
  9849  004B54  0E02               	movlw	2
  9850  004B56  EC46  F021         	call	_I2C_SetCallback
  9851  004B5A  0012               	return		;funcret
  9852  004B5C                     __end_of_I2C_SetAddressNackCallback:
  9853                           	callstack 0
  9854                           
  9855 ;; *************** function _I2C_MasterWrite *****************
  9856 ;; Defined at:
  9857 ;;		line 251 in file "mcc_generated_files/i2c_master.c"
  9858 ;; Parameters:    Size  Location     Type
  9859 ;;		None
  9860 ;; Auto vars:     Size  Location     Type
  9861 ;;		None
  9862 ;; Return value:  Size  Location     Type
  9863 ;;                  1    wreg      enum E355
  9864 ;; Registers used:
  9865 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9866 ;; Tracked objects:
  9867 ;;		On entry : 0/0
  9868 ;;		On exit  : 0/0
  9869 ;;		Unchanged: 0/0
  9870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9874 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9875 ;;Total ram usage:        0 bytes
  9876 ;; Hardware stack levels used: 1
  9877 ;; Hardware stack levels required when called: 11
  9878 ;; This function calls:
  9879 ;;		_I2C_MasterOperation
  9880 ;; This function is called by:
  9881 ;;		_I2C_WriteNBytes
  9882 ;;		_I2C_Read1ByteRegister
  9883 ;;		_I2C_Read2ByteRegister
  9884 ;;		_I2C_Write1ByteRegister
  9885 ;;		_I2C_Write2ByteRegister
  9886 ;;		_I2C_ReadDataBlock
  9887 ;; This function uses a non-reentrant model
  9888 ;;
  9889                           
  9890                           	psect	text48
  9891  004C4C                     __ptext48:
  9892                           	callstack 0
  9893  004C4C                     _I2C_MasterWrite:
  9894                           	callstack 16
  9895  004C4C                     
  9896                           ;mcc_generated_files/i2c_master.c: 253:     return I2C_MasterOperation(0);;	Return value
      +                           of _I2C_MasterWrite is never used
  9897  004C4C  0E00               	movlw	0
  9898  004C4E  ECC6  F023         	call	_I2C_MasterOperation
  9899  004C52  0012               	return		;funcret
  9900  004C54                     __end_of_I2C_MasterWrite:
  9901                           	callstack 0
  9902                           
  9903 ;; *************** function _I2C_ReadNBytes *****************
  9904 ;; Defined at:
  9905 ;;		line 120 in file "mcc_generated_files/examples/i2c_master_example.c"
  9906 ;; Parameters:    Size  Location     Type
  9907 ;;  address         1    wreg     unsigned char 
  9908 ;;  data            2   21[COMRAM] PTR unsigned char 
  9909 ;;		 -> readBuffer(10), 
  9910 ;;  len             2   23[COMRAM] unsigned int 
  9911 ;; Auto vars:     Size  Location     Type
  9912 ;;  address         1   25[COMRAM] unsigned char 
  9913 ;; Return value:  Size  Location     Type
  9914 ;;                  1    wreg      void 
  9915 ;; Registers used:
  9916 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9917 ;; Tracked objects:
  9918 ;;		On entry : 0/0
  9919 ;;		On exit  : 0/0
  9920 ;;		Unchanged: 0/0
  9921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9922 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9923 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9925 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9926 ;;Total ram usage:        5 bytes
  9927 ;; Hardware stack levels used: 1
  9928 ;; Hardware stack levels required when called: 12
  9929 ;; This function calls:
  9930 ;;		_I2C_Close
  9931 ;;		_I2C_MasterRead
  9932 ;;		_I2C_Open
  9933 ;;		_I2C_SetBuffer
  9934 ;; This function is called by:
  9935 ;;		_SHT40_Read
  9936 ;; This function uses a non-reentrant model
  9937 ;;
  9938                           
  9939                           	psect	text49
  9940  0046BE                     __ptext49:
  9941                           	callstack 0
  9942  0046BE                     _I2C_ReadNBytes:
  9943                           	callstack 16
  9944                           
  9945                           ;incstack = 0
  9946                           ;I2C_ReadNBytes@address stored from wreg
  9947  0046BE  6E1A               	movwf	I2C_ReadNBytes@address^0,c
  9948  0046C0                     l5613:
  9949  0046C0  501A               	movf	I2C_ReadNBytes@address^0,w,c
  9950  0046C2  ECC1  F020         	call	_I2C_Open
  9951  0046C6  0900               	iorlw	0
  9952  0046C8  B4D8               	btfsc	status,2,c
  9953  0046CA  EF69  F023         	goto	u5431
  9954  0046CE  EF6B  F023         	goto	u5430
  9955  0046D2                     u5431:
  9956  0046D2  EF60  F023         	goto	l5613
  9957  0046D6                     u5430:
  9958  0046D6                     
  9959                           ;mcc_generated_files/examples/i2c_master_example.c: 123:     I2C_SetBuffer(data,len);
  9960  0046D6  C016  F005         	movff	I2C_ReadNBytes@data,I2C_SetBuffer@buffer
  9961  0046DA  C017  F006         	movff	I2C_ReadNBytes@data+1,I2C_SetBuffer@buffer+1
  9962  0046DE  C018  F007         	movff	I2C_ReadNBytes@len,I2C_SetBuffer@bufferSize
  9963  0046E2  C019  F008         	movff	I2C_ReadNBytes@len+1,I2C_SetBuffer@bufferSize+1
  9964  0046E6  EC70  F025         	call	_I2C_SetBuffer	;wreg free
  9965  0046EA                     
  9966                           ;mcc_generated_files/examples/i2c_master_example.c: 124:     I2C_MasterRead();
  9967  0046EA  EC2A  F026         	call	_I2C_MasterRead	;wreg free
  9968  0046EE                     l5619:
  9969  0046EE  EC08  F025         	call	_I2C_Close	;wreg free
  9970  0046F2  06E8               	decf	wreg,f,c
  9971  0046F4  B4D8               	btfsc	status,2,c
  9972  0046F6  EF7F  F023         	goto	u5441
  9973  0046FA  EF81  F023         	goto	u5440
  9974  0046FE                     u5441:
  9975  0046FE  EF77  F023         	goto	l5619
  9976  004702                     u5440:
  9977  004702  0012               	return		;funcret
  9978  004704                     __end_of_I2C_ReadNBytes:
  9979                           	callstack 0
  9980                           
  9981 ;; *************** function _I2C_Open *****************
  9982 ;; Defined at:
  9983 ;;		line 176 in file "mcc_generated_files/i2c_master.c"
  9984 ;; Parameters:    Size  Location     Type
  9985 ;;  address         1    wreg     unsigned char 
  9986 ;; Auto vars:     Size  Location     Type
  9987 ;;  address         1    4[COMRAM] unsigned char 
  9988 ;;  returnValue     1    5[COMRAM] enum E355
  9989 ;; Return value:  Size  Location     Type
  9990 ;;                  1    wreg      enum E355
  9991 ;; Registers used:
  9992 ;;		wreg, status,2, status,0, cstack
  9993 ;; Tracked objects:
  9994 ;;		On entry : 0/0
  9995 ;;		On exit  : 0/0
  9996 ;;		Unchanged: 0/0
  9997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9999 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10001 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10002 ;;Total ram usage:        2 bytes
 10003 ;; Hardware stack levels used: 1
 10004 ;; Hardware stack levels required when called: 5
 10005 ;; This function calls:
 10006 ;;		_I2C_MasterClearIrq
 10007 ;;		_I2C_MasterOpen
 10008 ;; This function is called by:
 10009 ;;		_I2C_WriteNBytes
 10010 ;;		_I2C_ReadNBytes
 10011 ;;		_I2C_Read1ByteRegister
 10012 ;;		_I2C_Read2ByteRegister
 10013 ;;		_I2C_Write1ByteRegister
 10014 ;;		_I2C_Write2ByteRegister
 10015 ;;		_I2C_ReadDataBlock
 10016 ;; This function uses a non-reentrant model
 10017 ;;
 10018                           
 10019                           	psect	text50
 10020  004182                     __ptext50:
 10021                           	callstack 0
 10022  004182                     _I2C_Open:
 10023                           	callstack 22
 10024                           
 10025                           ;incstack = 0
 10026                           ;I2C_Open@address stored from wreg
 10027  004182  6E05               	movwf	I2C_Open@address^0,c
 10028  004184                     
 10029                           ;mcc_generated_files/i2c_master.c: 176: i2c_error_t I2C_Open(i2c_address_t address);mcc_
      +                          generated_files/i2c_master.c: 177: {;mcc_generated_files/i2c_master.c: 178:     i2c_erro
      +                          r_t returnValue = I2C_BUSY;
 10030  004184  0E01               	movlw	1
 10031  004186  6E06               	movwf	I2C_Open@returnValue^0,c
 10032  004188                     
 10033                           ;mcc_generated_files/i2c_master.c: 180:     if(!I2C_Status.inUse)
 10034  004188  0101               	movlb	1	; () banked
 10035  00418A  B523               	btfsc	(_I2C_Status+35)& (0+255),2,b
 10036  00418C  EFCA  F020         	goto	u4731
 10037  004190  EFCC  F020         	goto	u4730
 10038  004194                     u4731:
 10039  004194  EF06  F021         	goto	l5201
 10040  004198                     u4730:
 10041  004198                     
 10042                           ; BSR set to: 1
 10043                           ;mcc_generated_files/i2c_master.c: 181:     {;mcc_generated_files/i2c_master.c: 182:    
      +                               I2C_Status.address = address;
 10044  004198  C005  F11C         	movff	I2C_Open@address,_I2C_Status+28
 10045  00419C                     
 10046                           ; BSR set to: 1
 10047                           ;mcc_generated_files/i2c_master.c: 183:         I2C_Status.busy = 0;
 10048  00419C  9323               	bcf	(_I2C_Status+35)& (0+255),1,b
 10049  00419E                     
 10050                           ; BSR set to: 1
 10051                           ;mcc_generated_files/i2c_master.c: 184:         I2C_Status.inUse = 1;
 10052  00419E  8523               	bsf	(_I2C_Status+35)& (0+255),2,b
 10053  0041A0                     
 10054                           ; BSR set to: 1
 10055                           ;mcc_generated_files/i2c_master.c: 185:         I2C_Status.addressNackCheck = 0;
 10056  0041A0  9123               	bcf	(_I2C_Status+35)& (0+255),0,b
 10057  0041A2                     
 10058                           ; BSR set to: 1
 10059                           ;mcc_generated_files/i2c_master.c: 186:         I2C_Status.state = I2C_RESET;
 10060  0041A2  0E0E               	movlw	14
 10061  0041A4  6F21               	movwf	(_I2C_Status+33)& (0+255),b
 10062  0041A6                     
 10063                           ; BSR set to: 1
 10064                           ;mcc_generated_files/i2c_master.c: 187:         I2C_Status.time_out_value = 500;
 10065  0041A6  0E01               	movlw	1
 10066  0041A8  6F1B               	movwf	(_I2C_Status+27)& (0+255),b
 10067  0041AA  0EF4               	movlw	244
 10068  0041AC  6F1A               	movwf	(_I2C_Status+26)& (0+255),b
 10069  0041AE                     
 10070                           ; BSR set to: 1
 10071                           ;mcc_generated_files/i2c_master.c: 188:         I2C_Status.bufferFree = 1;
 10072  0041AE  8723               	bsf	(_I2C_Status+35)& (0+255),3,b
 10073  0041B0                     
 10074                           ; BSR set to: 1
 10075                           ;mcc_generated_files/i2c_master.c: 191:         I2C_Status.callbackTable[I2C_DATA_COMPLE
      +                          TE]=I2C_CallbackReturnStop;
 10076  0041B0  0EC8               	movlw	low _I2C_CallbackReturnStop
 10077  0041B2  6F00               	movwf	_I2C_Status& (0+255),b
 10078  0041B4  0E4C               	movlw	high _I2C_CallbackReturnStop
 10079  0041B6  6F01               	movwf	(_I2C_Status+1)& (0+255),b
 10080  0041B8                     
 10081                           ; BSR set to: 1
 10082                           ;mcc_generated_files/i2c_master.c: 192:         I2C_Status.callbackPayload[I2C_DATA_COMP
      +                          LETE] = ((void*)0);
 10083  0041B8  0E00               	movlw	0
 10084  0041BA  6F0C               	movwf	(_I2C_Status+12)& (0+255),b
 10085  0041BC  0E00               	movlw	0
 10086  0041BE  6F0D               	movwf	(_I2C_Status+13)& (0+255),b
 10087  0041C0                     
 10088                           ; BSR set to: 1
 10089                           ;mcc_generated_files/i2c_master.c: 193:         I2C_Status.callbackTable[I2C_WRITE_COLLI
      +                          SION]=I2C_CallbackReturnStop;
 10090  0041C0  0EC8               	movlw	low _I2C_CallbackReturnStop
 10091  0041C2  6F02               	movwf	(_I2C_Status+2)& (0+255),b
 10092  0041C4  0E4C               	movlw	high _I2C_CallbackReturnStop
 10093  0041C6  6F03               	movwf	(_I2C_Status+3)& (0+255),b
 10094  0041C8                     
 10095                           ; BSR set to: 1
 10096                           ;mcc_generated_files/i2c_master.c: 194:         I2C_Status.callbackPayload[I2C_WRITE_COL
      +                          LISION] = ((void*)0);
 10097  0041C8  0E00               	movlw	0
 10098  0041CA  6F0E               	movwf	(_I2C_Status+14)& (0+255),b
 10099  0041CC  0E00               	movlw	0
 10100  0041CE  6F0F               	movwf	(_I2C_Status+15)& (0+255),b
 10101  0041D0                     
 10102                           ; BSR set to: 1
 10103                           ;mcc_generated_files/i2c_master.c: 195:         I2C_Status.callbackTable[I2C_ADDR_NACK]=
      +                          I2C_CallbackReturnStop;
 10104  0041D0  0EC8               	movlw	low _I2C_CallbackReturnStop
 10105  0041D2  6F04               	movwf	(_I2C_Status+4)& (0+255),b
 10106  0041D4  0E4C               	movlw	high _I2C_CallbackReturnStop
 10107  0041D6  6F05               	movwf	(_I2C_Status+5)& (0+255),b
 10108  0041D8                     
 10109                           ; BSR set to: 1
 10110                           ;mcc_generated_files/i2c_master.c: 196:         I2C_Status.callbackPayload[I2C_ADDR_NACK
      +                          ] = ((void*)0);
 10111  0041D8  0E00               	movlw	0
 10112  0041DA  6F10               	movwf	(_I2C_Status+16)& (0+255),b
 10113  0041DC  0E00               	movlw	0
 10114  0041DE  6F11               	movwf	(_I2C_Status+17)& (0+255),b
 10115  0041E0                     
 10116                           ; BSR set to: 1
 10117                           ;mcc_generated_files/i2c_master.c: 197:         I2C_Status.callbackTable[I2C_DATA_NACK]=
      +                          I2C_CallbackReturnStop;
 10118  0041E0  0EC8               	movlw	low _I2C_CallbackReturnStop
 10119  0041E2  6F06               	movwf	(_I2C_Status+6)& (0+255),b
 10120  0041E4  0E4C               	movlw	high _I2C_CallbackReturnStop
 10121  0041E6  6F07               	movwf	(_I2C_Status+7)& (0+255),b
 10122  0041E8                     
 10123                           ; BSR set to: 1
 10124                           ;mcc_generated_files/i2c_master.c: 198:         I2C_Status.callbackPayload[I2C_DATA_NACK
      +                          ] = ((void*)0);
 10125  0041E8  0E00               	movlw	0
 10126  0041EA  6F12               	movwf	(_I2C_Status+18)& (0+255),b
 10127  0041EC  0E00               	movlw	0
 10128  0041EE  6F13               	movwf	(_I2C_Status+19)& (0+255),b
 10129  0041F0                     
 10130                           ; BSR set to: 1
 10131                           ;mcc_generated_files/i2c_master.c: 199:         I2C_Status.callbackTable[I2C_TIMEOUT]=I2
      +                          C_CallbackReturnReset;
 10132  0041F0  0EC4               	movlw	low _I2C_CallbackReturnReset
 10133  0041F2  6F08               	movwf	(_I2C_Status+8)& (0+255),b
 10134  0041F4  0E4C               	movlw	high _I2C_CallbackReturnReset
 10135  0041F6  6F09               	movwf	(_I2C_Status+9)& (0+255),b
 10136  0041F8                     
 10137                           ; BSR set to: 1
 10138                           ;mcc_generated_files/i2c_master.c: 200:         I2C_Status.callbackPayload[I2C_TIMEOUT] 
      +                          = ((void*)0);
 10139  0041F8  0E00               	movlw	0
 10140  0041FA  6F14               	movwf	(_I2C_Status+20)& (0+255),b
 10141  0041FC  0E00               	movlw	0
 10142  0041FE  6F15               	movwf	(_I2C_Status+21)& (0+255),b
 10143  004200                     
 10144                           ; BSR set to: 1
 10145                           ;mcc_generated_files/i2c_master.c: 202:         I2C_MasterClearIrq();
 10146  004200  EC70  F026         	call	_I2C_MasterClearIrq	;wreg free
 10147  004204                     
 10148                           ;mcc_generated_files/i2c_master.c: 203:         I2C_MasterOpen();
 10149  004204  EC82  F025         	call	_I2C_MasterOpen	;wreg free
 10150  004208                     
 10151                           ;mcc_generated_files/i2c_master.c: 204:         returnValue = I2C_NOERR;
 10152  004208  0E00               	movlw	0
 10153  00420A  6E06               	movwf	I2C_Open@returnValue^0,c
 10154  00420C                     l5201:
 10155                           
 10156                           ;mcc_generated_files/i2c_master.c: 206:     return returnValue;
 10157  00420C  5006               	movf	I2C_Open@returnValue^0,w,c
 10158  00420E  0012               	return		;funcret
 10159  004210                     __end_of_I2C_Open:
 10160                           	callstack 0
 10161                           
 10162 ;; *************** function _I2C_MasterOpen *****************
 10163 ;; Defined at:
 10164 ;;		line 543 in file "mcc_generated_files/i2c_master.c"
 10165 ;; Parameters:    Size  Location     Type
 10166 ;;		None
 10167 ;; Auto vars:     Size  Location     Type
 10168 ;;		None
 10169 ;; Return value:  Size  Location     Type
 10170 ;;                  1    wreg      _Bool 
 10171 ;; Registers used:
 10172 ;;		wreg, status,2
 10173 ;; Tracked objects:
 10174 ;;		On entry : 0/0
 10175 ;;		On exit  : 0/0
 10176 ;;		Unchanged: 0/0
 10177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10181 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10182 ;;Total ram usage:        0 bytes
 10183 ;; Hardware stack levels used: 1
 10184 ;; Hardware stack levels required when called: 4
 10185 ;; This function calls:
 10186 ;;		Nothing
 10187 ;; This function is called by:
 10188 ;;		_I2C_Open
 10189 ;; This function uses a non-reentrant model
 10190 ;;
 10191                           
 10192                           	psect	text51
 10193  004B04                     __ptext51:
 10194                           	callstack 0
 10195  004B04                     _I2C_MasterOpen:
 10196                           	callstack 22
 10197  004B04                     
 10198                           ;mcc_generated_files/i2c_master.c: 545:     if(!SSPCON1bits.SSPEN)
 10199  004B04  BAC6               	btfsc	198,5,c	;volatile
 10200  004B06  EF87  F025         	goto	u3701
 10201  004B0A  EF89  F025         	goto	u3700
 10202  004B0E                     u3701:
 10203  004B0E  EF92  F025         	goto	l378
 10204  004B12                     u3700:
 10205  004B12                     
 10206                           ;mcc_generated_files/i2c_master.c: 546:     {;mcc_generated_files/i2c_master.c: 547:    
      +                               SSPSTAT = 0x00;
 10207  004B12  0E00               	movlw	0
 10208  004B14  6EC7               	movwf	199,c	;volatile
 10209                           
 10210                           ;mcc_generated_files/i2c_master.c: 548:         SSPCON1 = 0x08;
 10211  004B16  0E08               	movlw	8
 10212  004B18  6EC6               	movwf	198,c	;volatile
 10213                           
 10214                           ;mcc_generated_files/i2c_master.c: 549:         SSPCON2 = 0x00;
 10215  004B1A  0E00               	movlw	0
 10216  004B1C  6EC5               	movwf	197,c	;volatile
 10217                           
 10218                           ;mcc_generated_files/i2c_master.c: 550:         SSPADD = 0x13;
 10219  004B1E  0E13               	movlw	19
 10220  004B20  6EC8               	movwf	200,c	;volatile
 10221  004B22                     
 10222                           ;mcc_generated_files/i2c_master.c: 551:         SSPCON1bits.SSPEN = 1;
 10223  004B22  8AC6               	bsf	198,5,c	;volatile
 10224  004B24                     l378:
 10225  004B24  0012               	return		;funcret
 10226  004B26                     __end_of_I2C_MasterOpen:
 10227                           	callstack 0
 10228                           
 10229 ;; *************** function _I2C_MasterRead *****************
 10230 ;; Defined at:
 10231 ;;		line 246 in file "mcc_generated_files/i2c_master.c"
 10232 ;; Parameters:    Size  Location     Type
 10233 ;;		None
 10234 ;; Auto vars:     Size  Location     Type
 10235 ;;		None
 10236 ;; Return value:  Size  Location     Type
 10237 ;;                  1    wreg      enum E355
 10238 ;; Registers used:
 10239 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10240 ;; Tracked objects:
 10241 ;;		On entry : 0/0
 10242 ;;		On exit  : 0/0
 10243 ;;		Unchanged: 0/0
 10244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10248 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10249 ;;Total ram usage:        0 bytes
 10250 ;; Hardware stack levels used: 1
 10251 ;; Hardware stack levels required when called: 11
 10252 ;; This function calls:
 10253 ;;		_I2C_MasterOperation
 10254 ;; This function is called by:
 10255 ;;		_I2C_ReadNBytes
 10256 ;; This function uses a non-reentrant model
 10257 ;;
 10258                           
 10259                           	psect	text52
 10260  004C54                     __ptext52:
 10261                           	callstack 0
 10262  004C54                     _I2C_MasterRead:
 10263                           	callstack 16
 10264  004C54                     
 10265                           ;mcc_generated_files/i2c_master.c: 248:     return I2C_MasterOperation(1);;	Return value
      +                           of _I2C_MasterRead is never used
 10266  004C54  0E01               	movlw	1
 10267  004C56  ECC6  F023         	call	_I2C_MasterOperation
 10268  004C5A  0012               	return		;funcret
 10269  004C5C                     __end_of_I2C_MasterRead:
 10270                           	callstack 0
 10271                           
 10272 ;; *************** function _I2C_MasterOperation *****************
 10273 ;; Defined at:
 10274 ;;		line 224 in file "mcc_generated_files/i2c_master.c"
 10275 ;; Parameters:    Size  Location     Type
 10276 ;;  read            1    wreg     _Bool 
 10277 ;; Auto vars:     Size  Location     Type
 10278 ;;  read            1   19[COMRAM] _Bool 
 10279 ;;  returnValue     1   20[COMRAM] enum E355
 10280 ;; Return value:  Size  Location     Type
 10281 ;;                  1    wreg      enum E355
 10282 ;; Registers used:
 10283 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10284 ;; Tracked objects:
 10285 ;;		On entry : 0/0
 10286 ;;		On exit  : 0/0
 10287 ;;		Unchanged: 0/0
 10288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10290 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10292 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10293 ;;Total ram usage:        2 bytes
 10294 ;; Hardware stack levels used: 1
 10295 ;; Hardware stack levels required when called: 10
 10296 ;; This function calls:
 10297 ;;		_I2C_MasterStart
 10298 ;;		_I2C_Poller
 10299 ;; This function is called by:
 10300 ;;		_I2C_MasterRead
 10301 ;;		_I2C_MasterWrite
 10302 ;; This function uses a non-reentrant model
 10303 ;;
 10304                           
 10305                           	psect	text53
 10306  00478C                     __ptext53:
 10307                           	callstack 0
 10308  00478C                     _I2C_MasterOperation:
 10309                           	callstack 16
 10310                           
 10311                           ;incstack = 0
 10312                           ;I2C_MasterOperation@read stored from wreg
 10313  00478C  6E14               	movwf	I2C_MasterOperation@read^0,c
 10314  00478E                     
 10315                           ;mcc_generated_files/i2c_master.c: 224: i2c_error_t I2C_MasterOperation(_Bool read);mcc_
      +                          generated_files/i2c_master.c: 225: {;mcc_generated_files/i2c_master.c: 226:     i2c_erro
      +                          r_t returnValue = I2C_BUSY;
 10316  00478E  0E01               	movlw	1
 10317  004790  6E15               	movwf	I2C_MasterOperation@returnValue^0,c
 10318  004792                     
 10319                           ;mcc_generated_files/i2c_master.c: 227:     if(!I2C_Status.busy)
 10320  004792  0101               	movlb	1	; () banked
 10321  004794  B323               	btfsc	(_I2C_Status+35)& (0+255),1,b
 10322  004796  EFCF  F023         	goto	u3711
 10323  00479A  EFD1  F023         	goto	u3710
 10324  00479E                     u3711:
 10325  00479E  EFE6  F023         	goto	l4601
 10326  0047A2                     u3710:
 10327  0047A2                     
 10328                           ; BSR set to: 1
 10329                           ;mcc_generated_files/i2c_master.c: 228:     {;mcc_generated_files/i2c_master.c: 229:    
      +                               I2C_Status.busy = 1;
 10330  0047A2  8323               	bsf	(_I2C_Status+35)& (0+255),1,b
 10331  0047A4                     
 10332                           ; BSR set to: 1
 10333                           ;mcc_generated_files/i2c_master.c: 230:         returnValue = I2C_NOERR;
 10334  0047A4  0E00               	movlw	0
 10335  0047A6  6E15               	movwf	I2C_MasterOperation@returnValue^0,c
 10336  0047A8                     
 10337                           ; BSR set to: 1
 10338                           ;mcc_generated_files/i2c_master.c: 232:         if(read)
 10339  0047A8  5014               	movf	I2C_MasterOperation@read^0,w,c
 10340  0047AA  B4D8               	btfsc	status,2,c
 10341  0047AC  EFDA  F023         	goto	u3721
 10342  0047B0  EFDC  F023         	goto	u3720
 10343  0047B4                     u3721:
 10344  0047B4  EFE0  F023         	goto	l4595
 10345  0047B8                     u3720:
 10346  0047B8                     
 10347                           ; BSR set to: 1
 10348                           ;mcc_generated_files/i2c_master.c: 233:         {;mcc_generated_files/i2c_master.c: 234:
      +                                       I2C_Status.state = I2C_SEND_ADR_READ;
 10349  0047B8  0E01               	movlw	1
 10350  0047BA  6F21               	movwf	(_I2C_Status+33)& (0+255),b
 10351                           
 10352                           ;mcc_generated_files/i2c_master.c: 235:         }
 10353  0047BC  EFE2  F023         	goto	l4597
 10354  0047C0                     l4595:
 10355                           
 10356                           ; BSR set to: 1
 10357                           ;mcc_generated_files/i2c_master.c: 237:         {;mcc_generated_files/i2c_master.c: 238:
      +                                       I2C_Status.state = I2C_SEND_ADR_WRITE;
 10358  0047C0  0E02               	movlw	2
 10359  0047C2  6F21               	movwf	(_I2C_Status+33)& (0+255),b
 10360  0047C4                     l4597:
 10361                           
 10362                           ; BSR set to: 1
 10363                           ;mcc_generated_files/i2c_master.c: 240:         I2C_MasterStart();
 10364  0047C4  EC6A  F026         	call	_I2C_MasterStart	;wreg free
 10365  0047C8                     
 10366                           ;mcc_generated_files/i2c_master.c: 241:         I2C_Poller();
 10367  0047C8  EC93  F025         	call	_I2C_Poller	;wreg free
 10368  0047CC                     l4601:
 10369                           
 10370                           ;mcc_generated_files/i2c_master.c: 243:     return returnValue;
 10371  0047CC  5015               	movf	I2C_MasterOperation@returnValue^0,w,c
 10372  0047CE  0012               	return		;funcret
 10373  0047D0                     __end_of_I2C_MasterOperation:
 10374                           	callstack 0
 10375                           
 10376 ;; *************** function _I2C_Poller *****************
 10377 ;; Defined at:
 10378 ;;		line 312 in file "mcc_generated_files/i2c_master.c"
 10379 ;; Parameters:    Size  Location     Type
 10380 ;;		None
 10381 ;; Auto vars:     Size  Location     Type
 10382 ;;		None
 10383 ;; Return value:  Size  Location     Type
 10384 ;;                  1    wreg      void 
 10385 ;; Registers used:
 10386 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10387 ;; Tracked objects:
 10388 ;;		On entry : 0/0
 10389 ;;		On exit  : 0/0
 10390 ;;		Unchanged: 0/0
 10391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10395 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10396 ;;Total ram usage:        0 bytes
 10397 ;; Hardware stack levels used: 1
 10398 ;; Hardware stack levels required when called: 9
 10399 ;; This function calls:
 10400 ;;		_I2C_MasterFsm
 10401 ;;		_I2C_MasterWaitForEvent
 10402 ;; This function is called by:
 10403 ;;		_I2C_MasterOperation
 10404 ;; This function uses a non-reentrant model
 10405 ;;
 10406                           
 10407                           	psect	text54
 10408  004B26                     __ptext54:
 10409                           	callstack 0
 10410  004B26                     _I2C_Poller:
 10411                           	callstack 16
 10412  004B26                     
 10413                           ;mcc_generated_files/i2c_master.c: 314:     while(I2C_Status.busy)
 10414  004B26  EF99  F025         	goto	l4345
 10415  004B2A                     l4341:
 10416                           
 10417                           ; BSR set to: 1
 10418                           ;mcc_generated_files/i2c_master.c: 315:     {;mcc_generated_files/i2c_master.c: 316:    
      +                               I2C_MasterWaitForEvent();
 10419  004B2A  ECD9  F025         	call	_I2C_MasterWaitForEvent	;wreg free
 10420  004B2E                     
 10421                           ;mcc_generated_files/i2c_master.c: 317:         I2C_MasterFsm();
 10422  004B2E  ECBE  F021         	call	_I2C_MasterFsm	;wreg free
 10423  004B32                     l4345:
 10424                           
 10425                           ;mcc_generated_files/i2c_master.c: 314:     while(I2C_Status.busy)
 10426  004B32  0101               	movlb	1	; () banked
 10427  004B34  B323               	btfsc	(_I2C_Status+35)& (0+255),1,b
 10428  004B36  EF9F  F025         	goto	u3261
 10429  004B3A  EFA1  F025         	goto	u3260
 10430  004B3E                     u3261:
 10431  004B3E  EF95  F025         	goto	l4341
 10432  004B42                     u3260:
 10433  004B42                     
 10434                           ; BSR set to: 1
 10435  004B42  0012               	return		;funcret
 10436  004B44                     __end_of_I2C_Poller:
 10437                           	callstack 0
 10438                           
 10439 ;; *************** function _I2C_MasterWaitForEvent *****************
 10440 ;; Defined at:
 10441 ;;		line 650 in file "mcc_generated_files/i2c_master.c"
 10442 ;; Parameters:    Size  Location     Type
 10443 ;;		None
 10444 ;; Auto vars:     Size  Location     Type
 10445 ;;		None
 10446 ;; Return value:  Size  Location     Type
 10447 ;;                  1    wreg      void 
 10448 ;; Registers used:
 10449 ;;		None
 10450 ;; Tracked objects:
 10451 ;;		On entry : 0/0
 10452 ;;		On exit  : 0/0
 10453 ;;		Unchanged: 0/0
 10454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10458 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10459 ;;Total ram usage:        0 bytes
 10460 ;; Hardware stack levels used: 1
 10461 ;; Hardware stack levels required when called: 4
 10462 ;; This function calls:
 10463 ;;		Nothing
 10464 ;; This function is called by:
 10465 ;;		_I2C_Poller
 10466 ;; This function uses a non-reentrant model
 10467 ;;
 10468                           
 10469                           	psect	text55
 10470  004BB2                     __ptext55:
 10471                           	callstack 0
 10472  004BB2                     _I2C_MasterWaitForEvent:
 10473                           	callstack 20
 10474  004BB2                     l435:
 10475                           
 10476                           ;mcc_generated_files/i2c_master.c: 653:     {;mcc_generated_files/i2c_master.c: 654:    
      +                               if(PIR1bits.SSPIF)
 10477  004BB2  A69E               	btfss	158,3,c	;volatile
 10478  004BB4  EFDE  F025         	goto	u3181
 10479  004BB8  EFE0  F025         	goto	u3180
 10480  004BBC                     u3181:
 10481  004BBC  EFD9  F025         	goto	l435
 10482  004BC0                     u3180:
 10483  004BC0  0012               	return		;funcret
 10484  004BC2                     __end_of_I2C_MasterWaitForEvent:
 10485                           	callstack 0
 10486                           
 10487 ;; *************** function _I2C_MasterFsm *****************
 10488 ;; Defined at:
 10489 ;;		line 321 in file "mcc_generated_files/i2c_master.c"
 10490 ;; Parameters:    Size  Location     Type
 10491 ;;		None
 10492 ;; Auto vars:     Size  Location     Type
 10493 ;;		None
 10494 ;; Return value:  Size  Location     Type
 10495 ;;                  1    wreg      void 
 10496 ;; Registers used:
 10497 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10498 ;; Tracked objects:
 10499 ;;		On entry : 0/0
 10500 ;;		On exit  : 0/0
 10501 ;;		Unchanged: 0/0
 10502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10505 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10506 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10507 ;;Total ram usage:        2 bytes
 10508 ;; Hardware stack levels used: 1
 10509 ;; Hardware stack levels required when called: 8
 10510 ;; This function calls:
 10511 ;;		_I2C_DO_ADDRESS_NACK
 10512 ;;		_I2C_DO_IDLE
 10513 ;;		_I2C_DO_RCEN
 10514 ;;		_I2C_DO_RESET
 10515 ;;		_I2C_DO_RX
 10516 ;;		_I2C_DO_RX_ACK
 10517 ;;		_I2C_DO_RX_NACK_RESTART
 10518 ;;		_I2C_DO_RX_NACK_STOP
 10519 ;;		_I2C_DO_SEND_ADR_READ
 10520 ;;		_I2C_DO_SEND_ADR_WRITE
 10521 ;;		_I2C_DO_SEND_RESTART
 10522 ;;		_I2C_DO_SEND_RESTART_READ
 10523 ;;		_I2C_DO_SEND_RESTART_WRITE
 10524 ;;		_I2C_DO_SEND_STOP
 10525 ;;		_I2C_DO_TX
 10526 ;;		_I2C_DO_TX_EMPTY
 10527 ;;		_I2C_MasterClearIrq
 10528 ;;		_I2C_MasterIsNack
 10529 ;; This function is called by:
 10530 ;;		_I2C_Poller
 10531 ;; This function uses a non-reentrant model
 10532 ;;
 10533                           
 10534                           	psect	text56
 10535  00437C                     __ptext56:
 10536                           	callstack 0
 10537  00437C                     _I2C_MasterFsm:
 10538                           	callstack 16
 10539  00437C                     
 10540                           ;mcc_generated_files/i2c_master.c: 323:     I2C_MasterClearIrq();
 10541  00437C  EC70  F026         	call	_I2C_MasterClearIrq	;wreg free
 10542  004380                     
 10543                           ;mcc_generated_files/i2c_master.c: 325:     if(I2C_Status.addressNackCheck && I2C_Master
      +                          IsNack())
 10544  004380  0101               	movlb	1	; () banked
 10545  004382  A123               	btfss	(_I2C_Status+35)& (0+255),0,b
 10546  004384  EFC6  F021         	goto	u3191
 10547  004388  EFC8  F021         	goto	u3190
 10548  00438C                     u3191:
 10549  00438C  EFD5  F021         	goto	l4321
 10550  004390                     u3190:
 10551  004390                     
 10552                           ; BSR set to: 1
 10553  004390  ECCF  F025         	call	_I2C_MasterIsNack	;wreg free
 10554  004394  0900               	iorlw	0
 10555  004396  B4D8               	btfsc	status,2,c
 10556  004398  EFD0  F021         	goto	u3201
 10557  00439C  EFD2  F021         	goto	u3200
 10558  0043A0                     u3201:
 10559  0043A0  EFD5  F021         	goto	l4321
 10560  0043A4                     u3200:
 10561  0043A4                     
 10562                           ;mcc_generated_files/i2c_master.c: 326:     {;mcc_generated_files/i2c_master.c: 327:    
      +                               I2C_Status.state = I2C_ADDRESS_NACK;
 10563  0043A4  0E0F               	movlw	15
 10564  0043A6  0101               	movlb	1	; () banked
 10565  0043A8  6F21               	movwf	(_I2C_Status+33)& (0+255),b
 10566  0043AA                     l4321:
 10567                           
 10568                           ;mcc_generated_files/i2c_master.c: 329:     I2C_Status.state = fsmStateTable[I2C_Status.
      +                          state]();
 10569  0043AA  0101               	movlb	1	; () banked
 10570  0043AC  5121               	movf	(_I2C_Status+33)& (0+255),w,b
 10571  0043AE  0D02               	mullw	2
 10572  0043B0  0E01               	movlw	low _fsmStateTable
 10573  0043B2  24F3               	addwf	243,w,c
 10574  0043B4  6EF6               	movwf	tblptrl,c
 10575  0043B6  0E10               	movlw	high _fsmStateTable
 10576  0043B8  20F4               	addwfc	244,w,c
 10577  0043BA  6EF7               	movwf	tblptrh,c
 10578  0043BC                     	if	1	;There are 3 active tblptr bytes
 10579  0043BC  6AF8               	clrf	tblptru,c
 10580  0043BE  0E00               	movlw	low (__mediumconst shr (0+16))
 10581  0043C0  22F8               	addwfc	tblptru,f,c
 10582  0043C2                     	endif
 10583  0043C2  0009               	tblrd		*+
 10584  0043C4  CFF5 F012          	movff	tablat,??_I2C_MasterFsm
 10585  0043C8  0009               	tblrd		*+
 10586  0043CA  CFF5 F013          	movff	tablat,??_I2C_MasterFsm+1
 10587  0043CE  D802               	call	u3218
 10588  0043D0  EFF3  F021         	goto	u3219
 10589  0043D4                     u3218:
 10590  0043D4  0005               	push	
 10591  0043D6  6EFA               	movwf	pclath,c
 10592  0043D8  5012               	movf	??_I2C_MasterFsm^0,w,c
 10593  0043DA  6EFD               	movwf	tosl,c
 10594  0043DC  5013               	movf	(??_I2C_MasterFsm+1)^0,w,c
 10595  0043DE  6EFE               	movwf	tosh,c
 10596  0043E0  6AFF               	clrf	tosu,c
 10597  0043E2  50FA               	movf	pclath,w,c
 10598  0043E4  0012               	return		;indir
 10599  0043E6                     u3219:
 10600  0043E6  0101               	movlb	1	; () banked
 10601  0043E8  6F21               	movwf	(_I2C_Status+33)& (0+255),b
 10602  0043EA                     
 10603                           ; BSR set to: 1
 10604  0043EA  0012               	return		;funcret
 10605  0043EC                     __end_of_I2C_MasterFsm:
 10606                           	callstack 0
 10607                           
 10608 ;; *************** function _I2C_DO_ADDRESS_NACK *****************
 10609 ;; Defined at:
 10610 ;;		line 500 in file "mcc_generated_files/i2c_master.c"
 10611 ;; Parameters:    Size  Location     Type
 10612 ;;		None
 10613 ;; Auto vars:     Size  Location     Type
 10614 ;;		None
 10615 ;; Return value:  Size  Location     Type
 10616 ;;                  1    wreg      enum E3103
 10617 ;; Registers used:
 10618 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 10619 ;; Tracked objects:
 10620 ;;		On entry : 0/0
 10621 ;;		On exit  : 0/0
 10622 ;;		Unchanged: 0/0
 10623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10626 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10627 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10628 ;;Total ram usage:        2 bytes
 10629 ;; Hardware stack levels used: 1
 10630 ;; Hardware stack levels required when called: 7
 10631 ;; This function calls:
 10632 ;;		Absolute function
 10633 ;;		_I2C_CallbackReturnReset
 10634 ;;		_I2C_CallbackReturnStop
 10635 ;;		_I2C_DO_SEND_RESTART
 10636 ;;		_I2C_DO_SEND_STOP
 10637 ;;		_rd1RegCompleteHandler
 10638 ;;		_rd2RegCompleteHandler
 10639 ;;		_rdBlkRegCompleteHandler
 10640 ;;		_wr1RegCompleteHandler
 10641 ;;		_wr2RegCompleteHandler
 10642 ;; This function is called by:
 10643 ;;		_I2C_MasterFsm
 10644 ;; This function uses a non-reentrant model
 10645 ;;
 10646                           
 10647                           	psect	text57
 10648  0043EC                     __ptext57:
 10649                           	callstack 0
 10650  0043EC                     _I2C_DO_ADDRESS_NACK:
 10651                           	callstack 16
 10652  0043EC                     
 10653                           ;mcc_generated_files/i2c_master.c: 502:     I2C_Status.addressNackCheck = 0;
 10654  0043EC  0101               	movlb	1	; () banked
 10655  0043EE  9123               	bcf	(_I2C_Status+35)& (0+255),0,b
 10656  0043F0                     
 10657                           ; BSR set to: 1
 10658                           ;mcc_generated_files/i2c_master.c: 503:     I2C_Status.error = I2C_FAIL;
 10659  0043F0  0E02               	movlw	2
 10660  0043F2  6F22               	movwf	(_I2C_Status+34)& (0+255),b
 10661                           
 10662                           ;mcc_generated_files/i2c_master.c: 504:     switch(I2C_Status.callbackTable[I2C_ADDR_NAC
      +                          K](I2C_Status.callbackPayload[I2C_ADDR_NACK]))
 10663  0043F4  EF04  F022         	goto	l4301
 10664  0043F8                     l4291:
 10665                           
 10666                           ;mcc_generated_files/i2c_master.c: 508:             return I2C_DO_SEND_RESTART();
 10667  0043F8  EC3E  F026         	call	_I2C_DO_SEND_RESTART	;wreg free
 10668  0043FC  EF28  F022         	goto	l357
 10669  004400                     l4295:
 10670                           
 10671                           ;mcc_generated_files/i2c_master.c: 510:             return I2C_DO_SEND_STOP();
 10672  004400  EC3A  F026         	call	_I2C_DO_SEND_STOP	;wreg free
 10673  004404  EF28  F022         	goto	l357
 10674  004408                     l4301:
 10675                           
 10676                           ; BSR set to: 1
 10677  004408  C110  F00E         	movff	_I2C_Status+16,I2C_CallbackReturnReset@funPtr
 10678  00440C  C111  F00F         	movff	_I2C_Status+17,I2C_CallbackReturnReset@funPtr+1
 10679  004410  D802               	call	u3178
 10680  004412  EF14  F022         	goto	u3179
 10681  004416                     u3178:
 10682  004416  0005               	push	
 10683  004418  6EFA               	movwf	pclath,c
 10684  00441A  5104               	movf	(_I2C_Status+4)& (0+255),w,b
 10685  00441C  6EFD               	movwf	tosl,c
 10686  00441E  5105               	movf	(_I2C_Status+5)& (0+255),w,b
 10687  004420  6EFE               	movwf	tosh,c
 10688  004422  6AFF               	clrf	tosu,c
 10689  004424  50FA               	movf	pclath,w,c
 10690  004426  0012               	return		;indir
 10691  004428                     u3179:
 10692  004428  6E10               	movwf	??_I2C_DO_ADDRESS_NACK^0,c
 10693  00442A  6A11               	clrf	(??_I2C_DO_ADDRESS_NACK+1)^0,c
 10694                           
 10695                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10696                           ; Switch size 1, requested type "simple"
 10697                           ; Number of cases is 1, Range of values is 0 to 0
 10698                           ; switch strategies available:
 10699                           ; Name         Instructions Cycles
 10700                           ; simple_byte            4     3 (average)
 10701                           ;	Chosen strategy is simple_byte
 10702  00442C  5011               	movf	(??_I2C_DO_ADDRESS_NACK+1)^0,w,c
 10703  00442E  0A00               	xorlw	0	; case 0
 10704  004430  B4D8               	btfsc	status,2,c
 10705  004432  EF1D  F022         	goto	l6965
 10706  004436  EF00  F022         	goto	l4295
 10707  00443A                     l6965:
 10708                           
 10709                           ; Switch size 1, requested type "simple"
 10710                           ; Number of cases is 2, Range of values is 2 to 3
 10711                           ; switch strategies available:
 10712                           ; Name         Instructions Cycles
 10713                           ; simple_byte            7     4 (average)
 10714                           ;	Chosen strategy is simple_byte
 10715  00443A  5010               	movf	??_I2C_DO_ADDRESS_NACK^0,w,c
 10716  00443C  0A02               	xorlw	2	; case 2
 10717  00443E  B4D8               	btfsc	status,2,c
 10718  004440  EFFC  F021         	goto	l4291
 10719  004444  0A01               	xorlw	1	; case 3
 10720  004446  B4D8               	btfsc	status,2,c
 10721  004448  EFFC  F021         	goto	l4291
 10722  00444C  EF00  F022         	goto	l4295
 10723  004450                     l357:
 10724  004450  0012               	return		;funcret
 10725  004452                     __end_of_I2C_DO_ADDRESS_NACK:
 10726                           	callstack 0
 10727                           
 10728 ;; *************** function _I2C_DO_RESET *****************
 10729 ;; Defined at:
 10730 ;;		line 494 in file "mcc_generated_files/i2c_master.c"
 10731 ;; Parameters:    Size  Location     Type
 10732 ;;		None
 10733 ;; Auto vars:     Size  Location     Type
 10734 ;;		None
 10735 ;; Return value:  Size  Location     Type
 10736 ;;                  1    wreg      enum E3103
 10737 ;; Registers used:
 10738 ;;		wreg, status,2
 10739 ;; Tracked objects:
 10740 ;;		On entry : 0/0
 10741 ;;		On exit  : 0/0
 10742 ;;		Unchanged: 0/0
 10743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10747 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10748 ;;Total ram usage:        0 bytes
 10749 ;; Hardware stack levels used: 1
 10750 ;; Hardware stack levels required when called: 4
 10751 ;; This function calls:
 10752 ;;		Nothing
 10753 ;; This function is called by:
 10754 ;;		_I2C_MasterFsm
 10755 ;; This function uses a non-reentrant model
 10756 ;;
 10757                           
 10758                           	psect	text58
 10759  004BE2                     __ptext58:
 10760                           	callstack 0
 10761  004BE2                     _I2C_DO_RESET:
 10762                           	callstack 19
 10763  004BE2                     
 10764                           ;mcc_generated_files/i2c_master.c: 496:     I2C_Status.busy = 0;
 10765  004BE2  0101               	movlb	1	; () banked
 10766  004BE4  9323               	bcf	(_I2C_Status+35)& (0+255),1,b
 10767  004BE6                     
 10768                           ; BSR set to: 1
 10769                           ;mcc_generated_files/i2c_master.c: 497:     I2C_Status.error = I2C_NOERR;
 10770  004BE6  0E00               	movlw	0
 10771  004BE8  6F22               	movwf	(_I2C_Status+34)& (0+255),b
 10772  004BEA                     
 10773                           ; BSR set to: 1
 10774                           ;mcc_generated_files/i2c_master.c: 498:     return I2C_RESET;
 10775  004BEA  0E0E               	movlw	14
 10776  004BEC                     
 10777                           ; BSR set to: 1
 10778  004BEC  0012               	return		;funcret
 10779  004BEE                     __end_of_I2C_DO_RESET:
 10780                           	callstack 0
 10781                           
 10782 ;; *************** function _I2C_DO_RX_NACK_RESTART *****************
 10783 ;; Defined at:
 10784 ;;		line 488 in file "mcc_generated_files/i2c_master.c"
 10785 ;; Parameters:    Size  Location     Type
 10786 ;;		None
 10787 ;; Auto vars:     Size  Location     Type
 10788 ;;		None
 10789 ;; Return value:  Size  Location     Type
 10790 ;;                  1    wreg      enum E3103
 10791 ;; Registers used:
 10792 ;;		wreg, cstack
 10793 ;; Tracked objects:
 10794 ;;		On entry : 0/0
 10795 ;;		On exit  : 0/0
 10796 ;;		Unchanged: 0/0
 10797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10801 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10802 ;;Total ram usage:        0 bytes
 10803 ;; Hardware stack levels used: 1
 10804 ;; Hardware stack levels required when called: 5
 10805 ;; This function calls:
 10806 ;;		_I2C_MasterSendNack
 10807 ;; This function is called by:
 10808 ;;		_I2C_DO_RX
 10809 ;;		_I2C_MasterFsm
 10810 ;; This function uses a non-reentrant model
 10811 ;;
 10812                           
 10813                           	psect	text59
 10814  004C5C                     __ptext59:
 10815                           	callstack 0
 10816  004C5C                     _I2C_DO_RX_NACK_RESTART:
 10817                           	callstack 18
 10818  004C5C                     
 10819                           ;mcc_generated_files/i2c_master.c: 490:     I2C_MasterSendNack();
 10820  004C5C  EC51  F026         	call	_I2C_MasterSendNack	;wreg free
 10821  004C60                     
 10822                           ;mcc_generated_files/i2c_master.c: 491:     return I2C_SEND_RESTART;
 10823  004C60  0E09               	movlw	9
 10824  004C62  0012               	return		;funcret
 10825  004C64                     __end_of_I2C_DO_RX_NACK_RESTART:
 10826                           	callstack 0
 10827                           
 10828 ;; *************** function _I2C_DO_RX_NACK_STOP *****************
 10829 ;; Defined at:
 10830 ;;		line 482 in file "mcc_generated_files/i2c_master.c"
 10831 ;; Parameters:    Size  Location     Type
 10832 ;;		None
 10833 ;; Auto vars:     Size  Location     Type
 10834 ;;		None
 10835 ;; Return value:  Size  Location     Type
 10836 ;;                  1    wreg      enum E3103
 10837 ;; Registers used:
 10838 ;;		wreg, cstack
 10839 ;; Tracked objects:
 10840 ;;		On entry : 0/0
 10841 ;;		On exit  : 0/0
 10842 ;;		Unchanged: 0/0
 10843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10847 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10848 ;;Total ram usage:        0 bytes
 10849 ;; Hardware stack levels used: 1
 10850 ;; Hardware stack levels required when called: 5
 10851 ;; This function calls:
 10852 ;;		_I2C_MasterSendNack
 10853 ;; This function is called by:
 10854 ;;		_I2C_DO_RX
 10855 ;;		_I2C_MasterFsm
 10856 ;; This function uses a non-reentrant model
 10857 ;;
 10858                           
 10859                           	psect	text60
 10860  004C64                     __ptext60:
 10861                           	callstack 0
 10862  004C64                     _I2C_DO_RX_NACK_STOP:
 10863                           	callstack 18
 10864  004C64                     
 10865                           ;mcc_generated_files/i2c_master.c: 484:     I2C_MasterSendNack();
 10866  004C64  EC51  F026         	call	_I2C_MasterSendNack	;wreg free
 10867  004C68                     
 10868                           ;mcc_generated_files/i2c_master.c: 485:     return I2C_SEND_STOP;
 10869  004C68  0E0A               	movlw	10
 10870  004C6A  0012               	return		;funcret
 10871  004C6C                     __end_of_I2C_DO_RX_NACK_STOP:
 10872                           	callstack 0
 10873                           
 10874 ;; *************** function _I2C_DO_RX_ACK *****************
 10875 ;; Defined at:
 10876 ;;		line 475 in file "mcc_generated_files/i2c_master.c"
 10877 ;; Parameters:    Size  Location     Type
 10878 ;;		None
 10879 ;; Auto vars:     Size  Location     Type
 10880 ;;		None
 10881 ;; Return value:  Size  Location     Type
 10882 ;;                  1    wreg      enum E3103
 10883 ;; Registers used:
 10884 ;;		wreg, cstack
 10885 ;; Tracked objects:
 10886 ;;		On entry : 0/0
 10887 ;;		On exit  : 0/0
 10888 ;;		Unchanged: 0/0
 10889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10893 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10894 ;;Total ram usage:        0 bytes
 10895 ;; Hardware stack levels used: 1
 10896 ;; Hardware stack levels required when called: 5
 10897 ;; This function calls:
 10898 ;;		_I2C_MasterSendAck
 10899 ;; This function is called by:
 10900 ;;		_I2C_MasterFsm
 10901 ;; This function uses a non-reentrant model
 10902 ;;
 10903                           
 10904                           	psect	text61
 10905  004C6C                     __ptext61:
 10906                           	callstack 0
 10907  004C6C                     _I2C_DO_RX_ACK:
 10908                           	callstack 18
 10909  004C6C                     
 10910                           ;mcc_generated_files/i2c_master.c: 477:     I2C_MasterSendAck();
 10911  004C6C  EC4E  F026         	call	_I2C_MasterSendAck	;wreg free
 10912  004C70                     
 10913                           ;mcc_generated_files/i2c_master.c: 478:     return I2C_RCEN;
 10914  004C70  0E05               	movlw	5
 10915  004C72  0012               	return		;funcret
 10916  004C74                     __end_of_I2C_DO_RX_ACK:
 10917                           	callstack 0
 10918                           
 10919 ;; *************** function _I2C_DO_SEND_STOP *****************
 10920 ;; Defined at:
 10921 ;;		line 469 in file "mcc_generated_files/i2c_master.c"
 10922 ;; Parameters:    Size  Location     Type
 10923 ;;		None
 10924 ;; Auto vars:     Size  Location     Type
 10925 ;;		None
 10926 ;; Return value:  Size  Location     Type
 10927 ;;                  1    wreg      enum E3103
 10928 ;; Registers used:
 10929 ;;		wreg, cstack
 10930 ;; Tracked objects:
 10931 ;;		On entry : 0/0
 10932 ;;		On exit  : 0/0
 10933 ;;		Unchanged: 0/0
 10934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10938 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10939 ;;Total ram usage:        0 bytes
 10940 ;; Hardware stack levels used: 1
 10941 ;; Hardware stack levels required when called: 5
 10942 ;; This function calls:
 10943 ;;		_I2C_MasterStop
 10944 ;; This function is called by:
 10945 ;;		_I2C_DO_TX
 10946 ;;		_I2C_DO_TX_EMPTY
 10947 ;;		_I2C_DO_ADDRESS_NACK
 10948 ;;		_I2C_MasterFsm
 10949 ;; This function uses a non-reentrant model
 10950 ;;
 10951                           
 10952                           	psect	text62
 10953  004C74                     __ptext62:
 10954                           	callstack 0
 10955  004C74                     _I2C_DO_SEND_STOP:
 10956                           	callstack 17
 10957  004C74                     
 10958                           ;mcc_generated_files/i2c_master.c: 471:     I2C_MasterStop();
 10959  004C74  EC66  F026         	call	_I2C_MasterStop	;wreg free
 10960  004C78                     
 10961                           ;mcc_generated_files/i2c_master.c: 472:     return I2C_IDLE;
 10962  004C78  0E00               	movlw	0
 10963  004C7A  0012               	return		;funcret
 10964  004C7C                     __end_of_I2C_DO_SEND_STOP:
 10965                           	callstack 0
 10966                           
 10967 ;; *************** function _I2C_DO_SEND_RESTART *****************
 10968 ;; Defined at:
 10969 ;;		line 463 in file "mcc_generated_files/i2c_master.c"
 10970 ;; Parameters:    Size  Location     Type
 10971 ;;		None
 10972 ;; Auto vars:     Size  Location     Type
 10973 ;;		None
 10974 ;; Return value:  Size  Location     Type
 10975 ;;                  1    wreg      enum E3103
 10976 ;; Registers used:
 10977 ;;		wreg, cstack
 10978 ;; Tracked objects:
 10979 ;;		On entry : 0/0
 10980 ;;		On exit  : 0/0
 10981 ;;		Unchanged: 0/0
 10982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10986 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10987 ;;Total ram usage:        0 bytes
 10988 ;; Hardware stack levels used: 1
 10989 ;; Hardware stack levels required when called: 5
 10990 ;; This function calls:
 10991 ;;		_I2C_MasterEnableRestart
 10992 ;; This function is called by:
 10993 ;;		_I2C_DO_TX_EMPTY
 10994 ;;		_I2C_DO_ADDRESS_NACK
 10995 ;;		_I2C_MasterFsm
 10996 ;; This function uses a non-reentrant model
 10997 ;;
 10998                           
 10999                           	psect	text63
 11000  004C7C                     __ptext63:
 11001                           	callstack 0
 11002  004C7C                     _I2C_DO_SEND_RESTART:
 11003                           	callstack 17
 11004  004C7C                     
 11005                           ;mcc_generated_files/i2c_master.c: 465:     I2C_MasterEnableRestart();
 11006  004C7C  EC68  F026         	call	_I2C_MasterEnableRestart	;wreg free
 11007  004C80                     
 11008                           ;mcc_generated_files/i2c_master.c: 466:     return I2C_SEND_ADR_READ;
 11009  004C80  0E01               	movlw	1
 11010  004C82  0012               	return		;funcret
 11011  004C84                     __end_of_I2C_DO_SEND_RESTART:
 11012                           	callstack 0
 11013                           
 11014 ;; *************** function _I2C_DO_SEND_RESTART_WRITE *****************
 11015 ;; Defined at:
 11016 ;;		line 456 in file "mcc_generated_files/i2c_master.c"
 11017 ;; Parameters:    Size  Location     Type
 11018 ;;		None
 11019 ;; Auto vars:     Size  Location     Type
 11020 ;;		None
 11021 ;; Return value:  Size  Location     Type
 11022 ;;                  1    wreg      enum E3103
 11023 ;; Registers used:
 11024 ;;		wreg, cstack
 11025 ;; Tracked objects:
 11026 ;;		On entry : 0/0
 11027 ;;		On exit  : 0/0
 11028 ;;		Unchanged: 0/0
 11029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11033 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11034 ;;Total ram usage:        0 bytes
 11035 ;; Hardware stack levels used: 1
 11036 ;; Hardware stack levels required when called: 5
 11037 ;; This function calls:
 11038 ;;		_I2C_MasterEnableRestart
 11039 ;; This function is called by:
 11040 ;;		_I2C_DO_TX
 11041 ;;		_I2C_MasterFsm
 11042 ;; This function uses a non-reentrant model
 11043 ;;
 11044                           
 11045                           	psect	text64
 11046  004C84                     __ptext64:
 11047                           	callstack 0
 11048  004C84                     _I2C_DO_SEND_RESTART_WRITE:
 11049                           	callstack 17
 11050  004C84                     
 11051                           ;mcc_generated_files/i2c_master.c: 458:     I2C_MasterEnableRestart();
 11052  004C84  EC68  F026         	call	_I2C_MasterEnableRestart	;wreg free
 11053  004C88                     
 11054                           ;mcc_generated_files/i2c_master.c: 459:     return I2C_SEND_ADR_WRITE;
 11055  004C88  0E02               	movlw	2
 11056  004C8A  0012               	return		;funcret
 11057  004C8C                     __end_of_I2C_DO_SEND_RESTART_WRITE:
 11058                           	callstack 0
 11059                           
 11060 ;; *************** function _I2C_DO_SEND_RESTART_READ *****************
 11061 ;; Defined at:
 11062 ;;		line 450 in file "mcc_generated_files/i2c_master.c"
 11063 ;; Parameters:    Size  Location     Type
 11064 ;;		None
 11065 ;; Auto vars:     Size  Location     Type
 11066 ;;		None
 11067 ;; Return value:  Size  Location     Type
 11068 ;;                  1    wreg      enum E3103
 11069 ;; Registers used:
 11070 ;;		wreg, cstack
 11071 ;; Tracked objects:
 11072 ;;		On entry : 0/0
 11073 ;;		On exit  : 0/0
 11074 ;;		Unchanged: 0/0
 11075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11079 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11080 ;;Total ram usage:        0 bytes
 11081 ;; Hardware stack levels used: 1
 11082 ;; Hardware stack levels required when called: 5
 11083 ;; This function calls:
 11084 ;;		_I2C_MasterEnableRestart
 11085 ;; This function is called by:
 11086 ;;		_I2C_DO_TX
 11087 ;;		_I2C_MasterFsm
 11088 ;; This function uses a non-reentrant model
 11089 ;;
 11090                           
 11091                           	psect	text65
 11092  004C8C                     __ptext65:
 11093                           	callstack 0
 11094  004C8C                     _I2C_DO_SEND_RESTART_READ:
 11095                           	callstack 17
 11096  004C8C                     
 11097                           ;mcc_generated_files/i2c_master.c: 452:     I2C_MasterEnableRestart();
 11098  004C8C  EC68  F026         	call	_I2C_MasterEnableRestart	;wreg free
 11099  004C90                     
 11100                           ;mcc_generated_files/i2c_master.c: 453:     return I2C_SEND_ADR_READ;
 11101  004C90  0E01               	movlw	1
 11102  004C92  0012               	return		;funcret
 11103  004C94                     __end_of_I2C_DO_SEND_RESTART_READ:
 11104                           	callstack 0
 11105                           
 11106 ;; *************** function _I2C_DO_RCEN *****************
 11107 ;; Defined at:
 11108 ;;		line 402 in file "mcc_generated_files/i2c_master.c"
 11109 ;; Parameters:    Size  Location     Type
 11110 ;;		None
 11111 ;; Auto vars:     Size  Location     Type
 11112 ;;		None
 11113 ;; Return value:  Size  Location     Type
 11114 ;;                  1    wreg      enum E3103
 11115 ;; Registers used:
 11116 ;;		wreg, cstack
 11117 ;; Tracked objects:
 11118 ;;		On entry : 0/0
 11119 ;;		On exit  : 0/0
 11120 ;;		Unchanged: 0/0
 11121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11125 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11126 ;;Total ram usage:        0 bytes
 11127 ;; Hardware stack levels used: 1
 11128 ;; Hardware stack levels required when called: 5
 11129 ;; This function calls:
 11130 ;;		_I2C_MasterStartRx
 11131 ;; This function is called by:
 11132 ;;		_I2C_MasterFsm
 11133 ;; This function uses a non-reentrant model
 11134 ;;
 11135                           
 11136                           	psect	text66
 11137  004BEE                     __ptext66:
 11138                           	callstack 0
 11139  004BEE                     _I2C_DO_RCEN:
 11140                           	callstack 18
 11141  004BEE                     
 11142                           ;mcc_generated_files/i2c_master.c: 404:     I2C_Status.addressNackCheck = 0;
 11143  004BEE  0101               	movlb	1	; () banked
 11144  004BF0  9123               	bcf	(_I2C_Status+35)& (0+255),0,b
 11145  004BF2                     
 11146                           ; BSR set to: 1
 11147                           ;mcc_generated_files/i2c_master.c: 405:     I2C_MasterStartRx();
 11148  004BF2  EC60  F026         	call	_I2C_MasterStartRx	;wreg free
 11149  004BF6                     
 11150                           ;mcc_generated_files/i2c_master.c: 406:     return I2C_RX;
 11151  004BF6  0E04               	movlw	4
 11152  004BF8  0012               	return		;funcret
 11153  004BFA                     __end_of_I2C_DO_RCEN:
 11154                           	callstack 0
 11155                           
 11156 ;; *************** function _I2C_DO_RX *****************
 11157 ;; Defined at:
 11158 ;;		line 378 in file "mcc_generated_files/i2c_master.c"
 11159 ;; Parameters:    Size  Location     Type
 11160 ;;		None
 11161 ;; Auto vars:     Size  Location     Type
 11162 ;;		None
 11163 ;; Return value:  Size  Location     Type
 11164 ;;                  1    wreg      enum E3103
 11165 ;; Registers used:
 11166 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 11167 ;; Tracked objects:
 11168 ;;		On entry : 0/0
 11169 ;;		On exit  : 0/0
 11170 ;;		Unchanged: 0/0
 11171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11174 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11175 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11176 ;;Total ram usage:        2 bytes
 11177 ;; Hardware stack levels used: 1
 11178 ;; Hardware stack levels required when called: 7
 11179 ;; This function calls:
 11180 ;;		Absolute function
 11181 ;;		_I2C_CallbackReturnReset
 11182 ;;		_I2C_CallbackReturnStop
 11183 ;;		_I2C_DO_RX_NACK_RESTART
 11184 ;;		_I2C_DO_RX_NACK_STOP
 11185 ;;		_I2C_MasterGetRxData
 11186 ;;		_I2C_MasterSendAck
 11187 ;;		_rd1RegCompleteHandler
 11188 ;;		_rd2RegCompleteHandler
 11189 ;;		_rdBlkRegCompleteHandler
 11190 ;;		_wr1RegCompleteHandler
 11191 ;;		_wr2RegCompleteHandler
 11192 ;; This function is called by:
 11193 ;;		_I2C_MasterFsm
 11194 ;; This function uses a non-reentrant model
 11195 ;;
 11196                           
 11197                           	psect	text67
 11198  004046                     __ptext67:
 11199                           	callstack 0
 11200  004046                     _I2C_DO_RX:
 11201                           	callstack 16
 11202  004046                     
 11203                           ;mcc_generated_files/i2c_master.c: 380:     *I2C_Status.data_ptr++ = I2C_MasterGetRxData
      +                          ();
 11204  004046  EC5E  F026         	call	_I2C_MasterGetRxData	;wreg free
 11205  00404A  C11D  FFD9         	movff	_I2C_Status+29,fsr2l
 11206  00404E  C11E  FFDA         	movff	_I2C_Status+30,fsr2h
 11207  004052  6EDF               	movwf	indf2,c
 11208  004054  0101               	movlb	1	; () banked
 11209  004056  4B1D               	infsnz	(_I2C_Status+29)& (0+255),f,b
 11210  004058  2B1E               	incf	(_I2C_Status+30)& (0+255),f,b
 11211  00405A                     
 11212                           ; BSR set to: 1
 11213                           ;mcc_generated_files/i2c_master.c: 381:     if(--I2C_Status.data_length)
 11214  00405A  071F               	decf	(_I2C_Status+31)& (0+255),f,b
 11215  00405C  A0D8               	btfss	status,0,c
 11216  00405E  0720               	decf	(_I2C_Status+32)& (0+255),f,b
 11217  004060  511F               	movf	(_I2C_Status+31)& (0+255),w,b
 11218  004062  1120               	iorwf	(_I2C_Status+32)& (0+255),w,b
 11219  004064  B4D8               	btfsc	status,2,c
 11220  004066  EF37  F020         	goto	u3141
 11221  00406A  EF39  F020         	goto	u3140
 11222  00406E                     u3141:
 11223  00406E  EF3E  F020         	goto	l294
 11224  004072                     u3140:
 11225  004072                     
 11226                           ; BSR set to: 1
 11227                           ;mcc_generated_files/i2c_master.c: 382:     {;mcc_generated_files/i2c_master.c: 383:    
      +                               I2C_MasterSendAck();
 11228  004072  EC4E  F026         	call	_I2C_MasterSendAck	;wreg free
 11229  004076                     
 11230                           ;mcc_generated_files/i2c_master.c: 384:         return I2C_RCEN;
 11231  004076  0E05               	movlw	5
 11232  004078  EF75  F020         	goto	l295
 11233  00407C                     l294:
 11234                           
 11235                           ; BSR set to: 1
 11236                           ;mcc_generated_files/i2c_master.c: 387:     {;mcc_generated_files/i2c_master.c: 388:    
      +                               I2C_Status.bufferFree = 1;
 11237  00407C  8723               	bsf	(_I2C_Status+35)& (0+255),3,b
 11238                           
 11239                           ;mcc_generated_files/i2c_master.c: 389:         switch(I2C_Status.callbackTable[I2C_DATA
      +                          _COMPLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
 11240  00407E  EF49  F020         	goto	l4231
 11241  004082                     l4221:
 11242                           
 11243                           ;mcc_generated_files/i2c_master.c: 393:                 return I2C_DO_RX_NACK_RESTART();
 11244  004082  EC2E  F026         	call	_I2C_DO_RX_NACK_RESTART	;wreg free
 11245  004086  EF75  F020         	goto	l295
 11246  00408A                     l4225:
 11247                           
 11248                           ;mcc_generated_files/i2c_master.c: 397:                 return I2C_DO_RX_NACK_STOP();
 11249  00408A  EC32  F026         	call	_I2C_DO_RX_NACK_STOP	;wreg free
 11250  00408E  EF75  F020         	goto	l295
 11251  004092                     l4231:
 11252                           
 11253                           ; BSR set to: 1
 11254  004092  C10C  F00E         	movff	_I2C_Status+12,I2C_CallbackReturnReset@funPtr
 11255  004096  C10D  F00F         	movff	_I2C_Status+13,I2C_CallbackReturnReset@funPtr+1
 11256  00409A  D802               	call	u3158
 11257  00409C  EF59  F020         	goto	u3159
 11258  0040A0                     u3158:
 11259  0040A0  0005               	push	
 11260  0040A2  6EFA               	movwf	pclath,c
 11261  0040A4  5100               	movf	_I2C_Status& (0+255),w,b
 11262  0040A6  6EFD               	movwf	tosl,c
 11263  0040A8  5101               	movf	(_I2C_Status+1)& (0+255),w,b
 11264  0040AA  6EFE               	movwf	tosh,c
 11265  0040AC  6AFF               	clrf	tosu,c
 11266  0040AE  50FA               	movf	pclath,w,c
 11267  0040B0  0012               	return		;indir
 11268  0040B2                     u3159:
 11269  0040B2  6E10               	movwf	??_I2C_DO_RX^0,c
 11270  0040B4  6A11               	clrf	(??_I2C_DO_RX+1)^0,c
 11271                           
 11272                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11273                           ; Switch size 1, requested type "simple"
 11274                           ; Number of cases is 1, Range of values is 0 to 0
 11275                           ; switch strategies available:
 11276                           ; Name         Instructions Cycles
 11277                           ; simple_byte            4     3 (average)
 11278                           ;	Chosen strategy is simple_byte
 11279  0040B6  5011               	movf	(??_I2C_DO_RX+1)^0,w,c
 11280  0040B8  0A00               	xorlw	0	; case 0
 11281  0040BA  B4D8               	btfsc	status,2,c
 11282  0040BC  EF62  F020         	goto	l6967
 11283  0040C0  EF45  F020         	goto	l4225
 11284  0040C4                     l6967:
 11285                           
 11286                           ; Switch size 1, requested type "simple"
 11287                           ; Number of cases is 4, Range of values is 1 to 4
 11288                           ; switch strategies available:
 11289                           ; Name         Instructions Cycles
 11290                           ; simple_byte           13     7 (average)
 11291                           ;	Chosen strategy is simple_byte
 11292  0040C4  5010               	movf	??_I2C_DO_RX^0,w,c
 11293  0040C6  0A01               	xorlw	1	; case 1
 11294  0040C8  B4D8               	btfsc	status,2,c
 11295  0040CA  EF45  F020         	goto	l4225
 11296  0040CE  0A03               	xorlw	3	; case 2
 11297  0040D0  B4D8               	btfsc	status,2,c
 11298  0040D2  EF41  F020         	goto	l4221
 11299  0040D6  0A01               	xorlw	1	; case 3
 11300  0040D8  B4D8               	btfsc	status,2,c
 11301  0040DA  EF41  F020         	goto	l4221
 11302  0040DE  0A07               	xorlw	7	; case 4
 11303  0040E0  B4D8               	btfsc	status,2,c
 11304  0040E2  EF45  F020         	goto	l4225
 11305  0040E6  EF45  F020         	goto	l4225
 11306  0040EA                     l295:
 11307  0040EA  0012               	return		;funcret
 11308  0040EC                     __end_of_I2C_DO_RX:
 11309                           	callstack 0
 11310                           
 11311 ;; *************** function _I2C_DO_TX *****************
 11312 ;; Defined at:
 11313 ;;		line 354 in file "mcc_generated_files/i2c_master.c"
 11314 ;; Parameters:    Size  Location     Type
 11315 ;;		None
 11316 ;; Auto vars:     Size  Location     Type
 11317 ;;		None
 11318 ;; Return value:  Size  Location     Type
 11319 ;;                  1    wreg      enum E3103
 11320 ;; Registers used:
 11321 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 11322 ;; Tracked objects:
 11323 ;;		On entry : 0/0
 11324 ;;		On exit  : 0/0
 11325 ;;		Unchanged: 0/0
 11326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11329 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11330 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11331 ;;Total ram usage:        2 bytes
 11332 ;; Hardware stack levels used: 1
 11333 ;; Hardware stack levels required when called: 7
 11334 ;; This function calls:
 11335 ;;		Absolute function
 11336 ;;		_I2C_CallbackReturnReset
 11337 ;;		_I2C_CallbackReturnStop
 11338 ;;		_I2C_DO_SEND_RESTART_READ
 11339 ;;		_I2C_DO_SEND_RESTART_WRITE
 11340 ;;		_I2C_DO_SEND_STOP
 11341 ;;		_I2C_MasterIsNack
 11342 ;;		_I2C_MasterSendTxData
 11343 ;;		_rd1RegCompleteHandler
 11344 ;;		_rd2RegCompleteHandler
 11345 ;;		_rdBlkRegCompleteHandler
 11346 ;;		_wr1RegCompleteHandler
 11347 ;;		_wr2RegCompleteHandler
 11348 ;; This function is called by:
 11349 ;;		_I2C_MasterFsm
 11350 ;; This function uses a non-reentrant model
 11351 ;;
 11352                           
 11353                           	psect	text68
 11354  003CBE                     __ptext68:
 11355                           	callstack 0
 11356  003CBE                     _I2C_DO_TX:
 11357                           	callstack 16
 11358  003CBE                     
 11359                           ;mcc_generated_files/i2c_master.c: 356:     if(I2C_MasterIsNack())
 11360  003CBE  ECCF  F025         	call	_I2C_MasterIsNack	;wreg free
 11361  003CC2  0900               	iorlw	0
 11362  003CC4  B4D8               	btfsc	status,2,c
 11363  003CC6  EF67  F01E         	goto	u3111
 11364  003CCA  EF69  F01E         	goto	u3110
 11365  003CCE                     u3111:
 11366  003CCE  EFA4  F01E         	goto	l278
 11367  003CD2                     u3110:
 11368  003CD2  EF77  F01E         	goto	l4191
 11369  003CD6                     l4177:
 11370                           
 11371                           ;mcc_generated_files/i2c_master.c: 361:                 return I2C_DO_SEND_RESTART_READ(
      +                          );
 11372  003CD6  EC46  F026         	call	_I2C_DO_SEND_RESTART_READ	;wreg free
 11373  003CDA  EFC0  F01E         	goto	l281
 11374  003CDE                     l4181:
 11375                           
 11376                           ;mcc_generated_files/i2c_master.c: 363:                   return I2C_DO_SEND_RESTART_WRI
      +                          TE();
 11377  003CDE  EC42  F026         	call	_I2C_DO_SEND_RESTART_WRITE	;wreg free
 11378  003CE2  EFC0  F01E         	goto	l281
 11379  003CE6                     l4185:
 11380                           
 11381                           ;mcc_generated_files/i2c_master.c: 367:                 return I2C_DO_SEND_STOP();
 11382  003CE6  EC3A  F026         	call	_I2C_DO_SEND_STOP	;wreg free
 11383  003CEA  EFC0  F01E         	goto	l281
 11384  003CEE                     l4191:
 11385  003CEE  C112  F00E         	movff	_I2C_Status+18,I2C_CallbackReturnReset@funPtr
 11386  003CF2  C113  F00F         	movff	_I2C_Status+19,I2C_CallbackReturnReset@funPtr+1
 11387  003CF6  D802               	call	u3128
 11388  003CF8  EF88  F01E         	goto	u3129
 11389  003CFC                     u3128:
 11390  003CFC  0005               	push	
 11391  003CFE  6EFA               	movwf	pclath,c
 11392  003D00  0101               	movlb	1	; () banked
 11393  003D02  5106               	movf	(_I2C_Status+6)& (0+255),w,b
 11394  003D04  6EFD               	movwf	tosl,c
 11395  003D06  5107               	movf	(_I2C_Status+7)& (0+255),w,b
 11396  003D08  6EFE               	movwf	tosh,c
 11397  003D0A  6AFF               	clrf	tosu,c
 11398  003D0C  50FA               	movf	pclath,w,c
 11399  003D0E  0012               	return		;indir
 11400  003D10                     u3129:
 11401  003D10  6E10               	movwf	??_I2C_DO_TX^0,c
 11402  003D12  6A11               	clrf	(??_I2C_DO_TX+1)^0,c
 11403                           
 11404                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11405                           ; Switch size 1, requested type "simple"
 11406                           ; Number of cases is 1, Range of values is 0 to 0
 11407                           ; switch strategies available:
 11408                           ; Name         Instructions Cycles
 11409                           ; simple_byte            4     3 (average)
 11410                           ;	Chosen strategy is simple_byte
 11411  003D14  5011               	movf	(??_I2C_DO_TX+1)^0,w,c
 11412  003D16  0A00               	xorlw	0	; case 0
 11413  003D18  B4D8               	btfsc	status,2,c
 11414  003D1A  EF91  F01E         	goto	l6969
 11415  003D1E  EF73  F01E         	goto	l4185
 11416  003D22                     l6969:
 11417                           
 11418                           ; Switch size 1, requested type "simple"
 11419                           ; Number of cases is 4, Range of values is 1 to 4
 11420                           ; switch strategies available:
 11421                           ; Name         Instructions Cycles
 11422                           ; simple_byte           13     7 (average)
 11423                           ;	Chosen strategy is simple_byte
 11424  003D22  5010               	movf	??_I2C_DO_TX^0,w,c
 11425  003D24  0A01               	xorlw	1	; case 1
 11426  003D26  B4D8               	btfsc	status,2,c
 11427  003D28  EF73  F01E         	goto	l4185
 11428  003D2C  0A03               	xorlw	3	; case 2
 11429  003D2E  B4D8               	btfsc	status,2,c
 11430  003D30  EF6B  F01E         	goto	l4177
 11431  003D34  0A01               	xorlw	1	; case 3
 11432  003D36  B4D8               	btfsc	status,2,c
 11433  003D38  EF6F  F01E         	goto	l4181
 11434  003D3C  0A07               	xorlw	7	; case 4
 11435  003D3E  B4D8               	btfsc	status,2,c
 11436  003D40  EF73  F01E         	goto	l4185
 11437  003D44  EF73  F01E         	goto	l4185
 11438  003D48                     l278:
 11439                           
 11440                           ;mcc_generated_files/i2c_master.c: 371:     {;mcc_generated_files/i2c_master.c: 372:    
      +                               I2C_Status.addressNackCheck = 0;
 11441  003D48  0101               	movlb	1	; () banked
 11442  003D4A  9123               	bcf	(_I2C_Status+35)& (0+255),0,b
 11443  003D4C                     
 11444                           ; BSR set to: 1
 11445                           ;mcc_generated_files/i2c_master.c: 373:         I2C_MasterSendTxData(*I2C_Status.data_pt
      +                          r++);
 11446  003D4C  C11D  FFD9         	movff	_I2C_Status+29,fsr2l
 11447  003D50  C11E  FFDA         	movff	_I2C_Status+30,fsr2h
 11448  003D54  4B1D               	infsnz	(_I2C_Status+29)& (0+255),f,b
 11449  003D56  2B1E               	incf	(_I2C_Status+30)& (0+255),f,b
 11450  003D58  50DF               	movf	indf2,w,c
 11451  003D5A  EC4A  F026         	call	_I2C_MasterSendTxData
 11452  003D5E                     
 11453                           ;mcc_generated_files/i2c_master.c: 374:         return (--I2C_Status.data_length)?I2C_TX
      +                          :I2C_TX_EMPTY;
 11454  003D5E  0101               	movlb	1	; () banked
 11455  003D60  071F               	decf	(_I2C_Status+31)& (0+255),f,b
 11456  003D62  A0D8               	btfss	status,0,c
 11457  003D64  0720               	decf	(_I2C_Status+32)& (0+255),f,b
 11458  003D66  511F               	movf	(_I2C_Status+31)& (0+255),w,b
 11459  003D68  1120               	iorwf	(_I2C_Status+32)& (0+255),w,b
 11460  003D6A  A4D8               	btfss	status,2,c
 11461  003D6C  EFBA  F01E         	goto	u3131
 11462  003D70  EFBC  F01E         	goto	u3130
 11463  003D74                     u3131:
 11464  003D74  EFBF  F01E         	goto	l4199
 11465  003D78                     u3130:
 11466  003D78                     
 11467                           ; BSR set to: 1
 11468  003D78  0E06               	movlw	6
 11469  003D7A  EFC0  F01E         	goto	l281
 11470  003D7E                     l4199:
 11471                           
 11472                           ; BSR set to: 1
 11473  003D7E  0E03               	movlw	3
 11474  003D80                     l281:
 11475  003D80  0012               	return		;funcret
 11476  003D82                     __end_of_I2C_DO_TX:
 11477                           	callstack 0
 11478                           
 11479 ;; *************** function _I2C_DO_SEND_ADR_WRITE *****************
 11480 ;; Defined at:
 11481 ;;		line 347 in file "mcc_generated_files/i2c_master.c"
 11482 ;; Parameters:    Size  Location     Type
 11483 ;;		None
 11484 ;; Auto vars:     Size  Location     Type
 11485 ;;		None
 11486 ;; Return value:  Size  Location     Type
 11487 ;;                  1    wreg      enum E3103
 11488 ;; Registers used:
 11489 ;;		wreg, status,2, status,0, cstack
 11490 ;; Tracked objects:
 11491 ;;		On entry : 0/0
 11492 ;;		On exit  : 0/0
 11493 ;;		Unchanged: 0/0
 11494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11498 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11499 ;;Total ram usage:        0 bytes
 11500 ;; Hardware stack levels used: 1
 11501 ;; Hardware stack levels required when called: 5
 11502 ;; This function calls:
 11503 ;;		_I2C_MasterSendTxData
 11504 ;; This function is called by:
 11505 ;;		_I2C_MasterFsm
 11506 ;; This function uses a non-reentrant model
 11507 ;;
 11508                           
 11509                           	psect	text69
 11510  004BC2                     __ptext69:
 11511                           	callstack 0
 11512  004BC2                     _I2C_DO_SEND_ADR_WRITE:
 11513                           	callstack 18
 11514  004BC2                     
 11515                           ;mcc_generated_files/i2c_master.c: 349:     I2C_Status.addressNackCheck = 1;
 11516  004BC2  0101               	movlb	1	; () banked
 11517  004BC4  8123               	bsf	(_I2C_Status+35)& (0+255),0,b
 11518  004BC6                     
 11519                           ; BSR set to: 1
 11520                           ;mcc_generated_files/i2c_master.c: 350:     I2C_MasterSendTxData(I2C_Status.address << 1
      +                          );
 11521  004BC6  511C               	movf	(_I2C_Status+28)& (0+255),w,b
 11522  004BC8  251C               	addwf	(_I2C_Status+28)& (0+255),w,b
 11523  004BCA  EC4A  F026         	call	_I2C_MasterSendTxData
 11524  004BCE                     
 11525                           ;mcc_generated_files/i2c_master.c: 351:     return I2C_TX;
 11526  004BCE  0E03               	movlw	3
 11527  004BD0  0012               	return		;funcret
 11528  004BD2                     __end_of_I2C_DO_SEND_ADR_WRITE:
 11529                           	callstack 0
 11530                           
 11531 ;; *************** function _I2C_DO_SEND_ADR_READ *****************
 11532 ;; Defined at:
 11533 ;;		line 340 in file "mcc_generated_files/i2c_master.c"
 11534 ;; Parameters:    Size  Location     Type
 11535 ;;		None
 11536 ;; Auto vars:     Size  Location     Type
 11537 ;;		None
 11538 ;; Return value:  Size  Location     Type
 11539 ;;                  1    wreg      enum E3103
 11540 ;; Registers used:
 11541 ;;		wreg, status,0, cstack
 11542 ;; Tracked objects:
 11543 ;;		On entry : 0/0
 11544 ;;		On exit  : 0/0
 11545 ;;		Unchanged: 0/0
 11546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11550 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11551 ;;Total ram usage:        0 bytes
 11552 ;; Hardware stack levels used: 1
 11553 ;; Hardware stack levels required when called: 5
 11554 ;; This function calls:
 11555 ;;		_I2C_MasterSendTxData
 11556 ;; This function is called by:
 11557 ;;		_I2C_MasterFsm
 11558 ;; This function uses a non-reentrant model
 11559 ;;
 11560                           
 11561                           	psect	text70
 11562  004BD2                     __ptext70:
 11563                           	callstack 0
 11564  004BD2                     _I2C_DO_SEND_ADR_READ:
 11565                           	callstack 18
 11566  004BD2                     
 11567                           ;mcc_generated_files/i2c_master.c: 342:     I2C_Status.addressNackCheck = 1;
 11568  004BD2  0101               	movlb	1	; () banked
 11569  004BD4  8123               	bsf	(_I2C_Status+35)& (0+255),0,b
 11570  004BD6                     
 11571                           ; BSR set to: 1
 11572                           ;mcc_generated_files/i2c_master.c: 343:     I2C_MasterSendTxData(I2C_Status.address << 1
      +                           | 1);
 11573  004BD6  80D8               	bsf	status,0,c
 11574  004BD8  351C               	rlcf	(_I2C_Status+28)& (0+255),w,b
 11575  004BDA  EC4A  F026         	call	_I2C_MasterSendTxData
 11576  004BDE                     
 11577                           ;mcc_generated_files/i2c_master.c: 344:     return I2C_RCEN;
 11578  004BDE  0E05               	movlw	5
 11579  004BE0  0012               	return		;funcret
 11580  004BE2                     __end_of_I2C_DO_SEND_ADR_READ:
 11581                           	callstack 0
 11582                           
 11583 ;; *************** function _I2C_DO_IDLE *****************
 11584 ;; Defined at:
 11585 ;;		line 333 in file "mcc_generated_files/i2c_master.c"
 11586 ;; Parameters:    Size  Location     Type
 11587 ;;		None
 11588 ;; Auto vars:     Size  Location     Type
 11589 ;;		None
 11590 ;; Return value:  Size  Location     Type
 11591 ;;                  1    wreg      enum E3103
 11592 ;; Registers used:
 11593 ;;		wreg, status,2
 11594 ;; Tracked objects:
 11595 ;;		On entry : 0/0
 11596 ;;		On exit  : 0/0
 11597 ;;		Unchanged: 0/0
 11598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11603 ;;Total ram usage:        0 bytes
 11604 ;; Hardware stack levels used: 1
 11605 ;; Hardware stack levels required when called: 4
 11606 ;; This function calls:
 11607 ;;		Nothing
 11608 ;; This function is called by:
 11609 ;;		_I2C_MasterFsm
 11610 ;; This function uses a non-reentrant model
 11611 ;;
 11612                           
 11613                           	psect	text71
 11614  004BFA                     __ptext71:
 11615                           	callstack 0
 11616  004BFA                     _I2C_DO_IDLE:
 11617                           	callstack 19
 11618  004BFA                     
 11619                           ;mcc_generated_files/i2c_master.c: 335:     I2C_Status.busy = 0;
 11620  004BFA  0101               	movlb	1	; () banked
 11621  004BFC  9323               	bcf	(_I2C_Status+35)& (0+255),1,b
 11622  004BFE                     
 11623                           ; BSR set to: 1
 11624                           ;mcc_generated_files/i2c_master.c: 336:     I2C_Status.error = I2C_NOERR;
 11625  004BFE  0E00               	movlw	0
 11626  004C00  6F22               	movwf	(_I2C_Status+34)& (0+255),b
 11627  004C02                     
 11628                           ; BSR set to: 1
 11629                           ;mcc_generated_files/i2c_master.c: 337:     return I2C_RESET;
 11630  004C02  0E0E               	movlw	14
 11631  004C04                     
 11632                           ; BSR set to: 1
 11633  004C04  0012               	return		;funcret
 11634  004C06                     __end_of_I2C_DO_IDLE:
 11635                           	callstack 0
 11636                           
 11637 ;; *************** function _I2C_DO_TX_EMPTY *****************
 11638 ;; Defined at:
 11639 ;;		line 409 in file "mcc_generated_files/i2c_master.c"
 11640 ;; Parameters:    Size  Location     Type
 11641 ;;		None
 11642 ;; Auto vars:     Size  Location     Type
 11643 ;;		None
 11644 ;; Return value:  Size  Location     Type
 11645 ;;                  1    wreg      enum E3103
 11646 ;; Registers used:
 11647 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 11648 ;; Tracked objects:
 11649 ;;		On entry : 0/0
 11650 ;;		On exit  : 0/0
 11651 ;;		Unchanged: 0/0
 11652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11655 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11656 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11657 ;;Total ram usage:        2 bytes
 11658 ;; Hardware stack levels used: 1
 11659 ;; Hardware stack levels required when called: 7
 11660 ;; This function calls:
 11661 ;;		Absolute function
 11662 ;;		_I2C_CallbackReturnReset
 11663 ;;		_I2C_CallbackReturnStop
 11664 ;;		_I2C_DO_SEND_RESTART
 11665 ;;		_I2C_DO_SEND_STOP
 11666 ;;		_I2C_MasterSetIrq
 11667 ;;		_rd1RegCompleteHandler
 11668 ;;		_rd2RegCompleteHandler
 11669 ;;		_rdBlkRegCompleteHandler
 11670 ;;		_wr1RegCompleteHandler
 11671 ;;		_wr2RegCompleteHandler
 11672 ;; This function is called by:
 11673 ;;		_I2C_MasterFsm
 11674 ;; This function uses a non-reentrant model
 11675 ;;
 11676                           
 11677                           	psect	text72
 11678  004210                     __ptext72:
 11679                           	callstack 0
 11680  004210                     _I2C_DO_TX_EMPTY:
 11681                           	callstack 16
 11682  004210                     
 11683                           ;mcc_generated_files/i2c_master.c: 411:     I2C_Status.bufferFree = 1;
 11684  004210  0101               	movlb	1	; () banked
 11685  004212  8723               	bsf	(_I2C_Status+35)& (0+255),3,b
 11686                           
 11687                           ;mcc_generated_files/i2c_master.c: 412:     switch(I2C_Status.callbackTable[I2C_DATA_COM
      +                          PLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
 11688  004214  EF19  F021         	goto	l4265
 11689  004218                     l4249:
 11690                           
 11691                           ;mcc_generated_files/i2c_master.c: 416:             return I2C_DO_SEND_RESTART();
 11692  004218  EC3E  F026         	call	_I2C_DO_SEND_RESTART	;wreg free
 11693  00421C  EF45  F021         	goto	l312
 11694  004220                     l4253:
 11695                           
 11696                           ;mcc_generated_files/i2c_master.c: 418:             I2C_MasterSetIrq();
 11697  004220  EC5C  F026         	call	_I2C_MasterSetIrq	;wreg free
 11698  004224                     
 11699                           ;mcc_generated_files/i2c_master.c: 419:             return I2C_TX;
 11700  004224  0E03               	movlw	3
 11701  004226  EF45  F021         	goto	l312
 11702  00422A                     l4259:
 11703                           
 11704                           ;mcc_generated_files/i2c_master.c: 422:             return I2C_DO_SEND_STOP();
 11705  00422A  EC3A  F026         	call	_I2C_DO_SEND_STOP	;wreg free
 11706  00422E  EF45  F021         	goto	l312
 11707  004232                     l4265:
 11708                           
 11709                           ; BSR set to: 1
 11710  004232  C10C  F00E         	movff	_I2C_Status+12,I2C_CallbackReturnReset@funPtr
 11711  004236  C10D  F00F         	movff	_I2C_Status+13,I2C_CallbackReturnReset@funPtr+1
 11712  00423A  D802               	call	u3168
 11713  00423C  EF29  F021         	goto	u3169
 11714  004240                     u3168:
 11715  004240  0005               	push	
 11716  004242  6EFA               	movwf	pclath,c
 11717  004244  5100               	movf	_I2C_Status& (0+255),w,b
 11718  004246  6EFD               	movwf	tosl,c
 11719  004248  5101               	movf	(_I2C_Status+1)& (0+255),w,b
 11720  00424A  6EFE               	movwf	tosh,c
 11721  00424C  6AFF               	clrf	tosu,c
 11722  00424E  50FA               	movf	pclath,w,c
 11723  004250  0012               	return		;indir
 11724  004252                     u3169:
 11725  004252  6E10               	movwf	??_I2C_DO_TX_EMPTY^0,c
 11726  004254  6A11               	clrf	(??_I2C_DO_TX_EMPTY+1)^0,c
 11727                           
 11728                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11729                           ; Switch size 1, requested type "simple"
 11730                           ; Number of cases is 1, Range of values is 0 to 0
 11731                           ; switch strategies available:
 11732                           ; Name         Instructions Cycles
 11733                           ; simple_byte            4     3 (average)
 11734                           ;	Chosen strategy is simple_byte
 11735  004256  5011               	movf	(??_I2C_DO_TX_EMPTY+1)^0,w,c
 11736  004258  0A00               	xorlw	0	; case 0
 11737  00425A  B4D8               	btfsc	status,2,c
 11738  00425C  EF32  F021         	goto	l6971
 11739  004260  EF15  F021         	goto	l4259
 11740  004264                     l6971:
 11741                           
 11742                           ; Switch size 1, requested type "simple"
 11743                           ; Number of cases is 4, Range of values is 1 to 4
 11744                           ; switch strategies available:
 11745                           ; Name         Instructions Cycles
 11746                           ; simple_byte           13     7 (average)
 11747                           ;	Chosen strategy is simple_byte
 11748  004264  5010               	movf	??_I2C_DO_TX_EMPTY^0,w,c
 11749  004266  0A01               	xorlw	1	; case 1
 11750  004268  B4D8               	btfsc	status,2,c
 11751  00426A  EF15  F021         	goto	l4259
 11752  00426E  0A03               	xorlw	3	; case 2
 11753  004270  B4D8               	btfsc	status,2,c
 11754  004272  EF0C  F021         	goto	l4249
 11755  004276  0A01               	xorlw	1	; case 3
 11756  004278  B4D8               	btfsc	status,2,c
 11757  00427A  EF0C  F021         	goto	l4249
 11758  00427E  0A07               	xorlw	7	; case 4
 11759  004280  B4D8               	btfsc	status,2,c
 11760  004282  EF10  F021         	goto	l4253
 11761  004286  EF15  F021         	goto	l4259
 11762  00428A                     l312:
 11763  00428A  0012               	return		;funcret
 11764  00428C                     __end_of_I2C_DO_TX_EMPTY:
 11765                           	callstack 0
 11766                           
 11767 ;; *************** function _I2C_MasterSetIrq *****************
 11768 ;; Defined at:
 11769 ;;		line 645 in file "mcc_generated_files/i2c_master.c"
 11770 ;; Parameters:    Size  Location     Type
 11771 ;;		None
 11772 ;; Auto vars:     Size  Location     Type
 11773 ;;		None
 11774 ;; Return value:  Size  Location     Type
 11775 ;;                  1    wreg      void 
 11776 ;; Registers used:
 11777 ;;		None
 11778 ;; Tracked objects:
 11779 ;;		On entry : 0/0
 11780 ;;		On exit  : 0/0
 11781 ;;		Unchanged: 0/0
 11782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11786 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11787 ;;Total ram usage:        0 bytes
 11788 ;; Hardware stack levels used: 1
 11789 ;; Hardware stack levels required when called: 4
 11790 ;; This function calls:
 11791 ;;		Nothing
 11792 ;; This function is called by:
 11793 ;;		_I2C_DO_TX_EMPTY
 11794 ;; This function uses a non-reentrant model
 11795 ;;
 11796                           
 11797                           	psect	text73
 11798  004CB8                     __ptext73:
 11799                           	callstack 0
 11800  004CB8                     _I2C_MasterSetIrq:
 11801                           	callstack 18
 11802  004CB8                     
 11803                           ;mcc_generated_files/i2c_master.c: 647:     PIR1bits.SSPIF = 1;
 11804  004CB8  869E               	bsf	158,3,c	;volatile
 11805  004CBA  0012               	return		;funcret
 11806  004CBC                     __end_of_I2C_MasterSetIrq:
 11807                           	callstack 0
 11808                           
 11809 ;; *************** function _I2C_MasterIsNack *****************
 11810 ;; Defined at:
 11811 ;;		line 598 in file "mcc_generated_files/i2c_master.c"
 11812 ;; Parameters:    Size  Location     Type
 11813 ;;		None
 11814 ;; Auto vars:     Size  Location     Type
 11815 ;;		None
 11816 ;; Return value:  Size  Location     Type
 11817 ;;                  1    wreg      _Bool 
 11818 ;; Registers used:
 11819 ;;		wreg
 11820 ;; Tracked objects:
 11821 ;;		On entry : 0/0
 11822 ;;		On exit  : 0/0
 11823 ;;		Unchanged: 0/0
 11824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11828 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11829 ;;Total ram usage:        0 bytes
 11830 ;; Hardware stack levels used: 1
 11831 ;; Hardware stack levels required when called: 4
 11832 ;; This function calls:
 11833 ;;		Nothing
 11834 ;; This function is called by:
 11835 ;;		_I2C_MasterFsm
 11836 ;;		_I2C_DO_TX
 11837 ;; This function uses a non-reentrant model
 11838 ;;
 11839                           
 11840                           	psect	text74
 11841  004B9E                     __ptext74:
 11842                           	callstack 0
 11843  004B9E                     _I2C_MasterIsNack:
 11844                           	callstack 19
 11845  004B9E                     
 11846                           ;mcc_generated_files/i2c_master.c: 600:     return SSPCON2bits.ACKSTAT;
 11847  004B9E  BCC5               	btfsc	197,6,c	;volatile
 11848  004BA0  EFD4  F025         	goto	u3071
 11849  004BA4  EFD7  F025         	goto	u3070
 11850  004BA8                     u3071:
 11851  004BA8  0E01               	movlw	1
 11852  004BAA  EFD8  F025         	goto	u3076
 11853  004BAE                     u3070:
 11854  004BAE  0E00               	movlw	0
 11855  004BB0                     u3076:
 11856  004BB0  0012               	return		;funcret
 11857  004BB2                     __end_of_I2C_MasterIsNack:
 11858                           	callstack 0
 11859                           
 11860 ;; *************** function _I2C_MasterSendTxData *****************
 11861 ;; Defined at:
 11862 ;;		line 568 in file "mcc_generated_files/i2c_master.c"
 11863 ;; Parameters:    Size  Location     Type
 11864 ;;  data            1    wreg     unsigned char 
 11865 ;; Auto vars:     Size  Location     Type
 11866 ;;  data            1    4[COMRAM] unsigned char 
 11867 ;; Return value:  Size  Location     Type
 11868 ;;                  1    wreg      void 
 11869 ;; Registers used:
 11870 ;;		wreg
 11871 ;; Tracked objects:
 11872 ;;		On entry : 0/0
 11873 ;;		On exit  : 0/0
 11874 ;;		Unchanged: 0/0
 11875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11877 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11879 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11880 ;;Total ram usage:        1 bytes
 11881 ;; Hardware stack levels used: 1
 11882 ;; Hardware stack levels required when called: 4
 11883 ;; This function calls:
 11884 ;;		Nothing
 11885 ;; This function is called by:
 11886 ;;		_I2C_DO_SEND_ADR_READ
 11887 ;;		_I2C_DO_SEND_ADR_WRITE
 11888 ;;		_I2C_DO_TX
 11889 ;; This function uses a non-reentrant model
 11890 ;;
 11891                           
 11892                           	psect	text75
 11893  004C94                     __ptext75:
 11894                           	callstack 0
 11895  004C94                     _I2C_MasterSendTxData:
 11896                           	callstack 18
 11897                           
 11898                           ;incstack = 0
 11899                           ;I2C_MasterSendTxData@data stored from wreg
 11900  004C94  6E05               	movwf	I2C_MasterSendTxData@data^0,c
 11901  004C96                     
 11902                           ;mcc_generated_files/i2c_master.c: 568: static __attribute__((inline)) void I2C_MasterSe
      +                          ndTxData(uint8_t data);mcc_generated_files/i2c_master.c: 569: {;mcc_generated_files/i2c_
      +                          master.c: 570:     SSPBUF = data;
 11903  004C96  C005  FFC9         	movff	I2C_MasterSendTxData@data,4041	;volatile
 11904  004C9A  0012               	return		;funcret
 11905  004C9C                     __end_of_I2C_MasterSendTxData:
 11906                           	callstack 0
 11907                           
 11908 ;; *************** function _I2C_MasterSendAck *****************
 11909 ;; Defined at:
 11910 ;;		line 603 in file "mcc_generated_files/i2c_master.c"
 11911 ;; Parameters:    Size  Location     Type
 11912 ;;		None
 11913 ;; Auto vars:     Size  Location     Type
 11914 ;;		None
 11915 ;; Return value:  Size  Location     Type
 11916 ;;                  1    wreg      void 
 11917 ;; Registers used:
 11918 ;;		None
 11919 ;; Tracked objects:
 11920 ;;		On entry : 0/0
 11921 ;;		On exit  : 0/0
 11922 ;;		Unchanged: 0/0
 11923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11927 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11928 ;;Total ram usage:        0 bytes
 11929 ;; Hardware stack levels used: 1
 11930 ;; Hardware stack levels required when called: 4
 11931 ;; This function calls:
 11932 ;;		Nothing
 11933 ;; This function is called by:
 11934 ;;		_I2C_DO_RX
 11935 ;;		_I2C_DO_RX_ACK
 11936 ;; This function uses a non-reentrant model
 11937 ;;
 11938                           
 11939                           	psect	text76
 11940  004C9C                     __ptext76:
 11941                           	callstack 0
 11942  004C9C                     _I2C_MasterSendAck:
 11943                           	callstack 18
 11944  004C9C                     
 11945                           ;mcc_generated_files/i2c_master.c: 605:     SSPCON2bits.ACKDT = 0;
 11946  004C9C  9AC5               	bcf	197,5,c	;volatile
 11947                           
 11948                           ;mcc_generated_files/i2c_master.c: 606:     SSPCON2bits.ACKEN = 1;
 11949  004C9E  88C5               	bsf	197,4,c	;volatile
 11950  004CA0  0012               	return		;funcret
 11951  004CA2                     __end_of_I2C_MasterSendAck:
 11952                           	callstack 0
 11953                           
 11954 ;; *************** function _I2C_MasterGetRxData *****************
 11955 ;; Defined at:
 11956 ;;		line 563 in file "mcc_generated_files/i2c_master.c"
 11957 ;; Parameters:    Size  Location     Type
 11958 ;;		None
 11959 ;; Auto vars:     Size  Location     Type
 11960 ;;		None
 11961 ;; Return value:  Size  Location     Type
 11962 ;;                  1    wreg      unsigned char 
 11963 ;; Registers used:
 11964 ;;		wreg, status,2
 11965 ;; Tracked objects:
 11966 ;;		On entry : 0/0
 11967 ;;		On exit  : 0/0
 11968 ;;		Unchanged: 0/0
 11969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11973 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11974 ;;Total ram usage:        0 bytes
 11975 ;; Hardware stack levels used: 1
 11976 ;; Hardware stack levels required when called: 4
 11977 ;; This function calls:
 11978 ;;		Nothing
 11979 ;; This function is called by:
 11980 ;;		_I2C_DO_RX
 11981 ;; This function uses a non-reentrant model
 11982 ;;
 11983                           
 11984                           	psect	text77
 11985  004CBC                     __ptext77:
 11986                           	callstack 0
 11987  004CBC                     _I2C_MasterGetRxData:
 11988                           	callstack 18
 11989  004CBC                     
 11990                           ;mcc_generated_files/i2c_master.c: 565:     return SSPBUF;
 11991  004CBC  50C9               	movf	201,w,c	;volatile
 11992  004CBE  0012               	return		;funcret
 11993  004CC0                     __end_of_I2C_MasterGetRxData:
 11994                           	callstack 0
 11995                           
 11996 ;; *************** function _I2C_MasterSendNack *****************
 11997 ;; Defined at:
 11998 ;;		line 609 in file "mcc_generated_files/i2c_master.c"
 11999 ;; Parameters:    Size  Location     Type
 12000 ;;		None
 12001 ;; Auto vars:     Size  Location     Type
 12002 ;;		None
 12003 ;; Return value:  Size  Location     Type
 12004 ;;                  1    wreg      void 
 12005 ;; Registers used:
 12006 ;;		None
 12007 ;; Tracked objects:
 12008 ;;		On entry : 0/0
 12009 ;;		On exit  : 0/0
 12010 ;;		Unchanged: 0/0
 12011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12015 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12016 ;;Total ram usage:        0 bytes
 12017 ;; Hardware stack levels used: 1
 12018 ;; Hardware stack levels required when called: 4
 12019 ;; This function calls:
 12020 ;;		Nothing
 12021 ;; This function is called by:
 12022 ;;		_I2C_DO_RX_NACK_STOP
 12023 ;;		_I2C_DO_RX_NACK_RESTART
 12024 ;; This function uses a non-reentrant model
 12025 ;;
 12026                           
 12027                           	psect	text78
 12028  004CA2                     __ptext78:
 12029                           	callstack 0
 12030  004CA2                     _I2C_MasterSendNack:
 12031                           	callstack 18
 12032  004CA2                     
 12033                           ;mcc_generated_files/i2c_master.c: 611:     SSPCON2bits.ACKDT = 1;
 12034  004CA2  8AC5               	bsf	197,5,c	;volatile
 12035                           
 12036                           ;mcc_generated_files/i2c_master.c: 612:     SSPCON2bits.ACKEN = 1;
 12037  004CA4  88C5               	bsf	197,4,c	;volatile
 12038  004CA6  0012               	return		;funcret
 12039  004CA8                     __end_of_I2C_MasterSendNack:
 12040                           	callstack 0
 12041                           
 12042 ;; *************** function _I2C_MasterStartRx *****************
 12043 ;; Defined at:
 12044 ;;		line 583 in file "mcc_generated_files/i2c_master.c"
 12045 ;; Parameters:    Size  Location     Type
 12046 ;;		None
 12047 ;; Auto vars:     Size  Location     Type
 12048 ;;		None
 12049 ;; Return value:  Size  Location     Type
 12050 ;;                  1    wreg      void 
 12051 ;; Registers used:
 12052 ;;		None
 12053 ;; Tracked objects:
 12054 ;;		On entry : 0/0
 12055 ;;		On exit  : 0/0
 12056 ;;		Unchanged: 0/0
 12057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12061 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12062 ;;Total ram usage:        0 bytes
 12063 ;; Hardware stack levels used: 1
 12064 ;; Hardware stack levels required when called: 4
 12065 ;; This function calls:
 12066 ;;		Nothing
 12067 ;; This function is called by:
 12068 ;;		_I2C_DO_RCEN
 12069 ;; This function uses a non-reentrant model
 12070 ;;
 12071                           
 12072                           	psect	text79
 12073  004CC0                     __ptext79:
 12074                           	callstack 0
 12075  004CC0                     _I2C_MasterStartRx:
 12076                           	callstack 18
 12077  004CC0                     
 12078                           ;mcc_generated_files/i2c_master.c: 585:     SSPCON2bits.RCEN = 1;
 12079  004CC0  86C5               	bsf	197,3,c	;volatile
 12080  004CC2  0012               	return		;funcret
 12081  004CC4                     __end_of_I2C_MasterStartRx:
 12082                           	callstack 0
 12083                           
 12084 ;; *************** function _I2C_CallbackReturnReset *****************
 12085 ;; Defined at:
 12086 ;;		line 525 in file "mcc_generated_files/i2c_master.c"
 12087 ;; Parameters:    Size  Location     Type
 12088 ;;  funPtr          2   13[COMRAM] PTR void 
 12089 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 12090 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 12091 ;; Auto vars:     Size  Location     Type
 12092 ;;		None
 12093 ;; Return value:  Size  Location     Type
 12094 ;;                  1    wreg      enum E360
 12095 ;; Registers used:
 12096 ;;		wreg
 12097 ;; Tracked objects:
 12098 ;;		On entry : 0/0
 12099 ;;		On exit  : 0/0
 12100 ;;		Unchanged: 0/0
 12101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12102 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12105 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12106 ;;Total ram usage:        2 bytes
 12107 ;; Hardware stack levels used: 1
 12108 ;; Hardware stack levels required when called: 4
 12109 ;; This function calls:
 12110 ;;		Nothing
 12111 ;; This function is called by:
 12112 ;;		_I2C_Open
 12113 ;;		_I2C_DO_TX
 12114 ;;		_I2C_DO_RX
 12115 ;;		_I2C_DO_TX_EMPTY
 12116 ;;		_I2C_DO_ADDRESS_NACK
 12117 ;;		_I2C_DO_RX_EMPTY
 12118 ;; This function uses a non-reentrant model
 12119 ;;
 12120                           
 12121                           	psect	text80
 12122  004CC4                     __ptext80:
 12123                           	callstack 0
 12124  004CC4                     _I2C_CallbackReturnReset:
 12125                           	callstack 18
 12126  004CC4                     
 12127                           ;mcc_generated_files/i2c_master.c: 525: i2c_operations_t I2C_CallbackReturnReset(void *f
      +                          unPtr);mcc_generated_files/i2c_master.c: 526: {;mcc_generated_files/i2c_master.c: 527:  
      +                             return I2C_RESET_LINK;
 12128  004CC4  0E05               	movlw	5
 12129  004CC6  0012               	return		;funcret
 12130  004CC8                     __end_of_I2C_CallbackReturnReset:
 12131                           	callstack 0
 12132                           
 12133 ;; *************** function _I2C_CallbackReturnStop *****************
 12134 ;; Defined at:
 12135 ;;		line 520 in file "mcc_generated_files/i2c_master.c"
 12136 ;; Parameters:    Size  Location     Type
 12137 ;;  funPtr          2   13[COMRAM] PTR void 
 12138 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 12139 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 12140 ;; Auto vars:     Size  Location     Type
 12141 ;;		None
 12142 ;; Return value:  Size  Location     Type
 12143 ;;                  1    wreg      enum E360
 12144 ;; Registers used:
 12145 ;;		wreg
 12146 ;; Tracked objects:
 12147 ;;		On entry : 0/0
 12148 ;;		On exit  : 0/0
 12149 ;;		Unchanged: 0/0
 12150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12151 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12154 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12155 ;;Total ram usage:        2 bytes
 12156 ;; Hardware stack levels used: 1
 12157 ;; Hardware stack levels required when called: 4
 12158 ;; This function calls:
 12159 ;;		Nothing
 12160 ;; This function is called by:
 12161 ;;		_I2C_Open
 12162 ;;		_I2C_SetCallback
 12163 ;;		_I2C_DO_TX
 12164 ;;		_I2C_DO_RX
 12165 ;;		_I2C_DO_TX_EMPTY
 12166 ;;		_I2C_DO_ADDRESS_NACK
 12167 ;;		_I2C_DO_RX_EMPTY
 12168 ;; This function uses a non-reentrant model
 12169 ;;
 12170                           
 12171                           	psect	text81
 12172  004CC8                     __ptext81:
 12173                           	callstack 0
 12174  004CC8                     _I2C_CallbackReturnStop:
 12175                           	callstack 18
 12176  004CC8                     
 12177                           ;mcc_generated_files/i2c_master.c: 520: i2c_operations_t I2C_CallbackReturnStop(void *fu
      +                          nPtr);mcc_generated_files/i2c_master.c: 521: {;mcc_generated_files/i2c_master.c: 522:   
      +                            return I2C_STOP;
 12178  004CC8  0E01               	movlw	1
 12179  004CCA  0012               	return		;funcret
 12180  004CCC                     __end_of_I2C_CallbackReturnStop:
 12181                           	callstack 0
 12182                           
 12183 ;; *************** function _rdBlkRegCompleteHandler *****************
 12184 ;; Defined at:
 12185 ;;		line 170 in file "mcc_generated_files/examples/i2c_master_example.c"
 12186 ;; Parameters:    Size  Location     Type
 12187 ;;  ptr             2   13[COMRAM] PTR void 
 12188 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 12189 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 12190 ;; Auto vars:     Size  Location     Type
 12191 ;;		None
 12192 ;; Return value:  Size  Location     Type
 12193 ;;                  1    wreg      enum E360
 12194 ;; Registers used:
 12195 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12196 ;; Tracked objects:
 12197 ;;		On entry : 0/0
 12198 ;;		On exit  : 0/0
 12199 ;;		Unchanged: 0/0
 12200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12201 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12204 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12205 ;;Total ram usage:        2 bytes
 12206 ;; Hardware stack levels used: 1
 12207 ;; Hardware stack levels required when called: 6
 12208 ;; This function calls:
 12209 ;;		_I2C_SetBuffer
 12210 ;;		_I2C_SetDataCompleteCallback
 12211 ;; This function is called by:
 12212 ;;		_I2C_ReadDataBlock
 12213 ;;		_I2C_DO_TX
 12214 ;;		_I2C_DO_RX
 12215 ;;		_I2C_DO_TX_EMPTY
 12216 ;;		_I2C_DO_ADDRESS_NACK
 12217 ;;		_I2C_DO_RX_EMPTY
 12218 ;; This function uses a non-reentrant model
 12219 ;;
 12220                           
 12221                           	psect	text82
 12222  004812                     __ptext82:
 12223                           	callstack 0
 12224  004812                     _rdBlkRegCompleteHandler:
 12225                           	callstack 16
 12226  004812                     
 12227                           ;mcc_generated_files/examples/i2c_master_example.c: 170: static i2c_operations_t rdBlkRe
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 171: {;mc
      +                          c_generated_files/examples/i2c_master_example.c: 172:     I2C_SetBuffer(((i2c_buffer_t *
      +                          )ptr)->data,((i2c_buffer_t*)ptr)->len);
 12228  004812  EE20 F002          	lfsr	2,2
 12229  004816  500E               	movf	rdBlkRegCompleteHandler@ptr^0,w,c
 12230  004818  26D9               	addwf	fsr2l,f,c
 12231  00481A  500F               	movf	(rdBlkRegCompleteHandler@ptr+1)^0,w,c
 12232  00481C  22DA               	addwfc	fsr2h,f,c
 12233  00481E  CFDE F005          	movff	postinc2,I2C_SetBuffer@buffer
 12234  004822  CFDD F006          	movff	postdec2,I2C_SetBuffer@buffer+1
 12235  004826  C00E  FFD9         	movff	rdBlkRegCompleteHandler@ptr,fsr2l
 12236  00482A  C00F  FFDA         	movff	rdBlkRegCompleteHandler@ptr+1,fsr2h
 12237  00482E  CFDE F007          	movff	postinc2,I2C_SetBuffer@bufferSize
 12238  004832  CFDD F008          	movff	postdec2,I2C_SetBuffer@bufferSize+1
 12239  004836  EC70  F025         	call	_I2C_SetBuffer	;wreg free
 12240  00483A                     
 12241                           ;mcc_generated_files/examples/i2c_master_example.c: 173:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 12242  00483A  0E00               	movlw	0
 12243  00483C  6E0A               	movwf	I2C_SetDataCompleteCallback@cb^0,c
 12244  00483E  0E00               	movlw	0
 12245  004840  6E0B               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
 12246  004842  0E00               	movlw	0
 12247  004844  6E0C               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
 12248  004846  0E00               	movlw	0
 12249  004848  6E0D               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
 12250  00484A  ECAE  F025         	call	_I2C_SetDataCompleteCallback	;wreg free
 12251  00484E                     
 12252                           ;mcc_generated_files/examples/i2c_master_example.c: 174:     return I2C_RESTART_READ;
 12253  00484E  0E02               	movlw	2
 12254  004850  0012               	return		;funcret
 12255  004852                     __end_of_rdBlkRegCompleteHandler:
 12256                           	callstack 0
 12257                           
 12258 ;; *************** function _wr1RegCompleteHandler *****************
 12259 ;; Defined at:
 12260 ;;		line 156 in file "mcc_generated_files/examples/i2c_master_example.c"
 12261 ;; Parameters:    Size  Location     Type
 12262 ;;  ptr             2   13[COMRAM] PTR void 
 12263 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 12264 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 12265 ;; Auto vars:     Size  Location     Type
 12266 ;;		None
 12267 ;; Return value:  Size  Location     Type
 12268 ;;                  1    wreg      enum E360
 12269 ;; Registers used:
 12270 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12271 ;; Tracked objects:
 12272 ;;		On entry : 0/0
 12273 ;;		On exit  : 0/0
 12274 ;;		Unchanged: 0/0
 12275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12276 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12279 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12280 ;;Total ram usage:        2 bytes
 12281 ;; Hardware stack levels used: 1
 12282 ;; Hardware stack levels required when called: 6
 12283 ;; This function calls:
 12284 ;;		_I2C_SetBuffer
 12285 ;;		_I2C_SetDataCompleteCallback
 12286 ;; This function is called by:
 12287 ;;		_I2C_Write1ByteRegister
 12288 ;;		_I2C_DO_TX
 12289 ;;		_I2C_DO_RX
 12290 ;;		_I2C_DO_TX_EMPTY
 12291 ;;		_I2C_DO_ADDRESS_NACK
 12292 ;;		_I2C_DO_RX_EMPTY
 12293 ;; This function uses a non-reentrant model
 12294 ;;
 12295                           
 12296                           	psect	text83
 12297  004960                     __ptext83:
 12298                           	callstack 0
 12299  004960                     _wr1RegCompleteHandler:
 12300                           	callstack 16
 12301  004960                     
 12302                           ;mcc_generated_files/examples/i2c_master_example.c: 156: static i2c_operations_t wr1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 157: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 158:     I2C_SetBuffer(ptr,1);
 12303  004960  C00E  F005         	movff	wr1RegCompleteHandler@ptr,I2C_SetBuffer@buffer
 12304  004964  C00F  F006         	movff	wr1RegCompleteHandler@ptr+1,I2C_SetBuffer@buffer+1
 12305  004968  0E00               	movlw	0
 12306  00496A  6E08               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
 12307  00496C  0E01               	movlw	1
 12308  00496E  6E07               	movwf	I2C_SetBuffer@bufferSize^0,c
 12309  004970  EC70  F025         	call	_I2C_SetBuffer	;wreg free
 12310  004974                     
 12311                           ;mcc_generated_files/examples/i2c_master_example.c: 159:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 12312  004974  0E00               	movlw	0
 12313  004976  6E0A               	movwf	I2C_SetDataCompleteCallback@cb^0,c
 12314  004978  0E00               	movlw	0
 12315  00497A  6E0B               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
 12316  00497C  0E00               	movlw	0
 12317  00497E  6E0C               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
 12318  004980  0E00               	movlw	0
 12319  004982  6E0D               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
 12320  004984  ECAE  F025         	call	_I2C_SetDataCompleteCallback	;wreg free
 12321  004988                     
 12322                           ;mcc_generated_files/examples/i2c_master_example.c: 160:     return I2C_CONTINUE;
 12323  004988  0E04               	movlw	4
 12324  00498A  0012               	return		;funcret
 12325  00498C                     __end_of_wr1RegCompleteHandler:
 12326                           	callstack 0
 12327                           
 12328 ;; *************** function _rd2RegCompleteHandler *****************
 12329 ;; Defined at:
 12330 ;;		line 149 in file "mcc_generated_files/examples/i2c_master_example.c"
 12331 ;; Parameters:    Size  Location     Type
 12332 ;;  ptr             2   13[COMRAM] PTR void 
 12333 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 12334 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 12335 ;; Auto vars:     Size  Location     Type
 12336 ;;		None
 12337 ;; Return value:  Size  Location     Type
 12338 ;;                  1    wreg      enum E360
 12339 ;; Registers used:
 12340 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12341 ;; Tracked objects:
 12342 ;;		On entry : 0/0
 12343 ;;		On exit  : 0/0
 12344 ;;		Unchanged: 0/0
 12345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12346 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12349 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12350 ;;Total ram usage:        2 bytes
 12351 ;; Hardware stack levels used: 1
 12352 ;; Hardware stack levels required when called: 6
 12353 ;; This function calls:
 12354 ;;		_I2C_SetBuffer
 12355 ;;		_I2C_SetDataCompleteCallback
 12356 ;; This function is called by:
 12357 ;;		_I2C_Read2ByteRegister
 12358 ;;		_I2C_DO_TX
 12359 ;;		_I2C_DO_RX
 12360 ;;		_I2C_DO_TX_EMPTY
 12361 ;;		_I2C_DO_ADDRESS_NACK
 12362 ;;		_I2C_DO_RX_EMPTY
 12363 ;; This function uses a non-reentrant model
 12364 ;;
 12365                           
 12366                           	psect	text84
 12367  00498C                     __ptext84:
 12368                           	callstack 0
 12369  00498C                     _rd2RegCompleteHandler:
 12370                           	callstack 16
 12371  00498C                     
 12372                           ;mcc_generated_files/examples/i2c_master_example.c: 149: static i2c_operations_t rd2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 150: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 151:     I2C_SetBuffer(ptr,2);
 12373  00498C  C00E  F005         	movff	rd2RegCompleteHandler@ptr,I2C_SetBuffer@buffer
 12374  004990  C00F  F006         	movff	rd2RegCompleteHandler@ptr+1,I2C_SetBuffer@buffer+1
 12375  004994  0E00               	movlw	0
 12376  004996  6E08               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
 12377  004998  0E02               	movlw	2
 12378  00499A  6E07               	movwf	I2C_SetBuffer@bufferSize^0,c
 12379  00499C  EC70  F025         	call	_I2C_SetBuffer	;wreg free
 12380  0049A0                     
 12381                           ;mcc_generated_files/examples/i2c_master_example.c: 152:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 12382  0049A0  0E00               	movlw	0
 12383  0049A2  6E0A               	movwf	I2C_SetDataCompleteCallback@cb^0,c
 12384  0049A4  0E00               	movlw	0
 12385  0049A6  6E0B               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
 12386  0049A8  0E00               	movlw	0
 12387  0049AA  6E0C               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
 12388  0049AC  0E00               	movlw	0
 12389  0049AE  6E0D               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
 12390  0049B0  ECAE  F025         	call	_I2C_SetDataCompleteCallback	;wreg free
 12391  0049B4                     
 12392                           ;mcc_generated_files/examples/i2c_master_example.c: 153:     return I2C_RESTART_READ;
 12393  0049B4  0E02               	movlw	2
 12394  0049B6  0012               	return		;funcret
 12395  0049B8                     __end_of_rd2RegCompleteHandler:
 12396                           	callstack 0
 12397                           
 12398 ;; *************** function _rd1RegCompleteHandler *****************
 12399 ;; Defined at:
 12400 ;;		line 142 in file "mcc_generated_files/examples/i2c_master_example.c"
 12401 ;; Parameters:    Size  Location     Type
 12402 ;;  ptr             2   13[COMRAM] PTR void 
 12403 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 12404 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 12405 ;; Auto vars:     Size  Location     Type
 12406 ;;		None
 12407 ;; Return value:  Size  Location     Type
 12408 ;;                  1    wreg      enum E360
 12409 ;; Registers used:
 12410 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12411 ;; Tracked objects:
 12412 ;;		On entry : 0/0
 12413 ;;		On exit  : 0/0
 12414 ;;		Unchanged: 0/0
 12415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12416 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12419 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12420 ;;Total ram usage:        2 bytes
 12421 ;; Hardware stack levels used: 1
 12422 ;; Hardware stack levels required when called: 6
 12423 ;; This function calls:
 12424 ;;		_I2C_SetBuffer
 12425 ;;		_I2C_SetDataCompleteCallback
 12426 ;; This function is called by:
 12427 ;;		_I2C_Read1ByteRegister
 12428 ;;		_I2C_DO_TX
 12429 ;;		_I2C_DO_RX
 12430 ;;		_I2C_DO_TX_EMPTY
 12431 ;;		_I2C_DO_ADDRESS_NACK
 12432 ;;		_I2C_DO_RX_EMPTY
 12433 ;; This function uses a non-reentrant model
 12434 ;;
 12435                           
 12436                           	psect	text85
 12437  0049B8                     __ptext85:
 12438                           	callstack 0
 12439  0049B8                     _rd1RegCompleteHandler:
 12440                           	callstack 16
 12441  0049B8                     
 12442                           ;mcc_generated_files/examples/i2c_master_example.c: 142: static i2c_operations_t rd1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 143: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 144:     I2C_SetBuffer(ptr,1);
 12443  0049B8  C00E  F005         	movff	rd1RegCompleteHandler@ptr,I2C_SetBuffer@buffer
 12444  0049BC  C00F  F006         	movff	rd1RegCompleteHandler@ptr+1,I2C_SetBuffer@buffer+1
 12445  0049C0  0E00               	movlw	0
 12446  0049C2  6E08               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
 12447  0049C4  0E01               	movlw	1
 12448  0049C6  6E07               	movwf	I2C_SetBuffer@bufferSize^0,c
 12449  0049C8  EC70  F025         	call	_I2C_SetBuffer	;wreg free
 12450  0049CC                     
 12451                           ;mcc_generated_files/examples/i2c_master_example.c: 145:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 12452  0049CC  0E00               	movlw	0
 12453  0049CE  6E0A               	movwf	I2C_SetDataCompleteCallback@cb^0,c
 12454  0049D0  0E00               	movlw	0
 12455  0049D2  6E0B               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
 12456  0049D4  0E00               	movlw	0
 12457  0049D6  6E0C               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
 12458  0049D8  0E00               	movlw	0
 12459  0049DA  6E0D               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
 12460  0049DC  ECAE  F025         	call	_I2C_SetDataCompleteCallback	;wreg free
 12461  0049E0                     
 12462                           ;mcc_generated_files/examples/i2c_master_example.c: 146:     return I2C_RESTART_READ;
 12463  0049E0  0E02               	movlw	2
 12464  0049E2  0012               	return		;funcret
 12465  0049E4                     __end_of_rd1RegCompleteHandler:
 12466                           	callstack 0
 12467                           
 12468 ;; *************** function _wr2RegCompleteHandler *****************
 12469 ;; Defined at:
 12470 ;;		line 163 in file "mcc_generated_files/examples/i2c_master_example.c"
 12471 ;; Parameters:    Size  Location     Type
 12472 ;;  ptr             2   13[COMRAM] PTR void 
 12473 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 12474 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 12475 ;; Auto vars:     Size  Location     Type
 12476 ;;		None
 12477 ;; Return value:  Size  Location     Type
 12478 ;;                  1    wreg      enum E360
 12479 ;; Registers used:
 12480 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12481 ;; Tracked objects:
 12482 ;;		On entry : 0/0
 12483 ;;		On exit  : 0/0
 12484 ;;		Unchanged: 0/0
 12485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12486 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12489 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12490 ;;Total ram usage:        2 bytes
 12491 ;; Hardware stack levels used: 1
 12492 ;; Hardware stack levels required when called: 6
 12493 ;; This function calls:
 12494 ;;		_I2C_SetBuffer
 12495 ;;		_I2C_SetDataCompleteCallback
 12496 ;; This function is called by:
 12497 ;;		_I2C_Write2ByteRegister
 12498 ;;		_I2C_DO_TX
 12499 ;;		_I2C_DO_RX
 12500 ;;		_I2C_DO_TX_EMPTY
 12501 ;;		_I2C_DO_ADDRESS_NACK
 12502 ;;		_I2C_DO_RX_EMPTY
 12503 ;; This function uses a non-reentrant model
 12504 ;;
 12505                           
 12506                           	psect	text86
 12507  0049E4                     __ptext86:
 12508                           	callstack 0
 12509  0049E4                     _wr2RegCompleteHandler:
 12510                           	callstack 16
 12511  0049E4                     
 12512                           ;mcc_generated_files/examples/i2c_master_example.c: 163: static i2c_operations_t wr2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 164: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 165:     I2C_SetBuffer(ptr,2);
 12513  0049E4  C00E  F005         	movff	wr2RegCompleteHandler@ptr,I2C_SetBuffer@buffer
 12514  0049E8  C00F  F006         	movff	wr2RegCompleteHandler@ptr+1,I2C_SetBuffer@buffer+1
 12515  0049EC  0E00               	movlw	0
 12516  0049EE  6E08               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
 12517  0049F0  0E02               	movlw	2
 12518  0049F2  6E07               	movwf	I2C_SetBuffer@bufferSize^0,c
 12519  0049F4  EC70  F025         	call	_I2C_SetBuffer	;wreg free
 12520  0049F8                     
 12521                           ;mcc_generated_files/examples/i2c_master_example.c: 166:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 12522  0049F8  0E00               	movlw	0
 12523  0049FA  6E0A               	movwf	I2C_SetDataCompleteCallback@cb^0,c
 12524  0049FC  0E00               	movlw	0
 12525  0049FE  6E0B               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
 12526  004A00  0E00               	movlw	0
 12527  004A02  6E0C               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
 12528  004A04  0E00               	movlw	0
 12529  004A06  6E0D               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
 12530  004A08  ECAE  F025         	call	_I2C_SetDataCompleteCallback	;wreg free
 12531  004A0C                     
 12532                           ;mcc_generated_files/examples/i2c_master_example.c: 167:     return I2C_CONTINUE;
 12533  004A0C  0E04               	movlw	4
 12534  004A0E  0012               	return		;funcret
 12535  004A10                     __end_of_wr2RegCompleteHandler:
 12536                           	callstack 0
 12537                           
 12538 ;; *************** function _I2C_SetDataCompleteCallback *****************
 12539 ;; Defined at:
 12540 ;;		line 273 in file "mcc_generated_files/i2c_master.c"
 12541 ;; Parameters:    Size  Location     Type
 12542 ;;  cb              2    9[COMRAM] PTR FTN(PTR void ,)enum 
 12543 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 12544 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 12545 ;;  ptr             2   11[COMRAM] PTR void 
 12546 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 12547 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 12548 ;; Auto vars:     Size  Location     Type
 12549 ;;		None
 12550 ;; Return value:  Size  Location     Type
 12551 ;;                  1    wreg      void 
 12552 ;; Registers used:
 12553 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12554 ;; Tracked objects:
 12555 ;;		On entry : 0/0
 12556 ;;		On exit  : 0/0
 12557 ;;		Unchanged: 0/0
 12558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12559 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12562 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12563 ;;Total ram usage:        4 bytes
 12564 ;; Hardware stack levels used: 1
 12565 ;; Hardware stack levels required when called: 5
 12566 ;; This function calls:
 12567 ;;		_I2C_SetCallback
 12568 ;; This function is called by:
 12569 ;;		_rd1RegCompleteHandler
 12570 ;;		_rd2RegCompleteHandler
 12571 ;;		_wr1RegCompleteHandler
 12572 ;;		_wr2RegCompleteHandler
 12573 ;;		_rdBlkRegCompleteHandler
 12574 ;;		_I2C_Read1ByteRegister
 12575 ;;		_I2C_Read2ByteRegister
 12576 ;;		_I2C_Write1ByteRegister
 12577 ;;		_I2C_Write2ByteRegister
 12578 ;;		_I2C_ReadDataBlock
 12579 ;; This function uses a non-reentrant model
 12580 ;;
 12581                           
 12582                           	psect	text87
 12583  004B5C                     __ptext87:
 12584                           	callstack 0
 12585  004B5C                     _I2C_SetDataCompleteCallback:
 12586                           	callstack 16
 12587  004B5C                     
 12588                           ;mcc_generated_files/i2c_master.c: 273: void I2C_SetDataCompleteCallback(i2c_callback_t 
      +                          cb, void *ptr);mcc_generated_files/i2c_master.c: 274: {;mcc_generated_files/i2c_master.c
      +                          : 275:     I2C_SetCallback(I2C_DATA_COMPLETE, cb, ptr);
 12589  004B5C  C00A  F005         	movff	I2C_SetDataCompleteCallback@cb,I2C_SetCallback@cb
 12590  004B60  C00B  F006         	movff	I2C_SetDataCompleteCallback@cb+1,I2C_SetCallback@cb+1
 12591  004B64  C00C  F007         	movff	I2C_SetDataCompleteCallback@ptr,I2C_SetCallback@ptr
 12592  004B68  C00D  F008         	movff	I2C_SetDataCompleteCallback@ptr+1,I2C_SetCallback@ptr+1
 12593  004B6C  0E00               	movlw	0
 12594  004B6E  EC46  F021         	call	_I2C_SetCallback
 12595  004B72  0012               	return		;funcret
 12596  004B74                     __end_of_I2C_SetDataCompleteCallback:
 12597                           	callstack 0
 12598                           
 12599 ;; *************** function _I2C_SetCallback *****************
 12600 ;; Defined at:
 12601 ;;		line 298 in file "mcc_generated_files/i2c_master.c"
 12602 ;; Parameters:    Size  Location     Type
 12603 ;;  idx             1    wreg     enum E3121
 12604 ;;  cb              2    4[COMRAM] PTR FTN(PTR void ,)enum 
 12605 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 12606 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 12607 ;;  ptr             2    6[COMRAM] PTR void 
 12608 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 12609 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 12610 ;; Auto vars:     Size  Location     Type
 12611 ;;  idx             1    8[COMRAM] enum E3121
 12612 ;; Return value:  Size  Location     Type
 12613 ;;                  1    wreg      void 
 12614 ;; Registers used:
 12615 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12616 ;; Tracked objects:
 12617 ;;		On entry : 0/0
 12618 ;;		On exit  : 0/0
 12619 ;;		Unchanged: 0/0
 12620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12621 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12622 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12624 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12625 ;;Total ram usage:        5 bytes
 12626 ;; Hardware stack levels used: 1
 12627 ;; Hardware stack levels required when called: 4
 12628 ;; This function calls:
 12629 ;;		Nothing
 12630 ;; This function is called by:
 12631 ;;		_I2C_SetDataCompleteCallback
 12632 ;;		_I2C_SetAddressNackCallback
 12633 ;;		_I2C_SetWriteCollisionCallback
 12634 ;;		_I2C_SetDataNackCallback
 12635 ;;		_I2C_SetTimeoutCallback
 12636 ;; This function uses a non-reentrant model
 12637 ;;
 12638                           
 12639                           	psect	text88
 12640  00428C                     __ptext88:
 12641                           	callstack 0
 12642  00428C                     _I2C_SetCallback:
 12643                           	callstack 22
 12644                           
 12645                           ;incstack = 0
 12646                           ;I2C_SetCallback@idx stored from wreg
 12647  00428C  6E09               	movwf	I2C_SetCallback@idx^0,c
 12648  00428E                     
 12649                           ;mcc_generated_files/i2c_master.c: 298: static void I2C_SetCallback(i2c_callbackIndex_t 
      +                          idx, i2c_callback_t cb, void *ptr);mcc_generated_files/i2c_master.c: 299: {;mcc_generate
      +                          d_files/i2c_master.c: 300:     if(cb)
 12650  00428E  5005               	movf	I2C_SetCallback@cb^0,w,c
 12651  004290  1006               	iorwf	(I2C_SetCallback@cb+1)^0,w,c
 12652  004292  B4D8               	btfsc	status,2,c
 12653  004294  EF4E  F021         	goto	u3051
 12654  004298  EF50  F021         	goto	u3050
 12655  00429C                     u3051:
 12656  00429C  EF6A  F021         	goto	l4011
 12657  0042A0                     u3050:
 12658  0042A0                     
 12659                           ;mcc_generated_files/i2c_master.c: 301:     {;mcc_generated_files/i2c_master.c: 302:    
      +                               I2C_Status.callbackTable[idx] = cb;
 12660  0042A0  5009               	movf	I2C_SetCallback@idx^0,w,c
 12661  0042A2  0D02               	mullw	2
 12662  0042A4  0E00               	movlw	low _I2C_Status
 12663  0042A6  24F3               	addwf	243,w,c
 12664  0042A8  6ED9               	movwf	fsr2l,c
 12665  0042AA  0E01               	movlw	high _I2C_Status
 12666  0042AC  20F4               	addwfc	prodh,w,c
 12667  0042AE  6EDA               	movwf	fsr2h,c
 12668  0042B0  C005  FFDE         	movff	I2C_SetCallback@cb,postinc2
 12669  0042B4  C006  FFDD         	movff	I2C_SetCallback@cb+1,postdec2
 12670                           
 12671                           ;mcc_generated_files/i2c_master.c: 303:         I2C_Status.callbackPayload[idx] = ptr;
 12672  0042B8  5009               	movf	I2C_SetCallback@idx^0,w,c
 12673  0042BA  0D02               	mullw	2
 12674  0042BC  0E0C               	movlw	low (_I2C_Status+12)
 12675  0042BE  24F3               	addwf	243,w,c
 12676  0042C0  6ED9               	movwf	fsr2l,c
 12677  0042C2  0E01               	movlw	high (_I2C_Status+12)
 12678  0042C4  20F4               	addwfc	prodh,w,c
 12679  0042C6  6EDA               	movwf	fsr2h,c
 12680  0042C8  C007  FFDE         	movff	I2C_SetCallback@ptr,postinc2
 12681  0042CC  C008  FFDD         	movff	I2C_SetCallback@ptr+1,postdec2
 12682                           
 12683                           ;mcc_generated_files/i2c_master.c: 304:     }
 12684  0042D0  EF82  F021         	goto	l256
 12685  0042D4                     l4011:
 12686                           
 12687                           ;mcc_generated_files/i2c_master.c: 306:     {;mcc_generated_files/i2c_master.c: 307:    
      +                               I2C_Status.callbackTable[idx] = I2C_CallbackReturnStop;
 12688  0042D4  5009               	movf	I2C_SetCallback@idx^0,w,c
 12689  0042D6  0D02               	mullw	2
 12690  0042D8  0E00               	movlw	low _I2C_Status
 12691  0042DA  24F3               	addwf	243,w,c
 12692  0042DC  6ED9               	movwf	fsr2l,c
 12693  0042DE  0E01               	movlw	high _I2C_Status
 12694  0042E0  20F4               	addwfc	prodh,w,c
 12695  0042E2  6EDA               	movwf	fsr2h,c
 12696  0042E4  0EC8               	movlw	low _I2C_CallbackReturnStop
 12697  0042E6  6EDE               	movwf	postinc2,c
 12698  0042E8  0E4C               	movlw	high _I2C_CallbackReturnStop
 12699  0042EA  6EDD               	movwf	postdec2,c
 12700                           
 12701                           ;mcc_generated_files/i2c_master.c: 308:         I2C_Status.callbackPayload[idx] = ((void
      +                          *)0);
 12702  0042EC  5009               	movf	I2C_SetCallback@idx^0,w,c
 12703  0042EE  0D02               	mullw	2
 12704  0042F0  0E0C               	movlw	low (_I2C_Status+12)
 12705  0042F2  24F3               	addwf	243,w,c
 12706  0042F4  6ED9               	movwf	fsr2l,c
 12707  0042F6  0E01               	movlw	high (_I2C_Status+12)
 12708  0042F8  20F4               	addwfc	prodh,w,c
 12709  0042FA  6EDA               	movwf	fsr2h,c
 12710  0042FC  0E00               	movlw	0
 12711  0042FE  6EDE               	movwf	postinc2,c
 12712  004300  0E00               	movlw	0
 12713  004302  6EDD               	movwf	postdec2,c
 12714  004304                     l256:
 12715  004304  0012               	return		;funcret
 12716  004306                     __end_of_I2C_SetCallback:
 12717                           	callstack 0
 12718                           
 12719 ;; *************** function _I2C_SetBuffer *****************
 12720 ;; Defined at:
 12721 ;;		line 263 in file "mcc_generated_files/i2c_master.c"
 12722 ;; Parameters:    Size  Location     Type
 12723 ;;  buffer          2    4[COMRAM] PTR void 
 12724 ;;		 -> readBuffer(10), SHT40_Read@regist(1), I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(4), 
 12725 ;;		 -> I2C_Write2ByteRegister@reg(1), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@reg(1), I2C_Write1ByteRegi
      +ster@data(1), 
 12726 ;;		 -> I2C_Read2ByteRegister@reg(1), I2C_Read2ByteRegister@returnValue(2), NULL(0), I2C_Read1ByteRegister@reg(1), 
 12727 ;;		 -> I2C_Read1ByteRegister@returnValue(1), 
 12728 ;;  bufferSize      2    6[COMRAM] unsigned int 
 12729 ;; Auto vars:     Size  Location     Type
 12730 ;;		None
 12731 ;; Return value:  Size  Location     Type
 12732 ;;                  1    wreg      void 
 12733 ;; Registers used:
 12734 ;;		wreg, status,2, status,0
 12735 ;; Tracked objects:
 12736 ;;		On entry : 0/0
 12737 ;;		On exit  : 0/0
 12738 ;;		Unchanged: 0/0
 12739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12740 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12743 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12744 ;;Total ram usage:        4 bytes
 12745 ;; Hardware stack levels used: 1
 12746 ;; Hardware stack levels required when called: 4
 12747 ;; This function calls:
 12748 ;;		Nothing
 12749 ;; This function is called by:
 12750 ;;		_I2C_WriteNBytes
 12751 ;;		_I2C_ReadNBytes
 12752 ;;		_rd1RegCompleteHandler
 12753 ;;		_rd2RegCompleteHandler
 12754 ;;		_wr1RegCompleteHandler
 12755 ;;		_wr2RegCompleteHandler
 12756 ;;		_rdBlkRegCompleteHandler
 12757 ;;		_I2C_Read1ByteRegister
 12758 ;;		_I2C_Read2ByteRegister
 12759 ;;		_I2C_Write1ByteRegister
 12760 ;;		_I2C_Write2ByteRegister
 12761 ;;		_I2C_ReadDataBlock
 12762 ;; This function uses a non-reentrant model
 12763 ;;
 12764                           
 12765                           	psect	text89
 12766  004AE0                     __ptext89:
 12767                           	callstack 0
 12768  004AE0                     _I2C_SetBuffer:
 12769                           	callstack 23
 12770  004AE0                     
 12771                           ;mcc_generated_files/i2c_master.c: 263: void I2C_SetBuffer(void *buffer, size_t bufferSi
      +                          ze);mcc_generated_files/i2c_master.c: 264: {;mcc_generated_files/i2c_master.c: 265:     
      +                          if(I2C_Status.bufferFree)
 12772  004AE0  0101               	movlb	1	; () banked
 12773  004AE2  A723               	btfss	(_I2C_Status+35)& (0+255),3,b
 12774  004AE4  EF76  F025         	goto	u3061
 12775  004AE8  EF78  F025         	goto	u3060
 12776  004AEC                     u3061:
 12777  004AEC  EF81  F025         	goto	l236
 12778  004AF0                     u3060:
 12779  004AF0                     
 12780                           ; BSR set to: 1
 12781                           ;mcc_generated_files/i2c_master.c: 266:     {;mcc_generated_files/i2c_master.c: 267:    
      +                               I2C_Status.data_ptr = buffer;
 12782  004AF0  C005  F11D         	movff	I2C_SetBuffer@buffer,_I2C_Status+29
 12783  004AF4  C006  F11E         	movff	I2C_SetBuffer@buffer+1,_I2C_Status+30
 12784  004AF8                     
 12785                           ; BSR set to: 1
 12786                           ;mcc_generated_files/i2c_master.c: 268:         I2C_Status.data_length = bufferSize;
 12787  004AF8  C007  F11F         	movff	I2C_SetBuffer@bufferSize,_I2C_Status+31
 12788  004AFC  C008  F120         	movff	I2C_SetBuffer@bufferSize+1,_I2C_Status+32
 12789  004B00                     
 12790                           ; BSR set to: 1
 12791                           ;mcc_generated_files/i2c_master.c: 269:         I2C_Status.bufferFree = 0;
 12792  004B00  9723               	bcf	(_I2C_Status+35)& (0+255),3,b
 12793  004B02                     l236:
 12794                           
 12795                           ; BSR set to: 1
 12796  004B02  0012               	return		;funcret
 12797  004B04                     __end_of_I2C_SetBuffer:
 12798                           	callstack 0
 12799                           
 12800 ;; *************** function _I2C_MasterStop *****************
 12801 ;; Defined at:
 12802 ;;		line 593 in file "mcc_generated_files/i2c_master.c"
 12803 ;; Parameters:    Size  Location     Type
 12804 ;;		None
 12805 ;; Auto vars:     Size  Location     Type
 12806 ;;		None
 12807 ;; Return value:  Size  Location     Type
 12808 ;;                  1    wreg      void 
 12809 ;; Registers used:
 12810 ;;		None
 12811 ;; Tracked objects:
 12812 ;;		On entry : 0/0
 12813 ;;		On exit  : 0/0
 12814 ;;		Unchanged: 0/0
 12815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12819 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12820 ;;Total ram usage:        0 bytes
 12821 ;; Hardware stack levels used: 1
 12822 ;; Hardware stack levels required when called: 4
 12823 ;; This function calls:
 12824 ;;		Nothing
 12825 ;; This function is called by:
 12826 ;;		_I2C_DO_SEND_STOP
 12827 ;; This function uses a non-reentrant model
 12828 ;;
 12829                           
 12830                           	psect	text90
 12831  004CCC                     __ptext90:
 12832                           	callstack 0
 12833  004CCC                     _I2C_MasterStop:
 12834                           	callstack 17
 12835  004CCC                     
 12836                           ;mcc_generated_files/i2c_master.c: 595:     SSPCON2bits.PEN = 1;
 12837  004CCC  84C5               	bsf	197,2,c	;volatile
 12838  004CCE  0012               	return		;funcret
 12839  004CD0                     __end_of_I2C_MasterStop:
 12840                           	callstack 0
 12841                           
 12842 ;; *************** function _I2C_MasterEnableRestart *****************
 12843 ;; Defined at:
 12844 ;;		line 573 in file "mcc_generated_files/i2c_master.c"
 12845 ;; Parameters:    Size  Location     Type
 12846 ;;		None
 12847 ;; Auto vars:     Size  Location     Type
 12848 ;;		None
 12849 ;; Return value:  Size  Location     Type
 12850 ;;                  1    wreg      void 
 12851 ;; Registers used:
 12852 ;;		None
 12853 ;; Tracked objects:
 12854 ;;		On entry : 0/0
 12855 ;;		On exit  : 0/0
 12856 ;;		Unchanged: 0/0
 12857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12861 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12862 ;;Total ram usage:        0 bytes
 12863 ;; Hardware stack levels used: 1
 12864 ;; Hardware stack levels required when called: 4
 12865 ;; This function calls:
 12866 ;;		Nothing
 12867 ;; This function is called by:
 12868 ;;		_I2C_DO_SEND_RESTART_READ
 12869 ;;		_I2C_DO_SEND_RESTART_WRITE
 12870 ;;		_I2C_DO_SEND_RESTART
 12871 ;;		_I2C_DO_RX_EMPTY
 12872 ;; This function uses a non-reentrant model
 12873 ;;
 12874                           
 12875                           	psect	text91
 12876  004CD0                     __ptext91:
 12877                           	callstack 0
 12878  004CD0                     _I2C_MasterEnableRestart:
 12879                           	callstack 17
 12880  004CD0                     
 12881                           ;mcc_generated_files/i2c_master.c: 575:     SSPCON2bits.RSEN = 1;
 12882  004CD0  82C5               	bsf	197,1,c	;volatile
 12883  004CD2  0012               	return		;funcret
 12884  004CD4                     __end_of_I2C_MasterEnableRestart:
 12885                           	callstack 0
 12886                           
 12887 ;; *************** function _I2C_MasterStart *****************
 12888 ;; Defined at:
 12889 ;;		line 588 in file "mcc_generated_files/i2c_master.c"
 12890 ;; Parameters:    Size  Location     Type
 12891 ;;		None
 12892 ;; Auto vars:     Size  Location     Type
 12893 ;;		None
 12894 ;; Return value:  Size  Location     Type
 12895 ;;                  1    wreg      void 
 12896 ;; Registers used:
 12897 ;;		None
 12898 ;; Tracked objects:
 12899 ;;		On entry : 0/0
 12900 ;;		On exit  : 0/0
 12901 ;;		Unchanged: 0/0
 12902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12906 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12907 ;;Total ram usage:        0 bytes
 12908 ;; Hardware stack levels used: 1
 12909 ;; Hardware stack levels required when called: 4
 12910 ;; This function calls:
 12911 ;;		Nothing
 12912 ;; This function is called by:
 12913 ;;		_I2C_MasterOperation
 12914 ;; This function uses a non-reentrant model
 12915 ;;
 12916                           
 12917                           	psect	text92
 12918  004CD4                     __ptext92:
 12919                           	callstack 0
 12920  004CD4                     _I2C_MasterStart:
 12921                           	callstack 21
 12922  004CD4                     
 12923                           ;mcc_generated_files/i2c_master.c: 590:     SSPCON2bits.SEN = 1;
 12924  004CD4  80C5               	bsf	197,0,c	;volatile
 12925  004CD6  0012               	return		;funcret
 12926  004CD8                     __end_of_I2C_MasterStart:
 12927                           	callstack 0
 12928                           
 12929 ;; *************** function _I2C_Close *****************
 12930 ;; Defined at:
 12931 ;;		line 209 in file "mcc_generated_files/i2c_master.c"
 12932 ;; Parameters:    Size  Location     Type
 12933 ;;		None
 12934 ;; Auto vars:     Size  Location     Type
 12935 ;;  returnValue     1    4[COMRAM] enum E355
 12936 ;; Return value:  Size  Location     Type
 12937 ;;                  1    wreg      enum E355
 12938 ;; Registers used:
 12939 ;;		wreg, status,2, cstack
 12940 ;; Tracked objects:
 12941 ;;		On entry : 0/0
 12942 ;;		On exit  : 0/0
 12943 ;;		Unchanged: 0/0
 12944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12946 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12948 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12949 ;;Total ram usage:        1 bytes
 12950 ;; Hardware stack levels used: 1
 12951 ;; Hardware stack levels required when called: 5
 12952 ;; This function calls:
 12953 ;;		_I2C_MasterClearIrq
 12954 ;;		_I2C_MasterClose
 12955 ;;		_I2C_MasterDisableIrq
 12956 ;; This function is called by:
 12957 ;;		_I2C_WriteNBytes
 12958 ;;		_I2C_ReadNBytes
 12959 ;;		_I2C_Read1ByteRegister
 12960 ;;		_I2C_Read2ByteRegister
 12961 ;;		_I2C_Write1ByteRegister
 12962 ;;		_I2C_Write2ByteRegister
 12963 ;;		_I2C_ReadDataBlock
 12964 ;; This function uses a non-reentrant model
 12965 ;;
 12966                           
 12967                           	psect	text93
 12968  004A10                     __ptext93:
 12969                           	callstack 0
 12970  004A10                     _I2C_Close:
 12971                           	callstack 22
 12972  004A10                     
 12973                           ;mcc_generated_files/i2c_master.c: 211:     i2c_error_t returnValue = I2C_BUSY;
 12974  004A10  0E01               	movlw	1
 12975  004A12  6E05               	movwf	I2C_Close@returnValue^0,c
 12976  004A14                     
 12977                           ;mcc_generated_files/i2c_master.c: 212:     if(!I2C_Status.busy)
 12978  004A14  0101               	movlb	1	; () banked
 12979  004A16  B323               	btfsc	(_I2C_Status+35)& (0+255),1,b
 12980  004A18  EF10  F025         	goto	u4741
 12981  004A1C  EF12  F025         	goto	u4740
 12982  004A20                     u4741:
 12983  004A20  EF1C  F025         	goto	l5221
 12984  004A24                     u4740:
 12985  004A24                     
 12986                           ; BSR set to: 1
 12987                           ;mcc_generated_files/i2c_master.c: 213:     {;mcc_generated_files/i2c_master.c: 214:    
      +                               I2C_Status.inUse = 0;
 12988  004A24  9523               	bcf	(_I2C_Status+35)& (0+255),2,b
 12989                           
 12990                           ;mcc_generated_files/i2c_master.c: 215:         I2C_Status.address = 0xff;
 12991  004A26  691C               	setf	(_I2C_Status+28)& (0+255),b
 12992  004A28                     
 12993                           ; BSR set to: 1
 12994                           ;mcc_generated_files/i2c_master.c: 216:         I2C_MasterClearIrq();
 12995  004A28  EC70  F026         	call	_I2C_MasterClearIrq	;wreg free
 12996                           
 12997                           ;mcc_generated_files/i2c_master.c: 217:         I2C_MasterDisableIrq();
 12998  004A2C  EC6C  F026         	call	_I2C_MasterDisableIrq	;wreg free
 12999                           
 13000                           ;mcc_generated_files/i2c_master.c: 218:         I2C_MasterClose();
 13001  004A30  EC6E  F026         	call	_I2C_MasterClose	;wreg free
 13002  004A34                     
 13003                           ;mcc_generated_files/i2c_master.c: 219:         returnValue = I2C_Status.error;
 13004  004A34  C122  F005         	movff	_I2C_Status+34,I2C_Close@returnValue
 13005  004A38                     l5221:
 13006                           
 13007                           ;mcc_generated_files/i2c_master.c: 221:     return returnValue;
 13008  004A38  5005               	movf	I2C_Close@returnValue^0,w,c
 13009  004A3A  0012               	return		;funcret
 13010  004A3C                     __end_of_I2C_Close:
 13011                           	callstack 0
 13012                           
 13013 ;; *************** function _I2C_MasterDisableIrq *****************
 13014 ;; Defined at:
 13015 ;;		line 635 in file "mcc_generated_files/i2c_master.c"
 13016 ;; Parameters:    Size  Location     Type
 13017 ;;		None
 13018 ;; Auto vars:     Size  Location     Type
 13019 ;;		None
 13020 ;; Return value:  Size  Location     Type
 13021 ;;                  1    wreg      void 
 13022 ;; Registers used:
 13023 ;;		None
 13024 ;; Tracked objects:
 13025 ;;		On entry : 0/0
 13026 ;;		On exit  : 0/0
 13027 ;;		Unchanged: 0/0
 13028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13032 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13033 ;;Total ram usage:        0 bytes
 13034 ;; Hardware stack levels used: 1
 13035 ;; Hardware stack levels required when called: 4
 13036 ;; This function calls:
 13037 ;;		Nothing
 13038 ;; This function is called by:
 13039 ;;		_I2C_Close
 13040 ;;		_I2C_SetTimeOut
 13041 ;; This function uses a non-reentrant model
 13042 ;;
 13043                           
 13044                           	psect	text94
 13045  004CD8                     __ptext94:
 13046                           	callstack 0
 13047  004CD8                     _I2C_MasterDisableIrq:
 13048                           	callstack 22
 13049  004CD8                     
 13050                           ;mcc_generated_files/i2c_master.c: 637:     PIE1bits.SSPIE = 0;
 13051  004CD8  969D               	bcf	157,3,c	;volatile
 13052  004CDA  0012               	return		;funcret
 13053  004CDC                     __end_of_I2C_MasterDisableIrq:
 13054                           	callstack 0
 13055                           
 13056 ;; *************** function _I2C_MasterClose *****************
 13057 ;; Defined at:
 13058 ;;		line 557 in file "mcc_generated_files/i2c_master.c"
 13059 ;; Parameters:    Size  Location     Type
 13060 ;;		None
 13061 ;; Auto vars:     Size  Location     Type
 13062 ;;		None
 13063 ;; Return value:  Size  Location     Type
 13064 ;;                  1    wreg      void 
 13065 ;; Registers used:
 13066 ;;		None
 13067 ;; Tracked objects:
 13068 ;;		On entry : 0/0
 13069 ;;		On exit  : 0/0
 13070 ;;		Unchanged: 0/0
 13071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13075 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13076 ;;Total ram usage:        0 bytes
 13077 ;; Hardware stack levels used: 1
 13078 ;; Hardware stack levels required when called: 4
 13079 ;; This function calls:
 13080 ;;		Nothing
 13081 ;; This function is called by:
 13082 ;;		_I2C_Close
 13083 ;; This function uses a non-reentrant model
 13084 ;;
 13085                           
 13086                           	psect	text95
 13087  004CDC                     __ptext95:
 13088                           	callstack 0
 13089  004CDC                     _I2C_MasterClose:
 13090                           	callstack 22
 13091  004CDC                     
 13092                           ;mcc_generated_files/i2c_master.c: 560:     SSPCON1bits.SSPEN = 0;
 13093  004CDC  9AC6               	bcf	198,5,c	;volatile
 13094  004CDE  0012               	return		;funcret
 13095  004CE0                     __end_of_I2C_MasterClose:
 13096                           	callstack 0
 13097                           
 13098 ;; *************** function _I2C_MasterClearIrq *****************
 13099 ;; Defined at:
 13100 ;;		line 640 in file "mcc_generated_files/i2c_master.c"
 13101 ;; Parameters:    Size  Location     Type
 13102 ;;		None
 13103 ;; Auto vars:     Size  Location     Type
 13104 ;;		None
 13105 ;; Return value:  Size  Location     Type
 13106 ;;                  1    wreg      void 
 13107 ;; Registers used:
 13108 ;;		None
 13109 ;; Tracked objects:
 13110 ;;		On entry : 0/0
 13111 ;;		On exit  : 0/0
 13112 ;;		Unchanged: 0/0
 13113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13117 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13118 ;;Total ram usage:        0 bytes
 13119 ;; Hardware stack levels used: 1
 13120 ;; Hardware stack levels required when called: 4
 13121 ;; This function calls:
 13122 ;;		Nothing
 13123 ;; This function is called by:
 13124 ;;		_I2C_Open
 13125 ;;		_I2C_Close
 13126 ;;		_I2C_MasterFsm
 13127 ;; This function uses a non-reentrant model
 13128 ;;
 13129                           
 13130                           	psect	text96
 13131  004CE0                     __ptext96:
 13132                           	callstack 0
 13133  004CE0                     _I2C_MasterClearIrq:
 13134                           	callstack 22
 13135  004CE0                     
 13136                           ;mcc_generated_files/i2c_master.c: 642:     PIR1bits.SSPIF = 0;
 13137  004CE0  969E               	bcf	158,3,c	;volatile
 13138  004CE2  0012               	return		;funcret
 13139  004CE4                     __end_of_I2C_MasterClearIrq:
 13140                           	callstack 0
 13141                           
 13142 ;; *************** function _INTERRUPT_InterruptManager *****************
 13143 ;; Defined at:
 13144 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 13145 ;; Parameters:    Size  Location     Type
 13146 ;;		None
 13147 ;; Auto vars:     Size  Location     Type
 13148 ;;		None
 13149 ;; Return value:  Size  Location     Type
 13150 ;;                  1    wreg      void 
 13151 ;; Registers used:
 13152 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 13153 ;; Tracked objects:
 13154 ;;		On entry : 0/0
 13155 ;;		On exit  : 0/0
 13156 ;;		Unchanged: 0/0
 13157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13160 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13161 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13162 ;;Total ram usage:        4 bytes
 13163 ;; Hardware stack levels used: 1
 13164 ;; Hardware stack levels required when called: 3
 13165 ;; This function calls:
 13166 ;;		Absolute function
 13167 ;;		_EUSART_Receive_ISR
 13168 ;;		_EUSART_Transmit_ISR
 13169 ;; This function is called by:
 13170 ;;		Interrupt level 2
 13171 ;; This function uses a non-reentrant model
 13172 ;;
 13173                           
 13174                           	psect	intcode
 13175  000008                     __pintcode:
 13176                           	callstack 0
 13177  000008                     _INTERRUPT_InterruptManager:
 13178                           	callstack 16
 13179                           
 13180                           ;incstack = 0
 13181  000008  825A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 13182  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
 13183  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 13184  000012  CFD9 F003          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
 13185  000016  CFDA F004          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
 13186  00001A                     
 13187                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
 13188  00001A  ACF2               	btfss	242,6,c	;volatile
 13189  00001C  EF12  F000         	goto	i2u602_41
 13190  000020  EF14  F000         	goto	i2u602_40
 13191  000024                     i2u602_41:
 13192  000024  EF4E  F000         	goto	i2l671
 13193  000028                     i2u602_40:
 13194  000028                     
 13195                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
 13196  000028  A89D               	btfss	157,4,c	;volatile
 13197  00002A  EF19  F000         	goto	i2u603_41
 13198  00002E  EF1B  F000         	goto	i2u603_40
 13199  000032                     i2u603_41:
 13200  000032  EF31  F000         	goto	i2l666
 13201  000036                     i2u603_40:
 13202  000036  A89E               	btfss	158,4,c	;volatile
 13203  000038  EF20  F000         	goto	i2u604_41
 13204  00003C  EF22  F000         	goto	i2u604_40
 13205  000040                     i2u604_41:
 13206  000040  EF31  F000         	goto	i2l666
 13207  000044                     i2u604_40:
 13208  000044                     
 13209                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             EUSART_TxDefaultInterruptHandler();
 13210  000044  D802               	call	i2u605_48
 13211  000046  EF2F  F000         	goto	i2u605_49
 13212  00004A                     i2u605_48:
 13213  00004A  0005               	push	
 13214  00004C  6EFA               	movwf	pclath,c
 13215  00004E  0100               	movlb	0	; () banked
 13216  000050  51FC               	movf	_EUSART_TxDefaultInterruptHandler& (0+255),w,b
 13217  000052  6EFD               	movwf	tosl,c
 13218  000054  51FD               	movf	(_EUSART_TxDefaultInterruptHandler+1)& (0+255),w,b
 13219  000056  6EFE               	movwf	tosh,c
 13220  000058  6AFF               	clrf	tosu,c
 13221  00005A  50FA               	movf	pclath,w,c
 13222  00005C  0012               	return		;indir
 13223  00005E                     i2u605_49:
 13224                           
 13225                           ;mcc_generated_files/interrupt_manager.c: 66:         }
 13226  00005E  EF4E  F000         	goto	i2l671
 13227  000062                     i2l666:
 13228  000062  AA9D               	btfss	157,5,c	;volatile
 13229  000064  EF36  F000         	goto	i2u606_41
 13230  000068  EF38  F000         	goto	i2u606_40
 13231  00006C                     i2u606_41:
 13232  00006C  EF4E  F000         	goto	i2l667
 13233  000070                     i2u606_40:
 13234  000070  AA9E               	btfss	158,5,c	;volatile
 13235  000072  EF3D  F000         	goto	i2u607_41
 13236  000076  EF3F  F000         	goto	i2u607_40
 13237  00007A                     i2u607_41:
 13238  00007A  EF4E  F000         	goto	i2l667
 13239  00007E                     i2u607_40:
 13240  00007E                     
 13241                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             EUSART_RxDefaultInterruptHandler();
 13242  00007E  D802               	call	i2u608_48
 13243  000080  EF4C  F000         	goto	i2u608_49
 13244  000084                     i2u608_48:
 13245  000084  0005               	push	
 13246  000086  6EFA               	movwf	pclath,c
 13247  000088  0100               	movlb	0	; () banked
 13248  00008A  51FA               	movf	_EUSART_RxDefaultInterruptHandler& (0+255),w,b
 13249  00008C  6EFD               	movwf	tosl,c
 13250  00008E  51FB               	movf	(_EUSART_RxDefaultInterruptHandler+1)& (0+255),w,b
 13251  000090  6EFE               	movwf	tosh,c
 13252  000092  6AFF               	clrf	tosu,c
 13253  000094  50FA               	movf	pclath,w,c
 13254  000096  0012               	return		;indir
 13255  000098                     i2u608_49:
 13256                           
 13257                           ;mcc_generated_files/interrupt_manager.c: 70:         }
 13258  000098  EF4E  F000         	goto	i2l671
 13259  00009C                     i2l667:
 13260  00009C                     i2l671:
 13261  00009C  C004  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
 13262  0000A0  C003  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
 13263  0000A4  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 13264  0000A8  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 13265  0000AC  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 13266  0000AE  0011               	retfie		f
 13267  0000B0                     __end_of_INTERRUPT_InterruptManager:
 13268                           	callstack 0
 13269                           
 13270 ;; *************** function _EUSART_Transmit_ISR *****************
 13271 ;; Defined at:
 13272 ;;		line 206 in file "mcc_generated_files/eusart.c"
 13273 ;; Parameters:    Size  Location     Type
 13274 ;;		None
 13275 ;; Auto vars:     Size  Location     Type
 13276 ;;		None
 13277 ;; Return value:  Size  Location     Type
 13278 ;;                  1    wreg      void 
 13279 ;; Registers used:
 13280 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13281 ;; Tracked objects:
 13282 ;;		On entry : 0/0
 13283 ;;		On exit  : 0/0
 13284 ;;		Unchanged: 0/0
 13285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13289 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13290 ;;Total ram usage:        0 bytes
 13291 ;; Hardware stack levels used: 1
 13292 ;; This function calls:
 13293 ;;		Nothing
 13294 ;; This function is called by:
 13295 ;;		_EUSART_Initialize
 13296 ;;		_INTERRUPT_InterruptManager
 13297 ;; This function uses a non-reentrant model
 13298 ;;
 13299                           
 13300                           	psect	text98
 13301  0047D0                     __ptext98:
 13302                           	callstack 0
 13303  0047D0                     _EUSART_Transmit_ISR:
 13304                           	callstack 18
 13305  0047D0                     
 13306                           ;mcc_generated_files/eusart.c: 210:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemain
      +                          ing)
 13307  0047D0  0E08               	movlw	8
 13308  0047D2  0100               	movlb	0	; () banked
 13309  0047D4  61FE               	cpfslt	_eusartTxBufferRemaining& (0+255),b	;volatile
 13310  0047D6  EFEF  F023         	goto	i2u582_41
 13311  0047DA  EFF1  F023         	goto	i2u582_40
 13312  0047DE                     i2u582_41:
 13313  0047DE  EF07  F024         	goto	i2l607
 13314  0047E2                     i2u582_40:
 13315  0047E2                     
 13316                           ; BSR set to: 0
 13317                           ;mcc_generated_files/eusart.c: 211:     {;mcc_generated_files/eusart.c: 212:         TXR
      +                          EG = eusartTxBuffer[eusartTxTail++];
 13318  0047E2  0ED3               	movlw	low _eusartTxBuffer
 13319  0047E4  2458               	addwf	_eusartTxTail^0,w,c	;volatile
 13320  0047E6  6ED9               	movwf	fsr2l,c
 13321  0047E8  6ADA               	clrf	fsr2h,c
 13322  0047EA  0E00               	movlw	high _eusartTxBuffer
 13323  0047EC  22DA               	addwfc	fsr2h,f,c
 13324  0047EE  50DF               	movf	indf2,w,c
 13325  0047F0  6EAD               	movwf	173,c	;volatile
 13326  0047F2                     
 13327                           ; BSR set to: 0
 13328  0047F2  2A58               	incf	_eusartTxTail^0,f,c	;volatile
 13329  0047F4                     
 13330                           ; BSR set to: 0
 13331                           ;mcc_generated_files/eusart.c: 213:         if(sizeof(eusartTxBuffer) <= eusartTxTail)
 13332  0047F4  0E07               	movlw	7
 13333  0047F6  6458               	cpfsgt	_eusartTxTail^0,c	;volatile
 13334  0047F8  EF00  F024         	goto	i2u583_41
 13335  0047FC  EF02  F024         	goto	i2u583_40
 13336  004800                     i2u583_41:
 13337  004800  EF04  F024         	goto	i2l5953
 13338  004804                     i2u583_40:
 13339  004804                     
 13340                           ; BSR set to: 0
 13341                           ;mcc_generated_files/eusart.c: 214:         {;mcc_generated_files/eusart.c: 215:        
      +                               eusartTxTail = 0;
 13342  004804  0E00               	movlw	0
 13343  004806  6E58               	movwf	_eusartTxTail^0,c	;volatile
 13344  004808                     i2l5953:
 13345                           
 13346                           ; BSR set to: 0
 13347                           ;mcc_generated_files/eusart.c: 217:         eusartTxBufferRemaining++;
 13348  004808  2BFE               	incf	_eusartTxBufferRemaining& (0+255),f,b	;volatile
 13349                           
 13350                           ;mcc_generated_files/eusart.c: 218:     }
 13351  00480A  EF08  F024         	goto	i2l610
 13352  00480E                     i2l607:
 13353                           
 13354                           ; BSR set to: 0
 13355                           ;mcc_generated_files/eusart.c: 220:     {;mcc_generated_files/eusart.c: 221:         PIE
      +                          1bits.TX1IE = 0;
 13356  00480E  989D               	bcf	157,4,c	;volatile
 13357  004810                     i2l610:
 13358                           
 13359                           ; BSR set to: 0
 13360  004810  0012               	return		;funcret
 13361  004812                     __end_of_EUSART_Transmit_ISR:
 13362                           	callstack 0
 13363                           
 13364 ;; *************** function _EUSART_Receive_ISR *****************
 13365 ;; Defined at:
 13366 ;;		line 225 in file "mcc_generated_files/eusart.c"
 13367 ;; Parameters:    Size  Location     Type
 13368 ;;		None
 13369 ;; Auto vars:     Size  Location     Type
 13370 ;;		None
 13371 ;; Return value:  Size  Location     Type
 13372 ;;                  1    wreg      void 
 13373 ;; Registers used:
 13374 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 13375 ;; Tracked objects:
 13376 ;;		On entry : 0/0
 13377 ;;		On exit  : 0/0
 13378 ;;		Unchanged: 0/0
 13379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13383 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13384 ;;Total ram usage:        0 bytes
 13385 ;; Hardware stack levels used: 1
 13386 ;; Hardware stack levels required when called: 2
 13387 ;; This function calls:
 13388 ;;		Absolute function
 13389 ;;		_EUSART_DefaultErrorHandler
 13390 ;;		_EUSART_DefaultFramingErrorHandler
 13391 ;;		_EUSART_DefaultOverrunErrorHandler
 13392 ;;		_EUSART_RxDataHandler
 13393 ;; This function is called by:
 13394 ;;		_EUSART_Initialize
 13395 ;;		_INTERRUPT_InterruptManager
 13396 ;; This function uses a non-reentrant model
 13397 ;;
 13398                           
 13399                           	psect	text99
 13400  003D82                     __ptext99:
 13401                           	callstack 0
 13402  003D82                     _EUSART_Receive_ISR:
 13403                           	callstack 16
 13404  003D82                     
 13405                           ;mcc_generated_files/eusart.c: 228:     eusartRxStatusBuffer[eusartRxHead].status = 0;
 13406  003D82  0EC3               	movlw	low _eusartRxStatusBuffer
 13407  003D84  2457               	addwf	_eusartRxHead^0,w,c	;volatile
 13408  003D86  6ED9               	movwf	fsr2l,c
 13409  003D88  6ADA               	clrf	fsr2h,c
 13410  003D8A  0E00               	movlw	high _eusartRxStatusBuffer
 13411  003D8C  22DA               	addwfc	fsr2h,f,c
 13412  003D8E  0E00               	movlw	0
 13413  003D90  6EDF               	movwf	indf2,c
 13414  003D92                     
 13415                           ;mcc_generated_files/eusart.c: 230:     if(RCSTAbits.FERR){
 13416  003D92  A4AB               	btfss	171,2,c	;volatile
 13417  003D94  EFCE  F01E         	goto	i2u584_41
 13418  003D98  EFD0  F01E         	goto	i2u584_40
 13419  003D9C                     i2u584_41:
 13420  003D9C  EFE4  F01E         	goto	i2l5963
 13421  003DA0                     i2u584_40:
 13422  003DA0                     
 13423                           ;mcc_generated_files/eusart.c: 231:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
 13424  003DA0  0EC3               	movlw	low _eusartRxStatusBuffer
 13425  003DA2  2457               	addwf	_eusartRxHead^0,w,c	;volatile
 13426  003DA4  6ED9               	movwf	fsr2l,c
 13427  003DA6  6ADA               	clrf	fsr2h,c
 13428  003DA8  0E00               	movlw	high _eusartRxStatusBuffer
 13429  003DAA  22DA               	addwfc	fsr2h,f,c
 13430  003DAC  0100               	movlb	0	; () banked
 13431  003DAE  82DF               	bsf	indf2,1,c
 13432  003DB0                     
 13433                           ; BSR set to: 0
 13434                           ;mcc_generated_files/eusart.c: 232:         EUSART_FramingErrorHandler();
 13435  003DB0  D802               	call	i2u585_48
 13436  003DB2  EFE4  F01E         	goto	i2u585_49
 13437  003DB6                     i2u585_48:
 13438  003DB6  0005               	push	
 13439  003DB8  6EFA               	movwf	pclath,c
 13440  003DBA  51F8               	movf	_EUSART_FramingErrorHandler& (0+255),w,b
 13441  003DBC  6EFD               	movwf	tosl,c
 13442  003DBE  51F9               	movf	(_EUSART_FramingErrorHandler+1)& (0+255),w,b
 13443  003DC0  6EFE               	movwf	tosh,c
 13444  003DC2  6AFF               	clrf	tosu,c
 13445  003DC4  50FA               	movf	pclath,w,c
 13446  003DC6  0012               	return		;indir
 13447  003DC8                     i2u585_49:
 13448  003DC8                     i2l5963:
 13449                           
 13450                           ;mcc_generated_files/eusart.c: 235:     if(RCSTAbits.OERR){
 13451  003DC8  A2AB               	btfss	171,1,c	;volatile
 13452  003DCA  EFE9  F01E         	goto	i2u586_41
 13453  003DCE  EFEB  F01E         	goto	i2u586_40
 13454  003DD2                     i2u586_41:
 13455  003DD2  EF00  F01F         	goto	i2l5969
 13456  003DD6                     i2u586_40:
 13457  003DD6                     
 13458                           ;mcc_generated_files/eusart.c: 236:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
 13459  003DD6  0EC3               	movlw	low _eusartRxStatusBuffer
 13460  003DD8  2457               	addwf	_eusartRxHead^0,w,c	;volatile
 13461  003DDA  6ED9               	movwf	fsr2l,c
 13462  003DDC  6ADA               	clrf	fsr2h,c
 13463  003DDE  0E00               	movlw	high _eusartRxStatusBuffer
 13464  003DE0  22DA               	addwfc	fsr2h,f,c
 13465  003DE2  0100               	movlb	0	; () banked
 13466  003DE4  84DF               	bsf	indf2,2,c
 13467  003DE6                     
 13468                           ; BSR set to: 0
 13469                           ;mcc_generated_files/eusart.c: 237:         EUSART_OverrunErrorHandler();
 13470  003DE6  D802               	call	i2u587_48
 13471  003DE8  EF00  F01F         	goto	i2u587_49
 13472  003DEC                     i2u587_48:
 13473  003DEC  0005               	push	
 13474  003DEE  6EFA               	movwf	pclath,c
 13475  003DF0  0101               	movlb	1	; () banked
 13476  003DF2  5186               	movf	_EUSART_OverrunErrorHandler& (0+255),w,b
 13477  003DF4  6EFD               	movwf	tosl,c
 13478  003DF6  5187               	movf	(_EUSART_OverrunErrorHandler+1)& (0+255),w,b
 13479  003DF8  6EFE               	movwf	tosh,c
 13480  003DFA  6AFF               	clrf	tosu,c
 13481  003DFC  50FA               	movf	pclath,w,c
 13482  003DFE  0012               	return		;indir
 13483  003E00                     i2u587_49:
 13484  003E00                     i2l5969:
 13485                           
 13486                           ;mcc_generated_files/eusart.c: 240:     if(eusartRxStatusBuffer[eusartRxHead].status){
 13487  003E00  0EC3               	movlw	low _eusartRxStatusBuffer
 13488  003E02  2457               	addwf	_eusartRxHead^0,w,c	;volatile
 13489  003E04  6ED9               	movwf	fsr2l,c
 13490  003E06  6ADA               	clrf	fsr2h,c
 13491  003E08  0E00               	movlw	high _eusartRxStatusBuffer
 13492  003E0A  22DA               	addwfc	fsr2h,f,c
 13493  003E0C  50DF               	movf	indf2,w,c
 13494  003E0E  B4D8               	btfsc	status,2,c
 13495  003E10  EF0C  F01F         	goto	i2u588_41
 13496  003E14  EF0E  F01F         	goto	i2u588_40
 13497  003E18                     i2u588_41:
 13498  003E18  EF1D  F01F         	goto	i2l5973
 13499  003E1C                     i2u588_40:
 13500  003E1C                     
 13501                           ;mcc_generated_files/eusart.c: 241:         EUSART_ErrorHandler();
 13502  003E1C  D802               	call	i2u589_48
 13503  003E1E  EF1B  F01F         	goto	i2u589_49
 13504  003E22                     i2u589_48:
 13505  003E22  0005               	push	
 13506  003E24  6EFA               	movwf	pclath,c
 13507  003E26  0101               	movlb	1	; () banked
 13508  003E28  5184               	movf	_EUSART_ErrorHandler& (0+255),w,b
 13509  003E2A  6EFD               	movwf	tosl,c
 13510  003E2C  5185               	movf	(_EUSART_ErrorHandler+1)& (0+255),w,b
 13511  003E2E  6EFE               	movwf	tosh,c
 13512  003E30  6AFF               	clrf	tosu,c
 13513  003E32  50FA               	movf	pclath,w,c
 13514  003E34  0012               	return		;indir
 13515  003E36                     i2u589_49:
 13516                           
 13517                           ;mcc_generated_files/eusart.c: 242:     } else {
 13518  003E36  EF1F  F01F         	goto	i2l617
 13519  003E3A                     i2l5973:
 13520                           
 13521                           ;mcc_generated_files/eusart.c: 243:         EUSART_RxDataHandler();
 13522  003E3A  EC1E  F025         	call	_EUSART_RxDataHandler	;wreg free
 13523  003E3E                     i2l617:
 13524  003E3E  0012               	return		;funcret
 13525  003E40                     __end_of_EUSART_Receive_ISR:
 13526                           	callstack 0
 13527                           
 13528 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
 13529 ;; Defined at:
 13530 ;;		line 261 in file "mcc_generated_files/eusart.c"
 13531 ;; Parameters:    Size  Location     Type
 13532 ;;		None
 13533 ;; Auto vars:     Size  Location     Type
 13534 ;;		None
 13535 ;; Return value:  Size  Location     Type
 13536 ;;                  1    wreg      void 
 13537 ;; Registers used:
 13538 ;;		None
 13539 ;; Tracked objects:
 13540 ;;		On entry : 0/0
 13541 ;;		On exit  : 0/0
 13542 ;;		Unchanged: 0/0
 13543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13547 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13548 ;;Total ram usage:        0 bytes
 13549 ;; Hardware stack levels used: 1
 13550 ;; This function calls:
 13551 ;;		Nothing
 13552 ;; This function is called by:
 13553 ;;		_EUSART_Initialize
 13554 ;;		_EUSART_Receive_ISR
 13555 ;; This function uses a non-reentrant model
 13556 ;;
 13557                           
 13558                           	psect	text100
 13559  004CA8                     __ptext100:
 13560                           	callstack 0
 13561  004CA8                     _EUSART_DefaultOverrunErrorHandler:
 13562                           	callstack 17
 13563  004CA8                     
 13564                           ;mcc_generated_files/eusart.c: 264:     RCSTAbits.CREN = 0;
 13565  004CA8  98AB               	bcf	171,4,c	;volatile
 13566                           
 13567                           ;mcc_generated_files/eusart.c: 265:     RCSTAbits.CREN = 1;
 13568  004CAA  88AB               	bsf	171,4,c	;volatile
 13569  004CAC  0012               	return		;funcret
 13570  004CAE                     __end_of_EUSART_DefaultOverrunErrorHandler:
 13571                           	callstack 0
 13572                           
 13573 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
 13574 ;; Defined at:
 13575 ;;		line 259 in file "mcc_generated_files/eusart.c"
 13576 ;; Parameters:    Size  Location     Type
 13577 ;;		None
 13578 ;; Auto vars:     Size  Location     Type
 13579 ;;		None
 13580 ;; Return value:  Size  Location     Type
 13581 ;;                  1    wreg      void 
 13582 ;; Registers used:
 13583 ;;		None
 13584 ;; Tracked objects:
 13585 ;;		On entry : 0/0
 13586 ;;		On exit  : 0/0
 13587 ;;		Unchanged: 0/0
 13588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13592 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13593 ;;Total ram usage:        0 bytes
 13594 ;; Hardware stack levels used: 1
 13595 ;; This function calls:
 13596 ;;		Nothing
 13597 ;; This function is called by:
 13598 ;;		_EUSART_Initialize
 13599 ;;		_EUSART_Receive_ISR
 13600 ;; This function uses a non-reentrant model
 13601 ;;
 13602                           
 13603                           	psect	text101
 13604  004CE4                     __ptext101:
 13605                           	callstack 0
 13606  004CE4                     _EUSART_DefaultFramingErrorHandler:
 13607                           	callstack 17
 13608  004CE4  0012               	return		;funcret
 13609  004CE6                     __end_of_EUSART_DefaultFramingErrorHandler:
 13610                           	callstack 0
 13611                           
 13612 ;; *************** function _EUSART_DefaultErrorHandler *****************
 13613 ;; Defined at:
 13614 ;;		line 269 in file "mcc_generated_files/eusart.c"
 13615 ;; Parameters:    Size  Location     Type
 13616 ;;		None
 13617 ;; Auto vars:     Size  Location     Type
 13618 ;;		None
 13619 ;; Return value:  Size  Location     Type
 13620 ;;                  1    wreg      void 
 13621 ;; Registers used:
 13622 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13623 ;; Tracked objects:
 13624 ;;		On entry : 0/0
 13625 ;;		On exit  : 0/0
 13626 ;;		Unchanged: 0/0
 13627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13631 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13632 ;;Total ram usage:        0 bytes
 13633 ;; Hardware stack levels used: 1
 13634 ;; Hardware stack levels required when called: 1
 13635 ;; This function calls:
 13636 ;;		_EUSART_RxDataHandler
 13637 ;; This function is called by:
 13638 ;;		_EUSART_Initialize
 13639 ;;		_EUSART_Receive_ISR
 13640 ;; This function uses a non-reentrant model
 13641 ;;
 13642                           
 13643                           	psect	text102
 13644  004CAE                     __ptext102:
 13645                           	callstack 0
 13646  004CAE                     _EUSART_DefaultErrorHandler:
 13647                           	callstack 16
 13648  004CAE                     
 13649                           ;mcc_generated_files/eusart.c: 270:     EUSART_RxDataHandler();
 13650  004CAE  EC1E  F025         	call	_EUSART_RxDataHandler	;wreg free
 13651  004CB2  0012               	return		;funcret
 13652  004CB4                     __end_of_EUSART_DefaultErrorHandler:
 13653                           	callstack 0
 13654                           
 13655 ;; *************** function _EUSART_RxDataHandler *****************
 13656 ;; Defined at:
 13657 ;;		line 249 in file "mcc_generated_files/eusart.c"
 13658 ;; Parameters:    Size  Location     Type
 13659 ;;		None
 13660 ;; Auto vars:     Size  Location     Type
 13661 ;;		None
 13662 ;; Return value:  Size  Location     Type
 13663 ;;                  1    wreg      void 
 13664 ;; Registers used:
 13665 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13666 ;; Tracked objects:
 13667 ;;		On entry : 0/0
 13668 ;;		On exit  : 0/0
 13669 ;;		Unchanged: 0/0
 13670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13674 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13675 ;;Total ram usage:        0 bytes
 13676 ;; Hardware stack levels used: 1
 13677 ;; This function calls:
 13678 ;;		Nothing
 13679 ;; This function is called by:
 13680 ;;		_EUSART_Receive_ISR
 13681 ;;		_EUSART_DefaultErrorHandler
 13682 ;; This function uses a non-reentrant model
 13683 ;;
 13684                           
 13685                           	psect	text103
 13686  004A3C                     __ptext103:
 13687                           	callstack 0
 13688  004A3C                     _EUSART_RxDataHandler:
 13689                           	callstack 17
 13690  004A3C                     
 13691                           ;mcc_generated_files/eusart.c: 251:     eusartRxBuffer[eusartRxHead++] = RCREG;
 13692  004A3C  0ECB               	movlw	low _eusartRxBuffer
 13693  004A3E  2457               	addwf	_eusartRxHead^0,w,c	;volatile
 13694  004A40  6ED9               	movwf	fsr2l,c
 13695  004A42  6ADA               	clrf	fsr2h,c
 13696  004A44  0E00               	movlw	high _eusartRxBuffer
 13697  004A46  22DA               	addwfc	fsr2h,f,c
 13698  004A48  CFAE FFDF          	movff	4014,indf2	;volatile
 13699  004A4C  2A57               	incf	_eusartRxHead^0,f,c	;volatile
 13700  004A4E                     
 13701                           ;mcc_generated_files/eusart.c: 252:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
 13702  004A4E  0E07               	movlw	7
 13703  004A50  6457               	cpfsgt	_eusartRxHead^0,c	;volatile
 13704  004A52  EF2D  F025         	goto	i2u545_41
 13705  004A56  EF2F  F025         	goto	i2u545_40
 13706  004A5A                     i2u545_41:
 13707  004A5A  EF31  F025         	goto	i2l5639
 13708  004A5E                     i2u545_40:
 13709  004A5E                     
 13710                           ;mcc_generated_files/eusart.c: 253:     {;mcc_generated_files/eusart.c: 254:         eus
      +                          artRxHead = 0;
 13711  004A5E  0E00               	movlw	0
 13712  004A60  6E57               	movwf	_eusartRxHead^0,c	;volatile
 13713  004A62                     i2l5639:
 13714                           
 13715                           ;mcc_generated_files/eusart.c: 256:     eusartRxCount++;
 13716  004A62  0100               	movlb	0	; () banked
 13717  004A64  2BF7               	incf	_eusartRxCount& (0+255),f,b	;volatile
 13718  004A66                     
 13719                           ; BSR set to: 0
 13720  004A66  0012               	return		;funcret
 13721  004A68                     __end_of_EUSART_RxDataHandler:
 13722                           	callstack 0
 13723                           
 13724                           	psect	text104
 13725  000000                     __ptext104:
 13726                           	callstack 0
 13727  000000                     
 13728                           	psect	rparam
 13729  0000                     
 13730                           	psect	temp
 13731  00005A                     btemp:
 13732                           	callstack 0
 13733  00005A                     	ds	1
 13734  0000                     int$flags	set	btemp
 13735  0000                     wtemp8	set	btemp+1
 13736  0000                     ttemp5	set	btemp+1
 13737  0000                     ttemp6	set	btemp+4
 13738  0000                     ttemp7	set	btemp+8
 13739                           
 13740                           	psect	idloc
 13741                           
 13742                           ;Config register IDLOC0 @ 0x200000
 13743                           ;	unspecified, using default values
 13744  200000                     	org	2097152
 13745  200000  FF                 	db	255
 13746                           
 13747                           ;Config register IDLOC1 @ 0x200001
 13748                           ;	unspecified, using default values
 13749  200001                     	org	2097153
 13750  200001  FF                 	db	255
 13751                           
 13752                           ;Config register IDLOC2 @ 0x200002
 13753                           ;	unspecified, using default values
 13754  200002                     	org	2097154
 13755  200002  FF                 	db	255
 13756                           
 13757                           ;Config register IDLOC3 @ 0x200003
 13758                           ;	unspecified, using default values
 13759  200003                     	org	2097155
 13760  200003  FF                 	db	255
 13761                           
 13762                           ;Config register IDLOC4 @ 0x200004
 13763                           ;	unspecified, using default values
 13764  200004                     	org	2097156
 13765  200004  FF                 	db	255
 13766                           
 13767                           ;Config register IDLOC5 @ 0x200005
 13768                           ;	unspecified, using default values
 13769  200005                     	org	2097157
 13770  200005  FF                 	db	255
 13771                           
 13772                           ;Config register IDLOC6 @ 0x200006
 13773                           ;	unspecified, using default values
 13774  200006                     	org	2097158
 13775  200006  FF                 	db	255
 13776                           
 13777                           ;Config register IDLOC7 @ 0x200007
 13778                           ;	unspecified, using default values
 13779  200007                     	org	2097159
 13780  200007  FF                 	db	255
 13781                           
 13782                           	psect	config
 13783                           
 13784                           ; Padding undefined space
 13785  300000                     	org	3145728
 13786  300000  FF                 	db	255
 13787                           
 13788                           ;Config register CONFIG1H @ 0x300001
 13789                           ;	Oscillator Selection bits
 13790                           ;	FOSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
 13791                           ;	Fail-Safe Clock Monitor Enable bit
 13792                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 13793                           ;	Internal/External Oscillator Switchover bit
 13794                           ;	IESO = OFF, Oscillator Switchover mode disabled
 13795  300001                     	org	3145729
 13796  300001  08                 	db	8
 13797                           
 13798                           ;Config register CONFIG2L @ 0x300002
 13799                           ;	Power-up Timer Enable bit
 13800                           ;	PWRT = OFF, PWRT disabled
 13801                           ;	Brown-out Reset Enable bits
 13802                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 13803                           ;	Brown Out Reset Voltage bits
 13804                           ;	BORV = 18, VBOR set to 1.8 V nominal
 13805  300002                     	org	3145730
 13806  300002  1F                 	db	31
 13807                           
 13808                           ;Config register CONFIG2H @ 0x300003
 13809                           ;	Watchdog Timer Enable bit
 13810                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
 13811                           ;	Watchdog Timer Postscale Select bits
 13812                           ;	WDTPS = 32768, 1:32768
 13813  300003                     	org	3145731
 13814  300003  1E                 	db	30
 13815                           
 13816                           ; Padding undefined space
 13817  300004                     	org	3145732
 13818  300004  FF                 	db	255
 13819                           
 13820                           ;Config register CONFIG3H @ 0x300005
 13821                           ;	CCP2 MUX bit
 13822                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
 13823                           ;	PORTB A/D Enable bit
 13824                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
 13825                           ;	Low-Power Timer1 Oscillator Enable bit
 13826                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 13827                           ;	HFINTOSC Fast Start-up
 13828                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
 13829                           ;	MCLR Pin Enable bit
 13830                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR disabled
 13831  300005                     	org	3145733
 13832  300005  0B                 	db	11
 13833                           
 13834                           ;Config register CONFIG4L @ 0x300006
 13835                           ;	Stack Full/Underflow Reset Enable bit
 13836                           ;	STVREN = ON, Stack full/underflow will cause Reset
 13837                           ;	Single-Supply ICSP Enable bit
 13838                           ;	LVP = OFF, Single-Supply ICSP disabled
 13839                           ;	Extended Instruction Set Enable bit
 13840                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 13841                           ;	Background Debugger Enable bit
 13842                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
 13843  300006                     	org	3145734
 13844  300006  81                 	db	129
 13845                           
 13846                           ; Padding undefined space
 13847  300007                     	org	3145735
 13848  300007  FF                 	db	255
 13849                           
 13850                           ;Config register CONFIG5L @ 0x300008
 13851                           ;	Code Protection Block 0
 13852                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
 13853                           ;	Code Protection Block 1
 13854                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
 13855                           ;	Code Protection Block 2
 13856                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
 13857                           ;	Code Protection Block 3
 13858                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
 13859  300008                     	org	3145736
 13860  300008  0F                 	db	15
 13861                           
 13862                           ;Config register CONFIG5H @ 0x300009
 13863                           ;	Boot Block Code Protection bit
 13864                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 13865                           ;	Data EEPROM Code Protection bit
 13866                           ;	CPD = OFF, Data EEPROM not code-protected
 13867  300009                     	org	3145737
 13868  300009  C0                 	db	192
 13869                           
 13870                           ;Config register CONFIG6L @ 0x30000A
 13871                           ;	Write Protection Block 0
 13872                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 13873                           ;	Write Protection Block 1
 13874                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 13875                           ;	Write Protection Block 2
 13876                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 13877                           ;	Write Protection Block 3
 13878                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
 13879  30000A                     	org	3145738
 13880  30000A  0F                 	db	15
 13881                           
 13882                           ;Config register CONFIG6H @ 0x30000B
 13883                           ;	Configuration Register Write Protection bit
 13884                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 13885                           ;	Boot Block Write Protection bit
 13886                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 13887                           ;	Data EEPROM Write Protection bit
 13888                           ;	WRTD = OFF, Data EEPROM not write-protected
 13889  30000B                     	org	3145739
 13890  30000B  E0                 	db	224
 13891                           
 13892                           ;Config register CONFIG7L @ 0x30000C
 13893                           ;	Table Read Protection Block 0
 13894                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 13895                           ;	Table Read Protection Block 1
 13896                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 13897                           ;	Table Read Protection Block 2
 13898                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 13899                           ;	Table Read Protection Block 3
 13900                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 13901  30000C                     	org	3145740
 13902  30000C  0F                 	db	15
 13903                           
 13904                           ;Config register CONFIG7H @ 0x30000D
 13905                           ;	Boot Block Table Read Protection bit
 13906                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 13907  30000D                     	org	3145741
 13908  30000D  40                 	db	64
 13909                           tosu	equ	0xFFF
 13910                           tosh	equ	0xFFE
 13911                           tosl	equ	0xFFD
 13912                           stkptr	equ	0xFFC
 13913                           pclatu	equ	0xFFB
 13914                           pclath	equ	0xFFA
 13915                           pcl	equ	0xFF9
 13916                           tblptru	equ	0xFF8
 13917                           tblptrh	equ	0xFF7
 13918                           tblptrl	equ	0xFF6
 13919                           tablat	equ	0xFF5
 13920                           prodh	equ	0xFF4
 13921                           prodl	equ	0xFF3
 13922                           indf0	equ	0xFEF
 13923                           postinc0	equ	0xFEE
 13924                           postdec0	equ	0xFED
 13925                           preinc0	equ	0xFEC
 13926                           plusw0	equ	0xFEB
 13927                           fsr0h	equ	0xFEA
 13928                           fsr0l	equ	0xFE9
 13929                           wreg	equ	0xFE8
 13930                           indf1	equ	0xFE7
 13931                           postinc1	equ	0xFE6
 13932                           postdec1	equ	0xFE5
 13933                           preinc1	equ	0xFE4
 13934                           plusw1	equ	0xFE3
 13935                           fsr1h	equ	0xFE2
 13936                           fsr1l	equ	0xFE1
 13937                           bsr	equ	0xFE0
 13938                           indf2	equ	0xFDF
 13939                           postinc2	equ	0xFDE
 13940                           postdec2	equ	0xFDD
 13941                           preinc2	equ	0xFDC
 13942                           plusw2	equ	0xFDB
 13943                           fsr2h	equ	0xFDA
 13944                           fsr2l	equ	0xFD9
 13945                           status	equ	0xFD8

Data Sizes:
    Strings     71
    Constant    32
    Data        0
    BSS         183
    Persistent  11
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     85      89
    BANK0           160     99     159
    BANK1           256      6     136
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    I2C_Read1ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Read2ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Write1ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Write2ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    I2C_DO_TX$2532$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_RX$2538$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_TX_EMPTY$2544$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_RX_EMPTY$2550$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_TX_EMPTY$2549	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_TX_EMPTY$2544	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_DO_RX$2543	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_RX$2538	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_DO_TX$2537	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_TX$2532	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_MasterFsm$2531	const PTR FTN()enum E3103 size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    I2C_CallbackReturnStop@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_CallbackReturnReset@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    Absolute function$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S248$0$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_13(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_13(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1985_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 29
		 -> STR_2(CODE[29]), STR_1(CODE[23]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 29
		 -> STR_2(CODE[29]), STR_1(CODE[23]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 29
		 -> STR_2(CODE[29]), STR_1(CODE[23]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 29
		 -> STR_2(CODE[29]), STR_1(CODE[23]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), Absolute function(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), Absolute function(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), Absolute function(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), Absolute function(), 

    I2C_SetCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_SetCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_SetAddressNackCallback@ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), 

    I2C_SetDataCompleteCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_SetBuffer@buffer	PTR void  size(2) Largest target is 10
		 -> readBuffer(BANK1[10]), SHT40_Read@regist(COMRAM[1]), I2C_ReadDataBlock@reg(COMRAM[1]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), 
		 -> I2C_Write2ByteRegister@reg(COMRAM[1]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@reg(COMRAM[1]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Read2ByteRegister@reg(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMRAM[1]), 
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S248$data_ptr	PTR unsigned char  size(2) Largest target is 10
		 -> readBuffer(BANK1[10]), SHT40_Read@regist(COMRAM[1]), I2C_ReadDataBlock@reg(COMRAM[1]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), 
		 -> I2C_Write2ByteRegister@reg(COMRAM[1]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@reg(COMRAM[1]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Read2ByteRegister@reg(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMRAM[1]), 
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_Status.data_ptr	PTR unsigned char  size(2) Largest target is 10
		 -> readBuffer(BANK1[10]), SHT40_Read@regist(COMRAM[1]), I2C_ReadDataBlock@reg(COMRAM[1]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), 
		 -> I2C_Write2ByteRegister@reg(COMRAM[1]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@reg(COMRAM[1]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Read2ByteRegister@reg(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMRAM[1]), 
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S248$callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_Status.callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S248$callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_Status.callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    fsmStateTable	const PTR FTN()enum E3103[16] size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    rdBlkRegCompleteHandler@ptr.data	PTR unsigned char  size(2) Largest target is 0

    rdBlkRegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    wr2RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    wr1RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    rd2RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    rd1RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S96$data	PTR unsigned char  size(2) Largest target is 0

    bufferBlock.data	PTR unsigned char  size(2) Largest target is 0

    I2C_ReadNBytes@data	PTR unsigned char  size(2) Largest target is 10
		 -> readBuffer(BANK1[10]), 

    I2C_WriteNBytes@data	PTR unsigned char  size(2) Largest target is 1
		 -> SHT40_Read@regist(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _vfpfcnvrt->_efgtoa
    _efgtoa->___flsub
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    _floorf->___fldiv
    ___flsub->___fladd
    _atoi->_isspace
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler
    _SHT40_temp_GetValue->___fladd
    _SHT40_humy_GetValue->___fladd
    ___flge->___flmul
    ___fldiv->___flmul
    ___fladd->___fldiv
    _SHT40_Read->_I2C_ReadNBytes
    _SHT40_Read->_I2C_WriteNBytes
    _I2C_SetAddressNackCallback->_I2C_SetCallback
    _I2C_MasterWrite->_I2C_MasterOperation
    _I2C_MasterRead->_I2C_MasterOperation
    _I2C_Poller->_I2C_MasterFsm
    _I2C_MasterFsm->_I2C_DO_ADDRESS_NACK
    _I2C_MasterFsm->_I2C_DO_RX
    _I2C_MasterFsm->_I2C_DO_TX
    _I2C_MasterFsm->_I2C_DO_TX_EMPTY
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnReset
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnStop
    _I2C_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C_DO_TX->_I2C_CallbackReturnReset
    _I2C_DO_TX->_I2C_CallbackReturnStop
    _I2C_DO_TX->_rd1RegCompleteHandler
    _I2C_DO_TX->_rd2RegCompleteHandler
    _I2C_DO_TX->_rdBlkRegCompleteHandler
    _I2C_DO_TX->_wr1RegCompleteHandler
    _I2C_DO_TX->_wr2RegCompleteHandler
    _I2C_DO_SEND_ADR_WRITE->_I2C_MasterSendTxData
    _I2C_DO_RX->_I2C_CallbackReturnReset
    _I2C_DO_RX->_I2C_CallbackReturnStop
    _I2C_DO_RX->_rd1RegCompleteHandler
    _I2C_DO_RX->_rd2RegCompleteHandler
    _I2C_DO_RX->_rdBlkRegCompleteHandler
    _I2C_DO_RX->_wr1RegCompleteHandler
    _I2C_DO_RX->_wr2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnReset
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnStop
    _I2C_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _wr2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _I2C_SetDataCompleteCallback->_I2C_SetCallback

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_printf

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  419242
                                             97 BANK0      2     2      0
                _SHT40_humy_GetValue
                _SHT40_temp_GetValue
                  _SYSTEM_Initialize
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              10     4      6   33804
                                             95 BANK0      2     2      0
                                              0 BANK1      6     0      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   33519
                                             87 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           50    44      6   32935
                                             61 BANK0     26    20      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     453
                                              4 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              68    61      7   24757
                                             78 COMRAM     7     0      7
                                              0 BANK0     61    61      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2     944
                                             10 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     465
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4     856
                                              4 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3165
                                             22 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                             15 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     834
                                              6 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      66
                                              5 COMRAM     1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (6) _EUSART_Write                                         1     1      0      44
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             54 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              4 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     381
                                              4 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    3193
                                             70 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              4 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                              4 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    3004
                                             11 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              4 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     313
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    2011
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     490
                  _EUSART_Initialize
                     _I2C_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     490
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SHT40_temp_GetValue                                 12     8      4  191980
                                             70 COMRAM    12     8      4
                         _SHT40_Read
                            ___fladd
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _SHT40_humy_GetValue                                 12     8      4  192968
                                             70 COMRAM    12     8      4
                         _SHT40_Read
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              4 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2960
                                              4 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     942
                                             29 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2311
                                             29 COMRAM    25    17      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2718
                                             54 COMRAM    16     8      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _SHT40_Read                                           2     2      0  183448
                                             26 COMRAM     2     2      0
                     _I2C_ReadNBytes
                    _I2C_WriteNBytes
 ---------------------------------------------------------------------------------
 (3) _I2C_WriteNBytes                                      5     1      4   92646
                                             21 COMRAM     5     1      4
                          _I2C_Close
                    _I2C_MasterWrite
                           _I2C_Open
         _I2C_SetAddressNackCallback
                      _I2C_SetBuffer
 ---------------------------------------------------------------------------------
 (4) _I2C_SetAddressNackCallback                           4     0      4    1870
                                              9 COMRAM     4     0      4
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterWrite                                      0     0      0   88620
                _I2C_MasterOperation
 ---------------------------------------------------------------------------------
 (3) _I2C_ReadNBytes                                       5     1      4   90776
                                             21 COMRAM     5     1      4
                          _I2C_Close
                     _I2C_MasterRead
                           _I2C_Open
                      _I2C_SetBuffer
 ---------------------------------------------------------------------------------
 (4) _I2C_Open                                             2     2      0      46
                                              4 COMRAM     2     2      0
                 _I2C_MasterClearIrq
                     _I2C_MasterOpen
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterOpen                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterRead                                       0     0      0   88620
                _I2C_MasterOperation
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterOperation                                  2     2      0   88620
                                             19 COMRAM     2     2      0
                    _I2C_MasterStart
                         _I2C_Poller
 ---------------------------------------------------------------------------------
 (6) _I2C_Poller                                           0     0      0   88574
                      _I2C_MasterFsm
             _I2C_MasterWaitForEvent
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterWaitForEvent                               0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterFsm                                        2     2      0   88574
                                             17 COMRAM     2     2      0
                _I2C_DO_ADDRESS_NACK *
                        _I2C_DO_IDLE *
                        _I2C_DO_RCEN *
                       _I2C_DO_RESET *
                          _I2C_DO_RX *
                      _I2C_DO_RX_ACK *
             _I2C_DO_RX_NACK_RESTART *
                _I2C_DO_RX_NACK_STOP *
               _I2C_DO_SEND_ADR_READ *
              _I2C_DO_SEND_ADR_WRITE *
                _I2C_DO_SEND_RESTART *
           _I2C_DO_SEND_RESTART_READ *
          _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_DO_SEND_STOP *
                          _I2C_DO_TX *
                    _I2C_DO_TX_EMPTY *
                 _I2C_MasterClearIrq
                   _I2C_MasterIsNack
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_TX_EMPTY                                      2     2      0   22127
                                             15 COMRAM     2     2      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
                   _I2C_MasterSetIrq
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterSetIrq                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_TX                                            2     2      0   22149
                                             15 COMRAM     2     2      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
           _I2C_DO_SEND_RESTART_READ
          _I2C_DO_SEND_RESTART_WRITE
                   _I2C_DO_SEND_STOP
                   _I2C_MasterIsNack
               _I2C_MasterSendTxData
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterIsNack                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_SEND_RESTART_WRITE                            0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_SEND_RESTART_READ                             0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_ADR_WRITE                                0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_ADR_READ                                 0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterSendTxData                                 1     1      0      22
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_RX_ACK                                        0     0      0       0
                  _I2C_MasterSendAck
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_RX                                            2     2      0   22127
                                             15 COMRAM     2     2      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
             _I2C_DO_RX_NACK_RESTART
                _I2C_DO_RX_NACK_STOP
                _I2C_MasterGetRxData
                  _I2C_MasterSendAck
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterSendAck                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterGetRxData                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_RX_NACK_STOP                                  0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_RX_NACK_RESTART                               0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterSendNack                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_RESET                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_RCEN                                          0     0      0       0
                  _I2C_MasterStartRx
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterStartRx                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_ADDRESS_NACK                                  2     2      0   22127
                                             15 COMRAM     2     2      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (9) _wr2RegCompleteHandler                                2     0      2    4368
                                             13 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _wr1RegCompleteHandler                                2     0      2    4368
                                             13 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _rdBlkRegCompleteHandler                              2     0      2    4390
                                             13 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _rd2RegCompleteHandler                                2     0      2    4368
                                             13 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _rd1RegCompleteHandler                                2     0      2    4368
                                             13 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _I2C_SetDataCompleteCallback                         4     0      4    2478
                                              9 COMRAM     4     0      4
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (5) _I2C_SetCallback                                      5     1      4     914
                                              4 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (4) _I2C_SetBuffer                                        4     0      4    1868
                                              4 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_SEND_STOP                                     0     0      0       0
                     _I2C_MasterStop
 ---------------------------------------------------------------------------------
 (10) _I2C_MasterStop                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_SEND_RESTART                                  0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (10) _I2C_MasterEnableRestart                             0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_CallbackReturnStop                               2     0      2       0
                                             13 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (9) _I2C_CallbackReturnReset                              2     0      2     265
                                             13 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterStart                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_Close                                            1     1      0      24
                                              4 COMRAM     1     1      0
                 _I2C_MasterClearIrq
                    _I2C_MasterClose
               _I2C_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterDisableIrq                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterClose                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterClearIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INTERRUPT_InterruptManager                          4     4      0       0
                                              0 COMRAM     4     4      0
                   Absolute function *
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _EUSART_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART_Receive_ISR                                  0     0      0       0
                   Absolute function *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (14) _EUSART_DefaultOverrunErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART_DefaultFramingErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART_DefaultErrorHandler                          0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (14) _EUSART_RxDataHandler                                0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SHT40_humy_GetValue
     _SHT40_Read
       _I2C_ReadNBytes
         _I2C_Close
           _I2C_MasterClearIrq
           _I2C_MasterClose
           _I2C_MasterDisableIrq
         _I2C_MasterRead
           _I2C_MasterOperation
             _I2C_MasterStart
             _I2C_Poller
               _I2C_MasterFsm
                 _I2C_DO_ADDRESS_NACK *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_SEND_RESTART *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_STOP *
                     _I2C_MasterStop
                   _rd1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                   _rdBlkRegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                   _wr1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                   _wr2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                 _I2C_DO_IDLE *
                 _I2C_DO_RCEN *
                   _I2C_MasterStartRx
                 _I2C_DO_RESET *
                 _I2C_DO_RX *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_RX_NACK_RESTART *
                     _I2C_MasterSendNack
                   _I2C_DO_RX_NACK_STOP *
                     _I2C_MasterSendNack
                   _I2C_MasterGetRxData *
                   _I2C_MasterSendAck *
                   _rd1RegCompleteHandler *
                   _rd2RegCompleteHandler *
                   _rdBlkRegCompleteHandler *
                   _wr1RegCompleteHandler *
                   _wr2RegCompleteHandler *
                 _I2C_DO_RX_ACK *
                   _I2C_MasterSendAck
                 _I2C_DO_RX_NACK_RESTART *
                 _I2C_DO_RX_NACK_STOP *
                 _I2C_DO_SEND_ADR_READ *
                   _I2C_MasterSendTxData
                 _I2C_DO_SEND_ADR_WRITE *
                   _I2C_MasterSendTxData
                 _I2C_DO_SEND_RESTART *
                 _I2C_DO_SEND_RESTART_READ *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_STOP *
                 _I2C_DO_TX *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_SEND_RESTART_READ *
                   _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_DO_SEND_STOP *
                   _I2C_MasterIsNack *
                   _I2C_MasterSendTxData *
                   _rd1RegCompleteHandler *
                   _rd2RegCompleteHandler *
                   _rdBlkRegCompleteHandler *
                   _wr1RegCompleteHandler *
                   _wr2RegCompleteHandler *
                 _I2C_DO_TX_EMPTY *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_SEND_RESTART *
                   _I2C_DO_SEND_STOP *
                   _I2C_MasterSetIrq *
                   _rd1RegCompleteHandler *
                   _rd2RegCompleteHandler *
                   _rdBlkRegCompleteHandler *
                   _wr1RegCompleteHandler *
                   _wr2RegCompleteHandler *
                 _I2C_MasterClearIrq *
                 _I2C_MasterIsNack *
               _I2C_MasterWaitForEvent
         _I2C_Open
           _I2C_MasterClearIrq
           _I2C_MasterOpen
         _I2C_SetBuffer
       _I2C_WriteNBytes
         _I2C_Close
         _I2C_MasterWrite
           _I2C_MasterOperation
         _I2C_Open
         _I2C_SetAddressNackCallback
           _I2C_SetCallback
         _I2C_SetBuffer
     ___fladd
       ___fldiv (ARG)
         ___flmul (ARG)
       ___flmul (ARG)
     ___fldiv
     ___flge
       ___flmul (ARG)
     ___flmul
     ___xxtofl
   _SHT40_temp_GetValue
     _SHT40_Read
     ___fladd
     ___fldiv
     ___flmul
     ___xxtofl
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _I2C_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
             _fputc
               _putch
                 _EUSART_Write
             _fputs
               _fputc
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
         _isdigit
         _isupper
         _strncmp
         _tolower

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART_Receive_ISR *
     Absolute function(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      6      88       7       53.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     63      9F       5       99.4%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     55      59       1       94.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     180      32        0.0%
DATA                 0      0     180       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Dec 15 21:01:19 2021

                ?_EUSART_SetRxInterruptHandler 0005                         ??_I2C_DO_SEND_ADR_READ 0005  
                  __size_of_I2C_MasterSendNack 0006                             __size_of_I2C_Close 002C  
                                 ___fldiv@aexp 0036                                   ___fldiv@bexp 0035  
                        ??_SHT40_temp_GetValue 004B                                   ___fldiv@sign 002E  
                      ??_I2C_DO_SEND_ADR_WRITE 0006                                    _SSPSTATbits 000FC7  
                                           l90 49E2                                             l93 49B6  
                                           l69 45CC                                             l78 4702  
                                           l96 498A                                             l99 4A0E  
                                 ___awdiv@sign 000A                            ___wmul@multiplicand 0007  
              SHT40_humy_GetValue@pressDataAnz 004F                            __size_of_I2C_Poller 001E  
                        ??_I2C_DO_SEND_RESTART 0005                   __size_of_I2C_MasterOperation 0044  
                                          l102 4850                                            l213 420E  
                                          l223 47CE                                            l312 428A  
                                          l217 4A3A                  __size_of_I2C_MasterSendTxData 0008  
                                          l209 4B9C                                            l402 4CCE  
                                          l306 4BF8                                            l330 4C92  
                                          l226 4C5A                                            l411 4CA6  
                                          l236 4B02                                            l405 4BB0  
                                          l333 4C8A                                            l229 4C52  
                                          l245 4B5A                                            l342 4C72  
                                          l262 4B42                                            l239 4B72  
                                          l351 4BEC                                            l256 4304  
                                          l408 4CA0                                            l432 4CBA  
                                          l272 4BE0                                            l336 4C82  
                                          l281 3D80                                            l345 4C6A  
                                          l426 4CDA                                            l266 43EA  
                                          l275 4BD0                                            l339 4C7A  
                                          l435 4BB2                                            l348 4C62  
                                          l604 4C0E                                            l429 4CE2  
                                          l381 4CDE                                            l365 4CCA  
                                          l269 4C04                                            l357 4450  
                                          l390 4CD2                                            l278 3D48  
                                          l294 407C                                            l295 40EA  
                                          l439 4BC0                                            l368 4CC6  
                                          l384 4CBE                                            l456 4B88  
                                          l713 478A                                            l721 3686  
                                          l633 4C40                                            l378 4B24  
                                          l642 4C22                                            l570 437A  
                                          l387 4C9A                                            l459 4C18  
                                          l396 4CC2                                            l716 3B32  
                                          l636 4C36                                            l660 4CB6  
                                          l492 495E                                            l724 4ADE  
                                          l645 4C2C                                            l399 4CD6  
                                          l639 4C4A                                            l594 45E2  
                                          l595 45F8                                            l598 4624  
                                          l955 3CBC                                            l983 4044  
                                          l968 3EEE                                            l994 3890  
                                          l989 384A                                            l998 48C0  
                       ??_EUSART_RxDataHandler 0001                                            _pad 3B34  
                       fp__I2C_DO_RX_NACK_STOP 0000                         _I2C_MasterWaitForEvent 4BB2  
               ?_EUSART_SetFramingErrorHandler 0005                                   ___awmod@sign 000A  
                                          prod 000FF3                                            tosl 000FFD  
                                          wreg 000FE8                                   ___flmul@aexp 0016  
                                 ___flmul@bexp 0017                   ??_I2C_SetAddressNackCallback 000E  
                                 ___flmul@sign 0011                                   ___flmul@temp 001C  
                                 ___flmul@prod 0018                       ??_I2C_CallbackReturnStop 0010  
                                 _I2C_DO_RESET 4BE2                                   ___fltol@exp1 000E  
                                         l1021 378C                        ??_rd2RegCompleteHandler 0010  
                                         l1311 2E22                                           l1320 2F0A  
                                         l1306 2FFE                                           l1402 4AB8  
                                         l1252 256A                                           l1308 2E5E  
                                         l1261 283A                                           l1253 2558  
                                         l1317 2EA4                                           l1254 251E  
                                         l1342 2C64                                           l1319 2F1C  
                                         l1512 18C4                                           l1345 2AF6  
                                         l1338 2900                                           l4011 42D4  
                                         l1355 2C26                                           l1347 2B6E  
                                         l1443 3B7A                                           l1348 2B5C  
                                         l1604 398E                                           l4021 4B00  
                                         l4013 4B5C                                           l4101 4C60  
                                         l1269 2684                                           l1701 492E  
                                         l1278 2754                                           l1382 33C4  
                                         l1294 46BC                                           l1446 3BBC  
                                         l4023 4CD0                                           l4015 4AE0  
                                         l4007 428E                                           l4031 49CC  
                                         l4111 4CC0                                           l1279 2742  
                                         l1448 3BF8                                           l1720 4514  
                                         l4025 4CCC                                           l4017 4AF0  
                                         l4009 42A0                                           l4033 49E0  
                                         l4041 49B4                                           l4121 4CC8  
                                         l4113 4C7C                                           l4105 4C64  
                                         l1393 335C                                           l1633 3556  
                                         l1705 3A6A                                           l1386 3300  
                                         l1642 3210                                           l1466 1D0E  
                                         l4019 4AF8                                           l4027 4CA2  
                                         l4211 405A                                           l4115 4C80  
                                         l4107 4C68                                           l1379 3268  
                                         l5003 488A                                           l5011 3688  
                                         l4131 45D0                                           l1715 450C  
                                         l1555 1E06                                           l1652 48F8  
                                         l1660 4676                                           l1636 355E  
                                         l1484 1484                                           l1580 237A  
                                         l4053 49E4                                           l4029 49B8  
                                         l4037 498C                                           l4045 4960  
                                         l4061 4812                                           l4125 4CC4  
                                         l4221 4082                                           l4213 4072  
                                         l4301 4408                                           l5005 48A0  
                                         l5021 36DE                                           l5013 369E  
                                         l1645 3154                                           l4141 461C  
                                         l4133 45F0                                           l5101 4526  
                                         l4055 49F8                                           l4039 49A0  
                                         l4047 4974                                           l4063 483A  
                                         l4119 4CB8                                           l4151 4BFE  
                                         l4231 4092                                           l4215 4076  
                                         l4207 4046                                           l5007 48B0  
                                         l5023 36EE                                           l4143 4620  
                                         l4135 45FA                                           l5103 44B6  
                                         l4057 4A0C                                           l4049 4988  
                                         l4065 484E                                           l4073 4C96  
                                         l4153 4C02                                           l4161 4BDE  
                                         l4225 408A                                           l4209 4054  
                                         l4241 4BF2                                           l4081 4C84  
                                         l4321 43AA                                           l4313 437C  
                                         l5201 420C                                           l4401 248C  
                                         l6001 3666                                           l5033 3718  
                                         l5025 36F2                                           l5017 36B2  
                                         l5121 3098                                           l5113 3000  
                                         l4137 460A                                           l4145 4622  
                                         l4129 45D0                                           l1681 4180  
                                         l1593 44AC                                           l1666 4888  
                                         l1594 44B4                                           l4147 4CE0  
                                         l5211 4A10                                           l4243 4BF6  
                                         l4075 4C8C                                           l4083 4C88  
                                         l4315 4380                                           l4411 24A0  
                                         l4403 2490                                           l6003 3676  
                                         l5051 377C                                           l5043 3740  
                                         l5035 3722                                           l5027 3700  
                                         l5019 36DC                                           l5131 31B4  
                                         l5115 3020                                           l4139 460C  
                                         l4331 4138                                           l4323 40EC  
                                         l5107 44EC                                           l1587 2294  
                                         l5221 4A38                                           l5213 4A14  
                                         l4093 4CBC                                           l4069 4B9E  
                                         l4253 4220                                           l4149 4BFA  
                                         l4157 4BD2                                           l4165 4BC2  
                                         l4181 3CDE                                           l4173 3CBE  
                                         l4077 4C90                                           l4317 4390  
                                         l4341 4B2A                                           l5205 4B44  
                                         l4501 26F2                                           l4421 24B4  
                                         l4413 24A4                                           l4405 2494  
                                         l5141 48C2                                           l5045 374C  
                                         l5037 372C                                           l5133 31C8  
                                         l5125 3108                                           l5117 3076  
                                         l4309 4C08                                           l4333 416E  
                                         l4325 40FE                                           l5061 3B66  
                                         l5109 44FE                                           l5215 4A24  
                                         l4255 4224                                           l4247 4210  
                                         l4159 4BD6                                           l4167 4BC6  
                                         l4191 3CEE                                           l4239 4BEE  
                                         l4087 4C74                                           l4319 43A4  
                                         l4343 4B2E                                           l5207 4C4C  
                                         l4511 2724                                           l4503 2702  
                                         l4431 2506                                           l4423 24B8  
                                         l4415 24A8                                           l4407 2498  
                                         l4351 2396                                           l5151 466C  
                                         l5047 375C                                           l5135 31F0  
                                         l5127 3144                                           l5119 308A  
                                         l4327 4110                                           l5071 3BCC  
                                         l5063 3B72                                           l5055 3B34  
                                         l1695 4572                                           l5217 4A28  
                                         l4337 4CD4                                           l4097 4C9C  
                                         l4249 4218                                           l4265 4232  
                                         l4169 4BCE                                           l4193 3D4C  
                                         l4185 3CE6                                           l4177 3CD6  
                                         l4089 4C78                                           l4273 4C6C  
                                         l4281 4BE6                                           l4345 4B32  
                                         l4601 47CC                                           l5225 4C54  
                                         l5161 4198                                           l4521 277E  
                                         l4513 273A                                           l4505 2704  
                                         l4441 254A                                           l4433 2516  
                                         l4417 24AC                                           l4409 249C  
                                         l4425 24BC                                           l4361 23CA  
                                         l4353 2398                                           l5153 4670  
                                         l5145 4626                                           l5049 376C  
                                         l5081 38F0                                           l5137 3200  
                                         l5129 3178                                           l4329 411A  
                                         l1689 4746                                           l5073 3BE0  
                                         l5065 3B86                                           l5057 3B44  
                                         l5219 4A34                                           l4259 422A  
                                         l4195 3D5E                                           l4275 4C70  
                                         l4099 4C5C                                           l4283 4BEA  
                                         l4291 43F8                                           l4339 4B26  
                                         l5171 41A6                                           l5163 419C  
                                         l4531 27FA                                           l4523 27B8  
                                         l4507 2712                                           l4443 254C  
                                         l4435 252C                                           l4427 24C0  
                                         l4419 24B0                                           l4371 23FC  
                                         l4355 23A8                                           l4363 23D2  
                                         l4347 237C                                           l4611 2C66  
                                         l5147 462A                                           l5091 3942  
                                         l5083 3918                                           l5067 3B9A  
                                         l5059 3B58                                           l4197 3D78  
                                         l5181 41C8                                           l5173 41AE  
                                         l5165 419E                                           l5157 4184  
                                         l4541 281A                                           l4533 27FE  
                                         l4517 2764                                           l4525 27BA  
                                         l4509 2716                                           l4461 25D4  
                                         l4453 259C                                           l4445 2556  
                                         l4437 2538                                           l4429 24EA  
                                         l4381 2432                                           l4373 2402  
                                         l4365 23E2                                           l4357 23B8  
                                         l4349 2388                                           l4701 2E94  
                                         l4621 2CA2                                           l4613 2C72  
                                         l4605 4ABA                                           l5149 463E  
                                         l5085 3924                                           l5077 3892  
                                         l5069 3B9E                                           ?_pad 0017  
                                         l4199 3D7E                                           l4279 4BE2  
                                         l4295 4400                                           l4287 43EC  
                                         l5191 41F0                                           l5183 41D0  
                                         l5175 41B0                                           l5167 41A0  
                                         l5159 4188                                           l4543 2828  
                                         l4535 280C                                           l4527 27CA  
                                         l4519 2770                                           l4463 25D8  
                                         l4455 25AC                                           l4447 2578  
                                         l4471 25F8                                           l4439 253C  
                                         l4391 246E                                           l4383 2442  
                                         l4375 2410                                           l4367 23E8  
                                         l4359 23C8                                           l4711 2ED4  
                                         l4703 2EA2                                           l4631 2CD2  
                                         l4623 2CB2                                           l4615 2C80  
                                         l4607 4AD6                                           l5095 3986  
                                         l5079 38B2                                           l4551 4710  
                                         l4289 43F0                                           l5193 41F8  
                                         l5185 41D8                                           l5177 41B8  
                                         l5169 41A2                                           l5601 4576  
                                         l4545 282A                                           l4537 2812  
                                         l4529 27DA                                           l4473 261E  
                                         l4481 2674                                           l4465 25E6  
                                         l4457 25BA                                           l4449 2588  
                                         l4393 247C                                           l4385 2444  
                                         l4377 2412                                           l4369 23FA  
                                         l4721 2F46                                           l4713 2F02  
                                         l4705 2EB4                                           l4641 2D08  
                                         l4633 2CD8                                           l4625 2CB4  
                                         l4617 2C82                                           l4801 2990  
                                         l5089 3930                                           l4553 4722  
                                         l4561 490A                                           l6401 142E  
                                         l6321 1092                                           l4571 4B04  
                                         l5195 4200                                           l5187 41E0  
                                         l5179 41C0                                           l5611 46C0  
                                         l5603 458C                                           l4539 2814  
                                         l4491 26C8                                           l4483 269A  
                                         l4475 2652                                           l4467 25E8  
                                         l4459 25C8                                           l4395 2480  
                                         l4379 2422                                           l4387 244C  
                                         l4731 2FBE                                           l4723 2F70  
                                         l4707 2EC2                                           l4651 2D48  
                                         l4643 2D18                                           l4635 2CE6  
                                         l4619 2C92                                           l4627 2CBC  
                                         l4811 29D2                                           l4803 299C  
                                         l4555 4726                                           l4563 4922  
                                         l5099 4516                                           l6411 1478  
                                         l6403 1432                                           l6331 10E2  
                                         l6323 109A                                           l6315 106A  
                                         l4581 4CDC                                           l4573 4B12  
                                         l5197 4204                                           l5189 41E8  
                                         l5613 46C0                                           l5605 45A0  
                                         l4493 26D6                                           l4485 26AA  
                                         l4477 2654                                           l4469 25F2  
                                         l4397 2484                                           l4389 245C  
                                         l4741 2FF4                                           l4733 2FDA  
                                         l4717 2F2C                                           l4725 2F74  
                                         l4709 2EC6                                           l4653 2D58  
                                         l4661 2D78                                           l4645 2D1A  
                                         l4637 2CE8                                           l4629 2CCC  
                                         l4821 2A34                                           l4813 29E2  
                                         l4805 29AA                                           l5621 4C24  
                                         l5541 33DE                                           l4901 3C3A  
                                         l4549 4704                                           l4557 48FA  
                                         l6501 1954                                           l6421 14B4  
                                         l6405 1444                                           l6413 1490  
                                         l6341 111A                                           l6333 10F0  
                                         l6325 10BE                                           l6317 1074  
                                         l4591 47A8                                           l4583 478E  
                                         l4575 4B22                                           l5199 4208  
                                         l5615 46D6                                           l5607 45B4  
                                         l4495 26D8                                           l4479 2664  
                                         l4399 2488                                           l4735 2FDE  
                                         l4727 2F8E                                           l4719 2F38  
                                         l4671 2DB6                                           l4663 2D88  
                                         l4655 2D60                                           l4639 2CF8  
                                         l4647 2D22                                           l4831 2ADC  
                                         l4823 2A50                                           l4815 29FC  
                                         l4807 29B6                                           l4751 2848  
                                         l5623 4C1A                                           l5543 33E2  
                                         l4911 3C70                                           l4903 3C4C  
                                         l4559 4906                                           l4567 4852  
                                         l6511 19A0                                           l6503 1966  
                                         l6431 151A                                           l6423 14D0  
                                         l6407 1456                                           l6351 1180  
                                         l6343 111E                                           l6335 1102  
                                         l6327 10C8                                           l6319 1084  
                                         l4593 47B8                                           l4585 4792  
                                         l5617 46EA                                           l5609 45B8  
                                         l4497 26E6                                           l4489 26BE  
                                         l4737 2FEC                                           l4729 2FA4  
                                         l4681 2DFE                                           l4673 2DC6  
                                         l4665 2D88                                           l4657 2D64  
                                         l4649 2D32                                           l4841 2B18  
                                         l4833 2AE6                                           l4825 2A7A  
                                         l4817 2A0C                                           l4809 29C6  
                                         l4761 2888                                           l4753 2856  
                                         l5625 4C38                                           l5801 4952  
                                         l5561 349E                                           l5553 3442  
                                         l5545 3400                                           l5537 33C6  
                                         l4913 3C86                                           l4905 3C54  
                                         l4921 3C9C                                           l6601 1C58  
                                         l6521 19D4                                           l6513 19AE  
                                         l6505 1978                                           l6441 1562  
                                         l6433 152C                                           l6425 1506  
                                         l6409 145E                                           l6353 1192  
                                         l6337 110E                                           l6345 1124  
                                         l6329 10D0                                           l4579 4CD8  
                                         l4595 47C0                                           l4587 47A2  
                                         l5619 46EE                                           l4499 26EE  
                                         l4739 2FF2                                           l4691 2E4C  
                                         l4683 2E12                                           l4675 2DD6  
                                         l4851 2B8A                                           l4843 2B26  
                                         l4835 2AF4                                           l4827 2AB0  
                                         l4819 2A28                                           l4771 28B8  
                                         l4763 288E                                           l4755 2858  
                                         l5627 4C2E                                           l5811 4314  
                                         l5803 495C                                           l5571 3528  
                                         l5555 3458                                           l5547 3438  
                                         l5539 33DA                                           l4923 3CAC  
                                         l4915 3C8E                                           l4907 3C5C  
                                         l4931 3E44                                           l6611 1CB0  
                                         l6603 1C5E                                           l6531 1A06  
                                         l6523 19E4                                           l6515 19BE  
                                         l6507 1986                                           l6451 15AA  
                                         l6443 1570                                           l6435 153E  
                                         l6427 150E                                           l6419 14A2  
                                         l6371 1266                                           l6355 11AE  
                                         l6347 114A                                           l6363 11F8  
                                         l6339 1116                                           l4597 47C4  
                                         l4589 47A4                                           l4693 2E5C  
                                         l4685 2E20                                           l4677 2DE6  
                                         l4669 2D9C                                           l4861 2BF4  
                                         l4853 2B98                                           l4845 2B54  
                                         l4837 2B06                                           l4829 2ABE  
                                         l4781 28F0                                           l4773 28BA  
                                         l4765 289E                                           l4757 2868  
                                         l4749 283C                                           l5629 4C42  
                                         l5821 4332                                           l5813 4322  
                                         l5805 4C10                                           l5573 353A  
                                         l5565 34D6                                           l5557 3460  
                                         l5549 343C                                           l4925 3CB4  
                                         l4917 3C90                                           l4909 3C6A  
                                         l4941 3E74                                           l4933 3E52  
                                         l6613 1CB8                                           l6541 1AAE  
                                         l6533 1A18                                           l6525 19E8  
                                         l6517 19C2                                           l6509 198E  
                                         l6461 16BE                                           l6453 15BA  
                                         l6445 1588                                           l6437 154C  
                                         l6429 1512                                           l6373 1282  
                                         l6365 121E                                           l6381 12CC  
                                         l6357 11C6                                           l5581 39BA  
                                         l6701 203E                                           l4599 47C8  
                                         l4695 2E6E                                           l4687 2E2C  
                                         l4679 2DEE                                           l4871 2C4A  
                                         l4863 2C0E                                           l4855 2BC2  
                                         l4839 2B14                                           l4791 2940  
                                         l4783 2910                                           l4775 28CA  
                                         l4767 28A4                                           l4759 2878  
                                         l5823 4336                                           l5815 4326  
                                         l5807 4306                                           l5911 4B74  
                                         l5559 3468                                           l4919 3C96  
                                         l4951 3EBA                                           l4943 3E86  
                                         l4935 3E5A                                           l6615 1CC8  
                                         l6607 1C92                                           l6551 1B06  
                                         l6543 1AB6                                           l6535 1A1C  
                                         l6527 19EE                                           l6519 19C8  
                                         l6471 175E                                           l6455 15CE  
                                         l6463 16C4                                           l6447 159A  
                                         l6439 1550                                           l6391 1356  
                                         l6383 12E6                                           l6375 129A  
                                         l6359 11D0                                           l5591 3A0A  
                                         l6711 20EA                                           l6703 2062  
                                         l6631 1D5A                                           l6623 1D10  
                                         l5841 4774                                           l4697 2E84  
                                         l4689 2E4A                                           l4865 2C2A  
                                         l4873 2C50                                           l4849 2B7E  
                                         l4857 2BC6                                           l4793 294A  
                                         l4785 2920                                           l4777 28DA  
                                         l4769 28AA                                           l5825 4342  
                                         l5817 432A                                           l5809 4308  
                                         l5913 4B78                                           l5569 3516  
                                         l4961 3EE6                                           l4953 3EC2  
                                         l4945 3E8E                                           l4937 3E5E  
                                         l4929 3E40                                           l4881 4688  
                                         l6617 1CCE                                           l6609 1CA4  
                                         l6561 1B4A                                           l6553 1B14  
                                         l6529 19F4                                           l6537 1A22  
                                         l6545 1ABA                                           l6481 183A  
                                         l6473 1790                                           l6465 16E2  
                                         l6457 1632                                           l6449 15A2  
                                         l6393 13B0                                           l6377 12A4  
                                         l6369 1254                                           l5593 3A1C  
                                         l5585 39C6                                           l6713 20FC  
                                         l6705 2072                                           l6641 1D80  
                                         l6633 1D66                                           l6625 1D36  
                                         l5835 4748                                           l4699 2E8A  
                                         l4875 2C54                                           l4867 2C3A  
                                         l4859 2BE0                                           l4795 2960  
                                         l4779 28EA                                           l5851 328E  
                                         l5843 3214                                           l5827 434E  
                                         l5819 432E                                           l5915 4B7C  
                                         l4891 3C14                                           l4955 3EC8  
                                         l4947 3E96                                           l4939 3E6C  
                                         l4971 4008                                           l6571 1B80  
                                         l6563 1B52                                           l6619 1CEA  
                                         l6555 1B24                                           l6547 1AD8  
                                         l6539 1A7A                                           l6491 189C  
                                         l6483 1840                                           l6475 17A0  
                                         l6467 1716                                           l6459 168A  
                                         l6395 13E4                                           l6387 131C  
                                         l5595 3A46                                           l5587 39D4  
                                         l5579 3990                                           l6731 2230  
                                         l6715 2114                                           l6723 217E  
                                         l6707 20A6                                           l6635 1D68  
                                         l6627 1D44                                           l5837 474C  
                                         l4981 378E                                           l4869 2C48  
                                         l4797 296C                                           l4789 2934  
                                         l5861 32E8                                           l5845 3224  
                                         l5829 4378                                           l5917 4B80  
                                         l4893 3C18                                           l4885 3BFA  
                                         l4949 3EA4                                           l4957 3ECE  
                                         l4973 4018                                           l4965 3F9C  
                                         l6581 1BDC                                           l6573 1B88  
                                         l6565 1B62                                           l6557 1B28  
                                         l6549 1AF4                                           l6493 18B0  
                                         l6485 1874                                           l6477 17B0  
                                         l6469 1748                                           l6397 13EC  
                                         l6389 1350                                           l5589 39EC  
                                         l6741 22F6                                           l6733 2264  
                                         l6725 21AC                                           l6717 2122  
                                         l6709 20B6                                           l6661 1E14  
                                         l6653 1D92                                           l6645 1D86  
                                         l6637 1D7A                                           l6629 1D56  
                                         l5599 4576                                           l5839 4762  
                                         l4991 3818                                           l4983 37BC  
                                         l4799 2984                                           l5871 334C  
                                         l5863 32EA                                           l5855 32A2  
                                         l5847 3232                                           l5791 4CB4  
                                         l5919 4B84                                           l4895 3C26  
                                         l4887 3BFE                                           l4959 3EDE  
                                         l4975 403C                                           l4967 3FCA  
                                         l4879 4678                                           l6591 1C1C  
                                         l6583 1BE4                                           l6575 1B94  
                                         l6567 1B6A                                           l6559 1B38  
                                         l6495 18BC                                           l6487 1888  
                                         l6479 17E4                                           l6399 141E  
                                         l6751 2334                                           l6743 2304  
                                         l6735 22A4                                           l6719 2152  
                                         l6671 1E8E                                           l6663 1E16  
                                         l4993 382A                                           l4985 37CC  
                                         l5881 33A4                                           l5873 336A  
                                         l5865 32F6                                           l5857 32AA  
                                         l5849 3278                                           l5793 4930  
                                         l4897 3C2E                                           l4889 3C0C  
                                         l4977 4042                                           l4969 3FDA  
                                         l6593 1C2E                                           l6577 1B9A  
                                         l6585 1BEA                                           l6569 1B78  
                                         l6497 18E0                                           l6489 188C  
                                         l6745 2318                                           l6729 221E  
                                         l6673 1EAE                                           l6681 1F18  
                                         l6665 1E3C                                           l6657 1D9E  
                                         l6649 1D8C                                           l4995 3838  
                                         l4987 37FA                                           l5883 33B2  
                                         l5875 336C                                           l5867 3332  
                                         l5859 32B6                                           l5787 4B8A  
                                         l5795 4948                                           l4899 3C32  
                                         l6595 1C3A                                           l6587 1BFC  
                                         l6579 1BC0                                           l6499 1944  
                                         l6739 22D0                                           l6691 1FB4  
                                         l6683 1F3E                                           l6675 1EBC  
                                         l6667 1E72                                           l6659 1DF4  
                                         l6755 2342                                           l6771 445A  
                                         l4997 3888                                           l4989 380A  
                                         l5885 33B4                                           l5877 3370  
                                         l5869 333E                                           l5981 3AA6  
                                         l5789 4B9A                                           l5797 494A  
                                         l6597 1C42                                           l6589 1C16  
                                         l6757 2368                                           l6749 2326  
                                         l6693 1FD4                                           l6685 1F46  
                                         l6669 1E80                                           l6773 4468  
                                         l4999 388E                                           l5879 3394  
                                         l5991 3578                                           l5983 3B22  
                                         l5975 3A6C                                           l5799 4950  
                                         l6599 1C52                                           l6695 1FE2  
                                         l6687 1F54                                           l6679 1F06  
                                         l6775 448E                                           l6791 3F14  
                                         l6783 3EF0                                           l5993 359A  
                                         l5977 3A70                                           l6689 1F7A  
                                         l6961 1DC6                                           l6769 4452  
                                         l6777 4A92                                           l6793 3F28  
                                         l6785 3EF4                                           l6971 4264  
                                         l5995 3616                                           l5987 3560  
                                         l5979 3A84                                           l6963 3488  
                                         l6699 202C                                           l6779 4A9C  
                                         l6795 3F3C                                           l6787 3F10  
                                         l6965 443A                                           l5997 3648  
                                         l5989 3564                                           l6797 3F5A  
                                         l6789 3F12                                           l6967 40C4  
                                         l5999 3658                                           l6799 3F78  
                                         l6969 3D22                                           STR_1 103E  
                                         STR_2 1021                                           STR_3 1055  
                                         STR_4 105D                                           STR_7 1059  
                                         STR_8 1061                                           u3100 461C  
                                         u3101 4618                                           _LATA 000F89  
                                         u3110 3CD2                                           _LATB 000F8A  
                                         u3111 3CCE                                           _LATC 000F8B  
                                         u3200 43A4                                           u4000 28CA  
                                         _LATD 000F8C                                           u3201 43A0  
                                         u4001 28C6                                           _LATE 000F8D  
                                         u3050 42A0                                           u3130 3D78  
                                         u4010 28DA                                           u3051 429C  
                                         u3131 3D74                                           u4011 28D6  
                                         u3060 4AF0                                           u3140 4072  
                                         u3300 23FA                                           u4100 2B7E  
                                         u4020 2910                                           u3220 40FE  
                                         u3061 4AEC                                           u3141 406E  
                                         u3301 23F6                                           u4101 2B7A  
                                         u4021 290C                                           u3221 40FA  
                                         u3070 4BAE                                           u3310 2410  
                                         u4110 2B98                                           u4030 2920  
                                         u3230 4110                                           u3071 4BA8  
                                         u3311 240C                                           u4111 2B94  
                                         u4031 291C                                           u3231 410C  
                                         u3128 3CFC                                           u3400 254A  
                                         u3320 2422                                           u4120 2BE0  
                                         u4040 2A9A                                           u4200 3CAC  
                                         u3080 45E2                                           u3240 4138  
                                         u3129 3D10                                           u3401 2546  
                                         u3321 241E                                           u4121 2BDC  
                                         u4201 3CA8                                           u3081 45DE  
                                         u3241 4134                                           u3218 43D4  
                                         u3410 256A                                           u3330 2432  
                                         u4130 2C0E                                           u4050 2AF4  
                                         u4210 3E52                                           u3090 45F0  
                                         u3250 416E                                           u3219 43E6  
                                         u3411 2566                                           u3331 242E  
                                         u4131 2C0A                                           u4051 2AF0  
                                         u4211 3E4E                                           u3091 45EC  
                                         u3251 416A                                           u3076 4BB0  
                                         u3180 4BC0                                           u3260 4B42  
                                         u3500 26AA                                           u3420 2578  
                                         u3340 246E                                           u4300 37BC  
                                         u4140 2C48                                           u4060 2B14  
                                         u4220 3E6C                                           u3181 4BBC  
                                         u3261 4B3E                                           u3501 26A6  
                                         u3421 2574                                           u3341 246A  
                                         u4301 37B8                                           u4141 2C44  
                                         u4061 2B10                                           u4045 2A90  
                                         u4221 3E68                                           u3158 40A0  
                                         u3190 4390                                           u3510 26D6  
                                         u3430 2588                                           u3350 247C  
                                         u3270 2396                                           u4310 37FA  
                                         u4070 2B26                                           u4150 3C0C  
                                         u4230 3E86                                           u3159 40B2  
                                         u3191 438C                                           u3511 26D2  
                                         u3431 2584                                           u3351 2478  
                                         u3271 2392                                           u4311 37F6  
                                         u4071 2B22                                           u4151 3C08  
                                         u4231 3E82                                           u3168 4240  
                                         u3600 27B8                                           u3520 26E6  
                                         u3440 25BA                                           u3360 24EA  
                                         u3280 23A8                                           u4320 3818  
                                         u4080 2B54                                           u4160 3C26  
                                         u4240 3EA4                                           u4400 373C  
                                         u3169 4252                                           u3601 27B4  
                                         u3521 26E2                                           u3441 25B6  
                                         u3361 24E6                                           u3281 23A4  
                                         u4321 3814                                           u4081 2B50  
                                         u4161 3C22                                           u4241 3EA0  
                                         u4401 3738                                           u3178 4416  
                                         u3610 27CA                                           u3530 2702  
                                         u3450 25C8                                           u3370 2502  
                                         u3290 23B8                                           u4330 3838  
                                         u4090 2B6A                                           u4170 3C4C  
                                         u4250 3EBA                                           u4410 375C  
                                         u3179 4428                                           u3611 27C6  
                                         u3531 26FE                                           u3451 25C4  
                                         u3371 24FC                                           u3291 23B4  
                                         u4331 3834                                           u4091 2B66  
                                         u4171 3C48                                           u4251 3EB6  
                                         u4411 3758                                           u3700 4B12  
                                         u3620 27DA                                           u3540 2712  
                                         u3460 25E6                                           u3380 2504  
                                         u4340 3888                                           u5300 3438  
                                         u4180 3C6A                                           u4260 3EDE  
                                         u4420 376C                                           u4500 3942  
                                         u6100 10E2                                           u3701 4B0E  
                                         u3621 27D6                                           u3541 270E  
                                         u3461 25E2                                           u4341 3884  
                                         u5301 3434                                           u4181 3C66  
                                         u4261 3EDA                                           u4421 3768  
                                         u4501 393E                                           u6101 10DE  
                                         u3710 47A2                                           u3630 27FA  
                                         u3550 2724                                           u3470 261E  
                                         u3390 252C                                           u5310 3454  
                                         u4190 3C86                                           u4270 3FCA  
                                         u4350 48A0                                           u4430 3B44  
                                         u6110 10F0                                           u3711 479E  
                                         u3631 27F6                                           u3551 2720  
                                         u3471 261A                                           u3391 2528  
                                         u5311 3450                                           u4191 3C82  
                                         u4271 3FC6                                           u4351 489C  
                                         u4431 3B40                                           u6111 10EC  
                                         u3720 47B8                                           u3640 280C  
                                         u3560 273A                                           u3480 2664  
                                         u3800 2D88                                           u5320 3510  
                                         u4280 4008                                           u4360 369E  
                                         u4520 397C                                           u4600 3076  
                                         u4440 3B66                                           u6200 1266  
                                         u6120 1102                                           u5400 3A46  
                                         u3721 47B4                                           u3641 2808  
                                         u3561 2736                                           u3481 2660  
                                         u3801 2D84                                           u5321 350A  
                                         u4281 4004                                           u4361 369A  
                                         u4521 3976                                           u4601 3072  
                                         u4441 3B62                                           u6201 1262  
                                         u6121 10FE                                           u5401 3A42  
                                         u5410 458C                                           u3650 2828  
                                         u3570 2750                                           u3490 269A  
                                         u3810 2DFE                                           u3730 2C80  
                                         u5330 3512                                           u4290 403C  
                                         u4370 36D2                                           u4530 397E  
                                         u4610 3098                                           u4450 3BBC  
                                         u6210 1318                                           u6130 114A  
                                         u5411 4588                                           u3651 2824  
                                         u3571 274C                                           u3491 2696  
                                         u3811 2DFA                                           u3731 2C7C  
                                         u4291 4038                                           u4515 3954  
                                         u4611 3094                                           u4451 3BB8  
                                         u6211 1314                                           u6131 1146  
                                         u5420 45CC                                           u3580 2764  
                                         u3900 2F18                                           u3820 2E20  
                                         u3740 2C92                                           u4700 48F4  
                                         u5340 3528                                           u4380 3700  
                                         u3660 4746                                           u4460 3BCC  
                                         u4540 4560                                           u6300 1506  
                                         u6220 13AC                                           u6140 117A  
                                         u5421 45C8                                           u3581 2760  
                                         u3901 2F14                                           u3821 2E1C  
                                         u3741 2C8E                                           u5341 3524  
                                         u4381 36FC                                           u3661 4742  
                                         u4461 3BC8                                           u6301 1502  
                                         u6221 13A8                                           u6141 1174  
                                         u5430 46D6                                           u3590 277E  
                                         u3910 2F2C                                           u3830 2E4A  
                                         u3750 2CA2                                           u4710 463E  
                                         u5350 353A                                           u4390 3714  
                                         u4470 38D2                                           u4630 3104  
                                         u3670 4922                                           u4550 4572  
                                         u6310 152C                                           u6230 141E  
                                         u6150 117C                                           u5431 46D2  
                                         u3591 277A                                           u3911 2F28  
                                         u3831 2E46                                           u3751 2C9E  
                                         u4711 463A                                           u5351 3536  
                                         u4391 3710                                           u4375 36C8  
                                         u4631 3100                                           u3671 491E  
                                         u4551 456E                                           u6311 1528  
                                         u6231 141A                                           u5440 4702  
                                         u3920 2F46                                           u3840 2E6E  
                                         u3760 2CE6                                           u4720 466C  
                                         u4480 38F0                                           u4640 3128  
                                         u3680 4882                                           u4560 44E6  
                                         u6400 17A0                                           u6320 153E  
                                         u6240 1444                                           u6160 1192  
                                         u5360 39BA                                           u5441 46FE  
                                         u3921 2F42                                           u3841 2E6A  
                                         u3761 2CE2                                           u4721 4668  
                                         u4481 38EC                                           u4625 30AC  
                                         u3681 487C                                           u4561 44E0  
                                         u6401 179C                                           u6321 153A  
                                         u6241 1440                                           u6161 118E  
                                         u5361 39B6                                           u4730 4198  
                                         u3930 2F8E                                           u3850 2E84  
                                         u3770 2CF8                                           u5290 3400  
                                         u4490 3918                                           u4650 3144  
                                         u4626 30B6                                           u3690 4884  
                                         u4570 44E8                                           u6410 183A  
                                         u6330 154C                                           u6250 1456  
                                         u6170 121E                                           u6090 1092  
                                         u5370 39EC                                           u4731 4194  
                                         u3931 2F8A                                           u3851 2E80  
                                         u3771 2CF4                                           u5291 33FC  
                                         u4491 3914                                           u4475 38C8  
                                         u4651 3140                                           u4627 30C6  
                                         u4547 4556                                           u6411 1836  
                                         u6331 1548                                           u6251 1452  
                                         u6171 121A                                           u6091 108E  
                                         u5371 39E8                                           u4740 4A24  
                                         u3940 2FBE                                           u3860 2EA2  
                                         u3780 2D08                                           u5700 32E4  
                                         u4660 3198                                           u4580 44FE  
                                         u6500 1A06                                           u6420 1888  
                                         u6340 1562                                           u6260 1478  
                                         u6180 124E                                           u5380 3A0A  
                                         u4741 4A20                                           u3941 2FBA  
                                         u3861 2E9E                                           u3781 2D04  
                                         u5701 32E0                                           u4645 311E  
                                         u4581 44FA                                           u6501 1A02  
                                         u6421 1884                                           u6341 155E  
                                         u6261 1474                                           u6181 1248  
                                         u5381 3A06                                           u3950 2FEC  
                                         u3870 2EC2                                           u3790 2D48  
                                         u5710 332E                                           u4670 31B4  
                                         u4590 3048                                           u6510 1AD8  
                                         u6430 18B0                                           u6350 1570  
                                         u6270 149E                                           u6190 1250  
                                         u5390 3A1C                                           u3951 2FE8  
                                         u3871 2EBE                                           u3791 2D44  
                                         u5711 332A                                           u4671 31B0  
                                         u6511 1AD4                                           u6431 18AC  
                                         u6351 156C                                           u6271 149A  
                                         u5391 3A18                                           u3880 2ED4  
                                         u3960 2856                                           u5720 334C  
                                         u4680 31F0                                           u6600 1C8C  
                                         u6520 1AF4                                           u6440 1954  
                                         u6360 159A                                           u6280 14B4  
                                         u3881 2ED0                                           u3961 2852  
                                         u5721 3348                                           u4681 31EC  
                                         u4665 318E                                           u6601 1C86  
                                         u6521 1AF0                                           u6441 1950  
                                         u6361 1596                                           u6281 14B0  
                                         u3890 2F02                                           u3970 2868  
                                         u5730 335C                                           u4690 48F2  
                                         u6610 1C8E                                           u6530 1B06  
                                         u6450 1966                                           u6370 16E2  
                                         u6290 14D0                                           u3891 2EFE  
                                         u3971 2864                                           u5731 3358  
                                         u4691 48EC                                           u4595 303E  
                                         u6531 1B02                                           u6451 1962  
                                         u6371 16DE                                           u6291 14CC  
                                         u3980 2878                                           u5740 336A  
                                         u5900 3648                                           u6620 1CA4  
                                         u6540 1B14                                           u6460 1978  
                                         u6380 1748                                           u6700 1F18  
                                         u3981 2874                                           u5741 3366  
                                         u5901 3644                                           u6621 1CA0  
                                         u6541 1B10                                           u6461 1974  
                                         u6381 1744                                           u6701 1F14  
                                         u3990 28B8                                           u5750 33A4  
                                         u5670 3224                                           u5910 3666  
                                         u6550 1B4A                                           u6470 1986  
                                         u6390 1790                                           u6710 1F3E  
                                         u6630 1D36                                           u3991 28B4  
                                         u5751 33A0                                           u5671 3220  
                                         u5911 3662                                           u6551 1B46  
                                         u6471 1982                                           u6391 178C  
                                         u6711 1F3A                                           u6631 1D32  
                                         u5760 33B2                                           u5680 3232  
                                         u6560 1B78                                           u6480 19A0  
                                         u6800 2218                                           u6720 1F7A  
                                         u6640 1E06                                           u5761 33AE  
                                         u5681 322E                                           u6561 1B74  
                                         u6481 199C                                           u6801 2212  
                                         u6721 1F76                                           u6641 1E02  
                                         u5690 328E                                           u6570 1BFC  
                                         u6490 19AE                                           u6810 221A  
                                         u6730 2026                                           u6650 1E14  
                                         u5691 328A                                           u6571 1BF8  
                                         u6491 19AA                                           u6731 2020  
                                         u6651 1E10                                           u6580 1C16  
                                         u6820 2230                                           u6740 2028  
                                         u6660 1E3C                                           u6581 1C12  
                                         u6821 222C                                           u6661 1E38  
                                         u6590 1C2E                                           u6830 22F6  
                                         u6750 203E                                           u6670 1E80  
                                         u6591 1C2A                                           u6831 22F2  
                                         u6751 203A                                           u6671 1E7C  
                                         u6760 2072                                           u6680 1F00  
                                         u6840 44AC                                           u6761 206E  
                                         u6681 1EFA                                           u6841 44A8  
                                         u6770 20B6                                           u6690 1F02  
                                         u6771 20B2                                           u6780 20FC  
                                         u6781 20F8                                           u6790 21AC  
                                         u6791 21A8                                           u6857 3F00  
                                         u6867 3F84                                           u6877 4768  
                                         _WPUB 000F7C                        ??_wr2RegCompleteHandler 0010  
                                         _dbuf 0124                                           _atoi 33C6  
                                         _main 3EF0                       ?_I2C_CallbackReturnReset 000E  
                                         _prec 00F2                                           _nout 00EE  
                                         pad@i 001E                                           pad@p 001B  
                                         fsr0h 000FEA                                           fsr1h 000FE2  
                                         indf0 000FEF                                           fsr2h 000FDA  
                                         fsr0l 000FE9                                           indf2 000FDF  
                                         fsr1l 000FE1                                           pad@w 0020  
                                         fsr2l 000FD9                               __end_of_I2C_Open 4210  
                                         btemp 005A                                    ?_SHT40_Read 0001  
                                ___fpclassifyf 3892                                           prodh 000FF4  
                                         prodl 000FF3                                           start 00B0  
                              ___fldiv@new_exp 002F                   fp__I2C_DO_SEND_RESTART_WRITE 0000  
                                 _tolower$2254 0011                                   ___param_bank 000000  
             __size_of_rdBlkRegCompleteHandler 0040                                          ??_pad 001D  
                             ?_I2C_MasterClose 0001                                _I2C_WriteNBytes 4574  
                                ?_EUSART_Write 0001            __size_of_I2C_SetAddressNackCallback 0018  
               __size_of_OSCILLATOR_Initialize 000A                               ?_I2C_MasterStart 0001  
                                _I2C_DO_RX_ACK 4C6C                               ?_I2C_MasterWrite 0001  
                __end_of_OSCILLATOR_Initialize 4C1A                                    _writeBuffer 00EB  
                                ___fltol@sign1 000D                                          ?_atoi 000C  
                              __end_of___fladd 283C                                          ?_main 0001  
                              __end_of___fldiv 3000                                __end_of___awdiv 3CBE  
                              __end_of___flneg 48C2                                          STR_11 1065  
                                        STR_13 1065                                __end_of___awmod 3EF0  
                              __end_of___flmul 2C66                                __end_of___flsub 46BE  
                              __end_of___fltol 378E                                          _ANSEL 000F7E  
                              ___awdiv@divisor 0007                                          i2l610 4810  
                                        i2l621 4A66                                          i2l630 4CB2  
                                        i2l607 480E                                          i2l624 4CE4  
                                        i2l617 3E3E                                          i2l627 4CAC  
                                        i2l671 009C                                          i2l666 0062  
                                        i2l667 009C                                ___awdiv@counter 0009  
                                        _RCREG 000FAE                   __size_of_I2C_DO_RX_NACK_STOP 0008  
                                        _RCSTA 000FAB                                   vfpfcnvrt@fmt 009F  
                                        _SPBRG 000FAF                              ??_I2C_DO_TX_EMPTY 0010  
                                        _TRISA 000F92                                          _TRISB 000F93  
                                        _TRISC 000F94                                          _TRISD 000F95  
                                        _TRISE 000F96                                          _TXREG 000FAD  
                                        _TXSTA 000FAC                              __end_of_I2C_DO_RX 40EC  
                            __end_of_I2C_DO_TX 3D82                                          _flags 00F4  
                                        _fputc 40EC                              __end_of_I2C_Close 4A3C  
                                        _fputs 4704                                __end_of_isdigit 48FA  
                       __size_of_I2C_MasterFsm 0070                 I2C_MasterOperation@returnValue 0015  
                                        atoi@n 0019                                          pad@fp 0017  
                                        atoi@s 000C                                          _width 00F0  
                                        _putch 4C06                        _I2C_MasterEnableRestart 4CD0  
                              __end_of_isspace 4678                                __end_of_isupper 488A  
                                        pclath 000FFA                                          tablat 000FF5  
                             ?_I2C_SetCallback 0005                   I2C_SetAddressNackCallback@cb 000A  
                                        ttemp5 005B                                          ttemp6 005E  
                                        ttemp7 0062                                          status 000FD8  
                                        wtemp8 005B                                 ?___fpclassifyf 0005  
                              __end_of_tolower 4516                              ?_I2C_DO_SEND_STOP 0001  
                       __size_of_I2C_SetBuffer 0024                                __end_of_strncmp 3A6C  
                           ??_I2C_DO_SEND_STOP 0005                    __end_of_SHT40_humy_GetValue 3688  
                                _fsmStateTable 1001                       fp__rd1RegCompleteHandler 0000  
                              __initialization 4A68                                   __end_of_atoi 3560  
                                 __end_of_main 3F9C                       fp__wr1RegCompleteHandler 0000  
            __size_of_I2C_DO_SEND_RESTART_READ 0008                      ?_I2C_DO_SEND_RESTART_READ 0001  
                               ??_EUSART_Write 0005                                 ?_I2C_DO_RX_ACK 0001  
                  ?_INTERRUPT_InterruptManager 0001                 ??_EUSART_SetRxInterruptHandler 0007  
                                       ??_atoi 000E                                         ??_main 00C1  
                            ?_I2C_MasterIsNack 0001                                  __activetblptr 000003  
                            ?_I2C_MasterSetIrq 0001                            __size_of_SHT40_Read 0044  
                           ??_I2C_MasterIsNack 0005                             ??_I2C_MasterSetIrq 0005  
         fp__EUSART_DefaultFramingErrorHandler 0000      __end_of_EUSART_DefaultFramingErrorHandler 4CE6  
   __size_of_EUSART_DefaultFramingErrorHandler 0002            ??_EUSART_DefaultFramingErrorHandler 0001  
           ?_EUSART_DefaultFramingErrorHandler 0001              _EUSART_DefaultFramingErrorHandler 4CE4  
                   _EUSART_OverrunErrorHandler 0186                __end_of_I2C_CallbackReturnReset 4CC8  
                                       ?_fputc 0007                                         ?_fputs 0010  
              __size_of_I2C_CallbackReturnStop 0004                               ___awdiv@dividend 0005  
                I2C_SetDataCompleteCallback@cb 000A                                         ?_putch 0001  
                                       _ANSELH 000F7F                                   ??_I2C_Poller 0014  
                                       i2l6121 001A                                         i2l6131 007E  
                                       i2l6123 0028                                         i2l6125 0036  
                                       i2l6127 0044                                         i2l6129 0070  
                                       i2l5631 4A3C                                         i2l5633 4A4C  
                                       i2l5635 4A4E                                         i2l5637 4A5E  
                                       i2l5639 4A62                                         i2l5831 4CA8  
                                       i2l5833 4CAE                                         i2l5951 4804  
                                       i2l5943 47D0                                         i2l5961 3DB0  
                                       i2l5953 4808                                         i2l5945 47E2  
                                       i2l5971 3E1C                                         i2l5963 3DC8  
                                       i2l5955 3D82                                         i2l5947 47F2  
                                       i2l5973 3E3A                                         i2l5965 3DD6  
                                       i2l5957 3D92                                         i2l5949 47F4  
                                       i2l5967 3DE6                                         i2l5959 3DA0  
                                       i2l5969 3E00                                         _OSCCON 000FD3  
                                vfpfcnvrt@done 00A7                                         _SPBRGH 000FB0  
                                       _SSPADD 000FC8                                         _SSPBUF 000FC9  
                             __end_of___xxtofl 33C6                            _I2C_MasterGetRxData 4CBC  
                      __end_of_I2C_WriteNBytes 45CE                                   vfprintf@cfmt 00BD  
                      __size_of_I2C_ReadNBytes 0046                                         ___flge 378E  
                                       ___fleq 3F9C                                      ??___fladd 003F  
                                       ___wmul 4ABA                                      ??___fldiv 0026  
                                _I2C_MasterFsm 437C                                      ??___awdiv 0009  
                                    ??___flneg 0009                                      ??___awmod 0009  
                                    ??___flmul 000D                                      ??___flsub 004F  
                                    ??___fltol 0009                                         _efgtoa 106A  
                          _EUSART_Transmit_ISR 47D0                                         _floorf 3000  
                                       clear_0 4A6E                                         clear_1 4A7A  
                            I2C_SetCallback@cb 0005                               ___awdiv@quotient 000B  
                      fp__I2C_DO_SEND_ADR_READ 0000                                ___awmod@divisor 0007  
                      __size_of_I2C_MasterRead 0008                        __size_of_I2C_MasterOpen 0022  
                                       isa$std 000001                        __size_of_I2C_MasterStop 0004  
                              ___awmod@counter 0009                        __size_of_I2C_Initialize 0014  
                                       _printf 4A92                                         pad@buf 0019  
                                _I2C_SetBuffer 4AE0                             __end_of_I2C_Poller 4B44  
                                       _strcpy 4516                                         _strlen 48FA  
                 __end_of_I2C_MasterDisableIrq 4CDC                                         fputc@c 0007  
                                       fputs@c 0014                            _I2C_DO_ADDRESS_NACK 43EC  
                                       fputs@i 0015                                         fputs@s 0010  
                                    ??_isdigit 0007                               SHT40_Read@regist 001C  
                         ?_I2C_MasterGetRxData 0001                                      ?_I2C_Open 0001  
           __end_of_I2C_SetAddressNackCallback 4B5C                     _I2C_SetAddressNackCallback 4B44  
                              ___fpclassifyf@e 000D                                ___fpclassifyf@u 000F  
                              ___fpclassifyf@x 0005                                   __mediumconst 0000  
                                    ??_isspace 0007                                         tblptrh 000FF7  
                                    ??_isupper 0007                                         tblptrl 000FF6  
                                       tblptru 000FF8                      ??_I2C_MasterEnableRestart 0005  
                             __end_of_vfprintf 44B6                                      ??_tolower 000D  
                                    ??_strncmp 000B                           ?_EUSART_Transmit_ISR 0001  
                __size_of_INTERRUPT_Initialize 0004                                     ___flge@ff1 001E  
                                   ___flge@ff2 0022                                ??___fpclassifyf 0009  
                                 ___xxtofl@arg 000F                                   ___xxtofl@exp 000E  
                            _SYSTEM_Initialize 4B74                                   ___xxtofl@val 0005  
                                   ___fleq@ff1 0005                                     ___fleq@ff2 0009  
                                   __accesstop 0060                        __end_of__initialization 4A88  
                                   ___flneg@f1 0005                            _I2C_MasterOperation 478C  
                           ?_SYSTEM_Initialize 0001                                  ___rparam_used 000001  
                         ?_I2C_DO_ADDRESS_NACK 0001                                     ___fltol@f1 0005  
         __end_of_EUSART_SetTxInterruptHandler 4C24          __size_of_EUSART_SetTxInterruptHandler 000A  
                 _EUSART_SetTxInterruptHandler 4C1A                        _rdBlkRegCompleteHandler 4812  
                   fp__rdBlkRegCompleteHandler 0000                                 __pcstackCOMRAM 0001  
                               ?_I2C_MasterFsm 0001                                ??_I2C_DO_RX_ACK 0005  
                       _I2C_CallbackReturnStop 4CC8                            ??_SYSTEM_Initialize 0007  
                                __end_of_fputc 4182                                  __end_of_fputs 4748  
                                __end_of_putch 4C10                                 ?_I2C_SetBuffer 0005  
                      ?_I2C_MasterWaitForEvent 0001                 __size_of_I2C_DO_SEND_ADR_WRITE 0010  
           __size_of_I2C_DO_SEND_RESTART_WRITE 0008                  __end_of_I2C_DO_SEND_ADR_WRITE 4BD2  
                   ?_I2C_DO_SEND_RESTART_WRITE 0001                           ?_I2C_MasterOperation 0001  
                        ??_I2C_MasterGetRxData 0005                          I2C_ReadNBytes@address 001A  
                                   ??_I2C_Open 0005                           _eusartRxStatusBuffer 00C3  
                   __end_of_I2C_MasterClearIrq 4CE4                ??_EUSART_SetOverrunErrorHandler 0007  
                                      ??_fputc 000B                      __end_of_SYSTEM_Initialize 4B8A  
                                      ??_fputs 0014                          ??_EUSART_Transmit_ISR 0001  
                                      ??_putch 0006                              _I2C_MasterSendAck 4C9C  
                                   __pbssBANK0 00C3                                     __pbssBANK1 0100  
                         __end_of_EUSART_Write 4626                                  ??_I2C_DO_IDLE 0005  
               __size_of_rd2RegCompleteHandler 002C                                  ??_I2C_DO_RCEN 0005  
                __end_of_rd2RegCompleteHandler 49B8                   __end_of_I2C_MasterSendTxData 4C9C  
                           ?_I2C_MasterSendAck 0001                              _I2C_MasterStartRx 4CC0  
                                 ??_SHT40_Read 001B                 __size_of_wr2RegCompleteHandler 002C  
                        ??_I2C_DO_ADDRESS_NACK 0010                  __end_of_wr2RegCompleteHandler 4A10  
                  __size_of_EUSART_Receive_ISR 00BE                            _I2C_DO_RX_NACK_STOP 4C64  
                        _rd1RegCompleteHandler 49B8                    __end_of_SHT40_temp_GetValue 3B34  
                           ?_I2C_MasterStartRx 0001                     __end_of_I2C_MasterSendNack 4CA8  
                             ?_I2C_WriteNBytes 0016                         I2C_WriteNBytes@address 001A  
                        _wr1RegCompleteHandler 4960                            ??_I2C_MasterSendAck 0005  
                     rd1RegCompleteHandler@ptr 000E                                        ?___flge 001E  
                ?_EUSART_SetTxInterruptHandler 0005                                        ?___fleq 0005  
             _EUSART_TxDefaultInterruptHandler 00FC                    __end_of_I2C_DO_SEND_RESTART 4C84  
                              _I2C_DO_TX_EMPTY 4210                            I2C_SetBuffer@buffer 0005  
                                      ?___wmul 0005                                        ?_efgtoa 004F  
               __end_of_I2C_MasterWaitForEvent 4BC2                            ??_I2C_MasterStartRx 0005  
                __size_of_I2C_DO_SEND_ADR_READ 0010                                        ?_floorf 0037  
                                      _BAUDCON 000FB8               __size_of_I2C_CallbackReturnReset 0004  
                 ??_EUSART_DefaultErrorHandler 0001                          ??_I2C_MasterOperation 0014  
                                      ?_printf 017E                 I2C_SetDataCompleteCallback@ptr 000C  
                                      ?_strcpy 0005                                        ?_strlen 0005  
                     ??_I2C_DO_RX_NACK_RESTART 0005              __end_of_I2C_DO_SEND_RESTART_WRITE 4C8C  
                         ?_I2C_DO_RX_NACK_STOP 0001                                  _eusartRxCount 00F7  
                                    ?___xxtofl 0005                             __end_of_SHT40_Read 478C  
                           __size_of_vfpfcnvrt 066C                  __size_of_EUSART_RxDataHandler 002C  
                    __end_of_I2C_MasterSendAck 4CA2                                        _OSCTUNE 000F9B  
                     ??_EUSART_SetErrorHandler 0007                                        _SSPCON1 000FC6  
                                      _SSPCON2 000FC5                                        _SSPSTAT 000FC7  
                    __end_of_I2C_MasterStartRx 4CC4                           I2C_Close@returnValue 0005  
                 ?_I2C_SetDataCompleteCallback 000A                                      _I2C_DO_RX 4046  
                                    _I2C_DO_TX 3CBE               __end_of_I2C_DO_SEND_RESTART_READ 4C94  
                                    _I2C_Close 4A10                      ??_rdBlkRegCompleteHandler 0010  
                         _I2C_MasterDisableIrq 4CD8                                ??_I2C_MasterFsm 0012  
                                      __Hparam 0000            __size_of_EUSART_DefaultErrorHandler 0006  
                                      __Lparam 0000                                 _I2C_ReadNBytes 46BE  
                          __end_of_I2C_DO_IDLE 4C06                            __end_of_I2C_DO_RCEN 4BFA  
                                   _readBuffer 0174                                __size_of___flge 0104  
                              __size_of___fleq 00AA                                        ___fladd 237C  
                                      ___fldiv 2C66                                        ___awdiv 3BFA  
                                      ___flneg 488A                                        ___awmod 3E40  
                                      ___flmul 283C                                        ___flsub 4678  
                                      ___fltol 3688                                ??_I2C_SetBuffer 0009  
                              __size_of___wmul 0026                                      ?_vfprintf 00B7  
                      I2C_SetBuffer@bufferSize 0007                                   __psmallconst 1000  
                              __size_of_efgtoa 0CA6                             I2C_ReadNBytes@data 0016  
                               _I2C_MasterRead 4C54                                 _I2C_MasterOpen 4B04  
                              __size_of_floorf 0212                                        __pcinit 4A68  
                               _I2C_MasterStop 4CCC                                 _I2C_Initialize 4B8A  
                                      __ramtop 1000                      __size_of_I2C_DO_SEND_STOP 0008  
                                      __ptext0 3EF0                                        __ptext1 4A92  
                                      __ptext2 4452                                        __ptext3 1D10  
                                      __ptext4 3990                                        __ptext5 106A  
                                      __ptext6 44B6                                        __ptext7 4852  
                                      __ptext8 4516                                        __ptext9 3B34  
                              __size_of_printf 0028                          ??_I2C_DO_RX_NACK_STOP 0005  
                              __size_of_strcpy 005E                                __size_of_strlen 0036  
                        _OSCILLATOR_Initialize 4C10                                   __size_of_pad 00C6  
                                      _isdigit 48C2                                     ??___xxtofl 0009  
                             ___awmod@dividend 0005                             I2C_SetCallback@idx 0009  
                     __size_of_I2C_MasterClose 0004                       ??_PIN_MANAGER_Initialize 0005  
                I2C_CallbackReturnReset@funPtr 000E                                        _isspace 4626  
                           I2C_SetCallback@ptr 0007                       wr1RegCompleteHandler@ptr 000E  
                                      _isupper 4852                                        efgtoa@c 0055  
                                      efgtoa@d 007D                                        efgtoa@e 0095  
                                      efgtoa@f 0051                                        efgtoa@g 0091  
                                      efgtoa@h 0087                                        efgtoa@i 008F  
                                      efgtoa@l 008B                                        efgtoa@m 0077  
                                      efgtoa@n 0097                                        efgtoa@p 0081  
                                      efgtoa@t 0071                                        efgtoa@u 0099  
                                      efgtoa@w 0083                       fp__I2C_DO_SEND_ADR_WRITE 0000  
                     __size_of_I2C_MasterStart 0004                       __size_of_I2C_MasterWrite 0008  
                                      atoi@neg 0012                     __size_of_SYSTEM_Initialize 0016  
                                      _tolower 44B6                                        _strncmp 3990  
                         end_of_initialization 4A88                                        floorf@e 0045  
                                      floorf@m 0041                                        floorf@u 0047  
                                      floorf@x 0037                                     ?_I2C_DO_RX 0001  
                                   ?_I2C_DO_TX 0001          __end_of_EUSART_SetOverrunErrorHandler 4C38  
       __size_of_EUSART_SetOverrunErrorHandler 000A                  _EUSART_SetOverrunErrorHandler 4C2E  
                    __size_of_I2C_MasterIsNack 0014                                        fputc@fp 0009  
                                   ?_I2C_Close 0001                                        fputs@fp 0012  
                       ?_rd1RegCompleteHandler 000E                        __end_of_I2C_DO_TX_EMPTY 428C  
                    __size_of_I2C_MasterSetIrq 0004                          ?_I2C_MasterDisableIrq 0001  
                       __end_of_I2C_ReadNBytes 4704                              _EUSART_Initialize 4306  
                       ?_wr1RegCompleteHandler 000E                       fp__rd2RegCompleteHandler 0000  
                           ?_EUSART_Initialize 0001                       __size_of_I2C_SetCallback 007A  
                            __end_of_vfpfcnvrt 237C                                     efgtoa@mode 0086  
                                   efgtoa@sign 007F                                      _RCSTAbits 000FAB  
                                      postdec2 000FDD                         __end_of_I2C_MasterRead 4C5C  
                       __end_of_I2C_MasterOpen 4B26                       fp__wr2RegCompleteHandler 0000  
                                      postinc0 000FEE                                        postinc1 000FE6  
                                      postinc2 000FDE                         __end_of_I2C_MasterStop 4CD0  
                       __end_of_I2C_Initialize 4B9E                                     ??_vfprintf 0056  
                    fp__I2C_CallbackReturnStop 0000                                     _temperatur 00E7  
                                      strcpy@d 000D                                        strlen@a 0007  
                                      strcpy@s 000B                                        strlen@s 0005  
                          ??_EUSART_Initialize 0007                   __size_of_SHT40_humy_GetValue 0128  
               ??_EUSART_SetTxInterruptHandler 0007                __end_of_rdBlkRegCompleteHandler 4852  
                         _I2C_MasterSendTxData 4C94                                fp__I2C_DO_RESET 0000  
              __size_of_I2C_DO_RX_NACK_RESTART 0008                                    ___fladd@grs 0046  
                                ___xxtofl@sign 000D                    ?_I2C_SetAddressNackCallback 000A  
                        __size_of_EUSART_Write 0058                     __size_of_I2C_MasterSendAck 0006  
                                  ___fldiv@grs 0031                                    ___fldiv@rem 002A  
                            __size_of_I2C_Open 008E                __size_of_EUSART_SetErrorHandler 000A  
                   __size_of_I2C_MasterStartRx 0004                                    ___flmul@grs 0012  
                    __end_of_EUSART_Initialize 437C                                    _I2C_DO_IDLE 4BFA  
                                  _I2C_DO_RCEN 4BEE                     rdBlkRegCompleteHandler@ptr 000E  
                                    _TXSTAbits 000FAC                 SHT40_temp_GetValue@tempDataAnz 004F  
                    SHT40_temp_GetValue@buffer 004D                                ?_I2C_ReadNBytes 0016  
                      ?_I2C_CallbackReturnStop 000E                       _I2C_DO_SEND_RESTART_READ 4C8C  
                  fp__I2C_DO_SEND_RESTART_READ 0000                   I2C_CallbackReturnStop@funPtr 000E  
                              ?_I2C_MasterRead 0001                                ?_I2C_MasterOpen 0001  
                 __end_of_INTERRUPT_Initialize 4CB8                                ?_I2C_MasterStop 0001  
                              ?_I2C_Initialize 0001                        _I2C_CallbackReturnReset 4CC4  
                   fp__I2C_CallbackReturnReset 0000                                 __end_of___flge 3892  
                               __end_of___fleq 4046             __end_of_EUSART_DefaultErrorHandler 4CB4  
                   _EUSART_DefaultErrorHandler 4CAE                                    vfpfcnvrt@ap 00A1  
                                  vfpfcnvrt@ct 00AF                                    vfpfcnvrt@fp 009D  
                               __end_of___wmul 4AE0           __size_of_I2C_SetDataCompleteCallback 0018  
                               __end_of_efgtoa 1D10                                   _EUSART_Write 45CE  
                               __end_of_floorf 3212                          ?_I2C_MasterSendTxData 0001  
                       ?_OSCILLATOR_Initialize 0001                                     floorf@F527 00DB  
                  ??_I2C_DO_SEND_RESTART_WRITE 0005                                 __end_of_printf 4ABA  
                               __end_of_strcpy 4574                                 __end_of_strlen 4930  
                          start_initialization 4A68                __size_of_PIN_MANAGER_Initialize 0030  
                                  __end_of_pad 3BFA                                  ?_I2C_DO_RESET 0001  
 EUSART_SetRxInterruptHandler@interruptHandler 0005   EUSART_SetTxInterruptHandler@interruptHandler 0005  
                                  putch@txData 0006                                    ??_I2C_DO_RX 0010  
                                  ??_I2C_DO_TX 0010                              ??_I2C_MasterClose 0005  
                       ??_I2C_MasterDisableIrq 0005                                    ??_I2C_Close 0005  
                            ??_I2C_MasterStart 0005                          __end_of___fpclassifyf 3990  
                            ??_I2C_MasterWrite 0016                 __end_of_I2C_CallbackReturnStop 4CCC  
                       _I2C_DO_RX_NACK_RESTART 4C5C                               ?_I2C_DO_TX_EMPTY 0001  
                           _I2C_MasterClearIrq 4CE0                 ?_EUSART_SetOverrunErrorHandler 0005  
                                  vfprintf@fmt 00B9                     _EUSART_FramingErrorHandler 00F8  
                                     ??___flge 0026                                       ??___fleq 000D  
                                     ??___wmul 0009                         _EUSART_SetErrorHandler 4C42  
                    SHT40_humy_GetValue@buffer 004D                            ?_I2C_MasterClearIrq 0001  
                                     ??_efgtoa 0060                    __end_of_I2C_MasterGetRxData 4CC0  
                                     ??_floorf 003B                          __end_of_I2C_DO_RX_ACK 4C74  
                             _I2C_DO_SEND_STOP 4C74                              ??_I2C_SetCallback 0009  
                                     ??_printf 0056                            I2C_Open@returnValue 0006  
                                     ??_strcpy 0009                             _I2C_MasterSendNack 4CA2  
                                     ??_strlen 0007                       ?_I2C_MasterEnableRestart 0001  
                                    ___fladd@a 003B                                      ___fladd@b 0037  
                       fp__I2C_DO_SEND_RESTART 0000                                      ___fldiv@a 0022  
                                    ___fldiv@b 001E                    __end_of_EUSART_Transmit_ISR 4812  
                        _I2C_DO_SEND_ADR_WRITE 4BC2                                      ___flmul@a 0009  
                                    ___flmul@b 0005                                    __pbssCOMRAM 0056  
                                    ___flsub@a 004B                                      ___flsub@b 0047  
                                __pcstackBANK0 0060                                  __pcstackBANK1 017E  
                               ??_I2C_DO_RESET 0005                            ?_I2C_MasterSendNack 0001  
                            __size_of___xxtofl 01B4                   __end_of_I2C_DO_SEND_ADR_READ 4BE2  
                         ??_I2C_MasterClearIrq 0005                    __end_of_I2C_DO_ADDRESS_NACK 4452  
                   __end_of_EUSART_Receive_ISR 3E40                               _I2C_MasterIsNack 4B9E  
                   __size_of_EUSART_Initialize 0076                      _I2C_DO_SEND_RESTART_WRITE 4C84  
             _EUSART_RxDefaultInterruptHandler 00FA                               _I2C_MasterSetIrq 4CB8  
                                    _atoi$2165 0014                                      _atoi$2166 0018  
                                    _atoi$2167 0016                                      __pnvBANK0 00F8  
                                    __pnvBANK1 0184                          _rd2RegCompleteHandler 498C  
                        __end_of_fsmStateTable 1021                                    _efgtoa$2100 0065  
                                  _efgtoa$2101 0067                                    _efgtoa$2110 006B  
                                  _efgtoa$2111 006D                                    _efgtoa$2112 006F  
                                  _efgtoa$2106 0069                   __end_of_EUSART_RxDataHandler 4A68  
                       _PIN_MANAGER_Initialize 4930                          _wr2RegCompleteHandler 49E4  
                    ??_I2C_CallbackReturnReset 0010                    __end_of_I2C_MasterOperation 47D0  
                         ??_I2C_MasterSendNack 0005                       rd2RegCompleteHandler@ptr 000E  
                                    __pintcode 0008                                       ?___fladd 0037  
                                     ?___fldiv 001E                                       ?___awdiv 0005  
                                    __ptext100 4CA8                                      __ptext101 4CE4  
                                    __ptext102 4CAE                                       ?___flneg 0005  
                                    __ptext103 4A3C                                      __ptext104 0000  
                                     ?___awmod 0005                                       ?___flmul 0005  
                                     ?___flsub 0047                                       ?___fltol 0005  
                                 _eusartRxHead 0057                   __size_of_SHT40_temp_GetValue 00C8  
                                 _eusartTxHead 0059                                   _eusartRxTail 0056  
                       ??_I2C_MasterSendTxData 0005                                   _eusartTxTail 0058  
                 ??_INTERRUPT_InterruptManager 0001                       __size_of_I2C_WriteNBytes 005A  
                            __size_of_vfprintf 0064                                   fp__I2C_DO_RX 0000  
                                 fp__I2C_DO_TX 0000                        _eusartTxBufferRemaining 00FE  
                 __size_of_I2C_DO_SEND_RESTART 0008                                    __smallconst 1000  
                                     ?_isdigit 0005                        I2C_MasterOperation@read 0014  
                                     _I2C_Open 4182                                       ?_isspace 0005  
                                     ?_isupper 0005                              I2C_ReadNBytes@len 0018  
                                     ?_tolower 000B                                 __size_of_fputc 0096  
                               __size_of_fputs 0044                        ??_rd1RegCompleteHandler 0010  
                                     ?_strncmp 0005                                 __size_of_putch 000A  
                         _INTERRUPT_Initialize 4CB4                                 _eusartRxBuffer 00CB  
                      ??_wr1RegCompleteHandler 0010                            _SHT40_humy_GetValue 3560  
                               _eusartTxBuffer 00D3                                 ___wmul@product 0009  
       EUSART_SetErrorHandler@interruptHandler 0005                                       _PIE1bits 000F9D  
                            _eusartRxLastError 00F6            __size_of_INTERRUPT_InterruptManager 00A8  
                                     _PIR1bits 000F9E                                       i2u602_40 0028  
                                     i2u602_41 0024                ??_EUSART_SetFramingErrorHandler 0007  
                                     i2u603_40 0036                                       i2u603_41 0032  
                                     _PIR2bits 000FA1                                       i2u604_40 0044  
                                     i2u604_41 0040                                       i2u606_40 0070  
                                     i2u605_48 004A                                       i2u606_41 006C  
                                     i2u605_49 005E                                       i2u607_40 007E  
                                     i2u607_41 007A                                       i2u545_40 4A5E  
                                     i2u608_48 0084                                       i2u545_41 4A5A  
                                     i2u608_49 0098                                       i2u582_40 47E2  
                                     i2u582_41 47DE                                       i2u583_40 4804  
                                     i2u583_41 4800                                       i2u584_40 3DA0  
                                     i2u584_41 3D9C                                       i2u586_40 3DD6  
                                     i2u585_48 3DB6                                       i2u586_41 3DD2  
                                     i2u585_49 3DC8                                       i2u588_40 3E1C  
                                     i2u587_48 3DEC                                       i2u588_41 3E18  
                                     i2u587_49 3E00                                       i2u589_48 3E22  
                                     i2u589_49 3E36                          __end_of_I2C_MasterFsm 43EC  
                                     _RCONbits 000FD0                    __end_of_I2C_DO_RX_NACK_STOP 4C6C  
         fp__EUSART_DefaultOverrunErrorHandler 0000      __end_of_EUSART_DefaultOverrunErrorHandler 4CAE  
   __size_of_EUSART_DefaultOverrunErrorHandler 0006            ??_EUSART_DefaultOverrunErrorHandler 0001  
           ?_EUSART_DefaultOverrunErrorHandler 0001              _EUSART_DefaultOverrunErrorHandler 4CA8  
              __end_of_I2C_MasterEnableRestart 4CD4                                 fp__I2C_DO_IDLE 0000  
                               fp__I2C_DO_RCEN 0000                                      _vfpfcnvrt 1D10  
                        __end_of_I2C_SetBuffer 4B04                           ?_SHT40_humy_GetValue 0047  
                            ___wmul@multiplier 0005                         ?_I2C_DO_SEND_ADR_WRITE 0001  
                     I2C_MasterSendTxData@data 0005                       wr2RegCompleteHandler@ptr 000E  
                                 _isspace$2196 000B                                     vfpfcnvrt@c 00B6  
                                   vfpfcnvrt@f 00B2                                    _INTCON2bits 000FF1  
                   ??_I2C_DO_SEND_RESTART_READ 0005                          ?_INTERRUPT_Initialize 0001  
                     ?_rdBlkRegCompleteHandler 000E                               ??_I2C_ReadNBytes 001A  
                                   _I2C_Poller 4B26                                     _I2C_Status 0100  
                                 ?_I2C_DO_IDLE 0001                                   ?_I2C_DO_RCEN 0001  
                       ?_rd2RegCompleteHandler 000E                               ??_I2C_MasterRead 0016  
                        fp__EUSART_Receive_ISR 0000                            I2C_WriteNBytes@data 0016  
                             ??_I2C_MasterOpen 0005                         ?_wr2RegCompleteHandler 000E  
                             ??_I2C_MasterStop 0005                       ??_I2C_MasterWaitForEvent 0005  
                             ??_I2C_Initialize 0005                      fp__I2C_DO_RX_NACK_RESTART 0000  
                                     __Hrparam 0000                                     vfprintf@ap 00BB  
                                     __Lrparam 0000                                     vfprintf@fp 00B7  
                         __end_of_I2C_DO_RESET 4BEE                        ??_OSCILLATOR_Initialize 0005  
                          _EUSART_ErrorHandler 0184                               __size_of___fladd 04C0  
                             __size_of___fldiv 039A                               __size_of___awdiv 00C4  
                         _I2C_DO_SEND_ADR_READ 4BD2                               __size_of___flneg 0038  
                             __size_of___awmod 00B0                               __size_of___flmul 042A  
                             __size_of___flsub 0046                               __size_of___fltol 0106  
                        ??_SHT40_humy_GetValue 004B                    ?_EUSART_DefaultErrorHandler 0001  
                                   ?_vfpfcnvrt 009D                             ___fpclassifyf@F465 00DF  
                              _I2C_MasterClose 4CDC                  I2C_SetAddressNackCallback@ptr 000C  
                              I2C_Open@address 0005                                       ___xxtofl 3212  
                          fp__I2C_DO_SEND_STOP 0000                                _I2C_MasterStart 4CD4  
                              _I2C_MasterWrite 4C4C                               __size_of_isdigit 0038  
                         _EUSART_RxDataHandler 4A3C                              ??_I2C_WriteNBytes 001A  
                             __size_of_isspace 0052                                       __ptext10 48FA  
                                     __ptext11 4704                                       __ptext20 3F9C  
                                     __ptext12 40EC                                       __ptext21 3E40  
                                     __ptext13 4C06                                       __ptext30 4CB4  
                                     __ptext22 3BFA                                       __ptext14 45CE  
                                     __ptext31 4B8A                                       __ptext23 33C6  
                                     __ptext15 3000                                       __ptext40 3212  
                                     __ptext32 4306                                       __ptext24 4626  
                                     __ptext16 3892                                       __ptext41 283C  
                                     __ptext33 4C1A                                       __ptext25 48C2  
                                     __ptext17 3688                                       __ptext50 4182  
                                     __ptext42 378E                                       __ptext34 4C24  
                                     __ptext26 4ABA                                       __ptext18 4678  
                                     __ptext51 4B04                                       __ptext43 2C66  
                                     __ptext35 4C2E                                       __ptext27 4B74  
                                     __ptext19 488A                                       __ptext60 4C64  
                                     __ptext52 4C54                                       __ptext44 237C  
                                     __ptext36 4C38                                       __ptext28 4930  
                                     __ptext61 4C6C                                       __ptext53 478C  
                                     __ptext45 4748                                       __ptext37 4C42  
                                     __ptext29 4C10                                       __ptext70 4BD2  
                                     __ptext62 4C74                                       __ptext54 4B26  
                                     __ptext46 4574                                       __ptext38 3A6C  
                                     __ptext71 4BFA                                       __ptext63 4C7C  
                                     __ptext55 4BB2                                       __ptext47 4B44  
                                     __ptext39 3560                                       __ptext80 4CC4  
                                     __ptext72 4210                                       __ptext64 4C84  
                                     __ptext56 437C                                       __ptext48 4C4C  
                                     __ptext81 4CC8                                       __ptext73 4CB8  
                                     __ptext65 4C8C                                       __ptext57 43EC  
                                     __ptext49 46BE                                       __ptext90 4CCC  
                                     __ptext82 4812                                       __ptext74 4B9E  
                                     __ptext66 4BEE                                       __ptext58 4BE2  
                                     __ptext91 4CD0                                       __ptext83 4960  
                                     __ptext75 4C94                                       __ptext67 4046  
                                     __ptext59 4C5C                                       __ptext92 4CD4  
                                     __ptext84 498C                                       __ptext76 4C9C  
                                     __ptext68 3CBE                                       __ptext93 4A10  
                                     __ptext85 49B8                                       __ptext77 4CBC  
                                     __ptext69 4BC2                                       __ptext94 4CD8  
                                     __ptext86 49E4                                       __ptext78 4CA2  
                                     __ptext95 4CDC                                       __ptext87 4B5C  
                                     __ptext79 4CC0                                       __ptext96 4CE0  
                                     __ptext88 428C                                       __ptext89 4AE0  
                                     __ptext98 47D0                                       __ptext99 3D82  
                             __size_of_isupper 0038            __end_of_I2C_SetDataCompleteCallback 4B74  
                  _I2C_SetDataCompleteCallback 4B5C                        ?_I2C_DO_RX_NACK_RESTART 0001  
                             __size_of_tolower 0060                                     strcpy@dest 0005  
                             __size_of_strncmp 00DC                       __end_of_I2C_DO_SEND_STOP 4C7C  
                                __size_of_atoi 019A                                  __size_of_main 00AC  
                      ?_EUSART_SetErrorHandler 0005                                _I2C_SetCallback 428C  
                ??_I2C_SetDataCompleteCallback 000E                                       efgtoa@fp 004F  
                                     efgtoa@ne 0075                                       efgtoa@pp 0073  
                                     efgtoa@ou 0079                                       _lufthumy 00E3  
EUSART_SetOverrunErrorHandler@interruptHandler 0005                                       isa$xinst 000000  
                                     int$flags 005A                          ?_I2C_DO_SEND_ADR_READ 0001  
                                     _vfprintf 4452             __end_of_INTERRUPT_InterruptManager 00B0  
                   _INTERRUPT_InterruptManager 0008                                      printf@fmt 017E  
        __end_of_EUSART_SetFramingErrorHandler 4C42         __size_of_EUSART_SetFramingErrorHandler 000A  
                _EUSART_SetFramingErrorHandler 4C38                       __end_of_I2C_MasterIsNack 4BB2  
                     __end_of_I2C_MasterSetIrq 4CBC                                 _vfpfcnvrt$2131 00AD  
                               _vfpfcnvrt$2126 00A9                                 _vfpfcnvrt$2127 00AB  
                                   _INTCONbits 000FF2                             I2C_WriteNBytes@len 0018  
                        ?_EUSART_RxDataHandler 0001                                       isdigit@c 0005  
                       ??_INTERRUPT_Initialize 0005                 __end_of_I2C_DO_RX_NACK_RESTART 4C64  
                          _SHT40_temp_GetValue 3A6C                                       intlevel2 0000  
                                  ?_I2C_Poller 0001                         fp__EUSART_Transmit_ISR 0000  
             __size_of_I2C_MasterEnableRestart 0004                                       isspace@c 0005  
                      ?_PIN_MANAGER_Initialize 0001                 __end_of_EUSART_SetErrorHandler 4C4C  
                                   _SHT40_Read 4748                            _I2C_DO_SEND_RESTART 4C7C  
                                    strcpy@src 0007                  __size_of_I2C_MasterDisableIrq 0004  
                                     isupper@c 0005                         fp__I2C_DO_ADDRESS_NACK 0000  
                                    strncmp@_l 0005                                      strncmp@_r 0007  
         __end_of_EUSART_SetRxInterruptHandler 4C2E          __size_of_EUSART_SetRxInterruptHandler 000A  
                 _EUSART_SetRxInterruptHandler 4C24                __size_of_I2C_MasterWaitForEvent 0010  
                                  efgtoa@nmode 0085                                       printf@ap 00BF  
                           _EUSART_Receive_ISR 3D82  EUSART_SetFramingErrorHandler@interruptHandler 0005  
                      __end_of_I2C_MasterClose 4CE0                       __size_of_I2C_DO_TX_EMPTY 007C  
                         ?_SHT40_temp_GetValue 0047                             fp__I2C_DO_TX_EMPTY 0000  
                                  ??_vfpfcnvrt 00A3                        __end_of_I2C_MasterStart 4CD8  
                      __end_of_I2C_MasterWrite 4C54                           ?_I2C_DO_SEND_RESTART 0001  
                                     tolower@c 000B                            ?_EUSART_Receive_ISR 0001  
                       __size_of___fpclassifyf 00FE                  fp__EUSART_DefaultErrorHandler 0000  
                 __size_of_I2C_MasterGetRxData 0004                                       strncmp@l 000C  
                                     strncmp@n 0009                                       strncmp@r 000E  
                                  _SSPCON1bits 000FC6                                    _SSPCON2bits 000FC5  
                                ___fladd@signs 0043                    __size_of_I2C_MasterClearIrq 0004  
                           EUSART_Write@txData 0005                   __size_of_EUSART_Transmit_ISR 0042  
                      __end_of_I2C_SetCallback 4306                 __end_of_PIN_MANAGER_Initialize 4960  
               __size_of_rd1RegCompleteHandler 002C                  __end_of_rd1RegCompleteHandler 49E4  
                       __size_of_I2C_DO_RX_ACK 0008                               fp__I2C_DO_RX_ACK 0000  
                                 ___fladd@aexp 0044                                   ___fladd@bexp 0045  
               __size_of_wr1RegCompleteHandler 002C                           ??_EUSART_Receive_ISR 0001  
                        __size_of_I2C_DO_RESET 000C                  __end_of_wr1RegCompleteHandler 498C  
                 __size_of_I2C_DO_ADDRESS_NACK 0066                           __size_of_I2C_DO_IDLE 000C  
                         __size_of_I2C_DO_RCEN 000C                             __size_of_I2C_DO_RX 00A6  
                           __size_of_I2C_DO_TX 00C4  
