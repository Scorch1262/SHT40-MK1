

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Mon May 10 13:45:41 2021

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1,inline
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1,inline
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1,inline
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1
    79                           	psect	text64,global,reloc=2,class=CODE,delta=1
    80                           	psect	text65,global,reloc=2,class=CODE,delta=1
    81                           	psect	text66,global,reloc=2,class=CODE,delta=1
    82                           	psect	text67,global,reloc=2,class=CODE,delta=1
    83                           	psect	text68,global,reloc=2,class=CODE,delta=1
    84                           	psect	text69,global,reloc=2,class=CODE,delta=1
    85                           	psect	text70,global,reloc=2,class=CODE,delta=1
    86                           	psect	text71,global,reloc=2,class=CODE,delta=1
    87                           	psect	text72,global,reloc=2,class=CODE,delta=1
    88                           	psect	text73,global,reloc=2,class=CODE,delta=1,inline
    89                           	psect	text74,global,reloc=2,class=CODE,delta=1,inline
    90                           	psect	text75,global,reloc=2,class=CODE,delta=1,inline
    91                           	psect	text76,global,reloc=2,class=CODE,delta=1,inline
    92                           	psect	text77,global,reloc=2,class=CODE,delta=1,inline
    93                           	psect	text78,global,reloc=2,class=CODE,delta=1,inline
    94                           	psect	text79,global,reloc=2,class=CODE,delta=1,inline
    95                           	psect	text80,global,reloc=2,class=CODE,delta=1
    96                           	psect	text81,global,reloc=2,class=CODE,delta=1
    97                           	psect	text82,global,reloc=2,class=CODE,delta=1
    98                           	psect	text83,global,reloc=2,class=CODE,delta=1
    99                           	psect	text84,global,reloc=2,class=CODE,delta=1
   100                           	psect	text85,global,reloc=2,class=CODE,delta=1
   101                           	psect	text86,global,reloc=2,class=CODE,delta=1
   102                           	psect	text87,global,reloc=2,class=CODE,delta=1
   103                           	psect	text88,global,reloc=2,class=CODE,delta=1
   104                           	psect	text89,global,reloc=2,class=CODE,delta=1
   105                           	psect	text90,global,reloc=2,class=CODE,delta=1,inline
   106                           	psect	text91,global,reloc=2,class=CODE,delta=1,inline
   107                           	psect	text92,global,reloc=2,class=CODE,delta=1,inline
   108                           	psect	text93,global,reloc=2,class=CODE,delta=1
   109                           	psect	text94,global,reloc=2,class=CODE,delta=1,inline
   110                           	psect	text95,global,reloc=2,class=CODE,delta=1,inline
   111                           	psect	text96,global,reloc=2,class=CODE,delta=1,inline
   112                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   113                           	psect	text98,global,reloc=2,class=CODE,delta=1
   114                           	psect	text99,global,reloc=2,class=CODE,delta=1
   115                           	psect	text100,global,reloc=2,class=CODE,delta=1
   116                           	psect	text101,global,reloc=2,class=CODE,delta=1
   117                           	psect	text102,global,reloc=2,class=CODE,delta=1
   118                           	psect	text103,global,reloc=2,class=CODE,delta=1
   119                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   120                           	psect	text104,global,reloc=2,class=CODE,delta=1
   121                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   122                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   123                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   124                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   125  0000                     
   126                           ; Version 2.20
   127                           ; Generated 05/05/2020 GMT
   128                           ; 
   129                           ; Copyright © 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   130                           ; All rights reserved.
   131                           ; 
   132                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   133                           ; 
   134                           ; Redistribution and use in source and binary forms, with or without modification, are
   135                           ; permitted provided that the following conditions are met:
   136                           ; 
   137                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   138                           ;        conditions and the following disclaimer.
   139                           ; 
   140                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   141                           ;        of conditions and the following disclaimer in the documentation and/or other
   142                           ;        materials provided with the distribution.
   143                           ; 
   144                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   145                           ;        software without specific prior written permission.
   146                           ; 
   147                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   148                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   149                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   150                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   151                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   152                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   153                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   154                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   155                           ; 
   156                           ; 
   157                           ; Code-generator required, PIC18F46K20 Definitions
   158                           ; 
   159                           ; SFR Addresses
   160  0000                     
   161                           	psect	smallconst
   162  001000                     __psmallconst:
   163                           	callstack 0
   164  001000  00                 	db	0
   165  001001                     _fsmStateTable:
   166                           	callstack 0
   167  001001  66                 	db	low _I2C_DO_IDLE
   168  001002  4B                 	db	high _I2C_DO_IDLE
   169  001003  3E                 	db	low _I2C_DO_SEND_ADR_READ
   170  001004  4B                 	db	high _I2C_DO_SEND_ADR_READ
   171  001005  2E                 	db	low _I2C_DO_SEND_ADR_WRITE
   172  001006  4B                 	db	high _I2C_DO_SEND_ADR_WRITE
   173  001007  26                 	db	low _I2C_DO_TX
   174  001008  3C                 	db	high _I2C_DO_TX
   175  001009  B0                 	db	low _I2C_DO_RX
   176  00100A  3F                 	db	high _I2C_DO_RX
   177  00100B  5A                 	db	low _I2C_DO_RCEN
   178  00100C  4B                 	db	high _I2C_DO_RCEN
   179  00100D  7A                 	db	low _I2C_DO_TX_EMPTY
   180  00100E  41                 	db	high _I2C_DO_TX_EMPTY
   181  00100F  F8                 	db	low _I2C_DO_SEND_RESTART_READ
   182  001010  4B                 	db	high _I2C_DO_SEND_RESTART_READ
   183  001011  F0                 	db	low _I2C_DO_SEND_RESTART_WRITE
   184  001012  4B                 	db	high _I2C_DO_SEND_RESTART_WRITE
   185  001013  E8                 	db	low _I2C_DO_SEND_RESTART
   186  001014  4B                 	db	high _I2C_DO_SEND_RESTART
   187  001015  E0                 	db	low _I2C_DO_SEND_STOP
   188  001016  4B                 	db	high _I2C_DO_SEND_STOP
   189  001017  D8                 	db	low _I2C_DO_RX_ACK
   190  001018  4B                 	db	high _I2C_DO_RX_ACK
   191  001019  D0                 	db	low _I2C_DO_RX_NACK_STOP
   192  00101A  4B                 	db	high _I2C_DO_RX_NACK_STOP
   193  00101B  C8                 	db	low _I2C_DO_RX_NACK_RESTART
   194  00101C  4B                 	db	high _I2C_DO_RX_NACK_RESTART
   195  00101D  4E                 	db	low _I2C_DO_RESET
   196  00101E  4B                 	db	high _I2C_DO_RESET
   197  00101F  56                 	db	low _I2C_DO_ADDRESS_NACK
   198  001020  43                 	db	high _I2C_DO_ADDRESS_NACK
   199  001021                     __end_of_fsmStateTable:
   200                           	callstack 0
   201  001021                     STR_2:
   202                           
   203                           ; BSR set to: 0
   204  001021  4C                 	db	76	;'L'
   205  001022  75                 	db	117	;'u'
   206  001023  66                 	db	102	;'f'
   207  001024  74                 	db	116	;'t'
   208  001025  66                 	db	102	;'f'
   209  001026  65                 	db	101	;'e'
   210  001027  75                 	db	117	;'u'
   211  001028  63                 	db	99	;'c'
   212  001029  68                 	db	104	;'h'
   213  00102A  74                 	db	116	;'t'
   214  00102B  69                 	db	105	;'i'
   215  00102C  67                 	db	103	;'g'
   216  00102D  6B                 	db	107	;'k'
   217  00102E  65                 	db	101	;'e'
   218  00102F  69                 	db	105	;'i'
   219  001030  74                 	db	116	;'t'
   220  001031  20                 	db	32
   221  001032  3D                 	db	61	;'='
   222  001033  20                 	db	32
   223  001034  25                 	db	37
   224  001035  34                 	db	52	;'4'
   225  001036  2E                 	db	46
   226  001037  32                 	db	50	;'2'
   227  001038  66                 	db	102	;'f'
   228  001039  25                 	db	37
   229  00103A  25                 	db	37
   230  00103B  0D                 	db	13
   231  00103C  0A                 	db	10
   232  00103D  00                 	db	0
   233  00103E                     STR_1:
   234                           
   235                           ; BSR set to: 0
   236  00103E  54                 	db	84	;'T'
   237  00103F  65                 	db	101	;'e'
   238  001040  6D                 	db	109	;'m'
   239  001041  70                 	db	112	;'p'
   240  001042  65                 	db	101	;'e'
   241  001043  72                 	db	114	;'r'
   242  001044  61                 	db	97	;'a'
   243  001045  74                 	db	116	;'t'
   244  001046  75                 	db	117	;'u'
   245  001047  72                 	db	114	;'r'
   246  001048  20                 	db	32
   247  001049  3D                 	db	61	;'='
   248  00104A  20                 	db	32
   249  00104B  25                 	db	37
   250  00104C  30                 	db	48	;'0'
   251  00104D  2E                 	db	46
   252  00104E  32                 	db	50	;'2'
   253  00104F  66                 	db	102	;'f'
   254  001050  43                 	db	67	;'C'
   255  001051  20                 	db	32
   256  001052  20                 	db	32
   257  001053  20                 	db	32
   258  001054  00                 	db	0
   259  001055                     STR_3:
   260                           
   261                           ; BSR set to: 0
   262  001055  49                 	db	73	;'I'
   263  001056  4E                 	db	78	;'N'
   264  001057  46                 	db	70	;'F'
   265  001058  00                 	db	0
   266  001059                     STR_7:
   267                           
   268                           ; BSR set to: 0
   269  001059  4E                 	db	78	;'N'
   270  00105A  41                 	db	65	;'A'
   271  00105B  4E                 	db	78	;'N'
   272  00105C  00                 	db	0
   273  00105D                     STR_4:
   274                           
   275                           ; BSR set to: 0
   276  00105D  69                 	db	105	;'i'
   277  00105E  6E                 	db	110	;'n'
   278  00105F  66                 	db	102	;'f'
   279  001060  00                 	db	0
   280  001061                     STR_8:
   281                           
   282                           ; BSR set to: 0
   283  001061  6E                 	db	110	;'n'
   284  001062  61                 	db	97	;'a'
   285  001063  6E                 	db	110	;'n'
   286  001064  00                 	db	0
   287  001065                     STR_11:
   288                           
   289                           ; BSR set to: 0
   290  001065  6C                 	db	108	;'l'
   291  001066  66                 	db	102	;'f'
   292  001067  00                 	db	0
   293  001068  00                 	db	0	; dummy byte at the end
   294  0000                     
   295                           	psect	nvBANK0
   296  0000FA                     __pnvBANK0:
   297                           	callstack 0
   298  0000FA                     _EUSART_RxDefaultInterruptHandler:
   299                           	callstack 0
   300  0000FA                     	ds	2
   301  0000FC                     _EUSART_TxDefaultInterruptHandler:
   302                           	callstack 0
   303  0000FC                     	ds	2
   304  0000FE                     _eusartTxBufferRemaining:
   305                           	callstack 0
   306  0000FE                     	ds	1
   307                           
   308                           	psect	nvBANK1
   309  00017E                     __pnvBANK1:
   310                           	callstack 0
   311  00017E                     _EUSART_ErrorHandler:
   312                           	callstack 0
   313  00017E                     	ds	2
   314  000180                     _EUSART_OverrunErrorHandler:
   315                           	callstack 0
   316  000180                     	ds	2
   317  000182                     _EUSART_FramingErrorHandler:
   318                           	callstack 0
   319  000182                     	ds	2
   320  0000                     _RCONbits	set	4048
   321  0000                     _RCREG	set	4014
   322  0000                     _RCSTAbits	set	4011
   323  0000                     _TXREG	set	4013
   324  0000                     _TXSTAbits	set	4012
   325  0000                     _SPBRGH	set	4016
   326  0000                     _SPBRG	set	4015
   327  0000                     _TXSTA	set	4012
   328  0000                     _RCSTA	set	4011
   329  0000                     _BAUDCON	set	4024
   330  0000                     _INTCONbits	set	4082
   331  0000                     _INTCON2bits	set	4081
   332  0000                     _WPUB	set	3964
   333  0000                     _ANSELH	set	3967
   334  0000                     _ANSEL	set	3966
   335  0000                     _TRISD	set	3989
   336  0000                     _TRISC	set	3988
   337  0000                     _TRISB	set	3987
   338  0000                     _TRISA	set	3986
   339  0000                     _TRISE	set	3990
   340  0000                     _LATC	set	3979
   341  0000                     _LATB	set	3978
   342  0000                     _LATA	set	3977
   343  0000                     _LATD	set	3980
   344  0000                     _LATE	set	3981
   345  0000                     _OSCTUNE	set	3995
   346  0000                     _OSCCON	set	4051
   347  0000                     _PIR1bits	set	3998
   348  0000                     _PIE1bits	set	3997
   349  0000                     _SSPSTATbits	set	4039
   350  0000                     _PIR2bits	set	4001
   351  0000                     _SSPCON2bits	set	4037
   352  0000                     _SSPBUF	set	4041
   353  0000                     _SSPCON1bits	set	4038
   354  0000                     _SSPADD	set	4040
   355  0000                     _SSPCON2	set	4037
   356  0000                     _SSPCON1	set	4038
   357  0000                     _SSPSTAT	set	4039
   358                           
   359                           ; #config settings
   360                           
   361                           	psect	cinit
   362  0049D2                     __pcinit:
   363                           	callstack 0
   364  0049D2                     start_initialization:
   365                           	callstack 0
   366  0049D2                     __initialization:
   367                           	callstack 0
   368                           
   369                           ; Clear objects allocated to BANK1 (126 bytes)
   370  0049D2  EE01  F000         	lfsr	0,__pbssBANK1
   371  0049D6  0E7E               	movlw	126
   372  0049D8                     clear_0:
   373  0049D8  6AEE               	clrf	postinc0,c
   374  0049DA  06E8               	decf	wreg,f,c
   375  0049DC  E1FD               	bnz	clear_0
   376                           
   377                           ; Clear objects allocated to BANK0 (53 bytes)
   378  0049DE  EE00  F0C5         	lfsr	0,__pbssBANK0
   379  0049E2  0E35               	movlw	53
   380  0049E4                     clear_1:
   381  0049E4  6AEE               	clrf	postinc0,c
   382  0049E6  06E8               	decf	wreg,f,c
   383  0049E8  E1FD               	bnz	clear_1
   384                           
   385                           ; Clear objects allocated to COMRAM (4 bytes)
   386  0049EA  6A59               	clrf	(__pbssCOMRAM+3)& (0+255),c
   387  0049EC  6A58               	clrf	(__pbssCOMRAM+2)& (0+255),c
   388  0049EE  6A57               	clrf	(__pbssCOMRAM+1)& (0+255),c
   389  0049F0  6A56               	clrf	__pbssCOMRAM& (0+255),c
   390  0049F2                     end_of_initialization:
   391                           	callstack 0
   392  0049F2                     __end_of__initialization:
   393                           	callstack 0
   394  0049F2  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   395  0049F4  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   396  0049F6  0100               	movlb	0
   397  0049F8  EF2D  F01F         	goto	_main	;jump to C main() function
   398                           
   399                           	psect	bssCOMRAM
   400  000056                     __pbssCOMRAM:
   401                           	callstack 0
   402  000056                     _eusartRxTail:
   403                           	callstack 0
   404  000056                     	ds	1
   405  000057                     _eusartRxHead:
   406                           	callstack 0
   407  000057                     	ds	1
   408  000058                     _eusartTxTail:
   409                           	callstack 0
   410  000058                     	ds	1
   411  000059                     _eusartTxHead:
   412                           	callstack 0
   413  000059                     	ds	1
   414                           
   415                           	psect	bssBANK0
   416  0000C5                     __pbssBANK0:
   417                           	callstack 0
   418  0000C5                     _eusartRxStatusBuffer:
   419                           	callstack 0
   420  0000C5                     	ds	8
   421  0000CD                     _eusartRxBuffer:
   422                           	callstack 0
   423  0000CD                     	ds	8
   424  0000D5                     _eusartTxBuffer:
   425                           	callstack 0
   426  0000D5                     	ds	8
   427  0000DD                     floorf@F524:
   428                           	callstack 0
   429  0000DD                     	ds	4
   430  0000E1                     ___fpclassifyf@F463:
   431                           	callstack 0
   432  0000E1                     	ds	4
   433  0000E5                     _lufthumy:
   434                           	callstack 0
   435  0000E5                     	ds	4
   436  0000E9                     _temperatur:
   437                           	callstack 0
   438  0000E9                     	ds	4
   439  0000ED                     _writeBuffer:
   440                           	callstack 0
   441  0000ED                     	ds	3
   442  0000F0                     _nout:
   443                           	callstack 0
   444  0000F0                     	ds	2
   445  0000F2                     _width:
   446                           	callstack 0
   447  0000F2                     	ds	2
   448  0000F4                     _prec:
   449                           	callstack 0
   450  0000F4                     	ds	2
   451  0000F6                     _flags:
   452                           	callstack 0
   453  0000F6                     	ds	2
   454  0000F8                     _eusartRxLastError:
   455                           	callstack 0
   456  0000F8                     	ds	1
   457  0000F9                     _eusartRxCount:
   458                           	callstack 0
   459  0000F9                     	ds	1
   460                           
   461                           	psect	bssBANK1
   462  000100                     __pbssBANK1:
   463                           	callstack 0
   464  000100                     _I2C_Status:
   465                           	callstack 0
   466  000100                     	ds	36
   467  000124                     _dbuf:
   468                           	callstack 0
   469  000124                     	ds	80
   470  000174                     _readBuffer:
   471                           	callstack 0
   472  000174                     	ds	10
   473                           
   474                           	psect	cstackBANK1
   475  000184                     __pcstackBANK1:
   476                           	callstack 0
   477  000184                     	ds	2
   478  000186                     printf@ap:
   479                           	callstack 0
   480                           
   481                           ; 2 bytes @ 0x2
   482  000186                     	ds	2
   483  000188                     ??_main:
   484                           
   485                           ; 1 bytes @ 0x4
   486  000188                     	ds	2
   487                           
   488                           	psect	cstackBANK0
   489  000060                     __pcstackBANK0:
   490                           	callstack 0
   491  000060                     ??_efgtoa:
   492                           
   493                           ; 1 bytes @ 0x0
   494  000060                     	ds	5
   495  000065                     efgtoa@ou:
   496                           	callstack 0
   497                           
   498                           ; 4 bytes @ 0x5
   499  000065                     	ds	4
   500  000069                     _efgtoa$2098:
   501                           	callstack 0
   502                           
   503                           ; 2 bytes @ 0x9
   504  000069                     	ds	2
   505  00006B                     _efgtoa$2099:
   506                           	callstack 0
   507                           
   508                           ; 2 bytes @ 0xB
   509  00006B                     	ds	2
   510  00006D                     _efgtoa$2104:
   511                           	callstack 0
   512                           
   513                           ; 2 bytes @ 0xD
   514  00006D                     	ds	2
   515  00006F                     _efgtoa$2108:
   516                           	callstack 0
   517                           
   518                           ; 2 bytes @ 0xF
   519  00006F                     	ds	2
   520  000071                     _efgtoa$2109:
   521                           	callstack 0
   522                           
   523                           ; 2 bytes @ 0x11
   524  000071                     	ds	2
   525  000073                     _efgtoa$2110:
   526                           	callstack 0
   527                           
   528                           ; 2 bytes @ 0x13
   529  000073                     	ds	2
   530  000075                     efgtoa@t:
   531                           	callstack 0
   532                           
   533                           ; 2 bytes @ 0x15
   534  000075                     	ds	2
   535  000077                     efgtoa@pp:
   536                           	callstack 0
   537                           
   538                           ; 2 bytes @ 0x17
   539  000077                     	ds	2
   540  000079                     efgtoa@m:
   541                           	callstack 0
   542                           
   543                           ; 2 bytes @ 0x19
   544  000079                     	ds	2
   545  00007B                     efgtoa@ne:
   546                           	callstack 0
   547                           
   548                           ; 2 bytes @ 0x1B
   549  00007B                     	ds	2
   550  00007D                     efgtoa@d:
   551                           	callstack 0
   552                           
   553                           ; 2 bytes @ 0x1D
   554  00007D                     	ds	2
   555  00007F                     efgtoa@sign:
   556                           	callstack 0
   557                           
   558                           ; 2 bytes @ 0x1F
   559  00007F                     	ds	2
   560  000081                     efgtoa@p:
   561                           	callstack 0
   562                           
   563                           ; 2 bytes @ 0x21
   564  000081                     	ds	2
   565  000083                     efgtoa@nmode:
   566                           	callstack 0
   567                           
   568                           ; 1 bytes @ 0x23
   569  000083                     	ds	1
   570  000084                     efgtoa@w:
   571                           	callstack 0
   572                           
   573                           ; 2 bytes @ 0x24
   574  000084                     	ds	2
   575  000086                     efgtoa@mode:
   576                           	callstack 0
   577                           
   578                           ; 1 bytes @ 0x26
   579  000086                     	ds	1
   580  000087                     efgtoa@h:
   581                           	callstack 0
   582                           
   583                           ; 4 bytes @ 0x27
   584  000087                     	ds	4
   585  00008B                     efgtoa@l:
   586                           	callstack 0
   587                           
   588                           ; 4 bytes @ 0x2B
   589  00008B                     	ds	4
   590  00008F                     efgtoa@i:
   591                           	callstack 0
   592                           
   593                           ; 2 bytes @ 0x2F
   594  00008F                     	ds	2
   595  000091                     efgtoa@g:
   596                           	callstack 0
   597                           
   598                           ; 4 bytes @ 0x31
   599  000091                     	ds	4
   600  000095                     efgtoa@e:
   601                           	callstack 0
   602                           
   603                           ; 2 bytes @ 0x35
   604  000095                     	ds	2
   605  000097                     efgtoa@n:
   606                           	callstack 0
   607                           
   608                           ; 2 bytes @ 0x37
   609  000097                     	ds	2
   610  000099                     efgtoa@u:
   611                           	callstack 0
   612                           
   613                           ; 4 bytes @ 0x39
   614  000099                     	ds	4
   615  00009D                     ?_vfpfcnvrt:
   616                           	callstack 0
   617  00009D                     vfpfcnvrt@fp:
   618                           	callstack 0
   619                           
   620                           ; 2 bytes @ 0x3D
   621  00009D                     	ds	2
   622  00009F                     vfpfcnvrt@fmt:
   623                           	callstack 0
   624                           
   625                           ; 2 bytes @ 0x3F
   626  00009F                     	ds	2
   627  0000A1                     vfpfcnvrt@ap:
   628                           	callstack 0
   629                           
   630                           ; 2 bytes @ 0x41
   631  0000A1                     	ds	2
   632  0000A3                     ??_vfpfcnvrt:
   633                           
   634                           ; 1 bytes @ 0x43
   635  0000A3                     	ds	4
   636  0000A7                     vfpfcnvrt@done:
   637                           	callstack 0
   638                           
   639                           ; 2 bytes @ 0x47
   640  0000A7                     	ds	2
   641  0000A9                     _vfpfcnvrt$2124:
   642                           	callstack 0
   643                           
   644                           ; 2 bytes @ 0x49
   645  0000A9                     	ds	2
   646  0000AB                     _vfpfcnvrt$2125:
   647                           	callstack 0
   648                           
   649                           ; 2 bytes @ 0x4B
   650  0000AB                     	ds	2
   651  0000AD                     _vfpfcnvrt$2129:
   652                           	callstack 0
   653                           
   654                           ; 2 bytes @ 0x4D
   655  0000AD                     	ds	2
   656  0000AF                     vfpfcnvrt@f:
   657                           	callstack 0
   658                           
   659                           ; 4 bytes @ 0x4F
   660  0000AF                     	ds	4
   661  0000B3                     vfpfcnvrt@ct:
   662                           	callstack 0
   663                           
   664                           ; 3 bytes @ 0x53
   665  0000B3                     	ds	3
   666  0000B6                     vfpfcnvrt@c:
   667                           	callstack 0
   668                           
   669                           ; 1 bytes @ 0x56
   670  0000B6                     	ds	1
   671  0000B7                     ?_vfprintf:
   672                           	callstack 0
   673  0000B7                     vfprintf@fp:
   674                           	callstack 0
   675                           
   676                           ; 2 bytes @ 0x57
   677  0000B7                     	ds	2
   678  0000B9                     vfprintf@fmt:
   679                           	callstack 0
   680                           
   681                           ; 2 bytes @ 0x59
   682  0000B9                     	ds	2
   683  0000BB                     vfprintf@ap:
   684                           	callstack 0
   685                           
   686                           ; 2 bytes @ 0x5B
   687  0000BB                     	ds	2
   688  0000BD                     vfprintf@cfmt:
   689                           	callstack 0
   690                           
   691                           ; 2 bytes @ 0x5D
   692  0000BD                     	ds	2
   693  0000BF                     ?_printf:
   694                           	callstack 0
   695  0000BF                     printf@fmt:
   696                           	callstack 0
   697                           
   698                           ; 2 bytes @ 0x5F
   699  0000BF                     	ds	6
   700                           
   701                           	psect	cstackCOMRAM
   702  000001                     __pcstackCOMRAM:
   703                           	callstack 0
   704  000001                     ??_INTERRUPT_InterruptManager:
   705  000001                     
   706                           ; 1 bytes @ 0x0
   707  000001                     	ds	4
   708  000005                     ?_strlen:
   709                           	callstack 0
   710  000005                     ?___fpclassifyf:
   711                           	callstack 0
   712  000005                     ?_isupper:
   713                           	callstack 0
   714  000005                     ?_isdigit:
   715                           	callstack 0
   716  000005                     ?_strncmp:
   717                           	callstack 0
   718  000005                     ?_isspace:
   719                           	callstack 0
   720  000005                     ?___wmul:
   721                           	callstack 0
   722  000005                     ?___awdiv:
   723                           	callstack 0
   724  000005                     ?___awmod:
   725                           	callstack 0
   726  000005                     ?___flmul:
   727                           	callstack 0
   728  000005                     ?___flneg:
   729                           	callstack 0
   730  000005                     ?___fltol:
   731                           	callstack 0
   732  000005                     ?___xxtofl:
   733                           	callstack 0
   734  000005                     I2C_Open@address:
   735                           	callstack 0
   736  000005                     I2C_Close@returnValue:
   737                           	callstack 0
   738  000005                     I2C_MasterSendTxData@data:
   739                           	callstack 0
   740  000005                     EUSART_Write@txData:
   741                           	callstack 0
   742  000005                     I2C_SetBuffer@buffer:
   743                           	callstack 0
   744  000005                     I2C_SetCallback@cb:
   745                           	callstack 0
   746  000005                     EUSART_SetFramingErrorHandler@interruptHandler:
   747                           	callstack 0
   748  000005                     EUSART_SetOverrunErrorHandler@interruptHandler:
   749                           	callstack 0
   750  000005                     EUSART_SetErrorHandler@interruptHandler:
   751                           	callstack 0
   752  000005                     EUSART_SetTxInterruptHandler@interruptHandler:
   753                           	callstack 0
   754  000005                     EUSART_SetRxInterruptHandler@interruptHandler:
   755                           	callstack 0
   756  000005                     ___wmul@multiplier:
   757                           	callstack 0
   758  000005                     ___awdiv@dividend:
   759                           	callstack 0
   760  000005                     ___awmod@dividend:
   761                           	callstack 0
   762  000005                     isdigit@c:
   763                           	callstack 0
   764  000005                     isspace@c:
   765                           	callstack 0
   766  000005                     isupper@c:
   767                           	callstack 0
   768  000005                     strcpy@dest:
   769                           	callstack 0
   770  000005                     strlen@s:
   771                           	callstack 0
   772  000005                     strncmp@_l:
   773                           	callstack 0
   774  000005                     ___fleq@ff1:
   775                           	callstack 0
   776  000005                     ___flneg@f1:
   777                           	callstack 0
   778  000005                     ___fltol@f1:
   779                           	callstack 0
   780  000005                     ___flmul@b:
   781                           	callstack 0
   782  000005                     ___xxtofl@val:
   783                           	callstack 0
   784  000005                     ___fpclassifyf@x:
   785                           	callstack 0
   786                           
   787                           ; 4 bytes @ 0x4
   788  000005                     	ds	1
   789  000006                     I2C_Open@returnValue:
   790                           	callstack 0
   791  000006                     putch@txData:
   792                           	callstack 0
   793                           
   794                           ; 1 bytes @ 0x5
   795  000006                     	ds	1
   796  000007                     ??_isupper:
   797  000007                     ??_isdigit:
   798  000007                     ??_isspace:
   799  000007                     I2C_SetBuffer@bufferSize:
   800                           	callstack 0
   801  000007                     I2C_SetCallback@ptr:
   802                           	callstack 0
   803  000007                     ___wmul@multiplicand:
   804                           	callstack 0
   805  000007                     ___awdiv@divisor:
   806                           	callstack 0
   807  000007                     ___awmod@divisor:
   808                           	callstack 0
   809  000007                     fputc@c:
   810                           	callstack 0
   811  000007                     strcpy@src:
   812                           	callstack 0
   813  000007                     strlen@a:
   814                           	callstack 0
   815  000007                     strncmp@_r:
   816                           	callstack 0
   817                           
   818                           ; 2 bytes @ 0x6
   819  000007                     	ds	2
   820  000009                     ??___fpclassifyf:
   821  000009                     ??_strcpy:
   822  000009                     ??___fltol:
   823  000009                     ??___xxtofl:
   824  000009                     I2C_SetCallback@idx:
   825                           	callstack 0
   826  000009                     ___awdiv@counter:
   827                           	callstack 0
   828  000009                     ___awmod@counter:
   829                           	callstack 0
   830  000009                     ___wmul@product:
   831                           	callstack 0
   832  000009                     fputc@fp:
   833                           	callstack 0
   834  000009                     strncmp@n:
   835                           	callstack 0
   836  000009                     ___fleq@ff2:
   837                           	callstack 0
   838  000009                     ___flmul@a:
   839                           	callstack 0
   840                           
   841                           ; 4 bytes @ 0x8
   842  000009                     	ds	1
   843  00000A                     ___awdiv@sign:
   844                           	callstack 0
   845  00000A                     ___awmod@sign:
   846                           	callstack 0
   847  00000A                     I2C_SetDataCompleteCallback@cb:
   848                           	callstack 0
   849  00000A                     I2C_SetAddressNackCallback@cb:
   850                           	callstack 0
   851                           
   852                           ; 2 bytes @ 0x9
   853  00000A                     	ds	1
   854  00000B                     ??_fputc:
   855  00000B                     ??_strncmp:
   856  00000B                     ?_tolower:
   857                           	callstack 0
   858  00000B                     _isspace$2194:
   859                           	callstack 0
   860  00000B                     ___awdiv@quotient:
   861                           	callstack 0
   862  00000B                     strcpy@s:
   863                           	callstack 0
   864  00000B                     tolower@c:
   865                           	callstack 0
   866                           
   867                           ; 2 bytes @ 0xA
   868  00000B                     	ds	1
   869  00000C                     ?_atoi:
   870                           	callstack 0
   871  00000C                     I2C_SetDataCompleteCallback@ptr:
   872                           	callstack 0
   873  00000C                     I2C_SetAddressNackCallback@ptr:
   874                           	callstack 0
   875  00000C                     atoi@s:
   876                           	callstack 0
   877  00000C                     strncmp@l:
   878                           	callstack 0
   879                           
   880                           ; 2 bytes @ 0xB
   881  00000C                     	ds	1
   882  00000D                     ??___flmul:
   883  00000D                     ??_tolower:
   884  00000D                     ??___fleq:
   885  00000D                     ___fltol@sign1:
   886                           	callstack 0
   887  00000D                     ___xxtofl@sign:
   888                           	callstack 0
   889  00000D                     ___fpclassifyf@e:
   890                           	callstack 0
   891  00000D                     strcpy@d:
   892                           	callstack 0
   893                           
   894                           ; 2 bytes @ 0xC
   895  00000D                     	ds	1
   896  00000E                     ??_atoi:
   897  00000E                     ___fltol@exp1:
   898                           	callstack 0
   899  00000E                     ___xxtofl@exp:
   900                           	callstack 0
   901  00000E                     rd1RegCompleteHandler@ptr:
   902                           	callstack 0
   903  00000E                     rd2RegCompleteHandler@ptr:
   904                           	callstack 0
   905  00000E                     wr1RegCompleteHandler@ptr:
   906                           	callstack 0
   907  00000E                     wr2RegCompleteHandler@ptr:
   908                           	callstack 0
   909  00000E                     rdBlkRegCompleteHandler@ptr:
   910                           	callstack 0
   911  00000E                     I2C_CallbackReturnReset@funPtr:
   912                           	callstack 0
   913  00000E                     strncmp@r:
   914                           	callstack 0
   915                           
   916                           ; 2 bytes @ 0xD
   917  00000E                     	ds	1
   918  00000F                     ___xxtofl@arg:
   919                           	callstack 0
   920  00000F                     ___fpclassifyf@u:
   921                           	callstack 0
   922                           
   923                           ; 4 bytes @ 0xE
   924  00000F                     	ds	1
   925  000010                     ??_I2C_DO_TX:
   926  000010                     ??_I2C_DO_RX:
   927  000010                     ??_I2C_DO_TX_EMPTY:
   928  000010                     ??_I2C_DO_ADDRESS_NACK:
   929  000010                     fputs@s:
   930                           	callstack 0
   931                           
   932                           ; 2 bytes @ 0xF
   933  000010                     	ds	1
   934  000011                     ___flmul@sign:
   935                           	callstack 0
   936  000011                     _tolower$2252:
   937                           	callstack 0
   938                           
   939                           ; 2 bytes @ 0x10
   940  000011                     	ds	1
   941  000012                     ??_I2C_MasterFsm:
   942  000012                     ___flmul@aexp:
   943                           	callstack 0
   944  000012                     atoi@neg:
   945                           	callstack 0
   946  000012                     fputs@fp:
   947                           	callstack 0
   948                           
   949                           ; 2 bytes @ 0x11
   950  000012                     	ds	1
   951  000013                     ___flmul@grs:
   952                           	callstack 0
   953                           
   954                           ; 4 bytes @ 0x12
   955  000013                     	ds	1
   956  000014                     I2C_MasterOperation@read:
   957                           	callstack 0
   958  000014                     fputs@c:
   959                           	callstack 0
   960  000014                     _atoi$2163:
   961                           	callstack 0
   962                           
   963                           ; 2 bytes @ 0x13
   964  000014                     	ds	1
   965  000015                     I2C_MasterOperation@returnValue:
   966                           	callstack 0
   967  000015                     fputs@i:
   968                           	callstack 0
   969                           
   970                           ; 2 bytes @ 0x14
   971  000015                     	ds	1
   972  000016                     I2C_WriteNBytes@data:
   973                           	callstack 0
   974  000016                     I2C_ReadNBytes@data:
   975                           	callstack 0
   976  000016                     _atoi$2165:
   977                           	callstack 0
   978                           
   979                           ; 2 bytes @ 0x15
   980  000016                     	ds	1
   981  000017                     ?_pad:
   982                           	callstack 0
   983  000017                     ___flmul@bexp:
   984                           	callstack 0
   985  000017                     pad@fp:
   986                           	callstack 0
   987                           
   988                           ; 2 bytes @ 0x16
   989  000017                     	ds	1
   990  000018                     _atoi$2164:
   991                           	callstack 0
   992  000018                     I2C_WriteNBytes@len:
   993                           	callstack 0
   994  000018                     I2C_ReadNBytes@len:
   995                           	callstack 0
   996  000018                     ___flmul@prod:
   997                           	callstack 0
   998                           
   999                           ; 4 bytes @ 0x17
  1000  000018                     	ds	1
  1001  000019                     pad@buf:
  1002                           	callstack 0
  1003  000019                     atoi@n:
  1004                           	callstack 0
  1005                           
  1006                           ; 2 bytes @ 0x18
  1007  000019                     	ds	1
  1008  00001A                     I2C_WriteNBytes@address:
  1009                           	callstack 0
  1010  00001A                     I2C_ReadNBytes@address:
  1011                           	callstack 0
  1012                           
  1013                           ; 1 bytes @ 0x19
  1014  00001A                     	ds	1
  1015  00001B                     ??_SHT40_Read:
  1016  00001B                     pad@p:
  1017                           	callstack 0
  1018                           
  1019                           ; 2 bytes @ 0x1A
  1020  00001B                     	ds	1
  1021  00001C                     SHT40_Read@regist:
  1022                           	callstack 0
  1023  00001C                     ___flmul@temp:
  1024                           	callstack 0
  1025                           
  1026                           ; 2 bytes @ 0x1B
  1027  00001C                     	ds	1
  1028  00001D                     ??_pad:
  1029                           
  1030                           ; 1 bytes @ 0x1C
  1031  00001D                     	ds	1
  1032  00001E                     ?___fldiv:
  1033                           	callstack 0
  1034  00001E                     pad@i:
  1035                           	callstack 0
  1036  00001E                     ___flge@ff1:
  1037                           	callstack 0
  1038  00001E                     ___fldiv@b:
  1039                           	callstack 0
  1040                           
  1041                           ; 4 bytes @ 0x1D
  1042  00001E                     	ds	2
  1043  000020                     pad@w:
  1044                           	callstack 0
  1045                           
  1046                           ; 2 bytes @ 0x1F
  1047  000020                     	ds	2
  1048  000022                     ___flge@ff2:
  1049                           	callstack 0
  1050  000022                     ___fldiv@a:
  1051                           	callstack 0
  1052                           
  1053                           ; 4 bytes @ 0x21
  1054  000022                     	ds	4
  1055  000026                     ??___fldiv:
  1056  000026                     ??___flge:
  1057                           
  1058                           ; 1 bytes @ 0x25
  1059  000026                     	ds	4
  1060  00002A                     ___fldiv@rem:
  1061                           	callstack 0
  1062                           
  1063                           ; 4 bytes @ 0x29
  1064  00002A                     	ds	4
  1065  00002E                     ___fldiv@sign:
  1066                           	callstack 0
  1067                           
  1068                           ; 1 bytes @ 0x2D
  1069  00002E                     	ds	1
  1070  00002F                     ___fldiv@new_exp:
  1071                           	callstack 0
  1072                           
  1073                           ; 2 bytes @ 0x2E
  1074  00002F                     	ds	2
  1075  000031                     ___fldiv@grs:
  1076                           	callstack 0
  1077                           
  1078                           ; 4 bytes @ 0x30
  1079  000031                     	ds	4
  1080  000035                     ___fldiv@bexp:
  1081                           	callstack 0
  1082                           
  1083                           ; 1 bytes @ 0x34
  1084  000035                     	ds	1
  1085  000036                     ___fldiv@aexp:
  1086                           	callstack 0
  1087                           
  1088                           ; 1 bytes @ 0x35
  1089  000036                     	ds	1
  1090  000037                     ?___fladd:
  1091                           	callstack 0
  1092  000037                     ?_floorf:
  1093                           	callstack 0
  1094  000037                     ___fladd@b:
  1095                           	callstack 0
  1096  000037                     floorf@x:
  1097                           	callstack 0
  1098                           
  1099                           ; 4 bytes @ 0x36
  1100  000037                     	ds	4
  1101  00003B                     ??_floorf:
  1102  00003B                     ___fladd@a:
  1103                           	callstack 0
  1104                           
  1105                           ; 4 bytes @ 0x3A
  1106  00003B                     	ds	4
  1107  00003F                     ??___fladd:
  1108                           
  1109                           ; 1 bytes @ 0x3E
  1110  00003F                     	ds	2
  1111  000041                     floorf@m:
  1112                           	callstack 0
  1113                           
  1114                           ; 4 bytes @ 0x40
  1115  000041                     	ds	2
  1116  000043                     ___fladd@signs:
  1117                           	callstack 0
  1118                           
  1119                           ; 1 bytes @ 0x42
  1120  000043                     	ds	1
  1121  000044                     ___fladd@aexp:
  1122                           	callstack 0
  1123                           
  1124                           ; 1 bytes @ 0x43
  1125  000044                     	ds	1
  1126  000045                     ___fladd@bexp:
  1127                           	callstack 0
  1128  000045                     floorf@e:
  1129                           	callstack 0
  1130                           
  1131                           ; 2 bytes @ 0x44
  1132  000045                     	ds	1
  1133  000046                     ___fladd@grs:
  1134                           	callstack 0
  1135                           
  1136                           ; 1 bytes @ 0x45
  1137  000046                     	ds	1
  1138  000047                     ?_SHT40_temp_GetValue:
  1139                           	callstack 0
  1140  000047                     ?_SHT40_humy_GetValue:
  1141                           	callstack 0
  1142  000047                     ?___flsub:
  1143                           	callstack 0
  1144  000047                     ___flsub@b:
  1145                           	callstack 0
  1146  000047                     floorf@u:
  1147                           	callstack 0
  1148                           
  1149                           ; 4 bytes @ 0x46
  1150  000047                     	ds	4
  1151  00004B                     ??_SHT40_temp_GetValue:
  1152  00004B                     ??_SHT40_humy_GetValue:
  1153  00004B                     ___flsub@a:
  1154                           	callstack 0
  1155                           
  1156                           ; 4 bytes @ 0x4A
  1157  00004B                     	ds	2
  1158  00004D                     SHT40_temp_GetValue@tempDataAnz:
  1159                           	callstack 0
  1160  00004D                     SHT40_humy_GetValue@pressDataAnz:
  1161                           	callstack 0
  1162                           
  1163                           ; 4 bytes @ 0x4C
  1164  00004D                     	ds	2
  1165  00004F                     ?_efgtoa:
  1166                           	callstack 0
  1167  00004F                     efgtoa@fp:
  1168                           	callstack 0
  1169                           
  1170                           ; 2 bytes @ 0x4E
  1171  00004F                     	ds	2
  1172  000051                     efgtoa@f:
  1173                           	callstack 0
  1174                           
  1175                           ; 4 bytes @ 0x50
  1176  000051                     	ds	4
  1177  000055                     efgtoa@c:
  1178                           	callstack 0
  1179                           
  1180                           ; 1 bytes @ 0x54
  1181  000055                     	ds	1
  1182  000056                     
  1183                           ; 1 bytes @ 0x55
  1184 ;;
  1185 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1186 ;;
  1187 ;; *************** function _main *****************
  1188 ;; Defined at:
  1189 ;;		line 54 in file "main.c"
  1190 ;; Parameters:    Size  Location     Type
  1191 ;;		None
  1192 ;; Auto vars:     Size  Location     Type
  1193 ;;		None
  1194 ;; Return value:  Size  Location     Type
  1195 ;;                  1    wreg      void 
  1196 ;; Registers used:
  1197 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  1198 ;; Tracked objects:
  1199 ;;		On entry : 0/0
  1200 ;;		On exit  : 0/0
  1201 ;;		Unchanged: 0/0
  1202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1205 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1206 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1207 ;;Total ram usage:        2 bytes
  1208 ;; Hardware stack levels required when called:   15
  1209 ;; This function calls:
  1210 ;;		_SHT40_humy_GetValue
  1211 ;;		_SHT40_temp_GetValue
  1212 ;;		_SYSTEM_Initialize
  1213 ;;		_printf
  1214 ;; This function is called by:
  1215 ;;		Startup code after reset
  1216 ;; This function uses a non-reentrant model
  1217 ;;
  1218                           
  1219                           	psect	text0
  1220  003E5A                     __ptext0:
  1221                           	callstack 0
  1222  003E5A                     _main:
  1223                           	callstack 16
  1224  003E5A                     
  1225                           ;main.c: 56:     SYSTEM_Initialize();
  1226  003E5A  EC70  F025         	call	_SYSTEM_Initialize	;wreg free
  1227  003E5E                     
  1228                           ;main.c: 57:     _delay((unsigned long)((500)*(8000000/4000.0)));
  1229  003E5E  0E06               	movlw	6
  1230  003E60  0101               	movlb	1	; () banked
  1231  003E62  6F89               	movwf	(??_main+1)& (0+255),b
  1232  003E64  0E13               	movlw	19
  1233  003E66  6F88               	movwf	??_main& (0+255),b
  1234  003E68  0EAD               	movlw	173
  1235  003E6A                     u8437:
  1236  003E6A  2EE8               	decfsz	wreg,f,c
  1237  003E6C  D7FE               	bra	u8437
  1238  003E6E  2F88               	decfsz	??_main& (0+255),f,b
  1239  003E70  D7FC               	bra	u8437
  1240  003E72  2F89               	decfsz	(??_main+1)& (0+255),f,b
  1241  003E74  D7FA               	bra	u8437
  1242  003E76  F000 F000          	nop2	
  1243  003E7A                     
  1244                           ;main.c: 64:     (INTCONbits.GIE = 1);
  1245  003E7A  8EF2               	bsf	242,7,c	;volatile
  1246  003E7C                     
  1247                           ;main.c: 70:     (INTCONbits.PEIE = 1);
  1248  003E7C  8CF2               	bsf	242,6,c	;volatile
  1249  003E7E                     l7651:
  1250                           
  1251                           ;main.c: 76:         temperatur = SHT40_temp_GetValue();
  1252  003E7E  ECE6  F01C         	call	_SHT40_temp_GetValue	;wreg free
  1253  003E82  C047  F0E9         	movff	?_SHT40_temp_GetValue,_temperatur
  1254  003E86  C048  F0EA         	movff	?_SHT40_temp_GetValue+1,_temperatur+1
  1255  003E8A  C049  F0EB         	movff	?_SHT40_temp_GetValue+2,_temperatur+2
  1256  003E8E  C04A  F0EC         	movff	?_SHT40_temp_GetValue+3,_temperatur+3
  1257  003E92                     
  1258                           ;main.c: 77:         lufthumy = SHT40_humy_GetValue();
  1259  003E92  EC5C  F01A         	call	_SHT40_humy_GetValue	;wreg free
  1260  003E96  C047  F0E5         	movff	?_SHT40_humy_GetValue,_lufthumy
  1261  003E9A  C048  F0E6         	movff	?_SHT40_humy_GetValue+1,_lufthumy+1
  1262  003E9E  C049  F0E7         	movff	?_SHT40_humy_GetValue+2,_lufthumy+2
  1263  003EA2  C04A  F0E8         	movff	?_SHT40_humy_GetValue+3,_lufthumy+3
  1264  003EA6                     
  1265                           ;main.c: 78:         printf("Temperatur = %0.2fC   ",temperatur);
  1266  003EA6  0E3E               	movlw	low STR_1
  1267  003EA8  0100               	movlb	0	; () banked
  1268  003EAA  6FBF               	movwf	printf@fmt& (0+255),b
  1269  003EAC  0E10               	movlw	high STR_1
  1270  003EAE  6FC0               	movwf	(printf@fmt+1)& (0+255),b
  1271  003EB0  C0E9  F0C1         	movff	_temperatur,?_printf+2
  1272  003EB4  C0EA  F0C2         	movff	_temperatur+1,?_printf+3
  1273  003EB8  C0EB  F0C3         	movff	_temperatur+2,?_printf+4
  1274  003EBC  C0EC  F0C4         	movff	_temperatur+3,?_printf+5
  1275  003EC0  ECFE  F024         	call	_printf	;wreg free
  1276  003EC4                     
  1277                           ;main.c: 79:         printf("Luftfeuchtigkeit = %4.2f%%\r\n",lufthumy);
  1278  003EC4  0E21               	movlw	low STR_2
  1279  003EC6  0100               	movlb	0	; () banked
  1280  003EC8  6FBF               	movwf	printf@fmt& (0+255),b
  1281  003ECA  0E10               	movlw	high STR_2
  1282  003ECC  6FC0               	movwf	(printf@fmt+1)& (0+255),b
  1283  003ECE  C0E5  F0C1         	movff	_lufthumy,?_printf+2
  1284  003ED2  C0E6  F0C2         	movff	_lufthumy+1,?_printf+3
  1285  003ED6  C0E7  F0C3         	movff	_lufthumy+2,?_printf+4
  1286  003EDA  C0E8  F0C4         	movff	_lufthumy+3,?_printf+5
  1287  003EDE  ECFE  F024         	call	_printf	;wreg free
  1288  003EE2                     
  1289                           ;main.c: 80:         _delay((unsigned long)((500)*(8000000/4000.0)));
  1290  003EE2  0E06               	movlw	6
  1291  003EE4  0101               	movlb	1	; () banked
  1292  003EE6  6F89               	movwf	(??_main+1)& (0+255),b
  1293  003EE8  0E13               	movlw	19
  1294  003EEA  6F88               	movwf	??_main& (0+255),b
  1295  003EEC  0EAD               	movlw	173
  1296  003EEE                     u8447:
  1297  003EEE  2EE8               	decfsz	wreg,f,c
  1298  003EF0  D7FE               	bra	u8447
  1299  003EF2  2F88               	decfsz	??_main& (0+255),f,b
  1300  003EF4  D7FC               	bra	u8447
  1301  003EF6  2F89               	decfsz	(??_main+1)& (0+255),f,b
  1302  003EF8  D7FA               	bra	u8447
  1303  003EFA  F000 F000          	nop2	
  1304  003EFE  EF3F  F01F         	goto	l7651
  1305  003F02  EF58  F000         	goto	start
  1306  003F06                     __end_of_main:
  1307                           	callstack 0
  1308                           
  1309 ;; *************** function _printf *****************
  1310 ;; Defined at:
  1311 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\printf.c"
  1312 ;; Parameters:    Size  Location     Type
  1313 ;;  fmt             2   95[BANK0 ] PTR const unsigned char 
  1314 ;;		 -> STR_2(29), STR_1(23), 
  1315 ;; Auto vars:     Size  Location     Type
  1316 ;;  ap              2    2[BANK1 ] PTR void [1]
  1317 ;;		 -> ?_printf(2), 
  1318 ;;  ret             2    0        int 
  1319 ;; Return value:  Size  Location     Type
  1320 ;;                  2   95[BANK0 ] int 
  1321 ;; Registers used:
  1322 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1323 ;; Tracked objects:
  1324 ;;		On entry : 0/0
  1325 ;;		On exit  : 0/0
  1326 ;;		Unchanged: 0/0
  1327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1328 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1329 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1331 ;;      Totals:         0       6       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1332 ;;Total ram usage:       10 bytes
  1333 ;; Hardware stack levels used:    1
  1334 ;; Hardware stack levels required when called:   12
  1335 ;; This function calls:
  1336 ;;		_vfprintf
  1337 ;; This function is called by:
  1338 ;;		_main
  1339 ;; This function uses a non-reentrant model
  1340 ;;
  1341                           
  1342                           	psect	text1
  1343  0049FC                     __ptext1:
  1344                           	callstack 0
  1345  0049FC                     _printf:
  1346                           	callstack 18
  1347  0049FC  0EC1               	movlw	low (?_printf+2)
  1348  0049FE  0101               	movlb	1	; () banked
  1349  004A00  6F86               	movwf	printf@ap& (0+255),b
  1350  004A02  0E00               	movlw	high (?_printf+2)
  1351  004A04  6F87               	movwf	(printf@ap+1)& (0+255),b
  1352  004A06                     
  1353                           ; BSR set to: 1
  1354  004A06  0E00               	movlw	0
  1355  004A08  0100               	movlb	0	; () banked
  1356  004A0A  6FB7               	movwf	vfprintf@fp& (0+255),b
  1357  004A0C  0E00               	movlw	0
  1358  004A0E  6FB8               	movwf	(vfprintf@fp+1)& (0+255),b
  1359  004A10  C0BF  F0B9         	movff	printf@fmt,vfprintf@fmt
  1360  004A14  C0C0  F0BA         	movff	printf@fmt+1,vfprintf@fmt+1
  1361  004A18  0E86               	movlw	low printf@ap
  1362  004A1A  6FBB               	movwf	vfprintf@ap& (0+255),b
  1363  004A1C  0E01               	movlw	high printf@ap
  1364  004A1E  6FBC               	movwf	(vfprintf@ap+1)& (0+255),b
  1365  004A20  ECDE  F021         	call	_vfprintf	;wreg free
  1366  004A24  0012               	return		;funcret
  1367  004A26                     __end_of_printf:
  1368                           	callstack 0
  1369                           
  1370 ;; *************** function _vfprintf *****************
  1371 ;; Defined at:
  1372 ;;		line 1368 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  1373 ;; Parameters:    Size  Location     Type
  1374 ;;  fp              2   87[BANK0 ] PTR struct _IO_FILE
  1375 ;;		 -> NULL(0), 
  1376 ;;  fmt             2   89[BANK0 ] PTR const unsigned char 
  1377 ;;		 -> STR_2(29), STR_1(23), 
  1378 ;;  ap              2   91[BANK0 ] PTR PTR void 
  1379 ;;		 -> printf@ap(2), 
  1380 ;; Auto vars:     Size  Location     Type
  1381 ;;  cfmt            2   93[BANK0 ] PTR unsigned char 
  1382 ;;		 -> STR_2(29), STR_1(23), 
  1383 ;; Return value:  Size  Location     Type
  1384 ;;                  2   87[BANK0 ] int 
  1385 ;; Registers used:
  1386 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1387 ;; Tracked objects:
  1388 ;;		On entry : 0/0
  1389 ;;		On exit  : 0/0
  1390 ;;		Unchanged: 0/0
  1391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1392 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1393 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1395 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1396 ;;Total ram usage:        8 bytes
  1397 ;; Hardware stack levels used:    1
  1398 ;; Hardware stack levels required when called:   11
  1399 ;; This function calls:
  1400 ;;		_vfpfcnvrt
  1401 ;; This function is called by:
  1402 ;;		_printf
  1403 ;; This function uses a non-reentrant model
  1404 ;;
  1405                           
  1406                           	psect	text2
  1407  0043BC                     __ptext2:
  1408                           	callstack 0
  1409  0043BC                     _vfprintf:
  1410                           	callstack 18
  1411  0043BC                     
  1412                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1368: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\source
      +                          s\c99\common\doprnt.c: 1369: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\comm
      +                          on\doprnt.c: 1371:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\
      +                          common\doprnt.c: 1373:     cfmt = (char *)fmt;
  1413  0043BC  C0B9  F0BD         	movff	vfprintf@fmt,vfprintf@cfmt
  1414  0043C0  C0BA  F0BE         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1415  0043C4                     
  1416                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1374:     nout = 
      +                          0;
  1417  0043C4  0E00               	movlw	0
  1418  0043C6  0100               	movlb	0	; () banked
  1419  0043C8  6FF1               	movwf	(_nout+1)& (0+255),b
  1420  0043CA  0E00               	movlw	0
  1421  0043CC  6FF0               	movwf	_nout& (0+255),b
  1422                           
  1423                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  1424  0043CE  EFFC  F021         	goto	l7607
  1425  0043D2                     l7605:
  1426                           
  1427                           ; BSR set to: 0
  1428                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1376:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1429  0043D2  C0B7  F09D         	movff	vfprintf@fp,vfpfcnvrt@fp
  1430  0043D6  C0B8  F09E         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1431  0043DA  0EBD               	movlw	low vfprintf@cfmt
  1432  0043DC  6F9F               	movwf	vfpfcnvrt@fmt& (0+255),b
  1433  0043DE  0E00               	movlw	high vfprintf@cfmt
  1434  0043E0  6FA0               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1435  0043E2  C0BB  F0A1         	movff	vfprintf@ap,vfpfcnvrt@ap
  1436  0043E6  C0BC  F0A2         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1437  0043EA  EC34  F00E         	call	_vfpfcnvrt	;wreg free
  1438  0043EE  0100               	movlb	0	; () banked
  1439  0043F0  519D               	movf	?_vfpfcnvrt& (0+255),w,b
  1440  0043F2  27F0               	addwf	_nout& (0+255),f,b
  1441  0043F4  519E               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  1442  0043F6  23F1               	addwfc	(_nout+1)& (0+255),f,b
  1443  0043F8                     l7607:
  1444                           
  1445                           ; BSR set to: 0
  1446                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  1447  0043F8  C0BD  FFF6         	movff	vfprintf@cfmt,tblptrl
  1448  0043FC  C0BE  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1449  004400                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1450  004400  6AF8               	clrf	tblptru,c
  1451  004402                     	endif
  1452  004402                     	if	0	;tblptru may be non-zero
  1453  004402                     	endif
  1454  004402  0008               	tblrd		*
  1455  004404  50F5               	movf	tablat,w,c
  1456  004406  0900               	iorlw	0
  1457  004408  A4D8               	btfss	status,2,c
  1458  00440A  EF09  F022         	goto	u8401
  1459  00440E  EF0B  F022         	goto	u8400
  1460  004412                     u8401:
  1461  004412  EFE9  F021         	goto	l7605
  1462  004416                     u8400:
  1463  004416                     
  1464                           ; BSR set to: 0
  1465                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1378:     return 
      +                          nout;
  1466  004416  C0F0  F0B7         	movff	_nout,?_vfprintf
  1467  00441A  C0F1  F0B8         	movff	_nout+1,?_vfprintf+1
  1468  00441E                     
  1469                           ; BSR set to: 0
  1470  00441E  0012               	return		;funcret
  1471  004420                     __end_of_vfprintf:
  1472                           	callstack 0
  1473                           
  1474 ;; *************** function _vfpfcnvrt *****************
  1475 ;; Defined at:
  1476 ;;		line 670 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  1477 ;; Parameters:    Size  Location     Type
  1478 ;;  fp              2   61[BANK0 ] PTR struct _IO_FILE
  1479 ;;		 -> NULL(0), 
  1480 ;;  fmt             2   63[BANK0 ] PTR PTR unsigned char 
  1481 ;;		 -> vfprintf@cfmt(2), 
  1482 ;;  ap              2   65[BANK0 ] PTR PTR void 
  1483 ;;		 -> printf@ap(2), 
  1484 ;; Auto vars:     Size  Location     Type
  1485 ;;  llu             8    0        unsigned long long 
  1486 ;;  ll              8    0        long long 
  1487 ;;  f               4   79[BANK0 ] long long 
  1488 ;;  ct              3   83[BANK0 ] unsigned char [3]
  1489 ;;  vp              3    0        PTR void 
  1490 ;;  cp              3    0        PTR unsigned char 
  1491 ;;  done            2   71[BANK0 ] int 
  1492 ;;  i               2    0        int 
  1493 ;;  c               1   86[BANK0 ] unsigned char 
  1494 ;; Return value:  Size  Location     Type
  1495 ;;                  2   61[BANK0 ] int 
  1496 ;; Registers used:
  1497 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1498 ;; Tracked objects:
  1499 ;;		On entry : 0/0
  1500 ;;		On exit  : 0/0
  1501 ;;		Unchanged: 0/0
  1502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1503 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1504 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1505 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1506 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1507 ;;Total ram usage:       26 bytes
  1508 ;; Hardware stack levels used:    1
  1509 ;; Hardware stack levels required when called:   10
  1510 ;; This function calls:
  1511 ;;		_atoi
  1512 ;;		_efgtoa
  1513 ;;		_fputc
  1514 ;;		_isdigit
  1515 ;;		_isupper
  1516 ;;		_strncmp
  1517 ;;		_tolower
  1518 ;; This function is called by:
  1519 ;;		_vfprintf
  1520 ;; This function uses a non-reentrant model
  1521 ;;
  1522                           
  1523                           	psect	text3
  1524  001C68                     __ptext3:
  1525                           	callstack 0
  1526  001C68                     _vfpfcnvrt:
  1527                           	callstack 18
  1528  001C68                     
  1529                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 670: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 671: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files\Microchip\xc8\v2.20\pic
      +                          \sources\c99\common\doprnt.c: 674:     long long ll;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 675:     unsigned long long llu;
  1530  001C68  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1531  001C6C  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1532  001C70  CFDE FFF6          	movff	postinc2,tblptrl
  1533  001C74  CFDD FFF7          	movff	postdec2,tblptrh
  1534  001C78                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1535  001C78  6AF8               	clrf	tblptru,c
  1536  001C7A                     	endif
  1537  001C7A                     	if	0	;tblptru may be non-zero
  1538  001C7A                     	endif
  1539  001C7A  0008               	tblrd		*
  1540  001C7C  50F5               	movf	tablat,w,c
  1541  001C7E  0A25               	xorlw	37
  1542  001C80  A4D8               	btfss	status,2,c
  1543  001C82  EF45  F00E         	goto	u8191
  1544  001C86  EF47  F00E         	goto	u8190
  1545  001C8A                     u8191:
  1546  001C8A  EF4D  F011         	goto	l7587
  1547  001C8E                     u8190:
  1548  001C8E                     
  1549                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 681:         ++*f
      +                          mt;
  1550  001C8E  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1551  001C92  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1552  001C96  2ADE               	incf	postinc2,f,c
  1553  001C98  0E00               	movlw	0
  1554  001C9A  22DD               	addwfc	postdec2,f,c
  1555  001C9C                     
  1556                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 683:         flag
      +                          s = width = 0;
  1557  001C9C  0E00               	movlw	0
  1558  001C9E  0100               	movlb	0	; () banked
  1559  001CA0  6FF3               	movwf	(_width+1)& (0+255),b
  1560  001CA2  0E00               	movlw	0
  1561  001CA4  6FF2               	movwf	_width& (0+255),b
  1562  001CA6  C0F2  F0F6         	movff	_width,_flags
  1563  001CAA  C0F3  F0F7         	movff	_width+1,_flags+1
  1564  001CAE                     
  1565                           ; BSR set to: 0
  1566                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 684:         prec
      +                           = -1;
  1567  001CAE  69F4               	setf	_prec& (0+255),b
  1568  001CB0  69F5               	setf	(_prec+1)& (0+255),b
  1569  001CB2                     
  1570                           ; BSR set to: 0
  1571                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 688:         done
      +                           = 0;
  1572  001CB2  0E00               	movlw	0
  1573  001CB4  6FA8               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1574  001CB6  0E00               	movlw	0
  1575  001CB8  6FA7               	movwf	vfpfcnvrt@done& (0+255),b
  1576                           
  1577                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 689:         whil
      +                          e (!done) {
  1578  001CBA  EFA6  F00E         	goto	l7491
  1579  001CBE                     l7465:
  1580                           
  1581                           ; BSR set to: 0
  1582                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 692:             
      +                                  flags |= (1 << 0);
  1583  001CBE  81F6               	bsf	_flags& (0+255),0,b
  1584  001CC0                     l7467:
  1585                           
  1586                           ; BSR set to: 0
  1587                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 693:             
      +                                  ++*fmt;
  1588  001CC0  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1589  001CC4  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1590  001CC8  2ADE               	incf	postinc2,f,c
  1591  001CCA  0E00               	movlw	0
  1592  001CCC  22DD               	addwfc	postdec2,f,c
  1593                           
  1594                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 694:             
      +                                  break;
  1595  001CCE  EFA6  F00E         	goto	l7491
  1596  001CD2                     l7469:
  1597                           
  1598                           ; BSR set to: 0
  1599                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 696:             
      +                                  flags |= (1 << 1);
  1600  001CD2  83F6               	bsf	_flags& (0+255),1,b
  1601  001CD4  EF60  F00E         	goto	l7467
  1602  001CD8                     l7473:
  1603                           
  1604                           ; BSR set to: 0
  1605                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 700:             
      +                                  flags |= (1 << 2);
  1606  001CD8  85F6               	bsf	_flags& (0+255),2,b
  1607  001CDA  EF60  F00E         	goto	l7467
  1608  001CDE                     l7477:
  1609                           
  1610                           ; BSR set to: 0
  1611                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 704:             
      +                                  flags |= (1 << 3);
  1612  001CDE  87F6               	bsf	_flags& (0+255),3,b
  1613  001CE0  EF60  F00E         	goto	l7467
  1614  001CE4                     l7481:
  1615                           
  1616                           ; BSR set to: 0
  1617                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 708:             
      +                                  flags |= (1 << 4);
  1618  001CE4  89F6               	bsf	_flags& (0+255),4,b
  1619  001CE6  EF60  F00E         	goto	l7467
  1620  001CEA                     l7485:
  1621                           
  1622                           ; BSR set to: 0
  1623                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 712:             
      +                                  done = 1;
  1624  001CEA  0E00               	movlw	0
  1625  001CEC  6FA8               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1626  001CEE  0E01               	movlw	1
  1627  001CF0  6FA7               	movwf	vfpfcnvrt@done& (0+255),b
  1628                           
  1629                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 713:             
      +                                  break;
  1630  001CF2  EFA6  F00E         	goto	l7491
  1631  001CF6                     l7489:
  1632                           
  1633                           ; BSR set to: 0
  1634  001CF6  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1635  001CFA  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1636  001CFE  CFDE FFF6          	movff	postinc2,tblptrl
  1637  001D02  CFDD FFF7          	movff	postdec2,tblptrh
  1638  001D06                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1639  001D06  6AF8               	clrf	tblptru,c
  1640  001D08                     	endif
  1641  001D08                     	if	0	;tblptru may be non-zero
  1642  001D08                     	endif
  1643  001D08  0008               	tblrd		*
  1644  001D0A  50F5               	movf	tablat,w,c
  1645  001D0C  6FA3               	movwf	??_vfpfcnvrt& (0+255),b
  1646  001D0E  6BA4               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  1647                           
  1648                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1649                           ; Switch size 1, requested type "simple"
  1650                           ; Number of cases is 1, Range of values is 0 to 0
  1651                           ; switch strategies available:
  1652                           ; Name         Instructions Cycles
  1653                           ; simple_byte            4     3 (average)
  1654                           ;	Chosen strategy is simple_byte
  1655  001D10  51A4               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  1656  001D12  0A00               	xorlw	0	; case 0
  1657  001D14  B4D8               	btfsc	status,2,c
  1658  001D16  EF8F  F00E         	goto	l7821
  1659  001D1A  EF75  F00E         	goto	l7485
  1660  001D1E                     l7821:
  1661                           
  1662                           ; BSR set to: 0
  1663                           ; Switch size 1, requested type "simple"
  1664                           ; Number of cases is 5, Range of values is 32 to 48
  1665                           ; switch strategies available:
  1666                           ; Name         Instructions Cycles
  1667                           ; simple_byte           16     9 (average)
  1668                           ;	Chosen strategy is simple_byte
  1669  001D1E  51A3               	movf	??_vfpfcnvrt& (0+255),w,b
  1670  001D20  0A20               	xorlw	32	; case 32
  1671  001D22  B4D8               	btfsc	status,2,c
  1672  001D24  EF6F  F00E         	goto	l7477
  1673  001D28  0A03               	xorlw	3	; case 35
  1674  001D2A  B4D8               	btfsc	status,2,c
  1675  001D2C  EF72  F00E         	goto	l7481
  1676  001D30  0A08               	xorlw	8	; case 43
  1677  001D32  B4D8               	btfsc	status,2,c
  1678  001D34  EF6C  F00E         	goto	l7473
  1679  001D38  0A06               	xorlw	6	; case 45
  1680  001D3A  B4D8               	btfsc	status,2,c
  1681  001D3C  EF5F  F00E         	goto	l7465
  1682  001D40  0A1D               	xorlw	29	; case 48
  1683  001D42  B4D8               	btfsc	status,2,c
  1684  001D44  EF69  F00E         	goto	l7469
  1685  001D48  EF75  F00E         	goto	l7485
  1686  001D4C                     l7491:
  1687                           
  1688                           ; BSR set to: 0
  1689                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 689:         whil
      +                          e (!done) {
  1690  001D4C  51A7               	movf	vfpfcnvrt@done& (0+255),w,b
  1691  001D4E  11A8               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  1692  001D50  B4D8               	btfsc	status,2,c
  1693  001D52  EFAD  F00E         	goto	u8201
  1694  001D56  EFAF  F00E         	goto	u8200
  1695  001D5A                     u8201:
  1696  001D5A  EF7B  F00E         	goto	l7489
  1697  001D5E                     u8200:
  1698  001D5E                     
  1699                           ; BSR set to: 0
  1700                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 716:         if (
      +                          flags & (1 << 0)) {
  1701  001D5E  A1F6               	btfss	_flags& (0+255),0,b
  1702  001D60  EFB4  F00E         	goto	u8211
  1703  001D64  EFB6  F00E         	goto	u8210
  1704  001D68                     u8211:
  1705  001D68  EFB7  F00E         	goto	l7495
  1706  001D6C                     u8210:
  1707  001D6C                     
  1708                           ; BSR set to: 0
  1709                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 717:             
      +                          flags &= ~(1 << 1);
  1710  001D6C  93F6               	bcf	_flags& (0+255),1,b
  1711  001D6E                     l7495:
  1712                           
  1713                           ; BSR set to: 0
  1714                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 723:         if (
      +                          (*fmt)[0] == '*') {
  1715  001D6E  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1716  001D72  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1717  001D76  CFDE FFF6          	movff	postinc2,tblptrl
  1718  001D7A  CFDD FFF7          	movff	postdec2,tblptrh
  1719  001D7E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1720  001D7E  6AF8               	clrf	tblptru,c
  1721  001D80                     	endif
  1722  001D80                     	if	0	;tblptru may be non-zero
  1723  001D80                     	endif
  1724  001D80  0008               	tblrd		*
  1725  001D82  50F5               	movf	tablat,w,c
  1726  001D84  0A2A               	xorlw	42
  1727  001D86  A4D8               	btfss	status,2,c
  1728  001D88  EFC8  F00E         	goto	u8221
  1729  001D8C  EFCA  F00E         	goto	u8220
  1730  001D90                     u8221:
  1731  001D90  EFF3  F00E         	goto	l7503
  1732  001D94                     u8220:
  1733  001D94                     
  1734                           ; BSR set to: 0
  1735                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 724:             
      +                          ++*fmt;
  1736  001D94  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1737  001D98  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1738  001D9C  2ADE               	incf	postinc2,f,c
  1739  001D9E  0E00               	movlw	0
  1740  001DA0  22DD               	addwfc	postdec2,f,c
  1741                           
  1742                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 725:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  1743  001DA2  C0A1  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1744  001DA6  C0A2  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1745  001DAA  CFDF F0A3          	movff	indf2,??_vfpfcnvrt
  1746  001DAE  0E02               	movlw	2
  1747  001DB0  26DE               	addwf	postinc2,f,c
  1748  001DB2  CFDF F0A4          	movff	indf2,??_vfpfcnvrt+1
  1749  001DB6  0E00               	movlw	0
  1750  001DB8  22DD               	addwfc	postdec2,f,c
  1751  001DBA  C0A3  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1752  001DBE  C0A4  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1753  001DC2  CFDE F0F2          	movff	postinc2,_width
  1754  001DC6  CFDD F0F3          	movff	postdec2,_width+1
  1755  001DCA                     
  1756                           ; BSR set to: 0
  1757                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 726:             
      +                          if (width < 0) {
  1758  001DCA  BFF3               	btfsc	(_width+1)& (0+255),7,b
  1759  001DCC  EFEC  F00E         	goto	u8230
  1760  001DD0  EFEA  F00E         	goto	u8231
  1761  001DD4                     u8231:
  1762  001DD4  EF38  F00F         	goto	l7513
  1763  001DD8                     u8230:
  1764  001DD8                     
  1765                           ; BSR set to: 0
  1766                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 727:             
      +                              flags |= (1 << 0);
  1767  001DD8  81F6               	bsf	_flags& (0+255),0,b
  1768                           
  1769                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 728:             
      +                              width = -width;
  1770  001DDA  6DF2               	negf	_width& (0+255),b
  1771  001DDC  1FF3               	comf	(_width+1)& (0+255),f,b
  1772  001DDE  B0D8               	btfsc	status,0,c
  1773  001DE0  2BF3               	incf	(_width+1)& (0+255),f,b
  1774  001DE2  EF38  F00F         	goto	l7513
  1775  001DE6                     l7503:
  1776                           
  1777                           ; BSR set to: 0
  1778                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 731:             
      +                          width = atoi(*fmt);
  1779  001DE6  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1780  001DEA  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1781  001DEE  CFDE F00C          	movff	postinc2,atoi@s
  1782  001DF2  CFDD F00D          	movff	postdec2,atoi@s+1
  1783  001DF6  EC8F  F019         	call	_atoi	;wreg free
  1784  001DFA  C00C  F0F2         	movff	?_atoi,_width
  1785  001DFE  C00D  F0F3         	movff	?_atoi+1,_width+1
  1786                           
  1787                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 732:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1788  001E02  EF0A  F00F         	goto	l7507
  1789  001E06                     l7505:
  1790                           
  1791                           ; BSR set to: 0
  1792                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 733:             
      +                              ++*fmt;
  1793  001E06  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1794  001E0A  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1795  001E0E  2ADE               	incf	postinc2,f,c
  1796  001E10  0E00               	movlw	0
  1797  001E12  22DD               	addwfc	postdec2,f,c
  1798  001E14                     l7507:
  1799  001E14  0ED0               	movlw	208
  1800  001E16  0100               	movlb	0	; () banked
  1801  001E18  6FA3               	movwf	??_vfpfcnvrt& (0+255),b
  1802  001E1A  0EFF               	movlw	255
  1803  001E1C  6FA4               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  1804  001E1E  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1805  001E22  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1806  001E26  CFDE FFF6          	movff	postinc2,tblptrl
  1807  001E2A  CFDD FFF7          	movff	postdec2,tblptrh
  1808  001E2E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1809  001E2E  6AF8               	clrf	tblptru,c
  1810  001E30                     	endif
  1811  001E30                     	if	0	;tblptru may be non-zero
  1812  001E30                     	endif
  1813  001E30  0008               	tblrd		*
  1814  001E32  50F5               	movf	tablat,w,c
  1815  001E34  6FA5               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  1816  001E36  6BA6               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  1817  001E38  51A3               	movf	??_vfpfcnvrt& (0+255),w,b
  1818  001E3A  27A5               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  1819  001E3C  51A4               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  1820  001E3E  23A6               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  1821  001E40  51A6               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  1822  001E42  E10A               	bnz	u8240
  1823  001E44  0E0A               	movlw	10
  1824  001E46  5DA5               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  1825  001E48  A0D8               	btfss	status,0,c
  1826  001E4A  EF29  F00F         	goto	u8241
  1827  001E4E  EF2C  F00F         	goto	u8240
  1828  001E52                     u8241:
  1829  001E52  0E01               	movlw	1
  1830  001E54  EF2D  F00F         	goto	u8250
  1831  001E58                     u8240:
  1832  001E58  0E00               	movlw	0
  1833  001E5A                     u8250:
  1834  001E5A  6FA9               	movwf	_vfpfcnvrt$2124& (0+255),b
  1835  001E5C  6BAA               	clrf	(_vfpfcnvrt$2124+1)& (0+255),b
  1836  001E5E                     
  1837                           ; BSR set to: 0
  1838  001E5E  51A9               	movf	_vfpfcnvrt$2124& (0+255),w,b
  1839  001E60  11AA               	iorwf	(_vfpfcnvrt$2124+1)& (0+255),w,b
  1840  001E62  A4D8               	btfss	status,2,c
  1841  001E64  EF36  F00F         	goto	u8261
  1842  001E68  EF38  F00F         	goto	u8260
  1843  001E6C                     u8261:
  1844  001E6C  EF03  F00F         	goto	l7505
  1845  001E70                     u8260:
  1846  001E70                     l7513:
  1847                           
  1848                           ; BSR set to: 0
  1849                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 740:         if (
      +                          (*fmt)[0] == '.') {
  1850  001E70  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1851  001E74  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1852  001E78  CFDE FFF6          	movff	postinc2,tblptrl
  1853  001E7C  CFDD FFF7          	movff	postdec2,tblptrh
  1854  001E80                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1855  001E80  6AF8               	clrf	tblptru,c
  1856  001E82                     	endif
  1857  001E82                     	if	0	;tblptru may be non-zero
  1858  001E82                     	endif
  1859  001E82  0008               	tblrd		*
  1860  001E84  50F5               	movf	tablat,w,c
  1861  001E86  0A2E               	xorlw	46
  1862  001E88  A4D8               	btfss	status,2,c
  1863  001E8A  EF49  F00F         	goto	u8271
  1864  001E8E  EF4B  F00F         	goto	u8270
  1865  001E92                     u8271:
  1866  001E92  EFCB  F00F         	goto	l7533
  1867  001E96                     u8270:
  1868  001E96                     
  1869                           ; BSR set to: 0
  1870                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 741:             
      +                          prec = 0;
  1871  001E96  0E00               	movlw	0
  1872  001E98  6FF5               	movwf	(_prec+1)& (0+255),b
  1873  001E9A  0E00               	movlw	0
  1874  001E9C  6FF4               	movwf	_prec& (0+255),b
  1875  001E9E                     
  1876                           ; BSR set to: 0
  1877                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 742:             
      +                          ++*fmt;
  1878  001E9E  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1879  001EA2  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1880  001EA6  2ADE               	incf	postinc2,f,c
  1881  001EA8  0E00               	movlw	0
  1882  001EAA  22DD               	addwfc	postdec2,f,c
  1883  001EAC                     
  1884                           ; BSR set to: 0
  1885                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 743:             
      +                          if ((*fmt)[0] == '*') {
  1886  001EAC  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1887  001EB0  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1888  001EB4  CFDE FFF6          	movff	postinc2,tblptrl
  1889  001EB8  CFDD FFF7          	movff	postdec2,tblptrh
  1890  001EBC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1891  001EBC  6AF8               	clrf	tblptru,c
  1892  001EBE                     	endif
  1893  001EBE                     	if	0	;tblptru may be non-zero
  1894  001EBE                     	endif
  1895  001EBE  0008               	tblrd		*
  1896  001EC0  50F5               	movf	tablat,w,c
  1897  001EC2  0A2A               	xorlw	42
  1898  001EC4  A4D8               	btfss	status,2,c
  1899  001EC6  EF67  F00F         	goto	u8281
  1900  001ECA  EF69  F00F         	goto	u8280
  1901  001ECE                     u8281:
  1902  001ECE  EF86  F00F         	goto	l7523
  1903  001ED2                     u8280:
  1904  001ED2                     
  1905                           ; BSR set to: 0
  1906                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 744:             
      +                              ++*fmt;
  1907  001ED2  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1908  001ED6  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1909  001EDA  2ADE               	incf	postinc2,f,c
  1910  001EDC  0E00               	movlw	0
  1911  001EDE  22DD               	addwfc	postdec2,f,c
  1912                           
  1913                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 745:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  1914  001EE0  C0A1  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1915  001EE4  C0A2  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1916  001EE8  CFDF F0A3          	movff	indf2,??_vfpfcnvrt
  1917  001EEC  0E02               	movlw	2
  1918  001EEE  26DE               	addwf	postinc2,f,c
  1919  001EF0  CFDF F0A4          	movff	indf2,??_vfpfcnvrt+1
  1920  001EF4  0E00               	movlw	0
  1921  001EF6  22DD               	addwfc	postdec2,f,c
  1922  001EF8  C0A3  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1923  001EFC  C0A4  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1924  001F00  CFDE F0F4          	movff	postinc2,_prec
  1925  001F04  CFDD F0F5          	movff	postdec2,_prec+1
  1926                           
  1927                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 746:             
      +                          } else {
  1928  001F08  EFCB  F00F         	goto	l7533
  1929  001F0C                     l7523:
  1930                           
  1931                           ; BSR set to: 0
  1932                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 747:             
      +                              prec = atoi(*fmt);
  1933  001F0C  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1934  001F10  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1935  001F14  CFDE F00C          	movff	postinc2,atoi@s
  1936  001F18  CFDD F00D          	movff	postdec2,atoi@s+1
  1937  001F1C  EC8F  F019         	call	_atoi	;wreg free
  1938  001F20  C00C  F0F4         	movff	?_atoi,_prec
  1939  001F24  C00D  F0F5         	movff	?_atoi+1,_prec+1
  1940                           
  1941                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 748:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1942  001F28  EF9D  F00F         	goto	l7527
  1943  001F2C                     l7525:
  1944                           
  1945                           ; BSR set to: 0
  1946                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 749:             
      +                                  ++*fmt;
  1947  001F2C  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1948  001F30  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1949  001F34  2ADE               	incf	postinc2,f,c
  1950  001F36  0E00               	movlw	0
  1951  001F38  22DD               	addwfc	postdec2,f,c
  1952  001F3A                     l7527:
  1953  001F3A  0ED0               	movlw	208
  1954  001F3C  0100               	movlb	0	; () banked
  1955  001F3E  6FA3               	movwf	??_vfpfcnvrt& (0+255),b
  1956  001F40  0EFF               	movlw	255
  1957  001F42  6FA4               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  1958  001F44  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1959  001F48  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1960  001F4C  CFDE FFF6          	movff	postinc2,tblptrl
  1961  001F50  CFDD FFF7          	movff	postdec2,tblptrh
  1962  001F54                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1963  001F54  6AF8               	clrf	tblptru,c
  1964  001F56                     	endif
  1965  001F56                     	if	0	;tblptru may be non-zero
  1966  001F56                     	endif
  1967  001F56  0008               	tblrd		*
  1968  001F58  50F5               	movf	tablat,w,c
  1969  001F5A  6FA5               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  1970  001F5C  6BA6               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  1971  001F5E  51A3               	movf	??_vfpfcnvrt& (0+255),w,b
  1972  001F60  27A5               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  1973  001F62  51A4               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  1974  001F64  23A6               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  1975  001F66  51A6               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  1976  001F68  E10A               	bnz	u8290
  1977  001F6A  0E0A               	movlw	10
  1978  001F6C  5DA5               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  1979  001F6E  A0D8               	btfss	status,0,c
  1980  001F70  EFBC  F00F         	goto	u8291
  1981  001F74  EFBF  F00F         	goto	u8290
  1982  001F78                     u8291:
  1983  001F78  0E01               	movlw	1
  1984  001F7A  EFC0  F00F         	goto	u8300
  1985  001F7E                     u8290:
  1986  001F7E  0E00               	movlw	0
  1987  001F80                     u8300:
  1988  001F80  6FAB               	movwf	_vfpfcnvrt$2125& (0+255),b
  1989  001F82  6BAC               	clrf	(_vfpfcnvrt$2125+1)& (0+255),b
  1990  001F84                     
  1991                           ; BSR set to: 0
  1992  001F84  51AB               	movf	_vfpfcnvrt$2125& (0+255),w,b
  1993  001F86  11AC               	iorwf	(_vfpfcnvrt$2125+1)& (0+255),w,b
  1994  001F88  A4D8               	btfss	status,2,c
  1995  001F8A  EFC9  F00F         	goto	u8311
  1996  001F8E  EFCB  F00F         	goto	u8310
  1997  001F92                     u8311:
  1998  001F92  EF96  F00F         	goto	l7525
  1999  001F96                     u8310:
  2000  001F96                     l7533:
  2001                           
  2002                           ; BSR set to: 0
  2003                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 757:         ct[0
      +                          ] = tolower((int)(*fmt)[0]);
  2004  001F96  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2005  001F9A  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2006  001F9E  CFDE FFF6          	movff	postinc2,tblptrl
  2007  001FA2  CFDD FFF7          	movff	postdec2,tblptrh
  2008  001FA6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2009  001FA6  6AF8               	clrf	tblptru,c
  2010  001FA8                     	endif
  2011  001FA8                     	if	0	;tblptru may be non-zero
  2012  001FA8                     	endif
  2013  001FA8  0008               	tblrd		*
  2014  001FAA  50F5               	movf	tablat,w,c
  2015  001FAC  6E0B               	movwf	tolower@c^0,c
  2016  001FAE  6A0C               	clrf	(tolower@c+1)^0,c
  2017  001FB0  EC10  F022         	call	_tolower	;wreg free
  2018  001FB4  500B               	movf	?_tolower^0,w,c
  2019  001FB6  0100               	movlb	0	; () banked
  2020  001FB8  6FB3               	movwf	vfpfcnvrt@ct& (0+255),b
  2021  001FBA                     
  2022                           ; BSR set to: 0
  2023                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 758:         if (
      +                          ct[0]) {
  2024  001FBA  51B3               	movf	vfpfcnvrt@ct& (0+255),w,b
  2025  001FBC  B4D8               	btfsc	status,2,c
  2026  001FBE  EFE3  F00F         	goto	u8321
  2027  001FC2  EFE5  F00F         	goto	u8320
  2028  001FC6                     u8321:
  2029  001FC6  EF21  F010         	goto	l7543
  2030  001FCA                     u8320:
  2031  001FCA                     
  2032                           ; BSR set to: 0
  2033                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 759:             
      +                          ct[1] = tolower((int)(*fmt)[1]);
  2034  001FCA  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2035  001FCE  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2036  001FD2  CFDE F0A3          	movff	postinc2,??_vfpfcnvrt
  2037  001FD6  CFDD F0A4          	movff	postdec2,??_vfpfcnvrt+1
  2038  001FDA  0E01               	movlw	1
  2039  001FDC  27A3               	addwf	??_vfpfcnvrt& (0+255),f,b
  2040  001FDE  0E00               	movlw	0
  2041  001FE0  23A4               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2042  001FE2  C0A3  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2043  001FE6  C0A4  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2044  001FEA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2045  001FEA  6AF8               	clrf	tblptru,c
  2046  001FEC                     	endif
  2047  001FEC                     	if	0	;tblptru may be non-zero
  2048  001FEC                     	endif
  2049  001FEC  0008               	tblrd		*
  2050  001FEE  50F5               	movf	tablat,w,c
  2051  001FF0  6E0B               	movwf	tolower@c^0,c
  2052  001FF2  6A0C               	clrf	(tolower@c+1)^0,c
  2053  001FF4  EC10  F022         	call	_tolower	;wreg free
  2054  001FF8  500B               	movf	?_tolower^0,w,c
  2055  001FFA  0100               	movlb	0	; () banked
  2056  001FFC  6FB4               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  2057  001FFE                     
  2058                           ; BSR set to: 0
  2059                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 760:             
      +                          if (ct[1]) {
  2060  001FFE  51B4               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  2061  002000  B4D8               	btfsc	status,2,c
  2062  002002  EF05  F010         	goto	u8331
  2063  002006  EF07  F010         	goto	u8330
  2064  00200A                     u8331:
  2065  00200A  EF21  F010         	goto	l7543
  2066  00200E                     u8330:
  2067  00200E                     
  2068                           ; BSR set to: 0
  2069                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 761:             
      +                              ct[2] = tolower((int)(*fmt)[2]);
  2070  00200E  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2071  002012  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2072  002016  CFDE F0A3          	movff	postinc2,??_vfpfcnvrt
  2073  00201A  CFDD F0A4          	movff	postdec2,??_vfpfcnvrt+1
  2074  00201E  0E02               	movlw	2
  2075  002020  27A3               	addwf	??_vfpfcnvrt& (0+255),f,b
  2076  002022  0E00               	movlw	0
  2077  002024  23A4               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2078  002026  C0A3  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2079  00202A  C0A4  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2080  00202E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2081  00202E  6AF8               	clrf	tblptru,c
  2082  002030                     	endif
  2083  002030                     	if	0	;tblptru may be non-zero
  2084  002030                     	endif
  2085  002030  0008               	tblrd		*
  2086  002032  50F5               	movf	tablat,w,c
  2087  002034  6E0B               	movwf	tolower@c^0,c
  2088  002036  6A0C               	clrf	(tolower@c+1)^0,c
  2089  002038  EC10  F022         	call	_tolower	;wreg free
  2090  00203C  500B               	movf	?_tolower^0,w,c
  2091  00203E  0100               	movlb	0	; () banked
  2092  002040  6FB5               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  2093  002042                     l7543:
  2094                           
  2095                           ; BSR set to: 0
  2096                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 920:         if (
      +                          ct[0] == 'f') {
  2097  002042  0E66               	movlw	102
  2098  002044  19B3               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  2099  002046  A4D8               	btfss	status,2,c
  2100  002048  EF28  F010         	goto	u8341
  2101  00204C  EF2A  F010         	goto	u8340
  2102  002050                     u8341:
  2103  002050  EF6B  F010         	goto	l7555
  2104  002054                     u8340:
  2105  002054                     
  2106                           ; BSR set to: 0
  2107                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 922:             
      +                          c = (*fmt)[0];
  2108  002054  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2109  002058  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2110  00205C  CFDE FFF6          	movff	postinc2,tblptrl
  2111  002060  CFDD FFF7          	movff	postdec2,tblptrh
  2112  002064                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2113  002064  6AF8               	clrf	tblptru,c
  2114  002066                     	endif
  2115  002066                     	if	0	;tblptru may be non-zero
  2116  002066                     	endif
  2117  002066  0008               	tblrd		*
  2118  002068  CFF5 F0B6          	movff	tablat,vfpfcnvrt@c
  2119  00206C                     
  2120                           ; BSR set to: 0
  2121                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 923:             
      +                          ++*fmt;
  2122  00206C  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2123  002070  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2124  002074  2ADE               	incf	postinc2,f,c
  2125  002076  0E00               	movlw	0
  2126  002078  22DD               	addwfc	postdec2,f,c
  2127  00207A                     
  2128                           ; BSR set to: 0
  2129                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 924:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2130  00207A  C0A1  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2131  00207E  C0A2  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2132  002082  CFDF F0A3          	movff	indf2,??_vfpfcnvrt
  2133  002086  0E04               	movlw	4
  2134  002088  26DE               	addwf	postinc2,f,c
  2135  00208A  CFDF F0A4          	movff	indf2,??_vfpfcnvrt+1
  2136  00208E  0E00               	movlw	0
  2137  002090  22DD               	addwfc	postdec2,f,c
  2138  002092  C0A3  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2139  002096  C0A4  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2140  00209A  CFDE F0AF          	movff	postinc2,vfpfcnvrt@f
  2141  00209E  CFDE F0B0          	movff	postinc2,vfpfcnvrt@f+1
  2142  0020A2  CFDE F0B1          	movff	postinc2,vfpfcnvrt@f+2
  2143  0020A6  CFDE F0B2          	movff	postinc2,vfpfcnvrt@f+3
  2144  0020AA                     
  2145                           ; BSR set to: 0
  2146                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 926:             
      +                          return efgtoa(fp, f, c);
  2147  0020AA  C09D  F04F         	movff	vfpfcnvrt@fp,efgtoa@fp
  2148  0020AE  C09E  F050         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2149  0020B2  C0AF  F051         	movff	vfpfcnvrt@f,efgtoa@f
  2150  0020B6  C0B0  F052         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2151  0020BA  C0B1  F053         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2152  0020BE  C0B2  F054         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2153  0020C2  C0B6  F055         	movff	vfpfcnvrt@c,efgtoa@c
  2154  0020C6  EC35  F008         	call	_efgtoa	;wreg free
  2155  0020CA  C04F  F09D         	movff	?_efgtoa,?_vfpfcnvrt
  2156  0020CE  C050  F09E         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2157  0020D2  EF69  F011         	goto	l1578
  2158  0020D6                     l7555:
  2159                           
  2160                           ; BSR set to: 0
  2161                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 928:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  2162  0020D6  0EB3               	movlw	low vfpfcnvrt@ct
  2163  0020D8  6E05               	movwf	strncmp@_l^0,c
  2164  0020DA  0E00               	movlw	high vfpfcnvrt@ct
  2165  0020DC  6E06               	movwf	(strncmp@_l+1)^0,c
  2166  0020DE  0E65               	movlw	low STR_11
  2167  0020E0  6E07               	movwf	strncmp@_r^0,c
  2168  0020E2  0E10               	movlw	high STR_11
  2169  0020E4  6E08               	movwf	(strncmp@_r+1)^0,c
  2170  0020E6  0E00               	movlw	0
  2171  0020E8  6E0A               	movwf	(strncmp@n+1)^0,c
  2172  0020EA  0E02               	movlw	2
  2173  0020EC  6E09               	movwf	strncmp@n^0,c
  2174  0020EE  EC78  F01C         	call	_strncmp	;wreg free
  2175  0020F2  5005               	movf	?_strncmp^0,w,c
  2176  0020F4  1006               	iorwf	(?_strncmp+1)^0,w,c
  2177  0020F6  A4D8               	btfss	status,2,c
  2178  0020F8  EF80  F010         	goto	u8351
  2179  0020FC  EF82  F010         	goto	u8350
  2180  002100                     u8351:
  2181  002100  EF14  F011         	goto	l7571
  2182  002104                     u8350:
  2183  002104                     
  2184                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 931:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  2185  002104  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2186  002108  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2187  00210C  CFDE F0A3          	movff	postinc2,??_vfpfcnvrt
  2188  002110  CFDD F0A4          	movff	postdec2,??_vfpfcnvrt+1
  2189  002114  0E01               	movlw	1
  2190  002116  0100               	movlb	0	; () banked
  2191  002118  27A3               	addwf	??_vfpfcnvrt& (0+255),f,b
  2192  00211A  0E00               	movlw	0
  2193  00211C  23A4               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2194  00211E  C0A3  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2195  002122  C0A4  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2196  002126                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2197  002126  6AF8               	clrf	tblptru,c
  2198  002128                     	endif
  2199  002128                     	if	0	;tblptru may be non-zero
  2200  002128                     	endif
  2201  002128  0008               	tblrd		*
  2202  00212A  CFF5 F0B6          	movff	tablat,vfpfcnvrt@c
  2203  00212E  0EBF               	movlw	191
  2204  002130  6FA3               	movwf	??_vfpfcnvrt& (0+255),b
  2205  002132  0EFF               	movlw	255
  2206  002134  6FA4               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2207  002136  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2208  00213A  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2209  00213E  CFDE FFF6          	movff	postinc2,tblptrl
  2210  002142  CFDD FFF7          	movff	postdec2,tblptrh
  2211  002146                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2212  002146  6AF8               	clrf	tblptru,c
  2213  002148                     	endif
  2214  002148                     	if	0	;tblptru may be non-zero
  2215  002148                     	endif
  2216  002148  0008               	tblrd		*
  2217  00214A  50F5               	movf	tablat,w,c
  2218  00214C  6FA5               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2219  00214E  6BA6               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2220  002150  51A3               	movf	??_vfpfcnvrt& (0+255),w,b
  2221  002152  27A5               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2222  002154  51A4               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2223  002156  23A6               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2224  002158  51A6               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2225  00215A  E10A               	bnz	u8360
  2226  00215C  0E1A               	movlw	26
  2227  00215E  5DA5               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2228  002160  A0D8               	btfss	status,0,c
  2229  002162  EFB5  F010         	goto	u8361
  2230  002166  EFB8  F010         	goto	u8360
  2231  00216A                     u8361:
  2232  00216A  0E01               	movlw	1
  2233  00216C  EFB9  F010         	goto	u8370
  2234  002170                     u8360:
  2235  002170  0E00               	movlw	0
  2236  002172                     u8370:
  2237  002172  6FAD               	movwf	_vfpfcnvrt$2129& (0+255),b
  2238  002174  6BAE               	clrf	(_vfpfcnvrt$2129+1)& (0+255),b
  2239  002176                     
  2240                           ; BSR set to: 0
  2241  002176  51AD               	movf	_vfpfcnvrt$2129& (0+255),w,b
  2242  002178  11AE               	iorwf	(_vfpfcnvrt$2129+1)& (0+255),w,b
  2243  00217A  B4D8               	btfsc	status,2,c
  2244  00217C  EFC2  F010         	goto	u8381
  2245  002180  EFC4  F010         	goto	u8380
  2246  002184                     u8381:
  2247  002184  EFDE  F010         	goto	l7565
  2248  002188                     u8380:
  2249  002188                     
  2250                           ; BSR set to: 0
  2251                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 932:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2252  002188  C0A1  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2253  00218C  C0A2  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2254  002190  CFDF F0A3          	movff	indf2,??_vfpfcnvrt
  2255  002194  0E04               	movlw	4
  2256  002196  26DE               	addwf	postinc2,f,c
  2257  002198  CFDF F0A4          	movff	indf2,??_vfpfcnvrt+1
  2258  00219C  0E00               	movlw	0
  2259  00219E  22DD               	addwfc	postdec2,f,c
  2260  0021A0  C0A3  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2261  0021A4  C0A4  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2262  0021A8  CFDE F0AF          	movff	postinc2,vfpfcnvrt@f
  2263  0021AC  CFDE F0B0          	movff	postinc2,vfpfcnvrt@f+1
  2264  0021B0  CFDE F0B1          	movff	postinc2,vfpfcnvrt@f+2
  2265  0021B4  CFDE F0B2          	movff	postinc2,vfpfcnvrt@f+3
  2266                           
  2267                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 933:             
      +                          } else {
  2268  0021B8  EFF6  F010         	goto	l1585
  2269  0021BC                     l7565:
  2270                           
  2271                           ; BSR set to: 0
  2272                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 934:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2273  0021BC  C0A1  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2274  0021C0  C0A2  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2275  0021C4  CFDF F0A3          	movff	indf2,??_vfpfcnvrt
  2276  0021C8  0E04               	movlw	4
  2277  0021CA  26DE               	addwf	postinc2,f,c
  2278  0021CC  CFDF F0A4          	movff	indf2,??_vfpfcnvrt+1
  2279  0021D0  0E00               	movlw	0
  2280  0021D2  22DD               	addwfc	postdec2,f,c
  2281  0021D4  C0A3  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2282  0021D8  C0A4  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2283  0021DC  CFDE F0AF          	movff	postinc2,vfpfcnvrt@f
  2284  0021E0  CFDE F0B0          	movff	postinc2,vfpfcnvrt@f+1
  2285  0021E4  CFDE F0B1          	movff	postinc2,vfpfcnvrt@f+2
  2286  0021E8  CFDE F0B2          	movff	postinc2,vfpfcnvrt@f+3
  2287  0021EC                     l1585:
  2288                           
  2289                           ; BSR set to: 0
  2290                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 936:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  2291  0021EC  0E02               	movlw	2
  2292  0021EE  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2293  0021F2  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2294  0021F6  26DE               	addwf	postinc2,f,c
  2295  0021F8  0E00               	movlw	0
  2296  0021FA  22DD               	addwfc	postdec2,f,c
  2297  0021FC                     
  2298                           ; BSR set to: 0
  2299                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 938:             
      +                          return efgtoa(fp, f, c);
  2300  0021FC  C09D  F04F         	movff	vfpfcnvrt@fp,efgtoa@fp
  2301  002200  C09E  F050         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2302  002204  C0AF  F051         	movff	vfpfcnvrt@f,efgtoa@f
  2303  002208  C0B0  F052         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2304  00220C  C0B1  F053         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2305  002210  C0B2  F054         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2306  002214  C0B6  F055         	movff	vfpfcnvrt@c,efgtoa@c
  2307  002218  EC35  F008         	call	_efgtoa	;wreg free
  2308  00221C  C04F  F09D         	movff	?_efgtoa,?_vfpfcnvrt
  2309  002220  C050  F09E         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2310  002224  EF69  F011         	goto	l1578
  2311  002228                     l7571:
  2312                           
  2313                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1350:         if 
      +                          ((*fmt)[0] == '%') {
  2314  002228  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2315  00222C  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2316  002230  CFDE FFF6          	movff	postinc2,tblptrl
  2317  002234  CFDD FFF7          	movff	postdec2,tblptrh
  2318  002238                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2319  002238  6AF8               	clrf	tblptru,c
  2320  00223A                     	endif
  2321  00223A                     	if	0	;tblptru may be non-zero
  2322  00223A                     	endif
  2323  00223A  0008               	tblrd		*
  2324  00223C  50F5               	movf	tablat,w,c
  2325  00223E  0A25               	xorlw	37
  2326  002240  A4D8               	btfss	status,2,c
  2327  002242  EF25  F011         	goto	u8391
  2328  002246  EF27  F011         	goto	u8390
  2329  00224A                     u8391:
  2330  00224A  EF3F  F011         	goto	l7581
  2331  00224E                     u8390:
  2332  00224E                     
  2333                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1351:            
      +                           ++*fmt;
  2334  00224E  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2335  002252  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2336  002256  2ADE               	incf	postinc2,f,c
  2337  002258  0E00               	movlw	0
  2338  00225A  22DD               	addwfc	postdec2,f,c
  2339  00225C                     
  2340                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1352:            
      +                           fputc((int)'%', fp);
  2341  00225C  0E00               	movlw	0
  2342  00225E  6E08               	movwf	(fputc@c+1)^0,c
  2343  002260  0E25               	movlw	37
  2344  002262  6E07               	movwf	fputc@c^0,c
  2345  002264  C09D  F009         	movff	vfpfcnvrt@fp,fputc@fp
  2346  002268  C09E  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2347  00226C  EC2B  F020         	call	_fputc	;wreg free
  2348  002270                     l7577:
  2349                           
  2350                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1353:            
      +                           return 1;
  2351  002270  0E00               	movlw	0
  2352  002272  0100               	movlb	0	; () banked
  2353  002274  6F9E               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2354  002276  0E01               	movlw	1
  2355  002278  6F9D               	movwf	?_vfpfcnvrt& (0+255),b
  2356  00227A  EF69  F011         	goto	l1578
  2357  00227E                     l7581:
  2358                           
  2359                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1357:         ++*
      +                          fmt;
  2360  00227E  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2361  002282  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2362  002286  2ADE               	incf	postinc2,f,c
  2363  002288  0E00               	movlw	0
  2364  00228A  22DD               	addwfc	postdec2,f,c
  2365  00228C                     
  2366                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1358:         ret
      +                          urn 0;
  2367  00228C  0E00               	movlw	0
  2368  00228E  0100               	movlb	0	; () banked
  2369  002290  6F9E               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2370  002292  0E00               	movlw	0
  2371  002294  6F9D               	movwf	?_vfpfcnvrt& (0+255),b
  2372  002296  EF69  F011         	goto	l1578
  2373  00229A                     l7587:
  2374                           
  2375                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1362:     fputc((
      +                          int)(*fmt)[0], fp);
  2376  00229A  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2377  00229E  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2378  0022A2  CFDE FFF6          	movff	postinc2,tblptrl
  2379  0022A6  CFDD FFF7          	movff	postdec2,tblptrh
  2380  0022AA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2381  0022AA  6AF8               	clrf	tblptru,c
  2382  0022AC                     	endif
  2383  0022AC                     	if	0	;tblptru may be non-zero
  2384  0022AC                     	endif
  2385  0022AC  0008               	tblrd		*
  2386  0022AE  50F5               	movf	tablat,w,c
  2387  0022B0  6E07               	movwf	fputc@c^0,c
  2388  0022B2  6A08               	clrf	(fputc@c+1)^0,c
  2389  0022B4  C09D  F009         	movff	vfpfcnvrt@fp,fputc@fp
  2390  0022B8  C09E  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2391  0022BC  EC2B  F020         	call	_fputc	;wreg free
  2392  0022C0                     
  2393                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  2394  0022C0  C09F  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2395  0022C4  C0A0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2396  0022C8  2ADE               	incf	postinc2,f,c
  2397  0022CA  0E00               	movlw	0
  2398  0022CC  22DD               	addwfc	postdec2,f,c
  2399  0022CE  EF38  F011         	goto	l7577
  2400  0022D2                     l1578:
  2401  0022D2  0012               	return		;funcret
  2402  0022D4                     __end_of_vfpfcnvrt:
  2403                           	callstack 0
  2404                           
  2405 ;; *************** function _strncmp *****************
  2406 ;; Defined at:
  2407 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strncmp.c"
  2408 ;; Parameters:    Size  Location     Type
  2409 ;;  _l              2    4[COMRAM] PTR const unsigned char 
  2410 ;;		 -> vfpfcnvrt@ct(3), 
  2411 ;;  _r              2    6[COMRAM] PTR const unsigned char 
  2412 ;;		 -> STR_13(3), 
  2413 ;;  n               2    8[COMRAM] unsigned int 
  2414 ;; Auto vars:     Size  Location     Type
  2415 ;;  r               2   13[COMRAM] PTR const unsigned char 
  2416 ;;		 -> STR_13(3), 
  2417 ;;  l               2   11[COMRAM] PTR const unsigned char 
  2418 ;;		 -> vfpfcnvrt@ct(3), 
  2419 ;; Return value:  Size  Location     Type
  2420 ;;                  2    4[COMRAM] int 
  2421 ;; Registers used:
  2422 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2423 ;; Tracked objects:
  2424 ;;		On entry : 0/0
  2425 ;;		On exit  : 0/0
  2426 ;;		Unchanged: 0/0
  2427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2428 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2429 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2430 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2431 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2432 ;;Total ram usage:       11 bytes
  2433 ;; Hardware stack levels used:    1
  2434 ;; Hardware stack levels required when called:    4
  2435 ;; This function calls:
  2436 ;;		Nothing
  2437 ;; This function is called by:
  2438 ;;		_vfpfcnvrt
  2439 ;; This function uses a non-reentrant model
  2440 ;;
  2441                           
  2442                           	psect	text4
  2443  0038F0                     __ptext4:
  2444                           	callstack 0
  2445  0038F0                     _strncmp:
  2446                           	callstack 23
  2447  0038F0  C005  F00C         	movff	strncmp@_l,strncmp@l
  2448  0038F4  C006  F00D         	movff	strncmp@_l+1,strncmp@l+1
  2449  0038F8  C007  F00E         	movff	strncmp@_r,strncmp@r
  2450  0038FC  C008  F00F         	movff	strncmp@_r+1,strncmp@r+1
  2451  003900  0609               	decf	strncmp@n^0,f,c
  2452  003902  A0D8               	btfss	status,0,c
  2453  003904  060A               	decf	(strncmp@n+1)^0,f,c
  2454  003906  2809               	incf	strncmp@n^0,w,c
  2455  003908  E106               	bnz	u8141
  2456  00390A  280A               	incf	(strncmp@n+1)^0,w,c
  2457  00390C  A4D8               	btfss	status,2,c
  2458  00390E  EF8B  F01C         	goto	u8141
  2459  003912  EF8D  F01C         	goto	u8140
  2460  003916                     u8141:
  2461  003916  EF9A  F01C         	goto	l7443
  2462  00391A                     u8140:
  2463  00391A  0E00               	movlw	0
  2464  00391C  6E06               	movwf	(?_strncmp+1)^0,c
  2465  00391E  0E00               	movlw	0
  2466  003920  6E05               	movwf	?_strncmp^0,c
  2467  003922  EFE5  F01C         	goto	l1703
  2468  003926                     l7441:
  2469  003926  4A0C               	infsnz	strncmp@l^0,f,c
  2470  003928  2A0D               	incf	(strncmp@l+1)^0,f,c
  2471  00392A  4A0E               	infsnz	strncmp@r^0,f,c
  2472  00392C  2A0F               	incf	(strncmp@r+1)^0,f,c
  2473  00392E  0609               	decf	strncmp@n^0,f,c
  2474  003930  A0D8               	btfss	status,0,c
  2475  003932  060A               	decf	(strncmp@n+1)^0,f,c
  2476  003934                     l7443:
  2477  003934  C00C  FFD9         	movff	strncmp@l,fsr2l
  2478  003938  C00D  FFDA         	movff	strncmp@l+1,fsr2h
  2479  00393C  50DF               	movf	indf2,w,c
  2480  00393E  B4D8               	btfsc	status,2,c
  2481  003940  EFA4  F01C         	goto	u8151
  2482  003944  EFA6  F01C         	goto	u8150
  2483  003948                     u8151:
  2484  003948  EFD3  F01C         	goto	l7451
  2485  00394C                     u8150:
  2486  00394C  C00E  FFF6         	movff	strncmp@r,tblptrl
  2487  003950  C00F  FFF7         	movff	strncmp@r+1,tblptrh
  2488  003954                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2489  003954  6AF8               	clrf	tblptru,c
  2490  003956                     	endif
  2491  003956                     	if	0	;tblptru may be non-zero
  2492  003956                     	endif
  2493  003956  0008               	tblrd		*
  2494  003958  50F5               	movf	tablat,w,c
  2495  00395A  0900               	iorlw	0
  2496  00395C  B4D8               	btfsc	status,2,c
  2497  00395E  EFB3  F01C         	goto	u8161
  2498  003962  EFB5  F01C         	goto	u8160
  2499  003966                     u8161:
  2500  003966  EFD3  F01C         	goto	l7451
  2501  00396A                     u8160:
  2502  00396A  5009               	movf	strncmp@n^0,w,c
  2503  00396C  100A               	iorwf	(strncmp@n+1)^0,w,c
  2504  00396E  B4D8               	btfsc	status,2,c
  2505  003970  EFBC  F01C         	goto	u8171
  2506  003974  EFBE  F01C         	goto	u8170
  2507  003978                     u8171:
  2508  003978  EFD3  F01C         	goto	l7451
  2509  00397C                     u8170:
  2510  00397C  C00C  FFD9         	movff	strncmp@l,fsr2l
  2511  003980  C00D  FFDA         	movff	strncmp@l+1,fsr2h
  2512  003984  50DF               	movf	indf2,w,c
  2513  003986  6E0B               	movwf	??_strncmp^0,c
  2514  003988  C00E  FFF6         	movff	strncmp@r,tblptrl
  2515  00398C  C00F  FFF7         	movff	strncmp@r+1,tblptrh
  2516  003990                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2517  003990  6AF8               	clrf	tblptru,c
  2518  003992                     	endif
  2519  003992                     	if	0	;tblptru may be non-zero
  2520  003992                     	endif
  2521  003992  0008               	tblrd		*
  2522  003994  50F5               	movf	tablat,w,c
  2523  003996  180B               	xorwf	??_strncmp^0,w,c
  2524  003998  B4D8               	btfsc	status,2,c
  2525  00399A  EFD1  F01C         	goto	u8181
  2526  00399E  EFD3  F01C         	goto	u8180
  2527  0039A2                     u8181:
  2528  0039A2  EF93  F01C         	goto	l7441
  2529  0039A6                     u8180:
  2530  0039A6                     l7451:
  2531  0039A6  C00C  FFD9         	movff	strncmp@l,fsr2l
  2532  0039AA  C00D  FFDA         	movff	strncmp@l+1,fsr2h
  2533  0039AE  50DF               	movf	indf2,w,c
  2534  0039B0  6E0B               	movwf	??_strncmp^0,c
  2535  0039B2  C00E  FFF6         	movff	strncmp@r,tblptrl
  2536  0039B6  C00F  FFF7         	movff	strncmp@r+1,tblptrh
  2537  0039BA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2538  0039BA  6AF8               	clrf	tblptru,c
  2539  0039BC                     	endif
  2540  0039BC                     	if	0	;tblptru may be non-zero
  2541  0039BC                     	endif
  2542  0039BC  0008               	tblrd		*
  2543  0039BE  50F5               	movf	tablat,w,c
  2544  0039C0  5C0B               	subwf	??_strncmp^0,w,c
  2545  0039C2  6E05               	movwf	?_strncmp^0,c
  2546  0039C4  6A06               	clrf	(?_strncmp+1)^0,c
  2547  0039C6  A0D8               	btfss	status,0,c
  2548  0039C8  0606               	decf	(?_strncmp+1)^0,f,c
  2549  0039CA                     l1703:
  2550  0039CA  0012               	return		;funcret
  2551  0039CC                     __end_of_strncmp:
  2552                           	callstack 0
  2553                           
  2554 ;; *************** function _efgtoa *****************
  2555 ;; Defined at:
  2556 ;;		line 319 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  2557 ;; Parameters:    Size  Location     Type
  2558 ;;  fp              2   78[COMRAM] PTR struct _IO_FILE
  2559 ;;		 -> NULL(0), 
  2560 ;;  f               4   80[COMRAM] PTR struct _IO_FILE
  2561 ;;  c               1   84[COMRAM] unsigned char 
  2562 ;; Auto vars:     Size  Location     Type
  2563 ;;  u               4   57[BANK0 ] unsigned char 
  2564 ;;  g               4   49[BANK0 ] unsigned char 
  2565 ;;  l               4   43[BANK0 ] unsigned char 
  2566 ;;  h               4   39[BANK0 ] unsigned char 
  2567 ;;  ou              4    5[BANK0 ] unsigned char 
  2568 ;;  n               2   55[BANK0 ] int 
  2569 ;;  e               2   53[BANK0 ] int 
  2570 ;;  i               2   47[BANK0 ] int 
  2571 ;;  w               2   36[BANK0 ] int 
  2572 ;;  p               2   33[BANK0 ] int 
  2573 ;;  sign            2   31[BANK0 ] int 
  2574 ;;  d               2   29[BANK0 ] int 
  2575 ;;  ne              2   27[BANK0 ] int 
  2576 ;;  m               2   25[BANK0 ] int 
  2577 ;;  pp              2   23[BANK0 ] int 
  2578 ;;  t               2   21[BANK0 ] int 
  2579 ;;  mode            1   38[BANK0 ] unsigned char 
  2580 ;;  nmode           1   35[BANK0 ] unsigned char 
  2581 ;; Return value:  Size  Location     Type
  2582 ;;                  2   78[COMRAM] int 
  2583 ;; Registers used:
  2584 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2585 ;; Tracked objects:
  2586 ;;		On entry : 0/0
  2587 ;;		On exit  : 0/0
  2588 ;;		Unchanged: 0/0
  2589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2590 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2591 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2592 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2593 ;;      Totals:         7      61       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2594 ;;Total ram usage:       68 bytes
  2595 ;; Hardware stack levels used:    1
  2596 ;; Hardware stack levels required when called:    9
  2597 ;; This function calls:
  2598 ;;		___awdiv
  2599 ;;		___awmod
  2600 ;;		___fladd
  2601 ;;		___fldiv
  2602 ;;		___fleq
  2603 ;;		___flge
  2604 ;;		___flmul
  2605 ;;		___flneg
  2606 ;;		___flsub
  2607 ;;		___fltol
  2608 ;;		___fpclassifyf
  2609 ;;		_floorf
  2610 ;;		_isupper
  2611 ;;		_pad
  2612 ;;		_strcpy
  2613 ;;		_tolower
  2614 ;; This function is called by:
  2615 ;;		_vfpfcnvrt
  2616 ;; This function uses a non-reentrant model
  2617 ;;
  2618                           
  2619                           	psect	text5
  2620  00106A                     __ptext5:
  2621                           	callstack 0
  2622  00106A                     _efgtoa:
  2623                           	callstack 18
  2624  00106A                     
  2625                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 319: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.20\pic\sources\
      +                          c99\common\doprnt.c: 320: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\
      +                          doprnt.c: 321:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c9
      +                          9\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 323:     long double g, h, l, ou, u;
  2626  00106A  0E00               	movlw	0
  2627  00106C  0100               	movlb	0	; () banked
  2628  00106E  6F80               	movwf	(efgtoa@sign+1)& (0+255),b
  2629  001070  0E00               	movlw	0
  2630  001072  6F7F               	movwf	efgtoa@sign& (0+255),b
  2631  001074                     
  2632                           ; BSR set to: 0
  2633                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 327:     g = f;
  2634  001074  C051  F091         	movff	efgtoa@f,efgtoa@g
  2635  001078  C052  F092         	movff	efgtoa@f+1,efgtoa@g+1
  2636  00107C  C053  F093         	movff	efgtoa@f+2,efgtoa@g+2
  2637  001080  C054  F094         	movff	efgtoa@f+3,efgtoa@g+3
  2638  001084                     
  2639                           ; BSR set to: 0
  2640                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 328:     if (g < 
      +                          0.0) {
  2641  001084  BF94               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2642  001086  EF49  F008         	goto	u7550
  2643  00108A  EF47  F008         	goto	u7551
  2644  00108E                     u7551:
  2645  00108E  EF5F  F008         	goto	l7105
  2646  001092                     u7550:
  2647  001092                     
  2648                           ; BSR set to: 0
  2649                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 329:         sign
      +                           = 1;
  2650  001092  0E00               	movlw	0
  2651  001094  6F80               	movwf	(efgtoa@sign+1)& (0+255),b
  2652  001096  0E01               	movlw	1
  2653  001098  6F7F               	movwf	efgtoa@sign& (0+255),b
  2654  00109A                     
  2655                           ; BSR set to: 0
  2656                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 330:         g = 
      +                          -g;
  2657  00109A  C091  F005         	movff	efgtoa@g,___flneg@f1
  2658  00109E  C092  F006         	movff	efgtoa@g+1,___flneg@f1+1
  2659  0010A2  C093  F007         	movff	efgtoa@g+2,___flneg@f1+2
  2660  0010A6  C094  F008         	movff	efgtoa@g+3,___flneg@f1+3
  2661  0010AA  ECFA  F023         	call	___flneg	;wreg free
  2662  0010AE  C005  F091         	movff	?___flneg,efgtoa@g
  2663  0010B2  C006  F092         	movff	?___flneg+1,efgtoa@g+1
  2664  0010B6  C007  F093         	movff	?___flneg+2,efgtoa@g+2
  2665  0010BA  C008  F094         	movff	?___flneg+3,efgtoa@g+3
  2666  0010BE                     l7105:
  2667                           
  2668                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 334:     n = 0;
  2669  0010BE  0E00               	movlw	0
  2670  0010C0  0100               	movlb	0	; () banked
  2671  0010C2  6F98               	movwf	(efgtoa@n+1)& (0+255),b
  2672  0010C4  0E00               	movlw	0
  2673  0010C6  6F97               	movwf	efgtoa@n& (0+255),b
  2674  0010C8                     
  2675                           ; BSR set to: 0
  2676                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 335:     w = widt
      +                          h;
  2677  0010C8  C0F2  F084         	movff	_width,efgtoa@w
  2678  0010CC  C0F3  F085         	movff	_width+1,efgtoa@w+1
  2679  0010D0                     
  2680                           ; BSR set to: 0
  2681                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 336:     if (sign
      +                           || (flags & (1 << 2))) {
  2682  0010D0  517F               	movf	efgtoa@sign& (0+255),w,b
  2683  0010D2  1180               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2684  0010D4  A4D8               	btfss	status,2,c
  2685  0010D6  EF6F  F008         	goto	u7561
  2686  0010DA  EF71  F008         	goto	u7560
  2687  0010DE                     u7561:
  2688  0010DE  EF78  F008         	goto	l7113
  2689  0010E2                     u7560:
  2690  0010E2                     
  2691                           ; BSR set to: 0
  2692  0010E2  A5F6               	btfss	_flags& (0+255),2,b
  2693  0010E4  EF76  F008         	goto	u7571
  2694  0010E8  EF78  F008         	goto	u7570
  2695  0010EC                     u7571:
  2696  0010EC  EF92  F008         	goto	l7125
  2697  0010F0                     u7570:
  2698  0010F0                     l7113:
  2699                           
  2700                           ; BSR set to: 0
  2701                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 337:         dbuf
      +                          [n] = sign ? '-' : '+';
  2702  0010F0  517F               	movf	efgtoa@sign& (0+255),w,b
  2703  0010F2  1180               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2704  0010F4  A4D8               	btfss	status,2,c
  2705  0010F6  EF7F  F008         	goto	u7581
  2706  0010FA  EF81  F008         	goto	u7580
  2707  0010FE                     u7581:
  2708  0010FE  EF87  F008         	goto	l7117
  2709  001102                     u7580:
  2710  001102                     
  2711                           ; BSR set to: 0
  2712  001102  0E00               	movlw	0
  2713  001104  6F6A               	movwf	(_efgtoa$2098+1)& (0+255),b
  2714  001106  0E2B               	movlw	43
  2715  001108  6F69               	movwf	_efgtoa$2098& (0+255),b
  2716  00110A  EF8B  F008         	goto	l7119
  2717  00110E                     l7117:
  2718                           
  2719                           ; BSR set to: 0
  2720  00110E  0E00               	movlw	0
  2721  001110  6F6A               	movwf	(_efgtoa$2098+1)& (0+255),b
  2722  001112  0E2D               	movlw	45
  2723  001114  6F69               	movwf	_efgtoa$2098& (0+255),b
  2724  001116                     l7119:
  2725                           
  2726                           ; BSR set to: 0
  2727  001116  C069  F124         	movff	_efgtoa$2098,_dbuf
  2728  00111A                     
  2729                           ; BSR set to: 0
  2730                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 338:         ++n;
  2731  00111A  4B97               	infsnz	efgtoa@n& (0+255),f,b
  2732  00111C  2B98               	incf	(efgtoa@n+1)& (0+255),f,b
  2733  00111E                     
  2734                           ; BSR set to: 0
  2735                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 339:         --w;
  2736  00111E  0784               	decf	efgtoa@w& (0+255),f,b
  2737  001120  A0D8               	btfss	status,0,c
  2738  001122  0785               	decf	(efgtoa@w+1)& (0+255),f,b
  2739  001124                     l7125:
  2740                           
  2741                           ; BSR set to: 0
  2742                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 344:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2743  001124  C091  F005         	movff	efgtoa@g,___fpclassifyf@x
  2744  001128  C092  F006         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2745  00112C  C093  F007         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2746  001130  C094  F008         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2747  001134  ECF9  F01B         	call	___fpclassifyf	;wreg free
  2748  001138  0405               	decf	?___fpclassifyf^0,w,c
  2749  00113A  1006               	iorwf	(?___fpclassifyf+1)^0,w,c
  2750  00113C  A4D8               	btfss	status,2,c
  2751  00113E  EFA3  F008         	goto	u7591
  2752  001142  EFA5  F008         	goto	u7590
  2753  001146                     u7591:
  2754  001146  EFFC  F008         	goto	l7143
  2755  00114A                     u7590:
  2756  00114A  0EBF               	movlw	191
  2757  00114C  0100               	movlb	0	; () banked
  2758  00114E  6F60               	movwf	??_efgtoa& (0+255),b
  2759  001150  0EFF               	movlw	255
  2760  001152  6F61               	movwf	(??_efgtoa+1)& (0+255),b
  2761  001154  5055               	movf	efgtoa@c^0,w,c
  2762  001156  6F62               	movwf	(??_efgtoa+2)& (0+255),b
  2763  001158  6B63               	clrf	(??_efgtoa+3)& (0+255),b
  2764  00115A  5160               	movf	??_efgtoa& (0+255),w,b
  2765  00115C  2762               	addwf	(??_efgtoa+2)& (0+255),f,b
  2766  00115E  5161               	movf	(??_efgtoa+1)& (0+255),w,b
  2767  001160  2363               	addwfc	(??_efgtoa+3)& (0+255),f,b
  2768  001162  5163               	movf	(??_efgtoa+3)& (0+255),w,b
  2769  001164  E10A               	bnz	u7600
  2770  001166  0E1A               	movlw	26
  2771  001168  5D62               	subwf	(??_efgtoa+2)& (0+255),w,b
  2772  00116A  A0D8               	btfss	status,0,c
  2773  00116C  EFBA  F008         	goto	u7601
  2774  001170  EFBD  F008         	goto	u7600
  2775  001174                     u7601:
  2776  001174  0E01               	movlw	1
  2777  001176  EFBE  F008         	goto	u7610
  2778  00117A                     u7600:
  2779  00117A  0E00               	movlw	0
  2780  00117C                     u7610:
  2781  00117C  6F6B               	movwf	_efgtoa$2099& (0+255),b
  2782  00117E  6B6C               	clrf	(_efgtoa$2099+1)& (0+255),b
  2783  001180                     
  2784                           ; BSR set to: 0
  2785  001180  516B               	movf	_efgtoa$2099& (0+255),w,b
  2786  001182  116C               	iorwf	(_efgtoa$2099+1)& (0+255),w,b
  2787  001184  B4D8               	btfsc	status,2,c
  2788  001186  EFC7  F008         	goto	u7621
  2789  00118A  EFC9  F008         	goto	u7620
  2790  00118E                     u7621:
  2791  00118E  EFD7  F008         	goto	l7135
  2792  001192                     u7620:
  2793  001192                     
  2794                           ; BSR set to: 0
  2795                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 345:             
      +                          strcpy(&dbuf[n], "INF");
  2796  001192  0E24               	movlw	low _dbuf
  2797  001194  2597               	addwf	efgtoa@n& (0+255),w,b
  2798  001196  6E05               	movwf	strcpy@dest^0,c
  2799  001198  0E01               	movlw	high _dbuf
  2800  00119A  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2801  00119C  6E06               	movwf	(strcpy@dest+1)^0,c
  2802  00119E  0E55               	movlw	low STR_3
  2803  0011A0  6E07               	movwf	strcpy@src^0,c
  2804  0011A2  0E10               	movlw	high STR_3
  2805  0011A4  6E08               	movwf	(strcpy@src+1)^0,c
  2806  0011A6  EC40  F022         	call	_strcpy	;wreg free
  2807                           
  2808                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 346:         } el
      +                          se {
  2809  0011AA  EFE3  F008         	goto	l7137
  2810  0011AE                     l7135:
  2811                           
  2812                           ; BSR set to: 0
  2813                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 347:             
      +                          strcpy(&dbuf[n], "inf");
  2814  0011AE  0E24               	movlw	low _dbuf
  2815  0011B0  2597               	addwf	efgtoa@n& (0+255),w,b
  2816  0011B2  6E05               	movwf	strcpy@dest^0,c
  2817  0011B4  0E01               	movlw	high _dbuf
  2818  0011B6  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2819  0011B8  6E06               	movwf	(strcpy@dest+1)^0,c
  2820  0011BA  0E5D               	movlw	low STR_4
  2821  0011BC  6E07               	movwf	strcpy@src^0,c
  2822  0011BE  0E10               	movlw	high STR_4
  2823  0011C0  6E08               	movwf	(strcpy@src+1)^0,c
  2824  0011C2  EC40  F022         	call	_strcpy	;wreg free
  2825  0011C6                     l7137:
  2826                           
  2827                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 349:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  2828  0011C6  0100               	movlb	0	; () banked
  2829  0011C8  0EFD               	movlw	253
  2830  0011CA  2784               	addwf	efgtoa@w& (0+255),f,b
  2831  0011CC  0EFF               	movlw	255
  2832  0011CE  2385               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2833  0011D0                     
  2834                           ; BSR set to: 0
  2835                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 350:         retu
      +                          rn pad(fp, &dbuf[0], w);
  2836  0011D0  C04F  F017         	movff	efgtoa@fp,pad@fp
  2837  0011D4  C050  F018         	movff	efgtoa@fp+1,pad@fp+1
  2838  0011D8  0E24               	movlw	low _dbuf
  2839  0011DA  6E19               	movwf	pad@buf^0,c
  2840  0011DC  0E01               	movlw	high _dbuf
  2841  0011DE  6E1A               	movwf	(pad@buf+1)^0,c
  2842  0011E0  C084  F01B         	movff	efgtoa@w,pad@p
  2843  0011E4  C085  F01C         	movff	efgtoa@w+1,pad@p+1
  2844  0011E8  EC4E  F01D         	call	_pad	;wreg free
  2845  0011EC  C017  F04F         	movff	?_pad,?_efgtoa
  2846  0011F0  C018  F050         	movff	?_pad+1,?_efgtoa+1
  2847  0011F4  EF33  F00E         	goto	l1466
  2848  0011F8                     l7143:
  2849                           
  2850                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 353:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2851  0011F8  C091  F005         	movff	efgtoa@g,___fpclassifyf@x
  2852  0011FC  C092  F006         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2853  001200  C093  F007         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2854  001204  C094  F008         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2855  001208  ECF9  F01B         	call	___fpclassifyf	;wreg free
  2856  00120C  5005               	movf	?___fpclassifyf^0,w,c
  2857  00120E  1006               	iorwf	(?___fpclassifyf+1)^0,w,c
  2858  001210  A4D8               	btfss	status,2,c
  2859  001212  EF0D  F009         	goto	u7631
  2860  001216  EF0F  F009         	goto	u7630
  2861  00121A                     u7631:
  2862  00121A  EF66  F009         	goto	l7161
  2863  00121E                     u7630:
  2864  00121E  0EBF               	movlw	191
  2865  001220  0100               	movlb	0	; () banked
  2866  001222  6F60               	movwf	??_efgtoa& (0+255),b
  2867  001224  0EFF               	movlw	255
  2868  001226  6F61               	movwf	(??_efgtoa+1)& (0+255),b
  2869  001228  5055               	movf	efgtoa@c^0,w,c
  2870  00122A  6F62               	movwf	(??_efgtoa+2)& (0+255),b
  2871  00122C  6B63               	clrf	(??_efgtoa+3)& (0+255),b
  2872  00122E  5160               	movf	??_efgtoa& (0+255),w,b
  2873  001230  2762               	addwf	(??_efgtoa+2)& (0+255),f,b
  2874  001232  5161               	movf	(??_efgtoa+1)& (0+255),w,b
  2875  001234  2363               	addwfc	(??_efgtoa+3)& (0+255),f,b
  2876  001236  5163               	movf	(??_efgtoa+3)& (0+255),w,b
  2877  001238  E10A               	bnz	u7640
  2878  00123A  0E1A               	movlw	26
  2879  00123C  5D62               	subwf	(??_efgtoa+2)& (0+255),w,b
  2880  00123E  A0D8               	btfss	status,0,c
  2881  001240  EF24  F009         	goto	u7641
  2882  001244  EF27  F009         	goto	u7640
  2883  001248                     u7641:
  2884  001248  0E01               	movlw	1
  2885  00124A  EF28  F009         	goto	u7650
  2886  00124E                     u7640:
  2887  00124E  0E00               	movlw	0
  2888  001250                     u7650:
  2889  001250  6F6D               	movwf	_efgtoa$2104& (0+255),b
  2890  001252  6B6E               	clrf	(_efgtoa$2104+1)& (0+255),b
  2891  001254                     
  2892                           ; BSR set to: 0
  2893  001254  516D               	movf	_efgtoa$2104& (0+255),w,b
  2894  001256  116E               	iorwf	(_efgtoa$2104+1)& (0+255),w,b
  2895  001258  B4D8               	btfsc	status,2,c
  2896  00125A  EF31  F009         	goto	u7661
  2897  00125E  EF33  F009         	goto	u7660
  2898  001262                     u7661:
  2899  001262  EF41  F009         	goto	l7153
  2900  001266                     u7660:
  2901  001266                     
  2902                           ; BSR set to: 0
  2903                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 354:             
      +                          strcpy(&dbuf[n], "NAN");
  2904  001266  0E24               	movlw	low _dbuf
  2905  001268  2597               	addwf	efgtoa@n& (0+255),w,b
  2906  00126A  6E05               	movwf	strcpy@dest^0,c
  2907  00126C  0E01               	movlw	high _dbuf
  2908  00126E  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2909  001270  6E06               	movwf	(strcpy@dest+1)^0,c
  2910  001272  0E59               	movlw	low STR_7
  2911  001274  6E07               	movwf	strcpy@src^0,c
  2912  001276  0E10               	movlw	high STR_7
  2913  001278  6E08               	movwf	(strcpy@src+1)^0,c
  2914  00127A  EC40  F022         	call	_strcpy	;wreg free
  2915                           
  2916                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 355:         } el
      +                          se {
  2917  00127E  EF4D  F009         	goto	l7155
  2918  001282                     l7153:
  2919                           
  2920                           ; BSR set to: 0
  2921                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 356:             
      +                          strcpy(&dbuf[n], "nan");
  2922  001282  0E24               	movlw	low _dbuf
  2923  001284  2597               	addwf	efgtoa@n& (0+255),w,b
  2924  001286  6E05               	movwf	strcpy@dest^0,c
  2925  001288  0E01               	movlw	high _dbuf
  2926  00128A  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2927  00128C  6E06               	movwf	(strcpy@dest+1)^0,c
  2928  00128E  0E61               	movlw	low STR_8
  2929  001290  6E07               	movwf	strcpy@src^0,c
  2930  001292  0E10               	movlw	high STR_8
  2931  001294  6E08               	movwf	(strcpy@src+1)^0,c
  2932  001296  EC40  F022         	call	_strcpy	;wreg free
  2933  00129A                     l7155:
  2934                           
  2935                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 358:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  2936  00129A  0100               	movlb	0	; () banked
  2937  00129C  0EFD               	movlw	253
  2938  00129E  2784               	addwf	efgtoa@w& (0+255),f,b
  2939  0012A0  0EFF               	movlw	255
  2940  0012A2  2385               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2941  0012A4                     
  2942                           ; BSR set to: 0
  2943                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 359:         retu
      +                          rn pad(fp, &dbuf[0], w);
  2944  0012A4  C04F  F017         	movff	efgtoa@fp,pad@fp
  2945  0012A8  C050  F018         	movff	efgtoa@fp+1,pad@fp+1
  2946  0012AC  0E24               	movlw	low _dbuf
  2947  0012AE  6E19               	movwf	pad@buf^0,c
  2948  0012B0  0E01               	movlw	high _dbuf
  2949  0012B2  6E1A               	movwf	(pad@buf+1)^0,c
  2950  0012B4  C084  F01B         	movff	efgtoa@w,pad@p
  2951  0012B8  C085  F01C         	movff	efgtoa@w+1,pad@p+1
  2952  0012BC  EC4E  F01D         	call	_pad	;wreg free
  2953  0012C0  C017  F04F         	movff	?_pad,?_efgtoa
  2954  0012C4  C018  F050         	movff	?_pad+1,?_efgtoa+1
  2955  0012C8  EF33  F00E         	goto	l1466
  2956  0012CC                     l7161:
  2957                           
  2958                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 363:     u = 1.0;
  2959  0012CC  0E00               	movlw	0
  2960  0012CE  0100               	movlb	0	; () banked
  2961  0012D0  6F99               	movwf	efgtoa@u& (0+255),b
  2962  0012D2  0E00               	movlw	0
  2963  0012D4  6F9A               	movwf	(efgtoa@u+1)& (0+255),b
  2964  0012D6  0E80               	movlw	128
  2965  0012D8  6F9B               	movwf	(efgtoa@u+2)& (0+255),b
  2966  0012DA  0E3F               	movlw	63
  2967  0012DC  6F9C               	movwf	(efgtoa@u+3)& (0+255),b
  2968                           
  2969                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 364:     e = 0;
  2970  0012DE  0E00               	movlw	0
  2971  0012E0  6F96               	movwf	(efgtoa@e+1)& (0+255),b
  2972  0012E2  0E00               	movlw	0
  2973  0012E4  6F95               	movwf	efgtoa@e& (0+255),b
  2974  0012E6                     
  2975                           ; BSR set to: 0
  2976                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 365:     if (!(g 
      +                          == 0.0)) {
  2977  0012E6  C091  F005         	movff	efgtoa@g,___fleq@ff1
  2978  0012EA  C092  F006         	movff	efgtoa@g+1,___fleq@ff1+1
  2979  0012EE  C093  F007         	movff	efgtoa@g+2,___fleq@ff1+2
  2980  0012F2  C094  F008         	movff	efgtoa@g+3,___fleq@ff1+3
  2981  0012F6  0E00               	movlw	0
  2982  0012F8  6E09               	movwf	___fleq@ff2^0,c
  2983  0012FA  0E00               	movlw	0
  2984  0012FC  6E0A               	movwf	(___fleq@ff2+1)^0,c
  2985  0012FE  0E00               	movlw	0
  2986  001300  6E0B               	movwf	(___fleq@ff2+2)^0,c
  2987  001302  0E00               	movlw	0
  2988  001304  6E0C               	movwf	(___fleq@ff2+3)^0,c
  2989  001306  EC83  F01F         	call	___fleq	;wreg free
  2990  00130A  B0D8               	btfsc	status,0,c
  2991  00130C  EF8A  F009         	goto	u7671
  2992  001310  EF8C  F009         	goto	u7670
  2993  001314                     u7671:
  2994  001314  EF0F  F00A         	goto	l7179
  2995  001318                     u7670:
  2996  001318  EFAB  F009         	goto	l7171
  2997  00131C                     l7167:
  2998                           
  2999                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 367:             
      +                          u = u*10.0;
  3000  00131C  C099  F005         	movff	efgtoa@u,___flmul@b
  3001  001320  C09A  F006         	movff	efgtoa@u+1,___flmul@b+1
  3002  001324  C09B  F007         	movff	efgtoa@u+2,___flmul@b+2
  3003  001328  C09C  F008         	movff	efgtoa@u+3,___flmul@b+3
  3004  00132C  0E00               	movlw	0
  3005  00132E  6E09               	movwf	___flmul@a^0,c
  3006  001330  0E00               	movlw	0
  3007  001332  6E0A               	movwf	(___flmul@a+1)^0,c
  3008  001334  0E20               	movlw	32
  3009  001336  6E0B               	movwf	(___flmul@a+2)^0,c
  3010  001338  0E41               	movlw	65
  3011  00133A  6E0C               	movwf	(___flmul@a+3)^0,c
  3012  00133C  ECCA  F013         	call	___flmul	;wreg free
  3013  001340  C005  F099         	movff	?___flmul,efgtoa@u
  3014  001344  C006  F09A         	movff	?___flmul+1,efgtoa@u+1
  3015  001348  C007  F09B         	movff	?___flmul+2,efgtoa@u+2
  3016  00134C  C008  F09C         	movff	?___flmul+3,efgtoa@u+3
  3017  001350                     
  3018                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 368:             
      +                          ++e;
  3019  001350  0100               	movlb	0	; () banked
  3020  001352  4B95               	infsnz	efgtoa@e& (0+255),f,b
  3021  001354  2B96               	incf	(efgtoa@e+1)& (0+255),f,b
  3022  001356                     l7171:
  3023                           
  3024                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 366:         whil
      +                          e (!(g < (u*10.0))) {
  3025  001356  C091  F01E         	movff	efgtoa@g,___flge@ff1
  3026  00135A  C092  F01F         	movff	efgtoa@g+1,___flge@ff1+1
  3027  00135E  C093  F020         	movff	efgtoa@g+2,___flge@ff1+2
  3028  001362  C094  F021         	movff	efgtoa@g+3,___flge@ff1+3
  3029  001366  0E00               	movlw	0
  3030  001368  6E09               	movwf	___flmul@a^0,c
  3031  00136A  0E00               	movlw	0
  3032  00136C  6E0A               	movwf	(___flmul@a+1)^0,c
  3033  00136E  0E20               	movlw	32
  3034  001370  6E0B               	movwf	(___flmul@a+2)^0,c
  3035  001372  0E41               	movlw	65
  3036  001374  6E0C               	movwf	(___flmul@a+3)^0,c
  3037  001376  C099  F005         	movff	efgtoa@u,___flmul@b
  3038  00137A  C09A  F006         	movff	efgtoa@u+1,___flmul@b+1
  3039  00137E  C09B  F007         	movff	efgtoa@u+2,___flmul@b+2
  3040  001382  C09C  F008         	movff	efgtoa@u+3,___flmul@b+3
  3041  001386  ECCA  F013         	call	___flmul	;wreg free
  3042  00138A  C005  F022         	movff	?___flmul,___flge@ff2
  3043  00138E  C006  F023         	movff	?___flmul+1,___flge@ff2+1
  3044  001392  C007  F024         	movff	?___flmul+2,___flge@ff2+2
  3045  001396  C008  F025         	movff	?___flmul+3,___flge@ff2+3
  3046  00139A  EC77  F01B         	call	___flge	;wreg free
  3047  00139E  B0D8               	btfsc	status,0,c
  3048  0013A0  EFD4  F009         	goto	u7681
  3049  0013A4  EFD6  F009         	goto	u7680
  3050  0013A8                     u7681:
  3051  0013A8  EF8E  F009         	goto	l7167
  3052  0013AC                     u7680:
  3053  0013AC  EFF6  F009         	goto	l7177
  3054  0013B0                     l7173:
  3055                           
  3056                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 371:             
      +                          u = u/10.0;
  3057  0013B0  C099  F01E         	movff	efgtoa@u,___fldiv@b
  3058  0013B4  C09A  F01F         	movff	efgtoa@u+1,___fldiv@b+1
  3059  0013B8  C09B  F020         	movff	efgtoa@u+2,___fldiv@b+2
  3060  0013BC  C09C  F021         	movff	efgtoa@u+3,___fldiv@b+3
  3061  0013C0  0E00               	movlw	0
  3062  0013C2  6E22               	movwf	___fldiv@a^0,c
  3063  0013C4  0E00               	movlw	0
  3064  0013C6  6E23               	movwf	(___fldiv@a+1)^0,c
  3065  0013C8  0E20               	movlw	32
  3066  0013CA  6E24               	movwf	(___fldiv@a+2)^0,c
  3067  0013CC  0E41               	movlw	65
  3068  0013CE  6E25               	movwf	(___fldiv@a+3)^0,c
  3069  0013D0  ECDF  F015         	call	___fldiv	;wreg free
  3070  0013D4  C01E  F099         	movff	?___fldiv,efgtoa@u
  3071  0013D8  C01F  F09A         	movff	?___fldiv+1,efgtoa@u+1
  3072  0013DC  C020  F09B         	movff	?___fldiv+2,efgtoa@u+2
  3073  0013E0  C021  F09C         	movff	?___fldiv+3,efgtoa@u+3
  3074  0013E4                     
  3075                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 372:             
      +                          --e;
  3076  0013E4  0100               	movlb	0	; () banked
  3077  0013E6  0795               	decf	efgtoa@e& (0+255),f,b
  3078  0013E8  A0D8               	btfss	status,0,c
  3079  0013EA  0796               	decf	(efgtoa@e+1)& (0+255),f,b
  3080  0013EC                     l7177:
  3081                           
  3082                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 370:         whil
      +                          e (g < u) {
  3083  0013EC  C091  F01E         	movff	efgtoa@g,___flge@ff1
  3084  0013F0  C092  F01F         	movff	efgtoa@g+1,___flge@ff1+1
  3085  0013F4  C093  F020         	movff	efgtoa@g+2,___flge@ff1+2
  3086  0013F8  C094  F021         	movff	efgtoa@g+3,___flge@ff1+3
  3087  0013FC  C099  F022         	movff	efgtoa@u,___flge@ff2
  3088  001400  C09A  F023         	movff	efgtoa@u+1,___flge@ff2+1
  3089  001404  C09B  F024         	movff	efgtoa@u+2,___flge@ff2+2
  3090  001408  C09C  F025         	movff	efgtoa@u+3,___flge@ff2+3
  3091  00140C  EC77  F01B         	call	___flge	;wreg free
  3092  001410  A0D8               	btfss	status,0,c
  3093  001412  EF0D  F00A         	goto	u7691
  3094  001416  EF0F  F00A         	goto	u7690
  3095  00141A                     u7691:
  3096  00141A  EFD8  F009         	goto	l7173
  3097  00141E                     u7690:
  3098  00141E                     l7179:
  3099                           
  3100                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 377:     mode = t
      +                          olower((int)c);
  3101  00141E  C055  F00B         	movff	efgtoa@c,tolower@c
  3102  001422  6A0C               	clrf	(tolower@c+1)^0,c
  3103  001424  EC10  F022         	call	_tolower	;wreg free
  3104  001428  500B               	movf	?_tolower^0,w,c
  3105  00142A  0100               	movlb	0	; () banked
  3106  00142C  6F86               	movwf	efgtoa@mode& (0+255),b
  3107  00142E                     
  3108                           ; BSR set to: 0
  3109                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 378:     nmode = 
      +                          mode;
  3110  00142E  C086  F083         	movff	efgtoa@mode,efgtoa@nmode
  3111  001432                     
  3112                           ; BSR set to: 0
  3113                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 379:     if (mode
      +                           == 'g') {
  3114  001432  0E67               	movlw	103
  3115  001434  1986               	xorwf	efgtoa@mode& (0+255),w,b
  3116  001436  A4D8               	btfss	status,2,c
  3117  001438  EF20  F00A         	goto	u7701
  3118  00143C  EF22  F00A         	goto	u7700
  3119  001440                     u7701:
  3120  001440  EF48  F00A         	goto	l7193
  3121  001444                     u7700:
  3122  001444                     
  3123                           ; BSR set to: 0
  3124                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 380:   if (prec =
      +                          = 0) {
  3125  001444  51F4               	movf	_prec& (0+255),w,b
  3126  001446  11F5               	iorwf	(_prec+1)& (0+255),w,b
  3127  001448  A4D8               	btfss	status,2,c
  3128  00144A  EF29  F00A         	goto	u7711
  3129  00144E  EF2B  F00A         	goto	u7710
  3130  001452                     u7711:
  3131  001452  EF2F  F00A         	goto	l7189
  3132  001456                     u7710:
  3133  001456                     
  3134                           ; BSR set to: 0
  3135                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 381:    prec = 1;
  3136  001456  0E00               	movlw	0
  3137  001458  6FF5               	movwf	(_prec+1)& (0+255),b
  3138  00145A  0E01               	movlw	1
  3139  00145C  6FF4               	movwf	_prec& (0+255),b
  3140  00145E                     l7189:
  3141                           
  3142                           ; BSR set to: 0
  3143                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 383:         p = 
      +                          (0 < prec) ? prec : 6;
  3144  00145E  BFF5               	btfsc	(_prec+1)& (0+255),7,b
  3145  001460  EF3C  F00A         	goto	u7720
  3146  001464  51F5               	movf	(_prec+1)& (0+255),w,b
  3147  001466  E106               	bnz	u7721
  3148  001468  05F4               	decf	_prec& (0+255),w,b
  3149  00146A  B0D8               	btfsc	status,0,c
  3150  00146C  EF3A  F00A         	goto	u7721
  3151  001470  EF3C  F00A         	goto	u7720
  3152  001474                     u7721:
  3153  001474  EF42  F00A         	goto	l1484
  3154  001478                     u7720:
  3155  001478                     l7191:
  3156                           
  3157                           ; BSR set to: 0
  3158  001478  0E00               	movlw	0
  3159  00147A  6F82               	movwf	(efgtoa@p+1)& (0+255),b
  3160  00147C  0E06               	movlw	6
  3161  00147E  6F81               	movwf	efgtoa@p& (0+255),b
  3162  001480  EF51  F00A         	goto	l7199
  3163  001484                     l1484:
  3164                           
  3165                           ; BSR set to: 0
  3166  001484  C0F4  F081         	movff	_prec,efgtoa@p
  3167  001488  C0F5  F082         	movff	_prec+1,efgtoa@p+1
  3168  00148C  EF51  F00A         	goto	l7199
  3169  001490                     l7193:
  3170                           
  3171                           ; BSR set to: 0
  3172                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 385:         p = 
      +                          (prec < 0) ? 6 : prec;
  3173  001490  BFF5               	btfsc	(_prec+1)& (0+255),7,b
  3174  001492  EF4D  F00A         	goto	u7731
  3175  001496  EF4F  F00A         	goto	u7730
  3176  00149A                     u7731:
  3177  00149A  EF3C  F00A         	goto	l7191
  3178  00149E                     u7730:
  3179  00149E  EF42  F00A         	goto	l1484
  3180  0014A2                     l7199:
  3181                           
  3182                           ; BSR set to: 0
  3183                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 389:     if (mode
      +                           == 'g') {
  3184  0014A2  0E67               	movlw	103
  3185  0014A4  1986               	xorwf	efgtoa@mode& (0+255),w,b
  3186  0014A6  A4D8               	btfss	status,2,c
  3187  0014A8  EF58  F00A         	goto	u7741
  3188  0014AC  EF5A  F00A         	goto	u7740
  3189  0014B0                     u7741:
  3190  0014B0  EF89  F00A         	goto	l7209
  3191  0014B4                     u7740:
  3192  0014B4                     
  3193                           ; BSR set to: 0
  3194                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 390:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  3195  0014B4  AF96               	btfss	(efgtoa@e+1)& (0+255),7,b
  3196  0014B6  EF68  F00A         	goto	u7750
  3197  0014BA  0EFC               	movlw	252
  3198  0014BC  5D95               	subwf	efgtoa@e& (0+255),w,b
  3199  0014BE  0EFF               	movlw	255
  3200  0014C0  5996               	subwfb	(efgtoa@e+1)& (0+255),w,b
  3201  0014C2  A0D8               	btfss	status,0,c
  3202  0014C4  EF66  F00A         	goto	u7751
  3203  0014C8  EF68  F00A         	goto	u7750
  3204  0014CC                     u7751:
  3205  0014CC  EF87  F00A         	goto	l7207
  3206  0014D0                     u7750:
  3207  0014D0                     
  3208                           ; BSR set to: 0
  3209  0014D0  0EFF               	movlw	255
  3210  0014D2  6F60               	movwf	??_efgtoa& (0+255),b
  3211  0014D4  0EFF               	movlw	255
  3212  0014D6  6F61               	movwf	(??_efgtoa+1)& (0+255),b
  3213  0014D8  C081  F062         	movff	efgtoa@p,??_efgtoa+2
  3214  0014DC  C082  F063         	movff	efgtoa@p+1,??_efgtoa+3
  3215  0014E0  5160               	movf	??_efgtoa& (0+255),w,b
  3216  0014E2  2762               	addwf	(??_efgtoa+2)& (0+255),f,b
  3217  0014E4  5161               	movf	(??_efgtoa+1)& (0+255),w,b
  3218  0014E6  2363               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3219  0014E8  5195               	movf	efgtoa@e& (0+255),w,b
  3220  0014EA  5D62               	subwf	(??_efgtoa+2)& (0+255),w,b
  3221  0014EC  5163               	movf	(??_efgtoa+3)& (0+255),w,b
  3222  0014EE  0A80               	xorlw	128
  3223  0014F0  6F64               	movwf	(??_efgtoa+4)& (0+255),b
  3224  0014F2  5196               	movf	(efgtoa@e+1)& (0+255),w,b
  3225  0014F4  0A80               	xorlw	128
  3226  0014F6  5964               	subwfb	(??_efgtoa+4)& (0+255),w,b
  3227  0014F8  A0D8               	btfss	status,0,c
  3228  0014FA  EF81  F00A         	goto	u7761
  3229  0014FE  EF83  F00A         	goto	u7760
  3230  001502                     u7761:
  3231  001502  EF87  F00A         	goto	l7207
  3232  001506                     u7760:
  3233  001506                     
  3234                           ; BSR set to: 0
  3235                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 391:             
      +                          nmode = 'f';
  3236  001506  0E66               	movlw	102
  3237  001508  6F83               	movwf	efgtoa@nmode& (0+255),b
  3238                           
  3239                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 392:         } el
      +                          se {
  3240  00150A  EF89  F00A         	goto	l7209
  3241  00150E                     l7207:
  3242                           
  3243                           ; BSR set to: 0
  3244                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 393:             
      +                          nmode = 'e';
  3245  00150E  0E65               	movlw	101
  3246  001510  6F83               	movwf	efgtoa@nmode& (0+255),b
  3247  001512                     l7209:
  3248                           
  3249                           ; BSR set to: 0
  3250                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 398:     m = p;
  3251  001512  C081  F079         	movff	efgtoa@p,efgtoa@m
  3252  001516  C082  F07A         	movff	efgtoa@p+1,efgtoa@m+1
  3253  00151A                     
  3254                           ; BSR set to: 0
  3255                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 399:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  3256  00151A  0E67               	movlw	103
  3257  00151C  1986               	xorwf	efgtoa@mode& (0+255),w,b
  3258  00151E  A4D8               	btfss	status,2,c
  3259  001520  EF94  F00A         	goto	u7771
  3260  001524  EF96  F00A         	goto	u7770
  3261  001528                     u7771:
  3262  001528  EFA6  F00A         	goto	l7217
  3263  00152C                     u7770:
  3264  00152C                     
  3265                           ; BSR set to: 0
  3266  00152C  0E66               	movlw	102
  3267  00152E  1983               	xorwf	efgtoa@nmode& (0+255),w,b
  3268  001530  A4D8               	btfss	status,2,c
  3269  001532  EF9D  F00A         	goto	u7781
  3270  001536  EF9F  F00A         	goto	u7780
  3271  00153A                     u7781:
  3272  00153A  EFA8  F00A         	goto	l7219
  3273  00153E                     u7780:
  3274  00153E                     
  3275                           ; BSR set to: 0
  3276  00153E  BF96               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3277  001540  EFA6  F00A         	goto	u7790
  3278  001544  EFA4  F00A         	goto	u7791
  3279  001548                     u7791:
  3280  001548  EFA8  F00A         	goto	l7219
  3281  00154C                     u7790:
  3282  00154C                     l7217:
  3283                           
  3284                           ; BSR set to: 0
  3285                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 400:         ++m;
  3286  00154C  4B79               	infsnz	efgtoa@m& (0+255),f,b
  3287  00154E  2B7A               	incf	(efgtoa@m+1)& (0+255),f,b
  3288  001550                     l7219:
  3289                           
  3290                           ; BSR set to: 0
  3291                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 404:     if (nmod
      +                          e == 'f') {
  3292  001550  0E66               	movlw	102
  3293  001552  1983               	xorwf	efgtoa@nmode& (0+255),w,b
  3294  001554  A4D8               	btfss	status,2,c
  3295  001556  EFAF  F00A         	goto	u7801
  3296  00155A  EFB1  F00A         	goto	u7800
  3297  00155E                     u7801:
  3298  00155E  EFD1  F00A         	goto	l7229
  3299  001562                     u7800:
  3300  001562                     
  3301                           ; BSR set to: 0
  3302                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 405:         if (
      +                          e < 0) {
  3303  001562  BF96               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3304  001564  EFB8  F00A         	goto	u7810
  3305  001568  EFB6  F00A         	goto	u7811
  3306  00156C                     u7811:
  3307  00156C  EFC4  F00A         	goto	l7225
  3308  001570                     u7810:
  3309  001570                     
  3310                           ; BSR set to: 0
  3311                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 406:             
      +                          u = 1.0;
  3312  001570  0E00               	movlw	0
  3313  001572  6F99               	movwf	efgtoa@u& (0+255),b
  3314  001574  0E00               	movlw	0
  3315  001576  6F9A               	movwf	(efgtoa@u+1)& (0+255),b
  3316  001578  0E80               	movlw	128
  3317  00157A  6F9B               	movwf	(efgtoa@u+2)& (0+255),b
  3318  00157C  0E3F               	movlw	63
  3319  00157E  6F9C               	movwf	(efgtoa@u+3)& (0+255),b
  3320                           
  3321                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 407:             
      +                          e = 0;
  3322  001580  0E00               	movlw	0
  3323  001582  6F96               	movwf	(efgtoa@e+1)& (0+255),b
  3324  001584  0E00               	movlw	0
  3325  001586  6F95               	movwf	efgtoa@e& (0+255),b
  3326  001588                     l7225:
  3327                           
  3328                           ; BSR set to: 0
  3329                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 409:         if (
      +                          !(mode == 'g')) {
  3330  001588  0E67               	movlw	103
  3331  00158A  1986               	xorwf	efgtoa@mode& (0+255),w,b
  3332  00158C  B4D8               	btfsc	status,2,c
  3333  00158E  EFCB  F00A         	goto	u7821
  3334  001592  EFCD  F00A         	goto	u7820
  3335  001596                     u7821:
  3336  001596  EFD1  F00A         	goto	l7229
  3337  00159A                     u7820:
  3338  00159A                     
  3339                           ; BSR set to: 0
  3340                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 410:             
      +                          m += e;
  3341  00159A  5195               	movf	efgtoa@e& (0+255),w,b
  3342  00159C  2779               	addwf	efgtoa@m& (0+255),f,b
  3343  00159E  5196               	movf	(efgtoa@e+1)& (0+255),w,b
  3344  0015A0  237A               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3345  0015A2                     l7229:
  3346                           
  3347                           ; BSR set to: 0
  3348                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 415:     i = 0;
  3349  0015A2  0E00               	movlw	0
  3350  0015A4  6F90               	movwf	(efgtoa@i+1)& (0+255),b
  3351  0015A6  0E00               	movlw	0
  3352  0015A8  6F8F               	movwf	efgtoa@i& (0+255),b
  3353  0015AA                     
  3354                           ; BSR set to: 0
  3355                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 416:     h = g;
  3356  0015AA  C091  F087         	movff	efgtoa@g,efgtoa@h
  3357  0015AE  C092  F088         	movff	efgtoa@g+1,efgtoa@h+1
  3358  0015B2  C093  F089         	movff	efgtoa@g+2,efgtoa@h+2
  3359  0015B6  C094  F08A         	movff	efgtoa@g+3,efgtoa@h+3
  3360  0015BA                     
  3361                           ; BSR set to: 0
  3362                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 417:     ou = u;
  3363  0015BA  C099  F065         	movff	efgtoa@u,efgtoa@ou
  3364  0015BE  C09A  F066         	movff	efgtoa@u+1,efgtoa@ou+1
  3365  0015C2  C09B  F067         	movff	efgtoa@u+2,efgtoa@ou+2
  3366  0015C6  C09C  F068         	movff	efgtoa@u+3,efgtoa@ou+3
  3367                           
  3368                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 418:     while (i
      +                           < m) {
  3369  0015CA  EF62  F00B         	goto	l7243
  3370  0015CE                     l7235:
  3371                           
  3372                           ; BSR set to: 0
  3373                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 419:         l = 
      +                          floorf(h/u);
  3374  0015CE  C087  F01E         	movff	efgtoa@h,___fldiv@b
  3375  0015D2  C088  F01F         	movff	efgtoa@h+1,___fldiv@b+1
  3376  0015D6  C089  F020         	movff	efgtoa@h+2,___fldiv@b+2
  3377  0015DA  C08A  F021         	movff	efgtoa@h+3,___fldiv@b+3
  3378  0015DE  C099  F022         	movff	efgtoa@u,___fldiv@a
  3379  0015E2  C09A  F023         	movff	efgtoa@u+1,___fldiv@a+1
  3380  0015E6  C09B  F024         	movff	efgtoa@u+2,___fldiv@a+2
  3381  0015EA  C09C  F025         	movff	efgtoa@u+3,___fldiv@a+3
  3382  0015EE  ECDF  F015         	call	___fldiv	;wreg free
  3383  0015F2  C01E  F037         	movff	?___fldiv,floorf@x
  3384  0015F6  C01F  F038         	movff	?___fldiv+1,floorf@x+1
  3385  0015FA  C020  F039         	movff	?___fldiv+2,floorf@x+2
  3386  0015FE  C021  F03A         	movff	?___fldiv+3,floorf@x+3
  3387  001602  ECAC  F017         	call	_floorf	;wreg free
  3388  001606  C037  F08B         	movff	?_floorf,efgtoa@l
  3389  00160A  C038  F08C         	movff	?_floorf+1,efgtoa@l+1
  3390  00160E  C039  F08D         	movff	?_floorf+2,efgtoa@l+2
  3391  001612  C03A  F08E         	movff	?_floorf+3,efgtoa@l+3
  3392                           
  3393                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 420:         d = 
      +                          (int)l;
  3394  001616  C08B  F005         	movff	efgtoa@l,___fltol@f1
  3395  00161A  C08C  F006         	movff	efgtoa@l+1,___fltol@f1+1
  3396  00161E  C08D  F007         	movff	efgtoa@l+2,___fltol@f1+2
  3397  001622  C08E  F008         	movff	efgtoa@l+3,___fltol@f1+3
  3398  001626  ECF4  F01A         	call	___fltol	;wreg free
  3399  00162A  C005  F07D         	movff	?___fltol,efgtoa@d
  3400  00162E  C006  F07E         	movff	?___fltol+1,efgtoa@d+1
  3401  001632                     
  3402                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 421:         h -=
      +                           l*u;
  3403  001632  C087  F047         	movff	efgtoa@h,___flsub@b
  3404  001636  C088  F048         	movff	efgtoa@h+1,___flsub@b+1
  3405  00163A  C089  F049         	movff	efgtoa@h+2,___flsub@b+2
  3406  00163E  C08A  F04A         	movff	efgtoa@h+3,___flsub@b+3
  3407  001642  C099  F009         	movff	efgtoa@u,___flmul@a
  3408  001646  C09A  F00A         	movff	efgtoa@u+1,___flmul@a+1
  3409  00164A  C09B  F00B         	movff	efgtoa@u+2,___flmul@a+2
  3410  00164E  C09C  F00C         	movff	efgtoa@u+3,___flmul@a+3
  3411  001652  C08B  F005         	movff	efgtoa@l,___flmul@b
  3412  001656  C08C  F006         	movff	efgtoa@l+1,___flmul@b+1
  3413  00165A  C08D  F007         	movff	efgtoa@l+2,___flmul@b+2
  3414  00165E  C08E  F008         	movff	efgtoa@l+3,___flmul@b+3
  3415  001662  ECCA  F013         	call	___flmul	;wreg free
  3416  001666  C005  F04B         	movff	?___flmul,___flsub@a
  3417  00166A  C006  F04C         	movff	?___flmul+1,___flsub@a+1
  3418  00166E  C007  F04D         	movff	?___flmul+2,___flsub@a+2
  3419  001672  C008  F04E         	movff	?___flmul+3,___flsub@a+3
  3420  001676  ECF1  F022         	call	___flsub	;wreg free
  3421  00167A  C047  F087         	movff	?___flsub,efgtoa@h
  3422  00167E  C048  F088         	movff	?___flsub+1,efgtoa@h+1
  3423  001682  C049  F089         	movff	?___flsub+2,efgtoa@h+2
  3424  001686  C04A  F08A         	movff	?___flsub+3,efgtoa@h+3
  3425  00168A                     
  3426                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 422:         u = 
      +                          u/10.0;
  3427  00168A  C099  F01E         	movff	efgtoa@u,___fldiv@b
  3428  00168E  C09A  F01F         	movff	efgtoa@u+1,___fldiv@b+1
  3429  001692  C09B  F020         	movff	efgtoa@u+2,___fldiv@b+2
  3430  001696  C09C  F021         	movff	efgtoa@u+3,___fldiv@b+3
  3431  00169A  0E00               	movlw	0
  3432  00169C  6E22               	movwf	___fldiv@a^0,c
  3433  00169E  0E00               	movlw	0
  3434  0016A0  6E23               	movwf	(___fldiv@a+1)^0,c
  3435  0016A2  0E20               	movlw	32
  3436  0016A4  6E24               	movwf	(___fldiv@a+2)^0,c
  3437  0016A6  0E41               	movlw	65
  3438  0016A8  6E25               	movwf	(___fldiv@a+3)^0,c
  3439  0016AA  ECDF  F015         	call	___fldiv	;wreg free
  3440  0016AE  C01E  F099         	movff	?___fldiv,efgtoa@u
  3441  0016B2  C01F  F09A         	movff	?___fldiv+1,efgtoa@u+1
  3442  0016B6  C020  F09B         	movff	?___fldiv+2,efgtoa@u+2
  3443  0016BA  C021  F09C         	movff	?___fldiv+3,efgtoa@u+3
  3444  0016BE                     
  3445                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 423:         ++i;
  3446  0016BE  0100               	movlb	0	; () banked
  3447  0016C0  4B8F               	infsnz	efgtoa@i& (0+255),f,b
  3448  0016C2  2B90               	incf	(efgtoa@i+1)& (0+255),f,b
  3449  0016C4                     l7243:
  3450                           
  3451                           ; BSR set to: 0
  3452                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 418:     while (i
      +                           < m) {
  3453  0016C4  5179               	movf	efgtoa@m& (0+255),w,b
  3454  0016C6  5D8F               	subwf	efgtoa@i& (0+255),w,b
  3455  0016C8  5190               	movf	(efgtoa@i+1)& (0+255),w,b
  3456  0016CA  0A80               	xorlw	128
  3457  0016CC  6F60               	movwf	??_efgtoa& (0+255),b
  3458  0016CE  517A               	movf	(efgtoa@m+1)& (0+255),w,b
  3459  0016D0  0A80               	xorlw	128
  3460  0016D2  5960               	subwfb	??_efgtoa& (0+255),w,b
  3461  0016D4  A0D8               	btfss	status,0,c
  3462  0016D6  EF6F  F00B         	goto	u7831
  3463  0016DA  EF71  F00B         	goto	u7830
  3464  0016DE                     u7831:
  3465  0016DE  EFE7  F00A         	goto	l7235
  3466  0016E2                     u7830:
  3467  0016E2                     
  3468                           ; BSR set to: 0
  3469                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 427:     l = u*5.
      +                          0;
  3470  0016E2  C099  F005         	movff	efgtoa@u,___flmul@b
  3471  0016E6  C09A  F006         	movff	efgtoa@u+1,___flmul@b+1
  3472  0016EA  C09B  F007         	movff	efgtoa@u+2,___flmul@b+2
  3473  0016EE  C09C  F008         	movff	efgtoa@u+3,___flmul@b+3
  3474  0016F2  0E00               	movlw	0
  3475  0016F4  6E09               	movwf	___flmul@a^0,c
  3476  0016F6  0E00               	movlw	0
  3477  0016F8  6E0A               	movwf	(___flmul@a+1)^0,c
  3478  0016FA  0EA0               	movlw	160
  3479  0016FC  6E0B               	movwf	(___flmul@a+2)^0,c
  3480  0016FE  0E40               	movlw	64
  3481  001700  6E0C               	movwf	(___flmul@a+3)^0,c
  3482  001702  ECCA  F013         	call	___flmul	;wreg free
  3483  001706  C005  F08B         	movff	?___flmul,efgtoa@l
  3484  00170A  C006  F08C         	movff	?___flmul+1,efgtoa@l+1
  3485  00170E  C007  F08D         	movff	?___flmul+2,efgtoa@l+2
  3486  001712  C008  F08E         	movff	?___flmul+3,efgtoa@l+3
  3487  001716                     
  3488                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 428:     if (h < 
      +                          l) {
  3489  001716  C087  F01E         	movff	efgtoa@h,___flge@ff1
  3490  00171A  C088  F01F         	movff	efgtoa@h+1,___flge@ff1+1
  3491  00171E  C089  F020         	movff	efgtoa@h+2,___flge@ff1+2
  3492  001722  C08A  F021         	movff	efgtoa@h+3,___flge@ff1+3
  3493  001726  C08B  F022         	movff	efgtoa@l,___flge@ff2
  3494  00172A  C08C  F023         	movff	efgtoa@l+1,___flge@ff2+1
  3495  00172E  C08D  F024         	movff	efgtoa@l+2,___flge@ff2+2
  3496  001732  C08E  F025         	movff	efgtoa@l+3,___flge@ff2+3
  3497  001736  EC77  F01B         	call	___flge	;wreg free
  3498  00173A  B0D8               	btfsc	status,0,c
  3499  00173C  EFA2  F00B         	goto	u7841
  3500  001740  EFA4  F00B         	goto	u7840
  3501  001744                     u7841:
  3502  001744  EFAF  F00B         	goto	l7251
  3503  001748                     u7840:
  3504  001748                     
  3505                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 429:         l = 
      +                          0.0;
  3506  001748  0E00               	movlw	0
  3507  00174A  0100               	movlb	0	; () banked
  3508  00174C  6F8B               	movwf	efgtoa@l& (0+255),b
  3509  00174E  0E00               	movlw	0
  3510  001750  6F8C               	movwf	(efgtoa@l+1)& (0+255),b
  3511  001752  0E00               	movlw	0
  3512  001754  6F8D               	movwf	(efgtoa@l+2)& (0+255),b
  3513  001756  0E00               	movlw	0
  3514  001758  6F8E               	movwf	(efgtoa@l+3)& (0+255),b
  3515                           
  3516                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 430:     } else {
  3517  00175A  EFD8  F00B         	goto	l7257
  3518  00175E                     l7251:
  3519                           
  3520                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 432:         if (
      +                          (h == l) && !(d % 2)) {
  3521  00175E  C087  F005         	movff	efgtoa@h,___fleq@ff1
  3522  001762  C088  F006         	movff	efgtoa@h+1,___fleq@ff1+1
  3523  001766  C089  F007         	movff	efgtoa@h+2,___fleq@ff1+2
  3524  00176A  C08A  F008         	movff	efgtoa@h+3,___fleq@ff1+3
  3525  00176E  C08B  F009         	movff	efgtoa@l,___fleq@ff2
  3526  001772  C08C  F00A         	movff	efgtoa@l+1,___fleq@ff2+1
  3527  001776  C08D  F00B         	movff	efgtoa@l+2,___fleq@ff2+2
  3528  00177A  C08E  F00C         	movff	efgtoa@l+3,___fleq@ff2+3
  3529  00177E  EC83  F01F         	call	___fleq	;wreg free
  3530  001782  A0D8               	btfss	status,0,c
  3531  001784  EFC6  F00B         	goto	u7851
  3532  001788  EFC8  F00B         	goto	u7850
  3533  00178C                     u7851:
  3534  00178C  EFD8  F00B         	goto	l7257
  3535  001790                     u7850:
  3536  001790  0100               	movlb	0	; () banked
  3537  001792  B17D               	btfsc	efgtoa@d& (0+255),0,b
  3538  001794  EFCE  F00B         	goto	u7861
  3539  001798  EFD0  F00B         	goto	u7860
  3540  00179C                     u7861:
  3541  00179C  EFD8  F00B         	goto	l7257
  3542  0017A0                     u7860:
  3543  0017A0                     
  3544                           ; BSR set to: 0
  3545                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 433:             
      +                          l = 0.0;
  3546  0017A0  0E00               	movlw	0
  3547  0017A2  6F8B               	movwf	efgtoa@l& (0+255),b
  3548  0017A4  0E00               	movlw	0
  3549  0017A6  6F8C               	movwf	(efgtoa@l+1)& (0+255),b
  3550  0017A8  0E00               	movlw	0
  3551  0017AA  6F8D               	movwf	(efgtoa@l+2)& (0+255),b
  3552  0017AC  0E00               	movlw	0
  3553  0017AE  6F8E               	movwf	(efgtoa@l+3)& (0+255),b
  3554  0017B0                     l7257:
  3555                           
  3556                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 438:     h = g + 
      +                          l;
  3557  0017B0  C091  F037         	movff	efgtoa@g,___fladd@b
  3558  0017B4  C092  F038         	movff	efgtoa@g+1,___fladd@b+1
  3559  0017B8  C093  F039         	movff	efgtoa@g+2,___fladd@b+2
  3560  0017BC  C094  F03A         	movff	efgtoa@g+3,___fladd@b+3
  3561  0017C0  C08B  F03B         	movff	efgtoa@l,___fladd@a
  3562  0017C4  C08C  F03C         	movff	efgtoa@l+1,___fladd@a+1
  3563  0017C8  C08D  F03D         	movff	efgtoa@l+2,___fladd@a+2
  3564  0017CC  C08E  F03E         	movff	efgtoa@l+3,___fladd@a+3
  3565  0017D0  EC6A  F011         	call	___fladd	;wreg free
  3566  0017D4  C037  F087         	movff	?___fladd,efgtoa@h
  3567  0017D8  C038  F088         	movff	?___fladd+1,efgtoa@h+1
  3568  0017DC  C039  F089         	movff	?___fladd+2,efgtoa@h+2
  3569  0017E0  C03A  F08A         	movff	?___fladd+3,efgtoa@h+3
  3570  0017E4                     
  3571                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 441:     u = ou;
  3572  0017E4  C065  F099         	movff	efgtoa@ou,efgtoa@u
  3573  0017E8  C066  F09A         	movff	efgtoa@ou+1,efgtoa@u+1
  3574  0017EC  C067  F09B         	movff	efgtoa@ou+2,efgtoa@u+2
  3575  0017F0  C068  F09C         	movff	efgtoa@ou+3,efgtoa@u+3
  3576  0017F4                     
  3577                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 442:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  3578  0017F4  0E65               	movlw	101
  3579  0017F6  0100               	movlb	0	; () banked
  3580  0017F8  1983               	xorwf	efgtoa@nmode& (0+255),w,b
  3581  0017FA  B4D8               	btfsc	status,2,c
  3582  0017FC  EF02  F00C         	goto	u7871
  3583  001800  EF04  F00C         	goto	u7870
  3584  001804                     u7871:
  3585  001804  EF0A  F00C         	goto	l7265
  3586  001808                     u7870:
  3587  001808                     
  3588                           ; BSR set to: 0
  3589  001808  C095  F07B         	movff	efgtoa@e,efgtoa@ne
  3590  00180C  C096  F07C         	movff	efgtoa@e+1,efgtoa@ne+1
  3591  001810  EF0E  F00C         	goto	l1510
  3592  001814                     l7265:
  3593                           
  3594                           ; BSR set to: 0
  3595  001814  0E00               	movlw	0
  3596  001816  6F7C               	movwf	(efgtoa@ne+1)& (0+255),b
  3597  001818  0E00               	movlw	0
  3598  00181A  6F7B               	movwf	efgtoa@ne& (0+255),b
  3599  00181C                     l1510:
  3600                           
  3601                           ; BSR set to: 0
  3602                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 443:     pp = 0;
  3603  00181C  0E00               	movlw	0
  3604  00181E  6F78               	movwf	(efgtoa@pp+1)& (0+255),b
  3605  001820  0E00               	movlw	0
  3606  001822  6F77               	movwf	efgtoa@pp& (0+255),b
  3607                           
  3608                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 444:     t = 0;
  3609  001824  0E00               	movlw	0
  3610  001826  6F76               	movwf	(efgtoa@t+1)& (0+255),b
  3611  001828  0E00               	movlw	0
  3612  00182A  6F75               	movwf	efgtoa@t& (0+255),b
  3613                           
  3614                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 445:     i = 0;
  3615  00182C  0E00               	movlw	0
  3616  00182E  6F90               	movwf	(efgtoa@i+1)& (0+255),b
  3617  001830  0E00               	movlw	0
  3618  001832  6F8F               	movwf	efgtoa@i& (0+255),b
  3619                           
  3620                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 446:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3621  001834  EF09  F00D         	goto	l7315
  3622  001838                     l7267:
  3623                           
  3624                           ; BSR set to: 0
  3625                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 447:         l = 
      +                          floorf(h/u);
  3626  001838  C087  F01E         	movff	efgtoa@h,___fldiv@b
  3627  00183C  C088  F01F         	movff	efgtoa@h+1,___fldiv@b+1
  3628  001840  C089  F020         	movff	efgtoa@h+2,___fldiv@b+2
  3629  001844  C08A  F021         	movff	efgtoa@h+3,___fldiv@b+3
  3630  001848  C099  F022         	movff	efgtoa@u,___fldiv@a
  3631  00184C  C09A  F023         	movff	efgtoa@u+1,___fldiv@a+1
  3632  001850  C09B  F024         	movff	efgtoa@u+2,___fldiv@a+2
  3633  001854  C09C  F025         	movff	efgtoa@u+3,___fldiv@a+3
  3634  001858  ECDF  F015         	call	___fldiv	;wreg free
  3635  00185C  C01E  F037         	movff	?___fldiv,floorf@x
  3636  001860  C01F  F038         	movff	?___fldiv+1,floorf@x+1
  3637  001864  C020  F039         	movff	?___fldiv+2,floorf@x+2
  3638  001868  C021  F03A         	movff	?___fldiv+3,floorf@x+3
  3639  00186C  ECAC  F017         	call	_floorf	;wreg free
  3640  001870  C037  F08B         	movff	?_floorf,efgtoa@l
  3641  001874  C038  F08C         	movff	?_floorf+1,efgtoa@l+1
  3642  001878  C039  F08D         	movff	?_floorf+2,efgtoa@l+2
  3643  00187C  C03A  F08E         	movff	?_floorf+3,efgtoa@l+3
  3644                           
  3645                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 448:         d = 
      +                          (int)l;
  3646  001880  C08B  F005         	movff	efgtoa@l,___fltol@f1
  3647  001884  C08C  F006         	movff	efgtoa@l+1,___fltol@f1+1
  3648  001888  C08D  F007         	movff	efgtoa@l+2,___fltol@f1+2
  3649  00188C  C08E  F008         	movff	efgtoa@l+3,___fltol@f1+3
  3650  001890  ECF4  F01A         	call	___fltol	;wreg free
  3651  001894  C005  F07D         	movff	?___fltol,efgtoa@d
  3652  001898  C006  F07E         	movff	?___fltol+1,efgtoa@d+1
  3653  00189C                     
  3654                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 449:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  3655  00189C  0100               	movlb	0	; () banked
  3656  00189E  B9F6               	btfsc	_flags& (0+255),4,b
  3657  0018A0  EF54  F00C         	goto	u7881
  3658  0018A4  EF56  F00C         	goto	u7880
  3659  0018A8                     u7881:
  3660  0018A8  EF73  F00C         	goto	l7279
  3661  0018AC                     u7880:
  3662  0018AC                     
  3663                           ; BSR set to: 0
  3664  0018AC  517D               	movf	efgtoa@d& (0+255),w,b
  3665  0018AE  117E               	iorwf	(efgtoa@d+1)& (0+255),w,b
  3666  0018B0  A4D8               	btfss	status,2,c
  3667  0018B2  EF5D  F00C         	goto	u7891
  3668  0018B6  EF5F  F00C         	goto	u7890
  3669  0018BA                     u7891:
  3670  0018BA  EF73  F00C         	goto	l7279
  3671  0018BE                     u7890:
  3672  0018BE                     
  3673                           ; BSR set to: 0
  3674  0018BE  0E67               	movlw	103
  3675  0018C0  1986               	xorwf	efgtoa@mode& (0+255),w,b
  3676  0018C2  A4D8               	btfss	status,2,c
  3677  0018C4  EF66  F00C         	goto	u7901
  3678  0018C8  EF68  F00C         	goto	u7900
  3679  0018CC                     u7901:
  3680  0018CC  EF73  F00C         	goto	l7279
  3681  0018D0                     u7900:
  3682  0018D0                     
  3683                           ; BSR set to: 0
  3684  0018D0  BF7C               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3685  0018D2  EF6F  F00C         	goto	u7910
  3686  0018D6  EF6D  F00C         	goto	u7911
  3687  0018DA                     u7911:
  3688  0018DA  EF73  F00C         	goto	l7279
  3689  0018DE                     u7910:
  3690  0018DE                     
  3691                           ; BSR set to: 0
  3692                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 450:             
      +                          ++t;
  3693  0018DE  4B75               	infsnz	efgtoa@t& (0+255),f,b
  3694  0018E0  2B76               	incf	(efgtoa@t+1)& (0+255),f,b
  3695                           
  3696                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 451:         } el
      +                          se {
  3697  0018E2  EFBD  F00C         	goto	l7307
  3698  0018E6                     l7279:
  3699                           
  3700                           ; BSR set to: 0
  3701                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 452:             
      +                          if (!pp && (ne < 0)) {
  3702  0018E6  5177               	movf	efgtoa@pp& (0+255),w,b
  3703  0018E8  1178               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3704  0018EA  A4D8               	btfss	status,2,c
  3705  0018EC  EF7A  F00C         	goto	u7921
  3706  0018F0  EF7C  F00C         	goto	u7920
  3707  0018F4                     u7921:
  3708  0018F4  EFA6  F00C         	goto	l7299
  3709  0018F8                     u7920:
  3710  0018F8                     
  3711                           ; BSR set to: 0
  3712  0018F8  BF7C               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3713  0018FA  EF83  F00C         	goto	u7930
  3714  0018FE  EF81  F00C         	goto	u7931
  3715  001902                     u7931:
  3716  001902  EFA6  F00C         	goto	l7299
  3717  001906                     u7930:
  3718  001906                     
  3719                           ; BSR set to: 0
  3720                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 453:             
      +                              dbuf[n++] = '.';
  3721  001906  0E24               	movlw	low _dbuf
  3722  001908  2597               	addwf	efgtoa@n& (0+255),w,b
  3723  00190A  6ED9               	movwf	fsr2l,c
  3724  00190C  0E01               	movlw	high _dbuf
  3725  00190E  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3726  001910  6EDA               	movwf	fsr2h,c
  3727  001912  0E2E               	movlw	46
  3728  001914  6EDF               	movwf	indf2,c
  3729  001916                     
  3730                           ; BSR set to: 0
  3731  001916  4B97               	infsnz	efgtoa@n& (0+255),f,b
  3732  001918  2B98               	incf	(efgtoa@n+1)& (0+255),f,b
  3733  00191A                     
  3734                           ; BSR set to: 0
  3735                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 454:             
      +                              --w;
  3736  00191A  0784               	decf	efgtoa@w& (0+255),f,b
  3737  00191C  A0D8               	btfss	status,0,c
  3738  00191E  0785               	decf	(efgtoa@w+1)& (0+255),f,b
  3739  001920                     
  3740                           ; BSR set to: 0
  3741                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 455:             
      +                              pp = 1;
  3742  001920  0E00               	movlw	0
  3743  001922  6F78               	movwf	(efgtoa@pp+1)& (0+255),b
  3744  001924  0E01               	movlw	1
  3745  001926  6F77               	movwf	efgtoa@pp& (0+255),b
  3746  001928  EFA6  F00C         	goto	l7299
  3747  00192C                     l7291:
  3748                           
  3749                           ; BSR set to: 0
  3750                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 458:             
      +                              dbuf[n++] = '0';
  3751  00192C  0E24               	movlw	low _dbuf
  3752  00192E  2597               	addwf	efgtoa@n& (0+255),w,b
  3753  001930  6ED9               	movwf	fsr2l,c
  3754  001932  0E01               	movlw	high _dbuf
  3755  001934  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3756  001936  6EDA               	movwf	fsr2h,c
  3757  001938  0E30               	movlw	48
  3758  00193A  6EDF               	movwf	indf2,c
  3759  00193C                     
  3760                           ; BSR set to: 0
  3761  00193C  4B97               	infsnz	efgtoa@n& (0+255),f,b
  3762  00193E  2B98               	incf	(efgtoa@n+1)& (0+255),f,b
  3763  001940                     
  3764                           ; BSR set to: 0
  3765                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 459:             
      +                              --w;
  3766  001940  0784               	decf	efgtoa@w& (0+255),f,b
  3767  001942  A0D8               	btfss	status,0,c
  3768  001944  0785               	decf	(efgtoa@w+1)& (0+255),f,b
  3769  001946                     
  3770                           ; BSR set to: 0
  3771                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 460:             
      +                              --t;
  3772  001946  0775               	decf	efgtoa@t& (0+255),f,b
  3773  001948  A0D8               	btfss	status,0,c
  3774  00194A  0776               	decf	(efgtoa@t+1)& (0+255),f,b
  3775  00194C                     l7299:
  3776                           
  3777                           ; BSR set to: 0
  3778                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 457:             
      +                          while (t) {
  3779  00194C  5175               	movf	efgtoa@t& (0+255),w,b
  3780  00194E  1176               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3781  001950  A4D8               	btfss	status,2,c
  3782  001952  EFAD  F00C         	goto	u7941
  3783  001956  EFAF  F00C         	goto	u7940
  3784  00195A                     u7941:
  3785  00195A  EF96  F00C         	goto	l7291
  3786  00195E                     u7940:
  3787  00195E                     
  3788                           ; BSR set to: 0
  3789                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 462:             
      +                          dbuf[n++] = '0' + d;
  3790  00195E  0E24               	movlw	low _dbuf
  3791  001960  2597               	addwf	efgtoa@n& (0+255),w,b
  3792  001962  6ED9               	movwf	fsr2l,c
  3793  001964  0E01               	movlw	high _dbuf
  3794  001966  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3795  001968  6EDA               	movwf	fsr2h,c
  3796  00196A  517D               	movf	efgtoa@d& (0+255),w,b
  3797  00196C  0F30               	addlw	48
  3798  00196E  6EDF               	movwf	indf2,c
  3799  001970                     
  3800                           ; BSR set to: 0
  3801  001970  4B97               	infsnz	efgtoa@n& (0+255),f,b
  3802  001972  2B98               	incf	(efgtoa@n+1)& (0+255),f,b
  3803  001974                     
  3804                           ; BSR set to: 0
  3805                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 463:             
      +                          --w;
  3806  001974  0784               	decf	efgtoa@w& (0+255),f,b
  3807  001976  A0D8               	btfss	status,0,c
  3808  001978  0785               	decf	(efgtoa@w+1)& (0+255),f,b
  3809  00197A                     l7307:
  3810                           
  3811                           ; BSR set to: 0
  3812                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 465:         h -=
      +                           l*u;
  3813  00197A  C087  F047         	movff	efgtoa@h,___flsub@b
  3814  00197E  C088  F048         	movff	efgtoa@h+1,___flsub@b+1
  3815  001982  C089  F049         	movff	efgtoa@h+2,___flsub@b+2
  3816  001986  C08A  F04A         	movff	efgtoa@h+3,___flsub@b+3
  3817  00198A  C099  F009         	movff	efgtoa@u,___flmul@a
  3818  00198E  C09A  F00A         	movff	efgtoa@u+1,___flmul@a+1
  3819  001992  C09B  F00B         	movff	efgtoa@u+2,___flmul@a+2
  3820  001996  C09C  F00C         	movff	efgtoa@u+3,___flmul@a+3
  3821  00199A  C08B  F005         	movff	efgtoa@l,___flmul@b
  3822  00199E  C08C  F006         	movff	efgtoa@l+1,___flmul@b+1
  3823  0019A2  C08D  F007         	movff	efgtoa@l+2,___flmul@b+2
  3824  0019A6  C08E  F008         	movff	efgtoa@l+3,___flmul@b+3
  3825  0019AA  ECCA  F013         	call	___flmul	;wreg free
  3826  0019AE  C005  F04B         	movff	?___flmul,___flsub@a
  3827  0019B2  C006  F04C         	movff	?___flmul+1,___flsub@a+1
  3828  0019B6  C007  F04D         	movff	?___flmul+2,___flsub@a+2
  3829  0019BA  C008  F04E         	movff	?___flmul+3,___flsub@a+3
  3830  0019BE  ECF1  F022         	call	___flsub	;wreg free
  3831  0019C2  C047  F087         	movff	?___flsub,efgtoa@h
  3832  0019C6  C048  F088         	movff	?___flsub+1,efgtoa@h+1
  3833  0019CA  C049  F089         	movff	?___flsub+2,efgtoa@h+2
  3834  0019CE  C04A  F08A         	movff	?___flsub+3,efgtoa@h+3
  3835  0019D2                     
  3836                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 466:         u = 
      +                          u/10.0;
  3837  0019D2  C099  F01E         	movff	efgtoa@u,___fldiv@b
  3838  0019D6  C09A  F01F         	movff	efgtoa@u+1,___fldiv@b+1
  3839  0019DA  C09B  F020         	movff	efgtoa@u+2,___fldiv@b+2
  3840  0019DE  C09C  F021         	movff	efgtoa@u+3,___fldiv@b+3
  3841  0019E2  0E00               	movlw	0
  3842  0019E4  6E22               	movwf	___fldiv@a^0,c
  3843  0019E6  0E00               	movlw	0
  3844  0019E8  6E23               	movwf	(___fldiv@a+1)^0,c
  3845  0019EA  0E20               	movlw	32
  3846  0019EC  6E24               	movwf	(___fldiv@a+2)^0,c
  3847  0019EE  0E41               	movlw	65
  3848  0019F0  6E25               	movwf	(___fldiv@a+3)^0,c
  3849  0019F2  ECDF  F015         	call	___fldiv	;wreg free
  3850  0019F6  C01E  F099         	movff	?___fldiv,efgtoa@u
  3851  0019FA  C01F  F09A         	movff	?___fldiv+1,efgtoa@u+1
  3852  0019FE  C020  F09B         	movff	?___fldiv+2,efgtoa@u+2
  3853  001A02  C021  F09C         	movff	?___fldiv+3,efgtoa@u+3
  3854  001A06                     
  3855                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 467:         --ne
      +                          ;
  3856  001A06  0100               	movlb	0	; () banked
  3857  001A08  077B               	decf	efgtoa@ne& (0+255),f,b
  3858  001A0A  A0D8               	btfss	status,0,c
  3859  001A0C  077C               	decf	(efgtoa@ne+1)& (0+255),f,b
  3860  001A0E                     
  3861                           ; BSR set to: 0
  3862                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 468:         ++i;
  3863  001A0E  4B8F               	infsnz	efgtoa@i& (0+255),f,b
  3864  001A10  2B90               	incf	(efgtoa@i+1)& (0+255),f,b
  3865  001A12                     l7315:
  3866                           
  3867                           ; BSR set to: 0
  3868                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 446:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3869  001A12  5179               	movf	efgtoa@m& (0+255),w,b
  3870  001A14  5D8F               	subwf	efgtoa@i& (0+255),w,b
  3871  001A16  5190               	movf	(efgtoa@i+1)& (0+255),w,b
  3872  001A18  0A80               	xorlw	128
  3873  001A1A  6F60               	movwf	??_efgtoa& (0+255),b
  3874  001A1C  517A               	movf	(efgtoa@m+1)& (0+255),w,b
  3875  001A1E  0A80               	xorlw	128
  3876  001A20  5960               	subwfb	??_efgtoa& (0+255),w,b
  3877  001A22  B0D8               	btfsc	status,0,c
  3878  001A24  EF16  F00D         	goto	u7951
  3879  001A28  EF18  F00D         	goto	u7950
  3880  001A2C                     u7951:
  3881  001A2C  EF26  F00D         	goto	l7319
  3882  001A30                     u7950:
  3883  001A30                     
  3884                           ; BSR set to: 0
  3885  001A30  BF98               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3886  001A32  EF24  F00D         	goto	u7961
  3887  001A36  5198               	movf	(efgtoa@n+1)& (0+255),w,b
  3888  001A38  E109               	bnz	u7960
  3889  001A3A  0E4B               	movlw	75
  3890  001A3C  5D97               	subwf	efgtoa@n& (0+255),w,b
  3891  001A3E  A0D8               	btfss	status,0,c
  3892  001A40  EF24  F00D         	goto	u7961
  3893  001A44  EF26  F00D         	goto	u7960
  3894  001A48                     u7961:
  3895  001A48  EF1C  F00C         	goto	l7267
  3896  001A4C                     u7960:
  3897  001A4C                     l7319:
  3898                           
  3899                           ; BSR set to: 0
  3900                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 470:     if (!pp 
      +                          && (flags & (1 << 4))) {
  3901  001A4C  5177               	movf	efgtoa@pp& (0+255),w,b
  3902  001A4E  1178               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3903  001A50  A4D8               	btfss	status,2,c
  3904  001A52  EF2D  F00D         	goto	u7971
  3905  001A56  EF2F  F00D         	goto	u7970
  3906  001A5A                     u7971:
  3907  001A5A  EF40  F00D         	goto	l7327
  3908  001A5E                     u7970:
  3909  001A5E                     
  3910                           ; BSR set to: 0
  3911  001A5E  A9F6               	btfss	_flags& (0+255),4,b
  3912  001A60  EF34  F00D         	goto	u7981
  3913  001A64  EF36  F00D         	goto	u7980
  3914  001A68                     u7981:
  3915  001A68  EF40  F00D         	goto	l7327
  3916  001A6C                     u7980:
  3917  001A6C                     
  3918                           ; BSR set to: 0
  3919                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 471:         dbuf
      +                          [n++] = '.';
  3920  001A6C  0E24               	movlw	low _dbuf
  3921  001A6E  2597               	addwf	efgtoa@n& (0+255),w,b
  3922  001A70  6ED9               	movwf	fsr2l,c
  3923  001A72  0E01               	movlw	high _dbuf
  3924  001A74  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3925  001A76  6EDA               	movwf	fsr2h,c
  3926  001A78  0E2E               	movlw	46
  3927  001A7A  6EDF               	movwf	indf2,c
  3928  001A7C                     
  3929                           ; BSR set to: 0
  3930  001A7C  4B97               	infsnz	efgtoa@n& (0+255),f,b
  3931  001A7E  2B98               	incf	(efgtoa@n+1)& (0+255),f,b
  3932  001A80                     l7327:
  3933                           
  3934                           ; BSR set to: 0
  3935                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 473:     dbuf[n] 
      +                          = '\0';
  3936  001A80  0E24               	movlw	low _dbuf
  3937  001A82  2597               	addwf	efgtoa@n& (0+255),w,b
  3938  001A84  6ED9               	movwf	fsr2l,c
  3939  001A86  0E01               	movlw	high _dbuf
  3940  001A88  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3941  001A8A  6EDA               	movwf	fsr2h,c
  3942  001A8C  0E00               	movlw	0
  3943  001A8E  6EDF               	movwf	indf2,c
  3944  001A90                     
  3945                           ; BSR set to: 0
  3946                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 476:     if (nmod
      +                          e == 'e') {
  3947  001A90  0E65               	movlw	101
  3948  001A92  1983               	xorwf	efgtoa@nmode& (0+255),w,b
  3949  001A94  A4D8               	btfss	status,2,c
  3950  001A96  EF4F  F00D         	goto	u7991
  3951  001A9A  EF51  F00D         	goto	u7990
  3952  001A9E                     u7991:
  3953  001A9E  EF21  F00E         	goto	l7389
  3954  001AA2                     u7990:
  3955  001AA2                     
  3956                           ; BSR set to: 0
  3957                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 477:         i = 
      +                          sizeof(dbuf) - 1;
  3958  001AA2  0E00               	movlw	0
  3959  001AA4  6F90               	movwf	(efgtoa@i+1)& (0+255),b
  3960  001AA6  0E4F               	movlw	79
  3961  001AA8  6F8F               	movwf	efgtoa@i& (0+255),b
  3962  001AAA                     
  3963                           ; BSR set to: 0
  3964                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 478:         dbuf
      +                          [i] = '\0';
  3965  001AAA  0E24               	movlw	low _dbuf
  3966  001AAC  258F               	addwf	efgtoa@i& (0+255),w,b
  3967  001AAE  6ED9               	movwf	fsr2l,c
  3968  001AB0  0E01               	movlw	high _dbuf
  3969  001AB2  2190               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3970  001AB4  6EDA               	movwf	fsr2h,c
  3971  001AB6  0E00               	movlw	0
  3972  001AB8  6EDF               	movwf	indf2,c
  3973  001ABA                     
  3974                           ; BSR set to: 0
  3975                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 479:         sign
      +                           = 0;
  3976  001ABA  0E00               	movlw	0
  3977  001ABC  6F80               	movwf	(efgtoa@sign+1)& (0+255),b
  3978  001ABE  0E00               	movlw	0
  3979  001AC0  6F7F               	movwf	efgtoa@sign& (0+255),b
  3980  001AC2                     
  3981                           ; BSR set to: 0
  3982                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 480:         if (
      +                          e < 0) {
  3983  001AC2  BF96               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3984  001AC4  EF68  F00D         	goto	u8000
  3985  001AC8  EF66  F00D         	goto	u8001
  3986  001ACC                     u8001:
  3987  001ACC  EF70  F00D         	goto	l7343
  3988  001AD0                     u8000:
  3989  001AD0                     
  3990                           ; BSR set to: 0
  3991                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 481:             
      +                          sign = 1;
  3992  001AD0  0E00               	movlw	0
  3993  001AD2  6F80               	movwf	(efgtoa@sign+1)& (0+255),b
  3994  001AD4  0E01               	movlw	1
  3995  001AD6  6F7F               	movwf	efgtoa@sign& (0+255),b
  3996  001AD8                     
  3997                           ; BSR set to: 0
  3998                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 482:             
      +                          e = -e;
  3999  001AD8  6D95               	negf	efgtoa@e& (0+255),b
  4000  001ADA  1F96               	comf	(efgtoa@e+1)& (0+255),f,b
  4001  001ADC  B0D8               	btfsc	status,0,c
  4002  001ADE  2B96               	incf	(efgtoa@e+1)& (0+255),f,b
  4003  001AE0                     l7343:
  4004                           
  4005                           ; BSR set to: 0
  4006                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 484:         p = 
      +                          2;
  4007  001AE0  0E00               	movlw	0
  4008  001AE2  6F82               	movwf	(efgtoa@p+1)& (0+255),b
  4009  001AE4  0E02               	movlw	2
  4010  001AE6  6F81               	movwf	efgtoa@p& (0+255),b
  4011                           
  4012                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 485:         whil
      +                          e (e || (0 < p)) {
  4013  001AE8  EFA1  F00D         	goto	l7355
  4014  001AEC                     l7345:
  4015                           
  4016                           ; BSR set to: 0
  4017                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 486:             
      +                          --i;
  4018  001AEC  078F               	decf	efgtoa@i& (0+255),f,b
  4019  001AEE  A0D8               	btfss	status,0,c
  4020  001AF0  0790               	decf	(efgtoa@i+1)& (0+255),f,b
  4021  001AF2                     
  4022                           ; BSR set to: 0
  4023                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 487:             
      +                          dbuf[i] = '0' + (e % 10);
  4024  001AF2  0E24               	movlw	low _dbuf
  4025  001AF4  258F               	addwf	efgtoa@i& (0+255),w,b
  4026  001AF6  6ED9               	movwf	fsr2l,c
  4027  001AF8  0E01               	movlw	high _dbuf
  4028  001AFA  2190               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4029  001AFC  6EDA               	movwf	fsr2h,c
  4030  001AFE  C095  F005         	movff	efgtoa@e,___awmod@dividend
  4031  001B02  C096  F006         	movff	efgtoa@e+1,___awmod@dividend+1
  4032  001B06  0E00               	movlw	0
  4033  001B08  6E08               	movwf	(___awmod@divisor+1)^0,c
  4034  001B0A  0E0A               	movlw	10
  4035  001B0C  6E07               	movwf	___awmod@divisor^0,c
  4036  001B0E  ECD5  F01E         	call	___awmod	;wreg free
  4037  001B12  5005               	movf	?___awmod^0,w,c
  4038  001B14  0F30               	addlw	48
  4039  001B16  6EDF               	movwf	indf2,c
  4040  001B18                     
  4041                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 488:             
      +                          e = e / 10;
  4042  001B18  C095  F005         	movff	efgtoa@e,___awdiv@dividend
  4043  001B1C  C096  F006         	movff	efgtoa@e+1,___awdiv@dividend+1
  4044  001B20  0E00               	movlw	0
  4045  001B22  6E08               	movwf	(___awdiv@divisor+1)^0,c
  4046  001B24  0E0A               	movlw	10
  4047  001B26  6E07               	movwf	___awdiv@divisor^0,c
  4048  001B28  ECB1  F01D         	call	___awdiv	;wreg free
  4049  001B2C  C005  F095         	movff	?___awdiv,efgtoa@e
  4050  001B30  C006  F096         	movff	?___awdiv+1,efgtoa@e+1
  4051  001B34                     
  4052                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 489:             
      +                          --p;
  4053  001B34  0100               	movlb	0	; () banked
  4054  001B36  0781               	decf	efgtoa@p& (0+255),f,b
  4055  001B38  A0D8               	btfss	status,0,c
  4056  001B3A  0782               	decf	(efgtoa@p+1)& (0+255),f,b
  4057  001B3C                     
  4058                           ; BSR set to: 0
  4059                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 490:             
      +                          --w;
  4060  001B3C  0784               	decf	efgtoa@w& (0+255),f,b
  4061  001B3E  A0D8               	btfss	status,0,c
  4062  001B40  0785               	decf	(efgtoa@w+1)& (0+255),f,b
  4063  001B42                     l7355:
  4064                           
  4065                           ; BSR set to: 0
  4066                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 485:         whil
      +                          e (e || (0 < p)) {
  4067  001B42  5195               	movf	efgtoa@e& (0+255),w,b
  4068  001B44  1196               	iorwf	(efgtoa@e+1)& (0+255),w,b
  4069  001B46  A4D8               	btfss	status,2,c
  4070  001B48  EFA8  F00D         	goto	u8011
  4071  001B4C  EFAA  F00D         	goto	u8010
  4072  001B50                     u8011:
  4073  001B50  EF76  F00D         	goto	l7345
  4074  001B54                     u8010:
  4075  001B54                     
  4076                           ; BSR set to: 0
  4077  001B54  BF82               	btfsc	(efgtoa@p+1)& (0+255),7,b
  4078  001B56  EFB7  F00D         	goto	u8020
  4079  001B5A  5182               	movf	(efgtoa@p+1)& (0+255),w,b
  4080  001B5C  E106               	bnz	u8021
  4081  001B5E  0581               	decf	efgtoa@p& (0+255),w,b
  4082  001B60  B0D8               	btfsc	status,0,c
  4083  001B62  EFB5  F00D         	goto	u8021
  4084  001B66  EFB7  F00D         	goto	u8020
  4085  001B6A                     u8021:
  4086  001B6A  EF76  F00D         	goto	l7345
  4087  001B6E                     u8020:
  4088  001B6E                     
  4089                           ; BSR set to: 0
  4090                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 492:         --i;
  4091  001B6E  078F               	decf	efgtoa@i& (0+255),f,b
  4092  001B70  A0D8               	btfss	status,0,c
  4093  001B72  0790               	decf	(efgtoa@i+1)& (0+255),f,b
  4094  001B74                     
  4095                           ; BSR set to: 0
  4096                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [i] = sign ? '-' : '+';
  4097  001B74  517F               	movf	efgtoa@sign& (0+255),w,b
  4098  001B76  1180               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4099  001B78  A4D8               	btfss	status,2,c
  4100  001B7A  EFC1  F00D         	goto	u8031
  4101  001B7E  EFC3  F00D         	goto	u8030
  4102  001B82                     u8031:
  4103  001B82  EFC9  F00D         	goto	l7365
  4104  001B86                     u8030:
  4105  001B86                     
  4106                           ; BSR set to: 0
  4107  001B86  0E00               	movlw	0
  4108  001B88  6F70               	movwf	(_efgtoa$2108+1)& (0+255),b
  4109  001B8A  0E2B               	movlw	43
  4110  001B8C  6F6F               	movwf	_efgtoa$2108& (0+255),b
  4111  001B8E  EFCD  F00D         	goto	l7367
  4112  001B92                     l7365:
  4113                           
  4114                           ; BSR set to: 0
  4115  001B92  0E00               	movlw	0
  4116  001B94  6F70               	movwf	(_efgtoa$2108+1)& (0+255),b
  4117  001B96  0E2D               	movlw	45
  4118  001B98  6F6F               	movwf	_efgtoa$2108& (0+255),b
  4119  001B9A                     l7367:
  4120                           
  4121                           ; BSR set to: 0
  4122  001B9A  0E24               	movlw	low _dbuf
  4123  001B9C  258F               	addwf	efgtoa@i& (0+255),w,b
  4124  001B9E  6ED9               	movwf	fsr2l,c
  4125  001BA0  0E01               	movlw	high _dbuf
  4126  001BA2  2190               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4127  001BA4  6EDA               	movwf	fsr2h,c
  4128  001BA6  C06F  FFDF         	movff	_efgtoa$2108,indf2
  4129  001BAA                     
  4130                           ; BSR set to: 0
  4131                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 494:         --w;
  4132  001BAA  0784               	decf	efgtoa@w& (0+255),f,b
  4133  001BAC  A0D8               	btfss	status,0,c
  4134  001BAE  0785               	decf	(efgtoa@w+1)& (0+255),f,b
  4135  001BB0                     
  4136                           ; BSR set to: 0
  4137                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 496:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  4138  001BB0  078F               	decf	efgtoa@i& (0+255),f,b
  4139  001BB2  A0D8               	btfss	status,0,c
  4140  001BB4  0790               	decf	(efgtoa@i+1)& (0+255),f,b
  4141  001BB6                     
  4142                           ; BSR set to: 0
  4143  001BB6  0EBF               	movlw	191
  4144  001BB8  6F60               	movwf	??_efgtoa& (0+255),b
  4145  001BBA  0EFF               	movlw	255
  4146  001BBC  6F61               	movwf	(??_efgtoa+1)& (0+255),b
  4147  001BBE  5055               	movf	efgtoa@c^0,w,c
  4148  001BC0  6F62               	movwf	(??_efgtoa+2)& (0+255),b
  4149  001BC2  6B63               	clrf	(??_efgtoa+3)& (0+255),b
  4150  001BC4  5160               	movf	??_efgtoa& (0+255),w,b
  4151  001BC6  2762               	addwf	(??_efgtoa+2)& (0+255),f,b
  4152  001BC8  5161               	movf	(??_efgtoa+1)& (0+255),w,b
  4153  001BCA  2363               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4154  001BCC  5163               	movf	(??_efgtoa+3)& (0+255),w,b
  4155  001BCE  E10A               	bnz	u8040
  4156  001BD0  0E1A               	movlw	26
  4157  001BD2  5D62               	subwf	(??_efgtoa+2)& (0+255),w,b
  4158  001BD4  A0D8               	btfss	status,0,c
  4159  001BD6  EFEF  F00D         	goto	u8041
  4160  001BDA  EFF2  F00D         	goto	u8040
  4161  001BDE                     u8041:
  4162  001BDE  0E01               	movlw	1
  4163  001BE0  EFF3  F00D         	goto	u8050
  4164  001BE4                     u8040:
  4165  001BE4  0E00               	movlw	0
  4166  001BE6                     u8050:
  4167  001BE6  6F73               	movwf	_efgtoa$2110& (0+255),b
  4168  001BE8  6B74               	clrf	(_efgtoa$2110+1)& (0+255),b
  4169  001BEA                     
  4170                           ; BSR set to: 0
  4171  001BEA  5173               	movf	_efgtoa$2110& (0+255),w,b
  4172  001BEC  1174               	iorwf	(_efgtoa$2110+1)& (0+255),w,b
  4173  001BEE  A4D8               	btfss	status,2,c
  4174  001BF0  EFFC  F00D         	goto	u8061
  4175  001BF4  EFFE  F00D         	goto	u8060
  4176  001BF8                     u8061:
  4177  001BF8  EF04  F00E         	goto	l7381
  4178  001BFC                     u8060:
  4179  001BFC                     
  4180                           ; BSR set to: 0
  4181  001BFC  0E00               	movlw	0
  4182  001BFE  6F72               	movwf	(_efgtoa$2109+1)& (0+255),b
  4183  001C00  0E65               	movlw	101
  4184  001C02  6F71               	movwf	_efgtoa$2109& (0+255),b
  4185  001C04  EF08  F00E         	goto	l7383
  4186  001C08                     l7381:
  4187                           
  4188                           ; BSR set to: 0
  4189  001C08  0E00               	movlw	0
  4190  001C0A  6F72               	movwf	(_efgtoa$2109+1)& (0+255),b
  4191  001C0C  0E45               	movlw	69
  4192  001C0E  6F71               	movwf	_efgtoa$2109& (0+255),b
  4193  001C10                     l7383:
  4194                           
  4195                           ; BSR set to: 0
  4196  001C10  0E24               	movlw	low _dbuf
  4197  001C12  258F               	addwf	efgtoa@i& (0+255),w,b
  4198  001C14  6ED9               	movwf	fsr2l,c
  4199  001C16  0E01               	movlw	high _dbuf
  4200  001C18  2190               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4201  001C1A  6EDA               	movwf	fsr2h,c
  4202  001C1C  C071  FFDF         	movff	_efgtoa$2109,indf2
  4203  001C20                     
  4204                           ; BSR set to: 0
  4205                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 497:         --w;
  4206  001C20  0784               	decf	efgtoa@w& (0+255),f,b
  4207  001C22  A0D8               	btfss	status,0,c
  4208  001C24  0785               	decf	(efgtoa@w+1)& (0+255),f,b
  4209  001C26                     
  4210                           ; BSR set to: 0
  4211                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 498:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  4212  001C26  0E24               	movlw	low _dbuf
  4213  001C28  2597               	addwf	efgtoa@n& (0+255),w,b
  4214  001C2A  6E05               	movwf	strcpy@dest^0,c
  4215  001C2C  0E01               	movlw	high _dbuf
  4216  001C2E  2198               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4217  001C30  6E06               	movwf	(strcpy@dest+1)^0,c
  4218  001C32  0E24               	movlw	low _dbuf
  4219  001C34  258F               	addwf	efgtoa@i& (0+255),w,b
  4220  001C36  6E07               	movwf	strcpy@src^0,c
  4221  001C38  0E01               	movlw	high _dbuf
  4222  001C3A  2190               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4223  001C3C  6E08               	movwf	(strcpy@src+1)^0,c
  4224  001C3E  EC40  F022         	call	_strcpy	;wreg free
  4225  001C42                     l7389:
  4226                           
  4227                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 502:     return p
      +                          ad(fp, &dbuf[0], w);
  4228  001C42  C04F  F017         	movff	efgtoa@fp,pad@fp
  4229  001C46  C050  F018         	movff	efgtoa@fp+1,pad@fp+1
  4230  001C4A  0E24               	movlw	low _dbuf
  4231  001C4C  6E19               	movwf	pad@buf^0,c
  4232  001C4E  0E01               	movlw	high _dbuf
  4233  001C50  6E1A               	movwf	(pad@buf+1)^0,c
  4234  001C52  C084  F01B         	movff	efgtoa@w,pad@p
  4235  001C56  C085  F01C         	movff	efgtoa@w+1,pad@p+1
  4236  001C5A  EC4E  F01D         	call	_pad	;wreg free
  4237  001C5E  C017  F04F         	movff	?_pad,?_efgtoa
  4238  001C62  C018  F050         	movff	?_pad+1,?_efgtoa+1
  4239  001C66                     l1466:
  4240  001C66  0012               	return		;funcret
  4241  001C68                     __end_of_efgtoa:
  4242                           	callstack 0
  4243                           
  4244 ;; *************** function _tolower *****************
  4245 ;; Defined at:
  4246 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\tolower.c"
  4247 ;; Parameters:    Size  Location     Type
  4248 ;;  c               2   10[COMRAM] int 
  4249 ;; Auto vars:     Size  Location     Type
  4250 ;;		None
  4251 ;; Return value:  Size  Location     Type
  4252 ;;                  2   10[COMRAM] int 
  4253 ;; Registers used:
  4254 ;;		wreg, status,2, status,0
  4255 ;; Tracked objects:
  4256 ;;		On entry : 0/0
  4257 ;;		On exit  : 0/0
  4258 ;;		Unchanged: 0/0
  4259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4260 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4261 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4262 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4263 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4264 ;;Total ram usage:        8 bytes
  4265 ;; Hardware stack levels used:    1
  4266 ;; Hardware stack levels required when called:    5
  4267 ;; This function calls:
  4268 ;;		_isupper
  4269 ;; This function is called by:
  4270 ;;		_efgtoa
  4271 ;;		_vfpfcnvrt
  4272 ;; This function uses a non-reentrant model
  4273 ;;
  4274                           
  4275                           	psect	text6
  4276  004420                     __ptext6:
  4277                           	callstack 0
  4278  004420                     _tolower:
  4279                           	callstack 22
  4280  004420  0EBF               	movlw	191
  4281  004422  6E0D               	movwf	??_tolower^0,c
  4282  004424  0EFF               	movlw	255
  4283  004426  6E0E               	movwf	(??_tolower+1)^0,c
  4284  004428  C00B  F00F         	movff	tolower@c,??_tolower+2
  4285  00442C  C00C  F010         	movff	tolower@c+1,??_tolower+3
  4286  004430  500D               	movf	??_tolower^0,w,c
  4287  004432  260F               	addwf	(??_tolower+2)^0,f,c
  4288  004434  500E               	movf	(??_tolower+1)^0,w,c
  4289  004436  2210               	addwfc	(??_tolower+3)^0,f,c
  4290  004438  5010               	movf	(??_tolower+3)^0,w,c
  4291  00443A  E10A               	bnz	u7380
  4292  00443C  0E1A               	movlw	26
  4293  00443E  5C0F               	subwf	(??_tolower+2)^0,w,c
  4294  004440  A0D8               	btfss	status,0,c
  4295  004442  EF25  F022         	goto	u7381
  4296  004446  EF28  F022         	goto	u7380
  4297  00444A                     u7381:
  4298  00444A  0E01               	movlw	1
  4299  00444C  EF29  F022         	goto	u7390
  4300  004450                     u7380:
  4301  004450  0E00               	movlw	0
  4302  004452                     u7390:
  4303  004452  6E11               	movwf	_tolower$2252^0,c
  4304  004454  6A12               	clrf	(_tolower$2252+1)^0,c
  4305  004456  5011               	movf	_tolower$2252^0,w,c
  4306  004458  1012               	iorwf	(_tolower$2252+1)^0,w,c
  4307  00445A  B4D8               	btfsc	status,2,c
  4308  00445C  EF32  F022         	goto	u7401
  4309  004460  EF34  F022         	goto	u7400
  4310  004464                     u7401:
  4311  004464  EF3B  F022         	goto	l1713
  4312  004468                     u7400:
  4313  004468  0E20               	movlw	32
  4314  00446A  100B               	iorwf	tolower@c^0,w,c
  4315  00446C  6E0B               	movwf	?_tolower^0,c
  4316  00446E  500C               	movf	(tolower@c+1)^0,w,c
  4317  004470  6E0C               	movwf	(?_tolower+1)^0,c
  4318  004472  EF3F  F022         	goto	l1718
  4319  004476                     l1713:
  4320  004476  C00B  F00B         	movff	tolower@c,?_tolower
  4321  00447A  C00C  F00C         	movff	tolower@c+1,?_tolower+1
  4322  00447E                     l1718:
  4323  00447E  0012               	return		;funcret
  4324  004480                     __end_of_tolower:
  4325                           	callstack 0
  4326                           
  4327 ;; *************** function _isupper *****************
  4328 ;; Defined at:
  4329 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isupper.c"
  4330 ;; Parameters:    Size  Location     Type
  4331 ;;  c               2    4[COMRAM] int 
  4332 ;; Auto vars:     Size  Location     Type
  4333 ;;		None
  4334 ;; Return value:  Size  Location     Type
  4335 ;;                  2    4[COMRAM] int 
  4336 ;; Registers used:
  4337 ;;		wreg, status,2, status,0
  4338 ;; Tracked objects:
  4339 ;;		On entry : 0/0
  4340 ;;		On exit  : 0/0
  4341 ;;		Unchanged: 0/0
  4342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4343 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4345 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4346 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4347 ;;Total ram usage:        6 bytes
  4348 ;; Hardware stack levels used:    1
  4349 ;; Hardware stack levels required when called:    4
  4350 ;; This function calls:
  4351 ;;		Nothing
  4352 ;; This function is called by:
  4353 ;;		_efgtoa
  4354 ;;		_vfpfcnvrt
  4355 ;;		_tolower
  4356 ;; This function uses a non-reentrant model
  4357 ;;
  4358                           
  4359                           	psect	text7
  4360  0047BC                     __ptext7:
  4361                           	callstack 0
  4362  0047BC                     _isupper:
  4363                           	callstack 22
  4364  0047BC  0EBF               	movlw	191
  4365  0047BE  6E07               	movwf	??_isupper^0,c
  4366  0047C0  0EFF               	movlw	255
  4367  0047C2  6E08               	movwf	(??_isupper+1)^0,c
  4368  0047C4  C005  F009         	movff	isupper@c,??_isupper+2
  4369  0047C8  C006  F00A         	movff	isupper@c+1,??_isupper+3
  4370  0047CC  5007               	movf	??_isupper^0,w,c
  4371  0047CE  2609               	addwf	(??_isupper+2)^0,f,c
  4372  0047D0  5008               	movf	(??_isupper+1)^0,w,c
  4373  0047D2  220A               	addwfc	(??_isupper+3)^0,f,c
  4374  0047D4  500A               	movf	(??_isupper+3)^0,w,c
  4375  0047D6  E10A               	bnz	u6530
  4376  0047D8  0E1A               	movlw	26
  4377  0047DA  5C09               	subwf	(??_isupper+2)^0,w,c
  4378  0047DC  A0D8               	btfss	status,0,c
  4379  0047DE  EFF3  F023         	goto	u6531
  4380  0047E2  EFF6  F023         	goto	u6530
  4381  0047E6                     u6531:
  4382  0047E6  0E01               	movlw	1
  4383  0047E8  EFF7  F023         	goto	u6540
  4384  0047EC                     u6530:
  4385  0047EC  0E00               	movlw	0
  4386  0047EE                     u6540:
  4387  0047EE  6E05               	movwf	?_isupper^0,c
  4388  0047F0  6A06               	clrf	(?_isupper+1)^0,c
  4389  0047F2  0012               	return		;funcret
  4390  0047F4                     __end_of_isupper:
  4391                           	callstack 0
  4392                           
  4393 ;; *************** function _strcpy *****************
  4394 ;; Defined at:
  4395 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strcpy.c"
  4396 ;; Parameters:    Size  Location     Type
  4397 ;;  dest            2    4[COMRAM] PTR unsigned char 
  4398 ;;		 -> dbuf(80), 
  4399 ;;  src             2    6[COMRAM] PTR const unsigned char 
  4400 ;;		 -> STR_8(4), STR_7(4), STR_4(4), STR_3(4), 
  4401 ;;		 -> dbuf(80), 
  4402 ;; Auto vars:     Size  Location     Type
  4403 ;;  d               2   12[COMRAM] PTR unsigned char 
  4404 ;;		 -> dbuf(80), 
  4405 ;;  s               2   10[COMRAM] PTR const unsigned char 
  4406 ;;		 -> STR_8(4), STR_7(4), STR_4(4), STR_3(4), 
  4407 ;;		 -> dbuf(80), 
  4408 ;; Return value:  Size  Location     Type
  4409 ;;                  2    4[COMRAM] PTR unsigned char 
  4410 ;; Registers used:
  4411 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4412 ;; Tracked objects:
  4413 ;;		On entry : 0/0
  4414 ;;		On exit  : 0/0
  4415 ;;		Unchanged: 0/0
  4416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4417 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4418 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4419 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4420 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4421 ;;Total ram usage:       10 bytes
  4422 ;; Hardware stack levels used:    1
  4423 ;; Hardware stack levels required when called:    4
  4424 ;; This function calls:
  4425 ;;		Nothing
  4426 ;; This function is called by:
  4427 ;;		_efgtoa
  4428 ;; This function uses a non-reentrant model
  4429 ;;
  4430                           
  4431                           	psect	text8
  4432  004480                     __ptext8:
  4433                           	callstack 0
  4434  004480                     _strcpy:
  4435                           	callstack 22
  4436  004480  C007  F00B         	movff	strcpy@src,strcpy@s
  4437  004484  C008  F00C         	movff	strcpy@src+1,strcpy@s+1
  4438  004488  C005  F00D         	movff	strcpy@dest,strcpy@d
  4439  00448C  C006  F00E         	movff	strcpy@dest+1,strcpy@d+1
  4440  004490                     l7039:
  4441  004490  500B               	movf	strcpy@s^0,w,c
  4442  004492  6E09               	movwf	??_strcpy^0,c
  4443  004494  500C               	movf	(strcpy@s+1)^0,w,c
  4444  004496  6E0A               	movwf	(??_strcpy+1)^0,c
  4445  004498  4A0B               	infsnz	strcpy@s^0,f,c
  4446  00449A  2A0C               	incf	(strcpy@s+1)^0,f,c
  4447  00449C  C009  FFF6         	movff	??_strcpy,tblptrl
  4448  0044A0  C00A  FFF7         	movff	??_strcpy+1,tblptrh
  4449  0044A4  0E00               	movlw	low (__smallconst shr (0+16))
  4450  0044A6  6EF8               	movwf	tblptru,c
  4451  0044A8  C00D  FFD9         	movff	strcpy@d,fsr2l
  4452  0044AC  C00E  FFDA         	movff	strcpy@d+1,fsr2h
  4453  0044B0  4A0D               	infsnz	strcpy@d^0,f,c
  4454  0044B2  2A0E               	incf	(strcpy@d+1)^0,f,c
  4455  0044B4  0E0F               	movlw	(high __ramtop+-1)
  4456  0044B6  64F7               	cpfsgt	tblptrh,c
  4457  0044B8  D003               	bra	u7367
  4458  0044BA  0008               	tblrd		*
  4459  0044BC  50F5               	movf	tablat,w,c
  4460  0044BE  D005               	bra	u7360
  4461  0044C0                     u7367:
  4462  0044C0  CFF6 FFE9          	movff	tblptrl,fsr0l
  4463  0044C4  CFF7 FFEA          	movff	tblptrh,fsr0h
  4464  0044C8  50EF               	movf	indf0,w,c
  4465  0044CA                     u7360:
  4466  0044CA  6EDF               	movwf	indf2,c
  4467  0044CC  50DF               	movf	indf2,w,c
  4468  0044CE  A4D8               	btfss	status,2,c
  4469  0044D0  EF6C  F022         	goto	u7371
  4470  0044D4  EF6E  F022         	goto	u7370
  4471  0044D8                     u7371:
  4472  0044D8  EF48  F022         	goto	l7039
  4473  0044DC                     u7370:
  4474  0044DC  0012               	return		;funcret
  4475  0044DE                     __end_of_strcpy:
  4476                           	callstack 0
  4477                           
  4478 ;; *************** function _pad *****************
  4479 ;; Defined at:
  4480 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  4481 ;; Parameters:    Size  Location     Type
  4482 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
  4483 ;;		 -> NULL(0), 
  4484 ;;  buf             2   24[COMRAM] PTR unsigned char 
  4485 ;;		 -> dbuf(80), 
  4486 ;;  p               2   26[COMRAM] int 
  4487 ;; Auto vars:     Size  Location     Type
  4488 ;;  w               2   31[COMRAM] int 
  4489 ;;  i               2   29[COMRAM] int 
  4490 ;; Return value:  Size  Location     Type
  4491 ;;                  2   22[COMRAM] int 
  4492 ;; Registers used:
  4493 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4494 ;; Tracked objects:
  4495 ;;		On entry : 0/0
  4496 ;;		On exit  : 0/0
  4497 ;;		Unchanged: 0/0
  4498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4499 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4500 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4501 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4502 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4503 ;;Total ram usage:       11 bytes
  4504 ;; Hardware stack levels used:    1
  4505 ;; Hardware stack levels required when called:    8
  4506 ;; This function calls:
  4507 ;;		_fputc
  4508 ;;		_fputs
  4509 ;;		_strlen
  4510 ;; This function is called by:
  4511 ;;		_efgtoa
  4512 ;; This function uses a non-reentrant model
  4513 ;;
  4514                           
  4515                           	psect	text9
  4516  003A9C                     __ptext9:
  4517                           	callstack 0
  4518  003A9C                     _pad:
  4519                           	callstack 18
  4520  003A9C                     
  4521                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  4522  003A9C  0100               	movlb	0	; () banked
  4523  003A9E  A1F6               	btfss	_flags& (0+255),0,b
  4524  003AA0  EF54  F01D         	goto	u7251
  4525  003AA4  EF56  F01D         	goto	u7250
  4526  003AA8                     u7251:
  4527  003AA8  EF60  F01D         	goto	l6997
  4528  003AAC                     u7250:
  4529  003AAC                     
  4530                           ; BSR set to: 0
  4531                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  4532  003AAC  C019  F010         	movff	pad@buf,fputs@s
  4533  003AB0  C01A  F011         	movff	pad@buf+1,fputs@s+1
  4534  003AB4  C017  F012         	movff	pad@fp,fputs@fp
  4535  003AB8  C018  F013         	movff	pad@fp+1,fputs@fp+1
  4536  003ABC  EC37  F023         	call	_fputs	;wreg free
  4537  003AC0                     l6997:
  4538                           
  4539                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  4540  003AC0  BE1C               	btfsc	(pad@p+1)^0,7,c
  4541  003AC2  EF65  F01D         	goto	u7261
  4542  003AC6  EF67  F01D         	goto	u7260
  4543  003ACA                     u7261:
  4544  003ACA  EF6D  F01D         	goto	l7001
  4545  003ACE                     u7260:
  4546  003ACE  C01B  F020         	movff	pad@p,pad@w
  4547  003AD2  C01C  F021         	movff	pad@p+1,pad@w+1
  4548  003AD6  EF71  F01D         	goto	l1443
  4549  003ADA                     l7001:
  4550  003ADA  0E00               	movlw	0
  4551  003ADC  6E21               	movwf	(pad@w+1)^0,c
  4552  003ADE  0E00               	movlw	0
  4553  003AE0  6E20               	movwf	pad@w^0,c
  4554  003AE2                     l1443:
  4555                           
  4556                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  4557  003AE2  0E00               	movlw	0
  4558  003AE4  6E1F               	movwf	(pad@i+1)^0,c
  4559  003AE6  0E00               	movlw	0
  4560  003AE8  6E1E               	movwf	pad@i^0,c
  4561                           
  4562                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4563  003AEA  EF83  F01D         	goto	l7007
  4564  003AEE                     l7003:
  4565                           
  4566                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  4567  003AEE  0E00               	movlw	0
  4568  003AF0  6E08               	movwf	(fputc@c+1)^0,c
  4569  003AF2  0E20               	movlw	32
  4570  003AF4  6E07               	movwf	fputc@c^0,c
  4571  003AF6  C017  F009         	movff	pad@fp,fputc@fp
  4572  003AFA  C018  F00A         	movff	pad@fp+1,fputc@fp+1
  4573  003AFE  EC2B  F020         	call	_fputc	;wreg free
  4574  003B02                     
  4575                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 86:         ++i;
  4576  003B02  4A1E               	infsnz	pad@i^0,f,c
  4577  003B04  2A1F               	incf	(pad@i+1)^0,f,c
  4578  003B06                     l7007:
  4579                           
  4580                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4581  003B06  5020               	movf	pad@w^0,w,c
  4582  003B08  5C1E               	subwf	pad@i^0,w,c
  4583  003B0A  501F               	movf	(pad@i+1)^0,w,c
  4584  003B0C  0A80               	xorlw	128
  4585  003B0E  6E1D               	movwf	??_pad^0,c
  4586  003B10  5021               	movf	(pad@w+1)^0,w,c
  4587  003B12  0A80               	xorlw	128
  4588  003B14  581D               	subwfb	??_pad^0,w,c
  4589  003B16  A0D8               	btfss	status,0,c
  4590  003B18  EF90  F01D         	goto	u7271
  4591  003B1C  EF92  F01D         	goto	u7270
  4592  003B20                     u7271:
  4593  003B20  EF77  F01D         	goto	l7003
  4594  003B24                     u7270:
  4595  003B24                     
  4596                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  4597  003B24  0100               	movlb	0	; () banked
  4598  003B26  B1F6               	btfsc	_flags& (0+255),0,b
  4599  003B28  EF98  F01D         	goto	u7281
  4600  003B2C  EF9A  F01D         	goto	u7280
  4601  003B30                     u7281:
  4602  003B30  EFA4  F01D         	goto	l7011
  4603  003B34                     u7280:
  4604  003B34                     
  4605                           ; BSR set to: 0
  4606                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  4607  003B34  C019  F010         	movff	pad@buf,fputs@s
  4608  003B38  C01A  F011         	movff	pad@buf+1,fputs@s+1
  4609  003B3C  C017  F012         	movff	pad@fp,fputs@fp
  4610  003B40  C018  F013         	movff	pad@fp+1,fputs@fp+1
  4611  003B44  EC37  F023         	call	_fputs	;wreg free
  4612  003B48                     l7011:
  4613                           
  4614                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 94:     return st
      +                          rlen(buf) + w;
  4615  003B48  C019  F005         	movff	pad@buf,strlen@s
  4616  003B4C  C01A  F006         	movff	pad@buf+1,strlen@s+1
  4617  003B50  EC32  F024         	call	_strlen	;wreg free
  4618  003B54  5020               	movf	pad@w^0,w,c
  4619  003B56  2405               	addwf	?_strlen^0,w,c
  4620  003B58  6E17               	movwf	?_pad^0,c
  4621  003B5A  5021               	movf	(pad@w+1)^0,w,c
  4622  003B5C  2006               	addwfc	(?_strlen+1)^0,w,c
  4623  003B5E  6E18               	movwf	(?_pad+1)^0,c
  4624  003B60  0012               	return		;funcret
  4625  003B62                     __end_of_pad:
  4626                           	callstack 0
  4627                           
  4628 ;; *************** function _strlen *****************
  4629 ;; Defined at:
  4630 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strlen.c"
  4631 ;; Parameters:    Size  Location     Type
  4632 ;;  s               2    4[COMRAM] PTR const unsigned char 
  4633 ;;		 -> dbuf(80), 
  4634 ;; Auto vars:     Size  Location     Type
  4635 ;;  a               2    6[COMRAM] PTR const unsigned char 
  4636 ;;		 -> dbuf(80), 
  4637 ;; Return value:  Size  Location     Type
  4638 ;;                  2    4[COMRAM] unsigned int 
  4639 ;; Registers used:
  4640 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4641 ;; Tracked objects:
  4642 ;;		On entry : 0/0
  4643 ;;		On exit  : 0/0
  4644 ;;		Unchanged: 0/0
  4645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4646 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4647 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4649 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4650 ;;Total ram usage:        4 bytes
  4651 ;; Hardware stack levels used:    1
  4652 ;; Hardware stack levels required when called:    4
  4653 ;; This function calls:
  4654 ;;		Nothing
  4655 ;; This function is called by:
  4656 ;;		_pad
  4657 ;; This function uses a non-reentrant model
  4658 ;;
  4659                           
  4660                           	psect	text10
  4661  004864                     __ptext10:
  4662                           	callstack 0
  4663  004864                     _strlen:
  4664                           	callstack 21
  4665  004864  C005  F007         	movff	strlen@s,strlen@a
  4666  004868  C006  F008         	movff	strlen@s+1,strlen@a+1
  4667  00486C  EF3A  F024         	goto	l6533
  4668  004870                     l6531:
  4669  004870  4A05               	infsnz	strlen@s^0,f,c
  4670  004872  2A06               	incf	(strlen@s+1)^0,f,c
  4671  004874                     l6533:
  4672  004874  C005  FFD9         	movff	strlen@s,fsr2l
  4673  004878  C006  FFDA         	movff	strlen@s+1,fsr2h
  4674  00487C  50DF               	movf	indf2,w,c
  4675  00487E  A4D8               	btfss	status,2,c
  4676  004880  EF44  F024         	goto	u6521
  4677  004884  EF46  F024         	goto	u6520
  4678  004888                     u6521:
  4679  004888  EF38  F024         	goto	l6531
  4680  00488C                     u6520:
  4681  00488C  5007               	movf	strlen@a^0,w,c
  4682  00488E  5C05               	subwf	strlen@s^0,w,c
  4683  004890  6E05               	movwf	?_strlen^0,c
  4684  004892  5008               	movf	(strlen@a+1)^0,w,c
  4685  004894  5806               	subwfb	(strlen@s+1)^0,w,c
  4686  004896  6E06               	movwf	(?_strlen+1)^0,c
  4687  004898  0012               	return		;funcret
  4688  00489A                     __end_of_strlen:
  4689                           	callstack 0
  4690                           
  4691 ;; *************** function _fputs *****************
  4692 ;; Defined at:
  4693 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputs.c"
  4694 ;; Parameters:    Size  Location     Type
  4695 ;;  s               2   15[COMRAM] PTR const unsigned char 
  4696 ;;		 -> dbuf(80), 
  4697 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  4698 ;;		 -> NULL(0), 
  4699 ;; Auto vars:     Size  Location     Type
  4700 ;;  i               2   20[COMRAM] int 
  4701 ;;  c               1   19[COMRAM] unsigned char 
  4702 ;; Return value:  Size  Location     Type
  4703 ;;                  2   15[COMRAM] int 
  4704 ;; Registers used:
  4705 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4706 ;; Tracked objects:
  4707 ;;		On entry : 0/0
  4708 ;;		On exit  : 0/0
  4709 ;;		Unchanged: 0/0
  4710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4711 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4712 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4714 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4715 ;;Total ram usage:        7 bytes
  4716 ;; Hardware stack levels used:    1
  4717 ;; Hardware stack levels required when called:    7
  4718 ;; This function calls:
  4719 ;;		_fputc
  4720 ;; This function is called by:
  4721 ;;		_pad
  4722 ;; This function uses a non-reentrant model
  4723 ;;
  4724                           
  4725                           	psect	text11
  4726  00466E                     __ptext11:
  4727                           	callstack 0
  4728  00466E                     _fputs:
  4729                           	callstack 18
  4730  00466E  0E00               	movlw	0
  4731  004670  6E16               	movwf	(fputs@i+1)^0,c
  4732  004672  0E00               	movlw	0
  4733  004674  6E15               	movwf	fputs@i^0,c
  4734  004676  EF48  F023         	goto	l6527
  4735  00467A                     l6523:
  4736  00467A  C014  F007         	movff	fputs@c,fputc@c
  4737  00467E  6A08               	clrf	(fputc@c+1)^0,c
  4738  004680  C012  F009         	movff	fputs@fp,fputc@fp
  4739  004684  C013  F00A         	movff	fputs@fp+1,fputc@fp+1
  4740  004688  EC2B  F020         	call	_fputc	;wreg free
  4741  00468C  4A15               	infsnz	fputs@i^0,f,c
  4742  00468E  2A16               	incf	(fputs@i+1)^0,f,c
  4743  004690                     l6527:
  4744  004690  5015               	movf	fputs@i^0,w,c
  4745  004692  2410               	addwf	fputs@s^0,w,c
  4746  004694  6ED9               	movwf	fsr2l,c
  4747  004696  5016               	movf	(fputs@i+1)^0,w,c
  4748  004698  2011               	addwfc	(fputs@s+1)^0,w,c
  4749  00469A  6EDA               	movwf	fsr2h,c
  4750  00469C  50DF               	movf	indf2,w,c
  4751  00469E  6E14               	movwf	fputs@c^0,c
  4752  0046A0  5014               	movf	fputs@c^0,w,c
  4753  0046A2  A4D8               	btfss	status,2,c
  4754  0046A4  EF56  F023         	goto	u6511
  4755  0046A8  EF58  F023         	goto	u6510
  4756  0046AC                     u6511:
  4757  0046AC  EF3D  F023         	goto	l6523
  4758  0046B0                     u6510:
  4759  0046B0  0012               	return		;funcret
  4760  0046B2                     __end_of_fputs:
  4761                           	callstack 0
  4762                           
  4763 ;; *************** function _fputc *****************
  4764 ;; Defined at:
  4765 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputc.c"
  4766 ;; Parameters:    Size  Location     Type
  4767 ;;  c               2    6[COMRAM] int 
  4768 ;;  fp              2    8[COMRAM] PTR struct _IO_FILE
  4769 ;;		 -> NULL(0), 
  4770 ;; Auto vars:     Size  Location     Type
  4771 ;;		None
  4772 ;; Return value:  Size  Location     Type
  4773 ;;                  2    6[COMRAM] int 
  4774 ;; Registers used:
  4775 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4776 ;; Tracked objects:
  4777 ;;		On entry : 0/0
  4778 ;;		On exit  : 0/0
  4779 ;;		Unchanged: 0/0
  4780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4781 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4783 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4784 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4785 ;;Total ram usage:        9 bytes
  4786 ;; Hardware stack levels used:    1
  4787 ;; Hardware stack levels required when called:    6
  4788 ;; This function calls:
  4789 ;;		_putch
  4790 ;; This function is called by:
  4791 ;;		_pad
  4792 ;;		_vfpfcnvrt
  4793 ;;		_fputs
  4794 ;; This function uses a non-reentrant model
  4795 ;;
  4796                           
  4797                           	psect	text12
  4798  004056                     __ptext12:
  4799                           	callstack 0
  4800  004056                     _fputc:
  4801                           	callstack 21
  4802  004056  5009               	movf	fputc@fp^0,w,c
  4803  004058  100A               	iorwf	(fputc@fp+1)^0,w,c
  4804  00405A  B4D8               	btfsc	status,2,c
  4805  00405C  EF32  F020         	goto	u6081
  4806  004060  EF34  F020         	goto	u6080
  4807  004064                     u6081:
  4808  004064  EF3D  F020         	goto	l6309
  4809  004068                     u6080:
  4810  004068  5009               	movf	fputc@fp^0,w,c
  4811  00406A  100A               	iorwf	(fputc@fp+1)^0,w,c
  4812  00406C  A4D8               	btfss	status,2,c
  4813  00406E  EF3B  F020         	goto	u6091
  4814  004072  EF3D  F020         	goto	u6090
  4815  004076                     u6091:
  4816  004076  EF42  F020         	goto	l6311
  4817  00407A                     u6090:
  4818  00407A                     l6309:
  4819  00407A  5007               	movf	fputc@c^0,w,c
  4820  00407C  ECB9  F025         	call	_putch
  4821  004080  EF75  F020         	goto	l1679
  4822  004084                     l6311:
  4823  004084  EE20 F004          	lfsr	2,4
  4824  004088  5009               	movf	fputc@fp^0,w,c
  4825  00408A  26D9               	addwf	fsr2l,f,c
  4826  00408C  500A               	movf	(fputc@fp+1)^0,w,c
  4827  00408E  22DA               	addwfc	fsr2h,f,c
  4828  004090  50DE               	movf	postinc2,w,c
  4829  004092  10DE               	iorwf	postinc2,w,c
  4830  004094  B4D8               	btfsc	status,2,c
  4831  004096  EF4F  F020         	goto	u6101
  4832  00409A  EF51  F020         	goto	u6100
  4833  00409E                     u6101:
  4834  00409E  EF6C  F020         	goto	l6315
  4835  0040A2                     u6100:
  4836  0040A2  EE20 F004          	lfsr	2,4
  4837  0040A6  5009               	movf	fputc@fp^0,w,c
  4838  0040A8  26D9               	addwf	fsr2l,f,c
  4839  0040AA  500A               	movf	(fputc@fp+1)^0,w,c
  4840  0040AC  22DA               	addwfc	fsr2h,f,c
  4841  0040AE  EE10 F002          	lfsr	1,2
  4842  0040B2  5009               	movf	fputc@fp^0,w,c
  4843  0040B4  26E1               	addwf	fsr1l,f,c
  4844  0040B6  500A               	movf	(fputc@fp+1)^0,w,c
  4845  0040B8  22E2               	addwfc	fsr1h,f,c
  4846  0040BA  50DE               	movf	postinc2,w,c
  4847  0040BC  5CE6               	subwf	postinc1,w,c
  4848  0040BE  50E6               	movf	postinc1,w,c
  4849  0040C0  0A80               	xorlw	128
  4850  0040C2  6E0F               	movwf	(??_fputc+4)^0,c
  4851  0040C4  50DE               	movf	postinc2,w,c
  4852  0040C6  0A80               	xorlw	128
  4853  0040C8  580F               	subwfb	(??_fputc+4)^0,w,c
  4854  0040CA  B0D8               	btfsc	status,0,c
  4855  0040CC  EF6A  F020         	goto	u6111
  4856  0040D0  EF6C  F020         	goto	u6110
  4857  0040D4                     u6111:
  4858  0040D4  EF75  F020         	goto	l1679
  4859  0040D8                     u6110:
  4860  0040D8                     l6315:
  4861  0040D8  EE20 F002          	lfsr	2,2
  4862  0040DC  5009               	movf	fputc@fp^0,w,c
  4863  0040DE  26D9               	addwf	fsr2l,f,c
  4864  0040E0  500A               	movf	(fputc@fp+1)^0,w,c
  4865  0040E2  22DA               	addwfc	fsr2h,f,c
  4866  0040E4  2ADE               	incf	postinc2,f,c
  4867  0040E6  0E00               	movlw	0
  4868  0040E8  22DD               	addwfc	postdec2,f,c
  4869  0040EA                     l1679:
  4870  0040EA  0012               	return		;funcret
  4871  0040EC                     __end_of_fputc:
  4872                           	callstack 0
  4873                           
  4874 ;; *************** function _putch *****************
  4875 ;; Defined at:
  4876 ;;		line 201 in file "mcc_generated_files/eusart.c"
  4877 ;; Parameters:    Size  Location     Type
  4878 ;;  txData          1    wreg     unsigned char 
  4879 ;; Auto vars:     Size  Location     Type
  4880 ;;  txData          1    5[COMRAM] unsigned char 
  4881 ;; Return value:  Size  Location     Type
  4882 ;;                  1    wreg      void 
  4883 ;; Registers used:
  4884 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4885 ;; Tracked objects:
  4886 ;;		On entry : 0/0
  4887 ;;		On exit  : 0/0
  4888 ;;		Unchanged: 0/0
  4889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4891 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4893 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4894 ;;Total ram usage:        1 bytes
  4895 ;; Hardware stack levels used:    1
  4896 ;; Hardware stack levels required when called:    5
  4897 ;; This function calls:
  4898 ;;		_EUSART_Write
  4899 ;; This function is called by:
  4900 ;;		_fputc
  4901 ;; This function uses a non-reentrant model
  4902 ;;
  4903                           
  4904                           	psect	text13
  4905  004B72                     __ptext13:
  4906                           	callstack 0
  4907  004B72                     _putch:
  4908                           	callstack 21
  4909                           
  4910                           ;incstack = 0
  4911                           ;putch@txData stored from wreg
  4912  004B72  6E06               	movwf	putch@txData^0,c
  4913  004B74                     
  4914                           ;mcc_generated_files/eusart.c: 201: void putch(char txData);mcc_generated_files/eusart.c
      +                          : 202: {;mcc_generated_files/eusart.c: 203:     EUSART_Write(txData);
  4915  004B74  5006               	movf	putch@txData^0,w,c
  4916  004B76  EC9C  F022         	call	_EUSART_Write
  4917  004B7A  0012               	return		;funcret
  4918  004B7C                     __end_of_putch:
  4919                           	callstack 0
  4920                           
  4921 ;; *************** function _EUSART_Write *****************
  4922 ;; Defined at:
  4923 ;;		line 173 in file "mcc_generated_files/eusart.c"
  4924 ;; Parameters:    Size  Location     Type
  4925 ;;  txData          1    wreg     unsigned char 
  4926 ;; Auto vars:     Size  Location     Type
  4927 ;;  txData          1    4[COMRAM] unsigned char 
  4928 ;; Return value:  Size  Location     Type
  4929 ;;                  1    wreg      void 
  4930 ;; Registers used:
  4931 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4932 ;; Tracked objects:
  4933 ;;		On entry : 0/0
  4934 ;;		On exit  : 0/0
  4935 ;;		Unchanged: 0/0
  4936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4938 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4940 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4941 ;;Total ram usage:        1 bytes
  4942 ;; Hardware stack levels used:    1
  4943 ;; Hardware stack levels required when called:    4
  4944 ;; This function calls:
  4945 ;;		Nothing
  4946 ;; This function is called by:
  4947 ;;		_putch
  4948 ;; This function uses a non-reentrant model
  4949 ;;
  4950                           
  4951                           	psect	text14
  4952  004538                     __ptext14:
  4953                           	callstack 0
  4954  004538                     _EUSART_Write:
  4955                           	callstack 21
  4956                           
  4957                           ;incstack = 0
  4958                           ;EUSART_Write@txData stored from wreg
  4959  004538  6E05               	movwf	EUSART_Write@txData^0,c
  4960  00453A                     l6287:
  4961                           
  4962                           ;mcc_generated_files/eusart.c: 175:     while(0 == eusartTxBufferRemaining)
  4963  00453A  0100               	movlb	0	; () banked
  4964  00453C  51FE               	movf	_eusartTxBufferRemaining& (0+255),w,b	;volatile
  4965  00453E  B4D8               	btfsc	status,2,c
  4966  004540  EFA4  F022         	goto	u6051
  4967  004544  EFA6  F022         	goto	u6050
  4968  004548                     u6051:
  4969  004548  EF9D  F022         	goto	l6287
  4970  00454C                     u6050:
  4971  00454C                     
  4972                           ; BSR set to: 0
  4973                           ;mcc_generated_files/eusart.c: 179:     if(0 == PIE1bits.TX1IE)
  4974  00454C  B89D               	btfsc	157,4,c	;volatile
  4975  00454E  EFAB  F022         	goto	u6061
  4976  004552  EFAD  F022         	goto	u6060
  4977  004556                     u6061:
  4978  004556  EFB1  F022         	goto	l595
  4979  00455A                     u6060:
  4980  00455A                     
  4981                           ; BSR set to: 0
  4982                           ;mcc_generated_files/eusart.c: 180:     {;mcc_generated_files/eusart.c: 181:         TXR
      +                          EG = txData;
  4983  00455A  C005  FFAD         	movff	EUSART_Write@txData,4013	;volatile
  4984                           
  4985                           ;mcc_generated_files/eusart.c: 182:     }
  4986  00455E  EFC6  F022         	goto	l6301
  4987  004562                     l595:
  4988                           
  4989                           ; BSR set to: 0
  4990                           ;mcc_generated_files/eusart.c: 184:     {;mcc_generated_files/eusart.c: 185:         PIE
      +                          1bits.TX1IE = 0;
  4991  004562  989D               	bcf	157,4,c	;volatile
  4992  004564                     
  4993                           ; BSR set to: 0
  4994                           ;mcc_generated_files/eusart.c: 186:         eusartTxBuffer[eusartTxHead++] = txData;
  4995  004564  0ED5               	movlw	low _eusartTxBuffer
  4996  004566  2459               	addwf	_eusartTxHead^0,w,c	;volatile
  4997  004568  6ED9               	movwf	fsr2l,c
  4998  00456A  6ADA               	clrf	fsr2h,c
  4999  00456C  0E00               	movlw	high _eusartTxBuffer
  5000  00456E  22DA               	addwfc	fsr2h,f,c
  5001  004570  C005  FFDF         	movff	EUSART_Write@txData,indf2
  5002  004574                     
  5003                           ; BSR set to: 0
  5004  004574  2A59               	incf	_eusartTxHead^0,f,c	;volatile
  5005  004576                     
  5006                           ; BSR set to: 0
  5007                           ;mcc_generated_files/eusart.c: 187:         if(sizeof(eusartTxBuffer) <= eusartTxHead)
  5008  004576  0E07               	movlw	7
  5009  004578  6459               	cpfsgt	_eusartTxHead^0,c	;volatile
  5010  00457A  EFC1  F022         	goto	u6071
  5011  00457E  EFC3  F022         	goto	u6070
  5012  004582                     u6071:
  5013  004582  EFC5  F022         	goto	l6299
  5014  004586                     u6070:
  5015  004586                     
  5016                           ; BSR set to: 0
  5017                           ;mcc_generated_files/eusart.c: 188:         {;mcc_generated_files/eusart.c: 189:        
      +                               eusartTxHead = 0;
  5018  004586  0E00               	movlw	0
  5019  004588  6E59               	movwf	_eusartTxHead^0,c	;volatile
  5020  00458A                     l6299:
  5021                           
  5022                           ; BSR set to: 0
  5023                           ;mcc_generated_files/eusart.c: 191:         eusartTxBufferRemaining--;
  5024  00458A  07FE               	decf	_eusartTxBufferRemaining& (0+255),f,b	;volatile
  5025  00458C                     l6301:
  5026                           
  5027                           ; BSR set to: 0
  5028                           ;mcc_generated_files/eusart.c: 193:     PIE1bits.TX1IE = 1;
  5029  00458C  889D               	bsf	157,4,c	;volatile
  5030  00458E                     
  5031                           ; BSR set to: 0
  5032  00458E  0012               	return		;funcret
  5033  004590                     __end_of_EUSART_Write:
  5034                           	callstack 0
  5035                           
  5036 ;; *************** function _floorf *****************
  5037 ;; Defined at:
  5038 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\floorf.c"
  5039 ;; Parameters:    Size  Location     Type
  5040 ;;  x               4   54[COMRAM] float 
  5041 ;; Auto vars:     Size  Location     Type
  5042 ;;  u               4   70[COMRAM] struct .
  5043 ;;  m               4   64[COMRAM] unsigned long 
  5044 ;;  e               2   68[COMRAM] int 
  5045 ;; Return value:  Size  Location     Type
  5046 ;;                  4   54[COMRAM] float 
  5047 ;; Registers used:
  5048 ;;		wreg, status,2, status,0
  5049 ;; Tracked objects:
  5050 ;;		On entry : 0/0
  5051 ;;		On exit  : 0/0
  5052 ;;		Unchanged: 0/0
  5053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5054 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5055 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5056 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5057 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5058 ;;Total ram usage:       20 bytes
  5059 ;; Hardware stack levels used:    1
  5060 ;; Hardware stack levels required when called:    4
  5061 ;; This function calls:
  5062 ;;		Nothing
  5063 ;; This function is called by:
  5064 ;;		_efgtoa
  5065 ;; This function uses a non-reentrant model
  5066 ;;
  5067                           
  5068                           	psect	text15
  5069  002F58                     __ptext15:
  5070                           	callstack 0
  5071  002F58                     _floorf:
  5072                           	callstack 22
  5073  002F58  C0DD  F047         	movff	floorf@F524,floorf@u
  5074  002F5C  C0DE  F048         	movff	floorf@F524+1,floorf@u+1
  5075  002F60  C0DF  F049         	movff	floorf@F524+2,floorf@u+2
  5076  002F64  C0E0  F04A         	movff	floorf@F524+3,floorf@u+3
  5077  002F68  C037  F047         	movff	floorf@x,floorf@u
  5078  002F6C  C038  F048         	movff	floorf@x+1,floorf@u+1
  5079  002F70  C039  F049         	movff	floorf@x+2,floorf@u+2
  5080  002F74  C03A  F04A         	movff	floorf@x+3,floorf@u+3
  5081  002F78  0E81               	movlw	129
  5082  002F7A  6E3B               	movwf	??_floorf^0,c
  5083  002F7C  0EFF               	movlw	255
  5084  002F7E  6E3C               	movwf	(??_floorf+1)^0,c
  5085  002F80  C047  F03D         	movff	floorf@u,??_floorf+2
  5086  002F84  C048  F03E         	movff	floorf@u+1,??_floorf+3
  5087  002F88  C049  F03F         	movff	floorf@u+2,??_floorf+4
  5088  002F8C  C04A  F040         	movff	floorf@u+3,??_floorf+5
  5089  002F90  0E18               	movlw	24
  5090  002F92  EFD0  F017         	goto	u7410
  5091  002F96                     u7415:
  5092  002F96  90D8               	bcf	status,0,c
  5093  002F98  3240               	rrcf	(??_floorf+5)^0,f,c
  5094  002F9A  323F               	rrcf	(??_floorf+4)^0,f,c
  5095  002F9C  323E               	rrcf	(??_floorf+3)^0,f,c
  5096  002F9E  323D               	rrcf	(??_floorf+2)^0,f,c
  5097  002FA0                     u7410:
  5098  002FA0  2EE8               	decfsz	wreg,f,c
  5099  002FA2  EFCB  F017         	goto	u7415
  5100  002FA6  503D               	movf	(??_floorf+2)^0,w,c
  5101  002FA8  243B               	addwf	??_floorf^0,w,c
  5102  002FAA  6E45               	movwf	floorf@e^0,c
  5103  002FAC  0E00               	movlw	0
  5104  002FAE  203C               	addwfc	(??_floorf+1)^0,w,c
  5105  002FB0  6E46               	movwf	(floorf@e+1)^0,c
  5106  002FB2  BE46               	btfsc	(floorf@e+1)^0,7,c
  5107  002FB4  EFE5  F017         	goto	u7421
  5108  002FB8  5046               	movf	(floorf@e+1)^0,w,c
  5109  002FBA  E109               	bnz	u7420
  5110  002FBC  0E17               	movlw	23
  5111  002FBE  5C45               	subwf	floorf@e^0,w,c
  5112  002FC0  A0D8               	btfss	status,0,c
  5113  002FC2  EFE5  F017         	goto	u7421
  5114  002FC6  EFE7  F017         	goto	u7420
  5115  002FCA                     u7421:
  5116  002FCA  EFF1  F017         	goto	l7057
  5117  002FCE                     u7420:
  5118  002FCE                     l7055:
  5119  002FCE  C037  F037         	movff	floorf@x,?_floorf
  5120  002FD2  C038  F038         	movff	floorf@x+1,?_floorf+1
  5121  002FD6  C039  F039         	movff	floorf@x+2,?_floorf+2
  5122  002FDA  C03A  F03A         	movff	floorf@x+3,?_floorf+3
  5123  002FDE  EFB4  F018         	goto	l1640
  5124  002FE2                     l7057:
  5125  002FE2  BE46               	btfsc	(floorf@e+1)^0,7,c
  5126  002FE4  EFF6  F017         	goto	u7431
  5127  002FE8  EFF8  F017         	goto	u7430
  5128  002FEC                     u7431:
  5129  002FEC  EF68  F018         	goto	l7067
  5130  002FF0                     u7430:
  5131  002FF0  C045  F03B         	movff	floorf@e,??_floorf
  5132  002FF4  0EFF               	movlw	255
  5133  002FF6  6E3C               	movwf	(??_floorf+1)^0,c
  5134  002FF8  0EFF               	movlw	255
  5135  002FFA  6E3D               	movwf	(??_floorf+2)^0,c
  5136  002FFC  0E7F               	movlw	127
  5137  002FFE  6E3E               	movwf	(??_floorf+3)^0,c
  5138  003000  0E00               	movlw	0
  5139  003002  6E3F               	movwf	(??_floorf+4)^0,c
  5140  003004                     u7445:
  5141  003004  663B               	tstfsz	??_floorf^0,c
  5142  003006  EF07  F018         	goto	u7446
  5143  00300A  EF0F  F018         	goto	u7447
  5144  00300E                     u7446:
  5145  00300E  343F               	rlcf	(??_floorf+4)^0,w,c
  5146  003010  323F               	rrcf	(??_floorf+4)^0,f,c
  5147  003012  323E               	rrcf	(??_floorf+3)^0,f,c
  5148  003014  323D               	rrcf	(??_floorf+2)^0,f,c
  5149  003016  323C               	rrcf	(??_floorf+1)^0,f,c
  5150  003018  2E3B               	decfsz	??_floorf^0,f,c
  5151  00301A  EF02  F018         	goto	u7445
  5152  00301E                     u7447:
  5153  00301E  C03C  F041         	movff	??_floorf+1,floorf@m
  5154  003022  C03D  F042         	movff	??_floorf+2,floorf@m+1
  5155  003026  C03E  F043         	movff	??_floorf+3,floorf@m+2
  5156  00302A  C03F  F044         	movff	??_floorf+4,floorf@m+3
  5157  00302E  5041               	movf	floorf@m^0,w,c
  5158  003030  1447               	andwf	floorf@u^0,w,c
  5159  003032  6E3B               	movwf	??_floorf^0,c
  5160  003034  5042               	movf	(floorf@m+1)^0,w,c
  5161  003036  1448               	andwf	(floorf@u+1)^0,w,c
  5162  003038  6E3C               	movwf	(??_floorf+1)^0,c
  5163  00303A  5043               	movf	(floorf@m+2)^0,w,c
  5164  00303C  1449               	andwf	(floorf@u+2)^0,w,c
  5165  00303E  6E3D               	movwf	(??_floorf+2)^0,c
  5166  003040  5044               	movf	(floorf@m+3)^0,w,c
  5167  003042  144A               	andwf	(floorf@u+3)^0,w,c
  5168  003044  6E3E               	movwf	(??_floorf+3)^0,c
  5169  003046  503B               	movf	??_floorf^0,w,c
  5170  003048  103C               	iorwf	(??_floorf+1)^0,w,c
  5171  00304A  103D               	iorwf	(??_floorf+2)^0,w,c
  5172  00304C  103E               	iorwf	(??_floorf+3)^0,w,c
  5173  00304E  A4D8               	btfss	status,2,c
  5174  003050  EF2C  F018         	goto	u7451
  5175  003054  EF2E  F018         	goto	u7450
  5176  003058                     u7451:
  5177  003058  EF30  F018         	goto	l7063
  5178  00305C                     u7450:
  5179  00305C  EFE7  F017         	goto	l7055
  5180  003060                     l7063:
  5181  003060  C047  F03B         	movff	floorf@u,??_floorf
  5182  003064  C048  F03C         	movff	floorf@u+1,??_floorf+1
  5183  003068  C049  F03D         	movff	floorf@u+2,??_floorf+2
  5184  00306C  C04A  F03E         	movff	floorf@u+3,??_floorf+3
  5185  003070  0E20               	movlw	32
  5186  003072  EF40  F018         	goto	u7460
  5187  003076                     u7465:
  5188  003076  90D8               	bcf	status,0,c
  5189  003078  323E               	rrcf	(??_floorf+3)^0,f,c
  5190  00307A  323D               	rrcf	(??_floorf+2)^0,f,c
  5191  00307C  323C               	rrcf	(??_floorf+1)^0,f,c
  5192  00307E  323B               	rrcf	??_floorf^0,f,c
  5193  003080                     u7460:
  5194  003080  2EE8               	decfsz	wreg,f,c
  5195  003082  EF3B  F018         	goto	u7465
  5196  003086  503B               	movf	??_floorf^0,w,c
  5197  003088  103C               	iorwf	(??_floorf+1)^0,w,c
  5198  00308A  103D               	iorwf	(??_floorf+2)^0,w,c
  5199  00308C  103E               	iorwf	(??_floorf+3)^0,w,c
  5200  00308E  B4D8               	btfsc	status,2,c
  5201  003090  EF4C  F018         	goto	u7471
  5202  003094  EF4E  F018         	goto	u7470
  5203  003098                     u7471:
  5204  003098  EF56  F018         	goto	l1643
  5205  00309C                     u7470:
  5206  00309C  5041               	movf	floorf@m^0,w,c
  5207  00309E  2647               	addwf	floorf@u^0,f,c
  5208  0030A0  5042               	movf	(floorf@m+1)^0,w,c
  5209  0030A2  2248               	addwfc	(floorf@u+1)^0,f,c
  5210  0030A4  5043               	movf	(floorf@m+2)^0,w,c
  5211  0030A6  2249               	addwfc	(floorf@u+2)^0,f,c
  5212  0030A8  5044               	movf	(floorf@m+3)^0,w,c
  5213  0030AA  224A               	addwfc	(floorf@u+3)^0,f,c
  5214  0030AC                     l1643:
  5215  0030AC  1C41               	comf	floorf@m^0,w,c
  5216  0030AE  6E3B               	movwf	??_floorf^0,c
  5217  0030B0  1C42               	comf	(floorf@m+1)^0,w,c
  5218  0030B2  6E3C               	movwf	(??_floorf+1)^0,c
  5219  0030B4  1C43               	comf	(floorf@m+2)^0,w,c
  5220  0030B6  6E3D               	movwf	(??_floorf+2)^0,c
  5221  0030B8  1C44               	comf	(floorf@m+3)^0,w,c
  5222  0030BA  6E3E               	movwf	(??_floorf+3)^0,c
  5223  0030BC  503B               	movf	??_floorf^0,w,c
  5224  0030BE  1647               	andwf	floorf@u^0,f,c
  5225  0030C0  503C               	movf	(??_floorf+1)^0,w,c
  5226  0030C2  1648               	andwf	(floorf@u+1)^0,f,c
  5227  0030C4  503D               	movf	(??_floorf+2)^0,w,c
  5228  0030C6  1649               	andwf	(floorf@u+2)^0,f,c
  5229  0030C8  503E               	movf	(??_floorf+3)^0,w,c
  5230  0030CA  164A               	andwf	(floorf@u+3)^0,f,c
  5231  0030CC  EFAC  F018         	goto	l7075
  5232  0030D0                     l7067:
  5233  0030D0  C047  F03B         	movff	floorf@u,??_floorf
  5234  0030D4  C048  F03C         	movff	floorf@u+1,??_floorf+1
  5235  0030D8  C049  F03D         	movff	floorf@u+2,??_floorf+2
  5236  0030DC  C04A  F03E         	movff	floorf@u+3,??_floorf+3
  5237  0030E0  0E20               	movlw	32
  5238  0030E2  EF78  F018         	goto	u7480
  5239  0030E6                     u7485:
  5240  0030E6  90D8               	bcf	status,0,c
  5241  0030E8  323E               	rrcf	(??_floorf+3)^0,f,c
  5242  0030EA  323D               	rrcf	(??_floorf+2)^0,f,c
  5243  0030EC  323C               	rrcf	(??_floorf+1)^0,f,c
  5244  0030EE  323B               	rrcf	??_floorf^0,f,c
  5245  0030F0                     u7480:
  5246  0030F0  2EE8               	decfsz	wreg,f,c
  5247  0030F2  EF73  F018         	goto	u7485
  5248  0030F6  503B               	movf	??_floorf^0,w,c
  5249  0030F8  103C               	iorwf	(??_floorf+1)^0,w,c
  5250  0030FA  103D               	iorwf	(??_floorf+2)^0,w,c
  5251  0030FC  103E               	iorwf	(??_floorf+3)^0,w,c
  5252  0030FE  A4D8               	btfss	status,2,c
  5253  003100  EF84  F018         	goto	u7491
  5254  003104  EF86  F018         	goto	u7490
  5255  003108                     u7491:
  5256  003108  EF90  F018         	goto	l7071
  5257  00310C                     u7490:
  5258  00310C  0E00               	movlw	0
  5259  00310E  6E47               	movwf	floorf@u^0,c
  5260  003110  0E00               	movlw	0
  5261  003112  6E48               	movwf	(floorf@u+1)^0,c
  5262  003114  0E00               	movlw	0
  5263  003116  6E49               	movwf	(floorf@u+2)^0,c
  5264  003118  0E00               	movlw	0
  5265  00311A  6E4A               	movwf	(floorf@u+3)^0,c
  5266  00311C  EFAC  F018         	goto	l7075
  5267  003120                     l7071:
  5268  003120  90D8               	bcf	status,0,c
  5269  003122  3447               	rlcf	floorf@u^0,w,c
  5270  003124  6E3B               	movwf	??_floorf^0,c
  5271  003126  3448               	rlcf	(floorf@u+1)^0,w,c
  5272  003128  6E3C               	movwf	(??_floorf+1)^0,c
  5273  00312A  3449               	rlcf	(floorf@u+2)^0,w,c
  5274  00312C  6E3D               	movwf	(??_floorf+2)^0,c
  5275  00312E  344A               	rlcf	(floorf@u+3)^0,w,c
  5276  003130  6E3E               	movwf	(??_floorf+3)^0,c
  5277  003132  503B               	movf	??_floorf^0,w,c
  5278  003134  103C               	iorwf	(??_floorf+1)^0,w,c
  5279  003136  103D               	iorwf	(??_floorf+2)^0,w,c
  5280  003138  103E               	iorwf	(??_floorf+3)^0,w,c
  5281  00313A  B4D8               	btfsc	status,2,c
  5282  00313C  EFA2  F018         	goto	u7501
  5283  003140  EFA4  F018         	goto	u7500
  5284  003144                     u7501:
  5285  003144  EFAC  F018         	goto	l7075
  5286  003148                     u7500:
  5287  003148  0E00               	movlw	0
  5288  00314A  6E47               	movwf	floorf@u^0,c
  5289  00314C  0E00               	movlw	0
  5290  00314E  6E48               	movwf	(floorf@u+1)^0,c
  5291  003150  0E80               	movlw	128
  5292  003152  6E49               	movwf	(floorf@u+2)^0,c
  5293  003154  0EBF               	movlw	191
  5294  003156  6E4A               	movwf	(floorf@u+3)^0,c
  5295  003158                     l7075:
  5296  003158  C047  F037         	movff	floorf@u,?_floorf
  5297  00315C  C048  F038         	movff	floorf@u+1,?_floorf+1
  5298  003160  C049  F039         	movff	floorf@u+2,?_floorf+2
  5299  003164  C04A  F03A         	movff	floorf@u+3,?_floorf+3
  5300  003168                     l1640:
  5301  003168  0012               	return		;funcret
  5302  00316A                     __end_of_floorf:
  5303                           	callstack 0
  5304                           
  5305 ;; *************** function ___fpclassifyf *****************
  5306 ;; Defined at:
  5307 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\__fpclassifyf.c"
  5308 ;; Parameters:    Size  Location     Type
  5309 ;;  x               4    4[COMRAM] float 
  5310 ;; Auto vars:     Size  Location     Type
  5311 ;;  u               4   14[COMRAM] struct .
  5312 ;;  e               2   12[COMRAM] int 
  5313 ;; Return value:  Size  Location     Type
  5314 ;;                  2    4[COMRAM] int 
  5315 ;; Registers used:
  5316 ;;		wreg, status,2, status,0
  5317 ;; Tracked objects:
  5318 ;;		On entry : 0/0
  5319 ;;		On exit  : 0/0
  5320 ;;		Unchanged: 0/0
  5321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5322 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5323 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5324 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5325 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5326 ;;Total ram usage:       14 bytes
  5327 ;; Hardware stack levels used:    1
  5328 ;; Hardware stack levels required when called:    4
  5329 ;; This function calls:
  5330 ;;		Nothing
  5331 ;; This function is called by:
  5332 ;;		_efgtoa
  5333 ;; This function uses a non-reentrant model
  5334 ;;
  5335                           
  5336                           	psect	text16
  5337  0037F2                     __ptext16:
  5338                           	callstack 0
  5339  0037F2                     ___fpclassifyf:
  5340                           	callstack 22
  5341  0037F2  C0E1  F00F         	movff	___fpclassifyf@F463,___fpclassifyf@u
  5342  0037F6  C0E2  F010         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  5343  0037FA  C0E3  F011         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  5344  0037FE  C0E4  F012         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  5345  003802  C005  F00F         	movff	___fpclassifyf@x,___fpclassifyf@u
  5346  003806  C006  F010         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5347  00380A  C007  F011         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5348  00380E  C008  F012         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5349  003812  C00F  F009         	movff	___fpclassifyf@u,??___fpclassifyf
  5350  003816  C010  F00A         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5351  00381A  C011  F00B         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5352  00381E  C012  F00C         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5353  003822  0E18               	movlw	24
  5354  003824  EF19  F01C         	goto	u7290
  5355  003828                     u7295:
  5356  003828  90D8               	bcf	status,0,c
  5357  00382A  320C               	rrcf	(??___fpclassifyf+3)^0,f,c
  5358  00382C  320B               	rrcf	(??___fpclassifyf+2)^0,f,c
  5359  00382E  320A               	rrcf	(??___fpclassifyf+1)^0,f,c
  5360  003830  3209               	rrcf	??___fpclassifyf^0,f,c
  5361  003832                     u7290:
  5362  003832  2EE8               	decfsz	wreg,f,c
  5363  003834  EF14  F01C         	goto	u7295
  5364  003838  5009               	movf	??___fpclassifyf^0,w,c
  5365  00383A  6E0D               	movwf	___fpclassifyf@e^0,c
  5366  00383C  6A0E               	clrf	(___fpclassifyf@e+1)^0,c
  5367  00383E  500D               	movf	___fpclassifyf@e^0,w,c
  5368  003840  100E               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5369  003842  A4D8               	btfss	status,2,c
  5370  003844  EF26  F01C         	goto	u7301
  5371  003848  EF28  F01C         	goto	u7300
  5372  00384C                     u7301:
  5373  00384C  EF48  F01C         	goto	l7027
  5374  003850                     u7300:
  5375  003850  90D8               	bcf	status,0,c
  5376  003852  340F               	rlcf	___fpclassifyf@u^0,w,c
  5377  003854  6E09               	movwf	??___fpclassifyf^0,c
  5378  003856  3410               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5379  003858  6E0A               	movwf	(??___fpclassifyf+1)^0,c
  5380  00385A  3411               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5381  00385C  6E0B               	movwf	(??___fpclassifyf+2)^0,c
  5382  00385E  3412               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5383  003860  6E0C               	movwf	(??___fpclassifyf+3)^0,c
  5384  003862  5009               	movf	??___fpclassifyf^0,w,c
  5385  003864  100A               	iorwf	(??___fpclassifyf+1)^0,w,c
  5386  003866  100B               	iorwf	(??___fpclassifyf+2)^0,w,c
  5387  003868  100C               	iorwf	(??___fpclassifyf+3)^0,w,c
  5388  00386A  A4D8               	btfss	status,2,c
  5389  00386C  EF3A  F01C         	goto	u7311
  5390  003870  EF3C  F01C         	goto	u7310
  5391  003874                     u7311:
  5392  003874  EF42  F01C         	goto	l7023
  5393  003878                     u7310:
  5394  003878  0E00               	movlw	0
  5395  00387A  6E06               	movwf	(?___fpclassifyf+1)^0,c
  5396  00387C  0E02               	movlw	2
  5397  00387E  6E05               	movwf	?___fpclassifyf^0,c
  5398  003880  EF77  F01C         	goto	l1602
  5399  003884                     l7023:
  5400  003884  0E00               	movlw	0
  5401  003886  6E06               	movwf	(?___fpclassifyf+1)^0,c
  5402  003888  0E03               	movlw	3
  5403  00388A  6E05               	movwf	?___fpclassifyf^0,c
  5404  00388C  EF77  F01C         	goto	l1602
  5405  003890                     l7027:
  5406  003890  280D               	incf	___fpclassifyf@e^0,w,c
  5407  003892  100E               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5408  003894  A4D8               	btfss	status,2,c
  5409  003896  EF4F  F01C         	goto	u7321
  5410  00389A  EF51  F01C         	goto	u7320
  5411  00389E                     u7321:
  5412  00389E  EF73  F01C         	goto	l7033
  5413  0038A2                     u7320:
  5414  0038A2  C00F  F009         	movff	___fpclassifyf@u,??___fpclassifyf
  5415  0038A6  C010  F00A         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5416  0038AA  C011  F00B         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5417  0038AE  C012  F00C         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5418  0038B2  0E09               	movlw	9
  5419  0038B4                     u7335:
  5420  0038B4  90D8               	bcf	status,0,c
  5421  0038B6  3609               	rlcf	??___fpclassifyf^0,f,c
  5422  0038B8  360A               	rlcf	(??___fpclassifyf+1)^0,f,c
  5423  0038BA  360B               	rlcf	(??___fpclassifyf+2)^0,f,c
  5424  0038BC  360C               	rlcf	(??___fpclassifyf+3)^0,f,c
  5425  0038BE  2EE8               	decfsz	wreg,f,c
  5426  0038C0  EF5A  F01C         	goto	u7335
  5427  0038C4  5009               	movf	??___fpclassifyf^0,w,c
  5428  0038C6  100A               	iorwf	(??___fpclassifyf+1)^0,w,c
  5429  0038C8  100B               	iorwf	(??___fpclassifyf+2)^0,w,c
  5430  0038CA  100C               	iorwf	(??___fpclassifyf+3)^0,w,c
  5431  0038CC  B4D8               	btfsc	status,2,c
  5432  0038CE  EF6B  F01C         	goto	u7341
  5433  0038D2  EF6E  F01C         	goto	u7340
  5434  0038D6                     u7341:
  5435  0038D6  0E01               	movlw	1
  5436  0038D8  EF6F  F01C         	goto	u7350
  5437  0038DC                     u7340:
  5438  0038DC  0E00               	movlw	0
  5439  0038DE                     u7350:
  5440  0038DE  6E05               	movwf	?___fpclassifyf^0,c
  5441  0038E0  6A06               	clrf	(?___fpclassifyf+1)^0,c
  5442  0038E2  EF77  F01C         	goto	l1602
  5443  0038E6                     l7033:
  5444  0038E6  0E00               	movlw	0
  5445  0038E8  6E06               	movwf	(?___fpclassifyf+1)^0,c
  5446  0038EA  0E04               	movlw	4
  5447  0038EC  6E05               	movwf	?___fpclassifyf^0,c
  5448  0038EE                     l1602:
  5449  0038EE  0012               	return		;funcret
  5450  0038F0                     __end_of___fpclassifyf:
  5451                           	callstack 0
  5452                           
  5453 ;; *************** function ___fltol *****************
  5454 ;; Defined at:
  5455 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fltol.c"
  5456 ;; Parameters:    Size  Location     Type
  5457 ;;  f1              4    4[COMRAM] int 
  5458 ;; Auto vars:     Size  Location     Type
  5459 ;;  exp1            1   13[COMRAM] unsigned char 
  5460 ;;  sign1           1   12[COMRAM] unsigned char 
  5461 ;; Return value:  Size  Location     Type
  5462 ;;                  4    4[COMRAM] long 
  5463 ;; Registers used:
  5464 ;;		wreg, status,2, status,0
  5465 ;; Tracked objects:
  5466 ;;		On entry : 0/0
  5467 ;;		On exit  : 0/0
  5468 ;;		Unchanged: 0/0
  5469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5470 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5471 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5472 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5473 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5474 ;;Total ram usage:       10 bytes
  5475 ;; Hardware stack levels used:    1
  5476 ;; Hardware stack levels required when called:    4
  5477 ;; This function calls:
  5478 ;;		Nothing
  5479 ;; This function is called by:
  5480 ;;		_efgtoa
  5481 ;; This function uses a non-reentrant model
  5482 ;;
  5483                           
  5484                           	psect	text17
  5485  0035E8                     __ptext17:
  5486                           	callstack 0
  5487  0035E8                     ___fltol:
  5488                           	callstack 22
  5489  0035E8  3407               	rlcf	(___fltol@f1+2)^0,w,c
  5490  0035EA  3408               	rlcf	(___fltol@f1+3)^0,w,c
  5491  0035EC  6E0E               	movwf	___fltol@exp1^0,c
  5492  0035EE  500E               	movf	___fltol@exp1^0,w,c
  5493  0035F0  A4D8               	btfss	status,2,c
  5494  0035F2  EFFD  F01A         	goto	u7181
  5495  0035F6  EFFF  F01A         	goto	u7180
  5496  0035FA                     u7181:
  5497  0035FA  EF09  F01B         	goto	l6955
  5498  0035FE                     u7180:
  5499  0035FE                     l6951:
  5500  0035FE  0E00               	movlw	0
  5501  003600  6E05               	movwf	?___fltol^0,c
  5502  003602  0E00               	movlw	0
  5503  003604  6E06               	movwf	(?___fltol+1)^0,c
  5504  003606  0E00               	movlw	0
  5505  003608  6E07               	movwf	(?___fltol+2)^0,c
  5506  00360A  0E00               	movlw	0
  5507  00360C  6E08               	movwf	(?___fltol+3)^0,c
  5508  00360E  EF76  F01B         	goto	l1021
  5509  003612                     l6955:
  5510  003612  C005  F009         	movff	___fltol@f1,??___fltol
  5511  003616  C006  F00A         	movff	___fltol@f1+1,??___fltol+1
  5512  00361A  C007  F00B         	movff	___fltol@f1+2,??___fltol+2
  5513  00361E  C008  F00C         	movff	___fltol@f1+3,??___fltol+3
  5514  003622  0E20               	movlw	32
  5515  003624  EF19  F01B         	goto	u7190
  5516  003628                     u7195:
  5517  003628  90D8               	bcf	status,0,c
  5518  00362A  320C               	rrcf	(??___fltol+3)^0,f,c
  5519  00362C  320B               	rrcf	(??___fltol+2)^0,f,c
  5520  00362E  320A               	rrcf	(??___fltol+1)^0,f,c
  5521  003630  3209               	rrcf	??___fltol^0,f,c
  5522  003632                     u7190:
  5523  003632  2EE8               	decfsz	wreg,f,c
  5524  003634  EF14  F01B         	goto	u7195
  5525  003638  5009               	movf	??___fltol^0,w,c
  5526  00363A  6E0D               	movwf	___fltol@sign1^0,c
  5527  00363C  8E07               	bsf	(___fltol@f1+2)^0,7,c
  5528  00363E  0EFF               	movlw	255
  5529  003640  1605               	andwf	___fltol@f1^0,f,c
  5530  003642  0EFF               	movlw	255
  5531  003644  1606               	andwf	(___fltol@f1+1)^0,f,c
  5532  003646  0EFF               	movlw	255
  5533  003648  1607               	andwf	(___fltol@f1+2)^0,f,c
  5534  00364A  0E00               	movlw	0
  5535  00364C  1608               	andwf	(___fltol@f1+3)^0,f,c
  5536  00364E  0E96               	movlw	150
  5537  003650  5E0E               	subwf	___fltol@exp1^0,f,c
  5538  003652  BE0E               	btfsc	___fltol@exp1^0,7,c
  5539  003654  EF30  F01B         	goto	u7200
  5540  003658  EF2E  F01B         	goto	u7201
  5541  00365C                     u7201:
  5542  00365C  EF46  F01B         	goto	l6975
  5543  003660                     u7200:
  5544  003660  500E               	movf	___fltol@exp1^0,w,c
  5545  003662  0A80               	xorlw	128
  5546  003664  0F97               	addlw	151
  5547  003666  B0D8               	btfsc	status,0,c
  5548  003668  EF38  F01B         	goto	u7211
  5549  00366C  EF3A  F01B         	goto	u7210
  5550  003670                     u7211:
  5551  003670  EF3C  F01B         	goto	l6971
  5552  003674                     u7210:
  5553  003674  EFFF  F01A         	goto	l6951
  5554  003678                     l6971:
  5555  003678  90D8               	bcf	status,0,c
  5556  00367A  3208               	rrcf	(___fltol@f1+3)^0,f,c
  5557  00367C  3207               	rrcf	(___fltol@f1+2)^0,f,c
  5558  00367E  3206               	rrcf	(___fltol@f1+1)^0,f,c
  5559  003680  3205               	rrcf	___fltol@f1^0,f,c
  5560  003682  3E0E               	incfsz	___fltol@exp1^0,f,c
  5561  003684  EF3C  F01B         	goto	l6971
  5562  003688  EF5E  F01B         	goto	l6985
  5563  00368C                     l6975:
  5564  00368C  0E1F               	movlw	31
  5565  00368E  640E               	cpfsgt	___fltol@exp1^0,c
  5566  003690  EF4C  F01B         	goto	u7221
  5567  003694  EF4E  F01B         	goto	u7220
  5568  003698                     u7221:
  5569  003698  EF56  F01B         	goto	l6983
  5570  00369C                     u7220:
  5571  00369C  EFFF  F01A         	goto	l6951
  5572  0036A0                     l6981:
  5573  0036A0  90D8               	bcf	status,0,c
  5574  0036A2  3605               	rlcf	___fltol@f1^0,f,c
  5575  0036A4  3606               	rlcf	(___fltol@f1+1)^0,f,c
  5576  0036A6  3607               	rlcf	(___fltol@f1+2)^0,f,c
  5577  0036A8  3608               	rlcf	(___fltol@f1+3)^0,f,c
  5578  0036AA  060E               	decf	___fltol@exp1^0,f,c
  5579  0036AC                     l6983:
  5580  0036AC  500E               	movf	___fltol@exp1^0,w,c
  5581  0036AE  A4D8               	btfss	status,2,c
  5582  0036B0  EF5C  F01B         	goto	u7231
  5583  0036B4  EF5E  F01B         	goto	u7230
  5584  0036B8                     u7231:
  5585  0036B8  EF50  F01B         	goto	l6981
  5586  0036BC                     u7230:
  5587  0036BC                     l6985:
  5588  0036BC  500D               	movf	___fltol@sign1^0,w,c
  5589  0036BE  B4D8               	btfsc	status,2,c
  5590  0036C0  EF64  F01B         	goto	u7241
  5591  0036C4  EF66  F01B         	goto	u7240
  5592  0036C8                     u7241:
  5593  0036C8  EF6E  F01B         	goto	l6989
  5594  0036CC                     u7240:
  5595  0036CC  1E08               	comf	(___fltol@f1+3)^0,f,c
  5596  0036CE  1E07               	comf	(___fltol@f1+2)^0,f,c
  5597  0036D0  1E06               	comf	(___fltol@f1+1)^0,f,c
  5598  0036D2  6C05               	negf	___fltol@f1^0,c
  5599  0036D4  0E00               	movlw	0
  5600  0036D6  2206               	addwfc	(___fltol@f1+1)^0,f,c
  5601  0036D8  2207               	addwfc	(___fltol@f1+2)^0,f,c
  5602  0036DA  2208               	addwfc	(___fltol@f1+3)^0,f,c
  5603  0036DC                     l6989:
  5604  0036DC  C005  F005         	movff	___fltol@f1,?___fltol
  5605  0036E0  C006  F006         	movff	___fltol@f1+1,?___fltol+1
  5606  0036E4  C007  F007         	movff	___fltol@f1+2,?___fltol+2
  5607  0036E8  C008  F008         	movff	___fltol@f1+3,?___fltol+3
  5608  0036EC                     l1021:
  5609  0036EC  0012               	return		;funcret
  5610  0036EE                     __end_of___fltol:
  5611                           	callstack 0
  5612                           
  5613 ;; *************** function ___flsub *****************
  5614 ;; Defined at:
  5615 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
  5616 ;; Parameters:    Size  Location     Type
  5617 ;;  b               4   70[COMRAM] long 
  5618 ;;  a               4   74[COMRAM] long 
  5619 ;; Auto vars:     Size  Location     Type
  5620 ;;		None
  5621 ;; Return value:  Size  Location     Type
  5622 ;;                  4   70[COMRAM] long 
  5623 ;; Registers used:
  5624 ;;		wreg, status,2, status,0, cstack
  5625 ;; Tracked objects:
  5626 ;;		On entry : 0/0
  5627 ;;		On exit  : 0/0
  5628 ;;		Unchanged: 0/0
  5629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5630 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5633 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5634 ;;Total ram usage:        8 bytes
  5635 ;; Hardware stack levels used:    1
  5636 ;; Hardware stack levels required when called:    5
  5637 ;; This function calls:
  5638 ;;		___fladd
  5639 ;; This function is called by:
  5640 ;;		_efgtoa
  5641 ;; This function uses a non-reentrant model
  5642 ;;
  5643                           
  5644                           	psect	text18
  5645  0045E2                     __ptext18:
  5646                           	callstack 0
  5647  0045E2                     ___flsub:
  5648                           	callstack 21
  5649  0045E2  0E00               	movlw	0
  5650  0045E4  1A4B               	xorwf	___flsub@a^0,f,c
  5651  0045E6  0E00               	movlw	0
  5652  0045E8  1A4C               	xorwf	(___flsub@a+1)^0,f,c
  5653  0045EA  0E00               	movlw	0
  5654  0045EC  1A4D               	xorwf	(___flsub@a+2)^0,f,c
  5655  0045EE  0E80               	movlw	128
  5656  0045F0  1A4E               	xorwf	(___flsub@a+3)^0,f,c
  5657  0045F2  C047  F037         	movff	___flsub@b,___fladd@b
  5658  0045F6  C048  F038         	movff	___flsub@b+1,___fladd@b+1
  5659  0045FA  C049  F039         	movff	___flsub@b+2,___fladd@b+2
  5660  0045FE  C04A  F03A         	movff	___flsub@b+3,___fladd@b+3
  5661  004602  C04B  F03B         	movff	___flsub@a,___fladd@a
  5662  004606  C04C  F03C         	movff	___flsub@a+1,___fladd@a+1
  5663  00460A  C04D  F03D         	movff	___flsub@a+2,___fladd@a+2
  5664  00460E  C04E  F03E         	movff	___flsub@a+3,___fladd@a+3
  5665  004612  EC6A  F011         	call	___fladd	;wreg free
  5666  004616  C037  F047         	movff	?___fladd,?___flsub
  5667  00461A  C038  F048         	movff	?___fladd+1,?___flsub+1
  5668  00461E  C039  F049         	movff	?___fladd+2,?___flsub+2
  5669  004622  C03A  F04A         	movff	?___fladd+3,?___flsub+3
  5670  004626  0012               	return		;funcret
  5671  004628                     __end_of___flsub:
  5672                           	callstack 0
  5673                           
  5674 ;; *************** function ___flneg *****************
  5675 ;; Defined at:
  5676 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flneg.c"
  5677 ;; Parameters:    Size  Location     Type
  5678 ;;  f1              4    4[COMRAM] long 
  5679 ;; Auto vars:     Size  Location     Type
  5680 ;;		None
  5681 ;; Return value:  Size  Location     Type
  5682 ;;                  4    4[COMRAM] long 
  5683 ;; Registers used:
  5684 ;;		wreg, status,2, status,0
  5685 ;; Tracked objects:
  5686 ;;		On entry : 0/0
  5687 ;;		On exit  : 0/0
  5688 ;;		Unchanged: 0/0
  5689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5690 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5693 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5694 ;;Total ram usage:        4 bytes
  5695 ;; Hardware stack levels used:    1
  5696 ;; Hardware stack levels required when called:    4
  5697 ;; This function calls:
  5698 ;;		Nothing
  5699 ;; This function is called by:
  5700 ;;		_efgtoa
  5701 ;; This function uses a non-reentrant model
  5702 ;;
  5703                           
  5704                           	psect	text19
  5705  0047F4                     __ptext19:
  5706                           	callstack 0
  5707  0047F4                     ___flneg:
  5708                           	callstack 22
  5709  0047F4  5005               	movf	___flneg@f1^0,w,c
  5710  0047F6  1006               	iorwf	(___flneg@f1+1)^0,w,c
  5711  0047F8  1007               	iorwf	(___flneg@f1+2)^0,w,c
  5712  0047FA  1008               	iorwf	(___flneg@f1+3)^0,w,c
  5713  0047FC  B4D8               	btfsc	status,2,c
  5714  0047FE  EF03  F024         	goto	u7171
  5715  004802  EF05  F024         	goto	u7170
  5716  004806                     u7171:
  5717  004806  EF0D  F024         	goto	l6945
  5718  00480A                     u7170:
  5719  00480A  0E00               	movlw	0
  5720  00480C  1A05               	xorwf	___flneg@f1^0,f,c
  5721  00480E  0E00               	movlw	0
  5722  004810  1A06               	xorwf	(___flneg@f1+1)^0,f,c
  5723  004812  0E00               	movlw	0
  5724  004814  1A07               	xorwf	(___flneg@f1+2)^0,f,c
  5725  004816  0E80               	movlw	128
  5726  004818  1A08               	xorwf	(___flneg@f1+3)^0,f,c
  5727  00481A                     l6945:
  5728  00481A  C005  F005         	movff	___flneg@f1,?___flneg
  5729  00481E  C006  F006         	movff	___flneg@f1+1,?___flneg+1
  5730  004822  C007  F007         	movff	___flneg@f1+2,?___flneg+2
  5731  004826  C008  F008         	movff	___flneg@f1+3,?___flneg+3
  5732  00482A  0012               	return		;funcret
  5733  00482C                     __end_of___flneg:
  5734                           	callstack 0
  5735                           
  5736 ;; *************** function ___fleq *****************
  5737 ;; Defined at:
  5738 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fleq.c"
  5739 ;; Parameters:    Size  Location     Type
  5740 ;;  ff1             4    4[COMRAM] long 
  5741 ;;  ff2             4    8[COMRAM] long 
  5742 ;; Auto vars:     Size  Location     Type
  5743 ;;		None
  5744 ;; Return value:  Size  Location     Type
  5745 ;;		None               void
  5746 ;; Registers used:
  5747 ;;		wreg, status,2, status,0
  5748 ;; Tracked objects:
  5749 ;;		On entry : 0/0
  5750 ;;		On exit  : 0/0
  5751 ;;		Unchanged: 0/0
  5752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5753 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5755 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5756 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5757 ;;Total ram usage:       12 bytes
  5758 ;; Hardware stack levels used:    1
  5759 ;; Hardware stack levels required when called:    4
  5760 ;; This function calls:
  5761 ;;		Nothing
  5762 ;; This function is called by:
  5763 ;;		_efgtoa
  5764 ;; This function uses a non-reentrant model
  5765 ;;
  5766                           
  5767                           	psect	text20
  5768  003F06                     __ptext20:
  5769                           	callstack 0
  5770  003F06                     ___fleq:
  5771                           	callstack 22
  5772  003F06  0E00               	movlw	0
  5773  003F08  1405               	andwf	___fleq@ff1^0,w,c
  5774  003F0A  6E0D               	movwf	??___fleq^0,c
  5775  003F0C  0E00               	movlw	0
  5776  003F0E  1406               	andwf	(___fleq@ff1+1)^0,w,c
  5777  003F10  6E0E               	movwf	(??___fleq+1)^0,c
  5778  003F12  0E80               	movlw	128
  5779  003F14  1407               	andwf	(___fleq@ff1+2)^0,w,c
  5780  003F16  6E0F               	movwf	(??___fleq+2)^0,c
  5781  003F18  0E7F               	movlw	127
  5782  003F1A  1408               	andwf	(___fleq@ff1+3)^0,w,c
  5783  003F1C  6E10               	movwf	(??___fleq+3)^0,c
  5784  003F1E  500D               	movf	??___fleq^0,w,c
  5785  003F20  100E               	iorwf	(??___fleq+1)^0,w,c
  5786  003F22  100F               	iorwf	(??___fleq+2)^0,w,c
  5787  003F24  1010               	iorwf	(??___fleq+3)^0,w,c
  5788  003F26  A4D8               	btfss	status,2,c
  5789  003F28  EF98  F01F         	goto	u7091
  5790  003F2C  EF9A  F01F         	goto	u7090
  5791  003F30                     u7091:
  5792  003F30  EFA2  F01F         	goto	l6907
  5793  003F34                     u7090:
  5794  003F34  0E00               	movlw	0
  5795  003F36  6E05               	movwf	___fleq@ff1^0,c
  5796  003F38  0E00               	movlw	0
  5797  003F3A  6E06               	movwf	(___fleq@ff1+1)^0,c
  5798  003F3C  0E00               	movlw	0
  5799  003F3E  6E07               	movwf	(___fleq@ff1+2)^0,c
  5800  003F40  0E00               	movlw	0
  5801  003F42  6E08               	movwf	(___fleq@ff1+3)^0,c
  5802  003F44                     l6907:
  5803  003F44  0E00               	movlw	0
  5804  003F46  1409               	andwf	___fleq@ff2^0,w,c
  5805  003F48  6E0D               	movwf	??___fleq^0,c
  5806  003F4A  0E00               	movlw	0
  5807  003F4C  140A               	andwf	(___fleq@ff2+1)^0,w,c
  5808  003F4E  6E0E               	movwf	(??___fleq+1)^0,c
  5809  003F50  0E80               	movlw	128
  5810  003F52  140B               	andwf	(___fleq@ff2+2)^0,w,c
  5811  003F54  6E0F               	movwf	(??___fleq+2)^0,c
  5812  003F56  0E7F               	movlw	127
  5813  003F58  140C               	andwf	(___fleq@ff2+3)^0,w,c
  5814  003F5A  6E10               	movwf	(??___fleq+3)^0,c
  5815  003F5C  500D               	movf	??___fleq^0,w,c
  5816  003F5E  100E               	iorwf	(??___fleq+1)^0,w,c
  5817  003F60  100F               	iorwf	(??___fleq+2)^0,w,c
  5818  003F62  1010               	iorwf	(??___fleq+3)^0,w,c
  5819  003F64  A4D8               	btfss	status,2,c
  5820  003F66  EFB7  F01F         	goto	u7101
  5821  003F6A  EFB9  F01F         	goto	u7100
  5822  003F6E                     u7101:
  5823  003F6E  EFC1  F01F         	goto	l6911
  5824  003F72                     u7100:
  5825  003F72  0E00               	movlw	0
  5826  003F74  6E09               	movwf	___fleq@ff2^0,c
  5827  003F76  0E00               	movlw	0
  5828  003F78  6E0A               	movwf	(___fleq@ff2+1)^0,c
  5829  003F7A  0E00               	movlw	0
  5830  003F7C  6E0B               	movwf	(___fleq@ff2+2)^0,c
  5831  003F7E  0E00               	movlw	0
  5832  003F80  6E0C               	movwf	(___fleq@ff2+3)^0,c
  5833  003F82                     l6911:
  5834  003F82  5009               	movf	___fleq@ff2^0,w,c
  5835  003F84  1805               	xorwf	___fleq@ff1^0,w,c
  5836  003F86  E10F               	bnz	u7110
  5837  003F88  500A               	movf	(___fleq@ff2+1)^0,w,c
  5838  003F8A  1806               	xorwf	(___fleq@ff1+1)^0,w,c
  5839  003F8C  E10C               	bnz	u7110
  5840  003F8E  500B               	movf	(___fleq@ff2+2)^0,w,c
  5841  003F90  1807               	xorwf	(___fleq@ff1+2)^0,w,c
  5842  003F92  E109               	bnz	u7110
  5843  003F94  500C               	movf	(___fleq@ff2+3)^0,w,c
  5844  003F96  1808               	xorwf	(___fleq@ff1+3)^0,w,c
  5845  003F98  B4D8               	btfsc	status,2,c
  5846  003F9A  EFD1  F01F         	goto	u7111
  5847  003F9E  EFD3  F01F         	goto	u7110
  5848  003FA2                     u7111:
  5849  003FA2  EFD6  F01F         	goto	l6915
  5850  003FA6                     u7110:
  5851  003FA6  90D8               	bcf	status,0,c
  5852  003FA8  EFD7  F01F         	goto	l983
  5853  003FAC                     l6915:
  5854  003FAC  80D8               	bsf	status,0,c
  5855  003FAE                     l983:
  5856  003FAE  0012               	return		;funcret
  5857  003FB0                     __end_of___fleq:
  5858                           	callstack 0
  5859                           
  5860 ;; *************** function ___awmod *****************
  5861 ;; Defined at:
  5862 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awmod.c"
  5863 ;; Parameters:    Size  Location     Type
  5864 ;;  dividend        2    4[COMRAM] int 
  5865 ;;  divisor         2    6[COMRAM] int 
  5866 ;; Auto vars:     Size  Location     Type
  5867 ;;  sign            1    9[COMRAM] unsigned char 
  5868 ;;  counter         1    8[COMRAM] unsigned char 
  5869 ;; Return value:  Size  Location     Type
  5870 ;;                  2    4[COMRAM] int 
  5871 ;; Registers used:
  5872 ;;		wreg, status,2, status,0
  5873 ;; Tracked objects:
  5874 ;;		On entry : 0/0
  5875 ;;		On exit  : 0/0
  5876 ;;		Unchanged: 0/0
  5877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5878 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5879 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5881 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5882 ;;Total ram usage:        6 bytes
  5883 ;; Hardware stack levels used:    1
  5884 ;; Hardware stack levels required when called:    4
  5885 ;; This function calls:
  5886 ;;		Nothing
  5887 ;; This function is called by:
  5888 ;;		_efgtoa
  5889 ;; This function uses a non-reentrant model
  5890 ;;
  5891                           
  5892                           	psect	text21
  5893  003DAA                     __ptext21:
  5894                           	callstack 0
  5895  003DAA                     ___awmod:
  5896                           	callstack 22
  5897  003DAA  0E00               	movlw	0
  5898  003DAC  6E0A               	movwf	___awmod@sign^0,c
  5899  003DAE  BE06               	btfsc	(___awmod@dividend+1)^0,7,c
  5900  003DB0  EFDE  F01E         	goto	u7030
  5901  003DB4  EFDC  F01E         	goto	u7031
  5902  003DB8                     u7031:
  5903  003DB8  EFE4  F01E         	goto	l6875
  5904  003DBC                     u7030:
  5905  003DBC  6C05               	negf	___awmod@dividend^0,c
  5906  003DBE  1E06               	comf	(___awmod@dividend+1)^0,f,c
  5907  003DC0  B0D8               	btfsc	status,0,c
  5908  003DC2  2A06               	incf	(___awmod@dividend+1)^0,f,c
  5909  003DC4  0E01               	movlw	1
  5910  003DC6  6E0A               	movwf	___awmod@sign^0,c
  5911  003DC8                     l6875:
  5912  003DC8  BE08               	btfsc	(___awmod@divisor+1)^0,7,c
  5913  003DCA  EFEB  F01E         	goto	u7040
  5914  003DCE  EFE9  F01E         	goto	u7041
  5915  003DD2                     u7041:
  5916  003DD2  EFEF  F01E         	goto	l6879
  5917  003DD6                     u7040:
  5918  003DD6  6C07               	negf	___awmod@divisor^0,c
  5919  003DD8  1E08               	comf	(___awmod@divisor+1)^0,f,c
  5920  003DDA  B0D8               	btfsc	status,0,c
  5921  003DDC  2A08               	incf	(___awmod@divisor+1)^0,f,c
  5922  003DDE                     l6879:
  5923  003DDE  5007               	movf	___awmod@divisor^0,w,c
  5924  003DE0  1008               	iorwf	(___awmod@divisor+1)^0,w,c
  5925  003DE2  B4D8               	btfsc	status,2,c
  5926  003DE4  EFF6  F01E         	goto	u7051
  5927  003DE8  EFF8  F01E         	goto	u7050
  5928  003DEC                     u7051:
  5929  003DEC  EF1C  F01F         	goto	l6895
  5930  003DF0                     u7050:
  5931  003DF0  0E01               	movlw	1
  5932  003DF2  6E09               	movwf	___awmod@counter^0,c
  5933  003DF4  EF00  F01F         	goto	l6885
  5934  003DF8                     l6883:
  5935  003DF8  90D8               	bcf	status,0,c
  5936  003DFA  3607               	rlcf	___awmod@divisor^0,f,c
  5937  003DFC  3608               	rlcf	(___awmod@divisor+1)^0,f,c
  5938  003DFE  2A09               	incf	___awmod@counter^0,f,c
  5939  003E00                     l6885:
  5940  003E00  AE08               	btfss	(___awmod@divisor+1)^0,7,c
  5941  003E02  EF05  F01F         	goto	u7061
  5942  003E06  EF07  F01F         	goto	u7060
  5943  003E0A                     u7061:
  5944  003E0A  EFFC  F01E         	goto	l6883
  5945  003E0E                     u7060:
  5946  003E0E                     l6887:
  5947  003E0E  5007               	movf	___awmod@divisor^0,w,c
  5948  003E10  5C05               	subwf	___awmod@dividend^0,w,c
  5949  003E12  5008               	movf	(___awmod@divisor+1)^0,w,c
  5950  003E14  5806               	subwfb	(___awmod@dividend+1)^0,w,c
  5951  003E16  A0D8               	btfss	status,0,c
  5952  003E18  EF10  F01F         	goto	u7071
  5953  003E1C  EF12  F01F         	goto	u7070
  5954  003E20                     u7071:
  5955  003E20  EF16  F01F         	goto	l6891
  5956  003E24                     u7070:
  5957  003E24  5007               	movf	___awmod@divisor^0,w,c
  5958  003E26  5E05               	subwf	___awmod@dividend^0,f,c
  5959  003E28  5008               	movf	(___awmod@divisor+1)^0,w,c
  5960  003E2A  5A06               	subwfb	(___awmod@dividend+1)^0,f,c
  5961  003E2C                     l6891:
  5962  003E2C  90D8               	bcf	status,0,c
  5963  003E2E  3208               	rrcf	(___awmod@divisor+1)^0,f,c
  5964  003E30  3207               	rrcf	___awmod@divisor^0,f,c
  5965  003E32  2E09               	decfsz	___awmod@counter^0,f,c
  5966  003E34  EF07  F01F         	goto	l6887
  5967  003E38                     l6895:
  5968  003E38  500A               	movf	___awmod@sign^0,w,c
  5969  003E3A  B4D8               	btfsc	status,2,c
  5970  003E3C  EF22  F01F         	goto	u7081
  5971  003E40  EF24  F01F         	goto	u7080
  5972  003E44                     u7081:
  5973  003E44  EF28  F01F         	goto	l6899
  5974  003E48                     u7080:
  5975  003E48  6C05               	negf	___awmod@dividend^0,c
  5976  003E4A  1E06               	comf	(___awmod@dividend+1)^0,f,c
  5977  003E4C  B0D8               	btfsc	status,0,c
  5978  003E4E  2A06               	incf	(___awmod@dividend+1)^0,f,c
  5979  003E50                     l6899:
  5980  003E50  C005  F005         	movff	___awmod@dividend,?___awmod
  5981  003E54  C006  F006         	movff	___awmod@dividend+1,?___awmod+1
  5982  003E58  0012               	return		;funcret
  5983  003E5A                     __end_of___awmod:
  5984                           	callstack 0
  5985                           
  5986 ;; *************** function ___awdiv *****************
  5987 ;; Defined at:
  5988 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awdiv.c"
  5989 ;; Parameters:    Size  Location     Type
  5990 ;;  dividend        2    4[COMRAM] int 
  5991 ;;  divisor         2    6[COMRAM] int 
  5992 ;; Auto vars:     Size  Location     Type
  5993 ;;  quotient        2   10[COMRAM] int 
  5994 ;;  sign            1    9[COMRAM] unsigned char 
  5995 ;;  counter         1    8[COMRAM] unsigned char 
  5996 ;; Return value:  Size  Location     Type
  5997 ;;                  2    4[COMRAM] int 
  5998 ;; Registers used:
  5999 ;;		wreg, status,2, status,0
  6000 ;; Tracked objects:
  6001 ;;		On entry : 0/0
  6002 ;;		On exit  : 0/0
  6003 ;;		Unchanged: 0/0
  6004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6005 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6006 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6008 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6009 ;;Total ram usage:        8 bytes
  6010 ;; Hardware stack levels used:    1
  6011 ;; Hardware stack levels required when called:    4
  6012 ;; This function calls:
  6013 ;;		Nothing
  6014 ;; This function is called by:
  6015 ;;		_efgtoa
  6016 ;; This function uses a non-reentrant model
  6017 ;;
  6018                           
  6019                           	psect	text22
  6020  003B62                     __ptext22:
  6021                           	callstack 0
  6022  003B62                     ___awdiv:
  6023                           	callstack 22
  6024  003B62  0E00               	movlw	0
  6025  003B64  6E0A               	movwf	___awdiv@sign^0,c
  6026  003B66  BE08               	btfsc	(___awdiv@divisor+1)^0,7,c
  6027  003B68  EFBA  F01D         	goto	u6970
  6028  003B6C  EFB8  F01D         	goto	u6971
  6029  003B70                     u6971:
  6030  003B70  EFC0  F01D         	goto	l6831
  6031  003B74                     u6970:
  6032  003B74  6C07               	negf	___awdiv@divisor^0,c
  6033  003B76  1E08               	comf	(___awdiv@divisor+1)^0,f,c
  6034  003B78  B0D8               	btfsc	status,0,c
  6035  003B7A  2A08               	incf	(___awdiv@divisor+1)^0,f,c
  6036  003B7C  0E01               	movlw	1
  6037  003B7E  6E0A               	movwf	___awdiv@sign^0,c
  6038  003B80                     l6831:
  6039  003B80  BE06               	btfsc	(___awdiv@dividend+1)^0,7,c
  6040  003B82  EFC7  F01D         	goto	u6980
  6041  003B86  EFC5  F01D         	goto	u6981
  6042  003B8A                     u6981:
  6043  003B8A  EFCD  F01D         	goto	l6837
  6044  003B8E                     u6980:
  6045  003B8E  6C05               	negf	___awdiv@dividend^0,c
  6046  003B90  1E06               	comf	(___awdiv@dividend+1)^0,f,c
  6047  003B92  B0D8               	btfsc	status,0,c
  6048  003B94  2A06               	incf	(___awdiv@dividend+1)^0,f,c
  6049  003B96  0E01               	movlw	1
  6050  003B98  1A0A               	xorwf	___awdiv@sign^0,f,c
  6051  003B9A                     l6837:
  6052  003B9A  0E00               	movlw	0
  6053  003B9C  6E0C               	movwf	(___awdiv@quotient+1)^0,c
  6054  003B9E  0E00               	movlw	0
  6055  003BA0  6E0B               	movwf	___awdiv@quotient^0,c
  6056  003BA2  5007               	movf	___awdiv@divisor^0,w,c
  6057  003BA4  1008               	iorwf	(___awdiv@divisor+1)^0,w,c
  6058  003BA6  B4D8               	btfsc	status,2,c
  6059  003BA8  EFD8  F01D         	goto	u6991
  6060  003BAC  EFDA  F01D         	goto	u6990
  6061  003BB0                     u6991:
  6062  003BB0  EF02  F01E         	goto	l6859
  6063  003BB4                     u6990:
  6064  003BB4  0E01               	movlw	1
  6065  003BB6  6E09               	movwf	___awdiv@counter^0,c
  6066  003BB8  EFE2  F01D         	goto	l6845
  6067  003BBC                     l6843:
  6068  003BBC  90D8               	bcf	status,0,c
  6069  003BBE  3607               	rlcf	___awdiv@divisor^0,f,c
  6070  003BC0  3608               	rlcf	(___awdiv@divisor+1)^0,f,c
  6071  003BC2  2A09               	incf	___awdiv@counter^0,f,c
  6072  003BC4                     l6845:
  6073  003BC4  AE08               	btfss	(___awdiv@divisor+1)^0,7,c
  6074  003BC6  EFE7  F01D         	goto	u7001
  6075  003BCA  EFE9  F01D         	goto	u7000
  6076  003BCE                     u7001:
  6077  003BCE  EFDE  F01D         	goto	l6843
  6078  003BD2                     u7000:
  6079  003BD2                     l6847:
  6080  003BD2  90D8               	bcf	status,0,c
  6081  003BD4  360B               	rlcf	___awdiv@quotient^0,f,c
  6082  003BD6  360C               	rlcf	(___awdiv@quotient+1)^0,f,c
  6083  003BD8  5007               	movf	___awdiv@divisor^0,w,c
  6084  003BDA  5C05               	subwf	___awdiv@dividend^0,w,c
  6085  003BDC  5008               	movf	(___awdiv@divisor+1)^0,w,c
  6086  003BDE  5806               	subwfb	(___awdiv@dividend+1)^0,w,c
  6087  003BE0  A0D8               	btfss	status,0,c
  6088  003BE2  EFF5  F01D         	goto	u7011
  6089  003BE6  EFF7  F01D         	goto	u7010
  6090  003BEA                     u7011:
  6091  003BEA  EFFC  F01D         	goto	l6855
  6092  003BEE                     u7010:
  6093  003BEE  5007               	movf	___awdiv@divisor^0,w,c
  6094  003BF0  5E05               	subwf	___awdiv@dividend^0,f,c
  6095  003BF2  5008               	movf	(___awdiv@divisor+1)^0,w,c
  6096  003BF4  5A06               	subwfb	(___awdiv@dividend+1)^0,f,c
  6097  003BF6  800B               	bsf	___awdiv@quotient^0,0,c
  6098  003BF8                     l6855:
  6099  003BF8  90D8               	bcf	status,0,c
  6100  003BFA  3208               	rrcf	(___awdiv@divisor+1)^0,f,c
  6101  003BFC  3207               	rrcf	___awdiv@divisor^0,f,c
  6102  003BFE  2E09               	decfsz	___awdiv@counter^0,f,c
  6103  003C00  EFE9  F01D         	goto	l6847
  6104  003C04                     l6859:
  6105  003C04  500A               	movf	___awdiv@sign^0,w,c
  6106  003C06  B4D8               	btfsc	status,2,c
  6107  003C08  EF08  F01E         	goto	u7021
  6108  003C0C  EF0A  F01E         	goto	u7020
  6109  003C10                     u7021:
  6110  003C10  EF0E  F01E         	goto	l6863
  6111  003C14                     u7020:
  6112  003C14  6C0B               	negf	___awdiv@quotient^0,c
  6113  003C16  1E0C               	comf	(___awdiv@quotient+1)^0,f,c
  6114  003C18  B0D8               	btfsc	status,0,c
  6115  003C1A  2A0C               	incf	(___awdiv@quotient+1)^0,f,c
  6116  003C1C                     l6863:
  6117  003C1C  C00B  F005         	movff	___awdiv@quotient,?___awdiv
  6118  003C20  C00C  F006         	movff	___awdiv@quotient+1,?___awdiv+1
  6119  003C24  0012               	return		;funcret
  6120  003C26                     __end_of___awdiv:
  6121                           	callstack 0
  6122                           
  6123 ;; *************** function _atoi *****************
  6124 ;; Defined at:
  6125 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\atoi.c"
  6126 ;; Parameters:    Size  Location     Type
  6127 ;;  s               2   11[COMRAM] PTR const unsigned char 
  6128 ;;		 -> STR_2(29), STR_1(23), 
  6129 ;; Auto vars:     Size  Location     Type
  6130 ;;  n               2   24[COMRAM] int 
  6131 ;;  neg             2   17[COMRAM] int 
  6132 ;; Return value:  Size  Location     Type
  6133 ;;                  2   11[COMRAM] int 
  6134 ;; Registers used:
  6135 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6136 ;; Tracked objects:
  6137 ;;		On entry : 0/0
  6138 ;;		On exit  : 0/0
  6139 ;;		Unchanged: 0/0
  6140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6141 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6142 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6143 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6144 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6145 ;;Total ram usage:       15 bytes
  6146 ;; Hardware stack levels used:    1
  6147 ;; Hardware stack levels required when called:    5
  6148 ;; This function calls:
  6149 ;;		___wmul
  6150 ;;		_isdigit
  6151 ;;		_isspace
  6152 ;; This function is called by:
  6153 ;;		_vfpfcnvrt
  6154 ;; This function uses a non-reentrant model
  6155 ;;
  6156                           
  6157                           	psect	text23
  6158  00331E                     __ptext23:
  6159                           	callstack 0
  6160  00331E                     _atoi:
  6161                           	callstack 22
  6162  00331E  0E00               	movlw	0
  6163  003320  6E1A               	movwf	(atoi@n+1)^0,c
  6164  003322  0E00               	movlw	0
  6165  003324  6E19               	movwf	atoi@n^0,c
  6166  003326  0E00               	movlw	0
  6167  003328  6E13               	movwf	(atoi@neg+1)^0,c
  6168  00332A  0E00               	movlw	0
  6169  00332C  6E12               	movwf	atoi@neg^0,c
  6170  00332E  EF9B  F019         	goto	l7397
  6171  003332                     l7395:
  6172  003332  4A0C               	infsnz	atoi@s^0,f,c
  6173  003334  2A0D               	incf	(atoi@s+1)^0,f,c
  6174  003336                     l7397:
  6175  003336  0E01               	movlw	1
  6176  003338  6E18               	movwf	_atoi$2164^0,c
  6177  00333A  C00C  FFF6         	movff	atoi@s,tblptrl
  6178  00333E  C00D  FFF7         	movff	atoi@s+1,tblptrh
  6179  003342                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6180  003342  6AF8               	clrf	tblptru,c
  6181  003344                     	endif
  6182  003344                     	if	0	;tblptru may be non-zero
  6183  003344                     	endif
  6184  003344  0008               	tblrd		*
  6185  003346  50F5               	movf	tablat,w,c
  6186  003348  0A20               	xorlw	32
  6187  00334A  B4D8               	btfsc	status,2,c
  6188  00334C  EFAA  F019         	goto	u8071
  6189  003350  EFAC  F019         	goto	u8070
  6190  003354                     u8071:
  6191  003354  EFCA  F019         	goto	l7405
  6192  003358                     u8070:
  6193  003358  0EF7               	movlw	247
  6194  00335A  6E0E               	movwf	??_atoi^0,c
  6195  00335C  0EFF               	movlw	255
  6196  00335E  6E0F               	movwf	(??_atoi+1)^0,c
  6197  003360  C00C  FFF6         	movff	atoi@s,tblptrl
  6198  003364  C00D  FFF7         	movff	atoi@s+1,tblptrh
  6199  003368                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6200  003368  6AF8               	clrf	tblptru,c
  6201  00336A                     	endif
  6202  00336A                     	if	0	;tblptru may be non-zero
  6203  00336A                     	endif
  6204  00336A  0008               	tblrd		*
  6205  00336C  50F5               	movf	tablat,w,c
  6206  00336E  6E10               	movwf	(??_atoi+2)^0,c
  6207  003370  6A11               	clrf	(??_atoi+3)^0,c
  6208  003372  500E               	movf	??_atoi^0,w,c
  6209  003374  2610               	addwf	(??_atoi+2)^0,f,c
  6210  003376  500F               	movf	(??_atoi+1)^0,w,c
  6211  003378  2211               	addwfc	(??_atoi+3)^0,f,c
  6212  00337A  5011               	movf	(??_atoi+3)^0,w,c
  6213  00337C  E109               	bnz	u8080
  6214  00337E  0E05               	movlw	5
  6215  003380  5C10               	subwf	(??_atoi+2)^0,w,c
  6216  003382  A0D8               	btfss	status,0,c
  6217  003384  EFC6  F019         	goto	u8081
  6218  003388  EFC8  F019         	goto	u8080
  6219  00338C                     u8081:
  6220  00338C  EFCA  F019         	goto	l7405
  6221  003390                     u8080:
  6222  003390  0E00               	movlw	0
  6223  003392  6E18               	movwf	_atoi$2164^0,c
  6224  003394                     l7405:
  6225  003394  C018  F014         	movff	_atoi$2164,_atoi$2163
  6226  003398  6A15               	clrf	(_atoi$2163+1)^0,c
  6227  00339A  5014               	movf	_atoi$2163^0,w,c
  6228  00339C  1015               	iorwf	(_atoi$2163+1)^0,w,c
  6229  00339E  A4D8               	btfss	status,2,c
  6230  0033A0  EFD4  F019         	goto	u8091
  6231  0033A4  EFD6  F019         	goto	u8090
  6232  0033A8                     u8091:
  6233  0033A8  EF99  F019         	goto	l7395
  6234  0033AC                     u8090:
  6235  0033AC  EFE0  F019         	goto	l7415
  6236  0033B0                     l7411:
  6237  0033B0  0E00               	movlw	0
  6238  0033B2  6E13               	movwf	(atoi@neg+1)^0,c
  6239  0033B4  0E01               	movlw	1
  6240  0033B6  6E12               	movwf	atoi@neg^0,c
  6241  0033B8                     l7413:
  6242  0033B8  4A0C               	infsnz	atoi@s^0,f,c
  6243  0033BA  2A0D               	incf	(atoi@s+1)^0,f,c
  6244  0033BC  EF17  F01A         	goto	l7421
  6245  0033C0                     l7415:
  6246  0033C0  C00C  FFF6         	movff	atoi@s,tblptrl
  6247  0033C4  C00D  FFF7         	movff	atoi@s+1,tblptrh
  6248  0033C8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6249  0033C8  6AF8               	clrf	tblptru,c
  6250  0033CA                     	endif
  6251  0033CA                     	if	0	;tblptru may be non-zero
  6252  0033CA                     	endif
  6253  0033CA  0008               	tblrd		*
  6254  0033CC  50F5               	movf	tablat,w,c
  6255  0033CE  6E0E               	movwf	??_atoi^0,c
  6256  0033D0  6A0F               	clrf	(??_atoi+1)^0,c
  6257                           
  6258                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6259                           ; Switch size 1, requested type "simple"
  6260                           ; Number of cases is 1, Range of values is 0 to 0
  6261                           ; switch strategies available:
  6262                           ; Name         Instructions Cycles
  6263                           ; simple_byte            4     3 (average)
  6264                           ;	Chosen strategy is simple_byte
  6265  0033D2  500F               	movf	(??_atoi+1)^0,w,c
  6266  0033D4  0A00               	xorlw	0	; case 0
  6267  0033D6  B4D8               	btfsc	status,2,c
  6268  0033D8  EFF0  F019         	goto	l7823
  6269  0033DC  EF17  F01A         	goto	l7421
  6270  0033E0                     l7823:
  6271                           
  6272                           ; Switch size 1, requested type "simple"
  6273                           ; Number of cases is 2, Range of values is 43 to 45
  6274                           ; switch strategies available:
  6275                           ; Name         Instructions Cycles
  6276                           ; simple_byte            7     4 (average)
  6277                           ;	Chosen strategy is simple_byte
  6278  0033E0  500E               	movf	??_atoi^0,w,c
  6279  0033E2  0A2B               	xorlw	43	; case 43
  6280  0033E4  B4D8               	btfsc	status,2,c
  6281  0033E6  EFDC  F019         	goto	l7413
  6282  0033EA  0A06               	xorlw	6	; case 45
  6283  0033EC  B4D8               	btfsc	status,2,c
  6284  0033EE  EFD8  F019         	goto	l7411
  6285  0033F2  EF17  F01A         	goto	l7421
  6286  0033F6                     l7417:
  6287  0033F6  C019  F005         	movff	atoi@n,___wmul@multiplier
  6288  0033FA  C01A  F006         	movff	atoi@n+1,___wmul@multiplier+1
  6289  0033FE  0E00               	movlw	0
  6290  003400  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  6291  003402  0E0A               	movlw	10
  6292  003404  6E07               	movwf	___wmul@multiplicand^0,c
  6293  003406  EC13  F025         	call	___wmul	;wreg free
  6294  00340A  C00C  FFF6         	movff	atoi@s,tblptrl
  6295  00340E  C00D  FFF7         	movff	atoi@s+1,tblptrh
  6296  003412                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6297  003412  6AF8               	clrf	tblptru,c
  6298  003414                     	endif
  6299  003414                     	if	0	;tblptru may be non-zero
  6300  003414                     	endif
  6301  003414  0008               	tblrd		*
  6302  003416  50F5               	movf	tablat,w,c
  6303  003418  5E05               	subwf	?___wmul^0,f,c
  6304  00341A  0E00               	movlw	0
  6305  00341C  5A06               	subwfb	(?___wmul+1)^0,f,c
  6306  00341E  0E30               	movlw	48
  6307  003420  2405               	addwf	?___wmul^0,w,c
  6308  003422  6E19               	movwf	atoi@n^0,c
  6309  003424  0E00               	movlw	0
  6310  003426  2006               	addwfc	(?___wmul+1)^0,w,c
  6311  003428  6E1A               	movwf	(atoi@n+1)^0,c
  6312  00342A  EFDC  F019         	goto	l7413
  6313  00342E                     l7421:
  6314  00342E  0ED0               	movlw	208
  6315  003430  6E0E               	movwf	??_atoi^0,c
  6316  003432  0EFF               	movlw	255
  6317  003434  6E0F               	movwf	(??_atoi+1)^0,c
  6318  003436  C00C  FFF6         	movff	atoi@s,tblptrl
  6319  00343A  C00D  FFF7         	movff	atoi@s+1,tblptrh
  6320  00343E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6321  00343E  6AF8               	clrf	tblptru,c
  6322  003440                     	endif
  6323  003440                     	if	0	;tblptru may be non-zero
  6324  003440                     	endif
  6325  003440  0008               	tblrd		*
  6326  003442  50F5               	movf	tablat,w,c
  6327  003444  6E10               	movwf	(??_atoi+2)^0,c
  6328  003446  6A11               	clrf	(??_atoi+3)^0,c
  6329  003448  500E               	movf	??_atoi^0,w,c
  6330  00344A  2610               	addwf	(??_atoi+2)^0,f,c
  6331  00344C  500F               	movf	(??_atoi+1)^0,w,c
  6332  00344E  2211               	addwfc	(??_atoi+3)^0,f,c
  6333  003450  5011               	movf	(??_atoi+3)^0,w,c
  6334  003452  E10A               	bnz	u8100
  6335  003454  0E0A               	movlw	10
  6336  003456  5C10               	subwf	(??_atoi+2)^0,w,c
  6337  003458  A0D8               	btfss	status,0,c
  6338  00345A  EF31  F01A         	goto	u8101
  6339  00345E  EF34  F01A         	goto	u8100
  6340  003462                     u8101:
  6341  003462  0E01               	movlw	1
  6342  003464  EF35  F01A         	goto	u8110
  6343  003468                     u8100:
  6344  003468  0E00               	movlw	0
  6345  00346A                     u8110:
  6346  00346A  6E16               	movwf	_atoi$2165^0,c
  6347  00346C  6A17               	clrf	(_atoi$2165+1)^0,c
  6348  00346E  5016               	movf	_atoi$2165^0,w,c
  6349  003470  1017               	iorwf	(_atoi$2165+1)^0,w,c
  6350  003472  A4D8               	btfss	status,2,c
  6351  003474  EF3E  F01A         	goto	u8121
  6352  003478  EF40  F01A         	goto	u8120
  6353  00347C                     u8121:
  6354  00347C  EFFB  F019         	goto	l7417
  6355  003480                     u8120:
  6356  003480  5012               	movf	atoi@neg^0,w,c
  6357  003482  1013               	iorwf	(atoi@neg+1)^0,w,c
  6358  003484  A4D8               	btfss	status,2,c
  6359  003486  EF47  F01A         	goto	u8131
  6360  00348A  EF49  F01A         	goto	u8130
  6361  00348E                     u8131:
  6362  00348E  EF57  F01A         	goto	l1631
  6363  003492                     u8130:
  6364  003492  C019  F00E         	movff	atoi@n,??_atoi
  6365  003496  C01A  F00F         	movff	atoi@n+1,??_atoi+1
  6366  00349A  1E0E               	comf	??_atoi^0,f,c
  6367  00349C  1E0F               	comf	(??_atoi+1)^0,f,c
  6368  00349E  4A0E               	infsnz	??_atoi^0,f,c
  6369  0034A0  2A0F               	incf	(??_atoi+1)^0,f,c
  6370  0034A2  C00E  F00C         	movff	??_atoi,?_atoi
  6371  0034A6  C00F  F00D         	movff	??_atoi+1,?_atoi+1
  6372  0034AA  EF5B  F01A         	goto	l1634
  6373  0034AE                     l1631:
  6374  0034AE  C019  F00C         	movff	atoi@n,?_atoi
  6375  0034B2  C01A  F00D         	movff	atoi@n+1,?_atoi+1
  6376  0034B6                     l1634:
  6377  0034B6  0012               	return		;funcret
  6378  0034B8                     __end_of_atoi:
  6379                           	callstack 0
  6380                           
  6381 ;; *************** function _isspace *****************
  6382 ;; Defined at:
  6383 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isspace.c"
  6384 ;; Parameters:    Size  Location     Type
  6385 ;;  c               2    4[COMRAM] int 
  6386 ;; Auto vars:     Size  Location     Type
  6387 ;;		None
  6388 ;; Return value:  Size  Location     Type
  6389 ;;                  2    4[COMRAM] int 
  6390 ;; Registers used:
  6391 ;;		wreg, status,2, status,0
  6392 ;; Tracked objects:
  6393 ;;		On entry : 0/0
  6394 ;;		On exit  : 0/0
  6395 ;;		Unchanged: 0/0
  6396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6397 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6398 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6399 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6400 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6401 ;;Total ram usage:        7 bytes
  6402 ;; Hardware stack levels used:    1
  6403 ;; Hardware stack levels required when called:    4
  6404 ;; This function calls:
  6405 ;;		Nothing
  6406 ;; This function is called by:
  6407 ;;		_atoi
  6408 ;; This function uses a non-reentrant model
  6409 ;;
  6410                           
  6411                           	psect	text24
  6412  004590                     __ptext24:
  6413                           	callstack 0
  6414  004590                     _isspace:
  6415                           	callstack 22
  6416  004590  0E01               	movlw	1
  6417  004592  6E0B               	movwf	_isspace$2194^0,c
  6418  004594  0E20               	movlw	32
  6419  004596  1805               	xorwf	isspace@c^0,w,c
  6420  004598  1006               	iorwf	(isspace@c+1)^0,w,c
  6421  00459A  B4D8               	btfsc	status,2,c
  6422  00459C  EFD2  F022         	goto	u7531
  6423  0045A0  EFD4  F022         	goto	u7530
  6424  0045A4                     u7531:
  6425  0045A4  EFED  F022         	goto	l7091
  6426  0045A8                     u7530:
  6427  0045A8  0EF7               	movlw	247
  6428  0045AA  6E07               	movwf	??_isspace^0,c
  6429  0045AC  0EFF               	movlw	255
  6430  0045AE  6E08               	movwf	(??_isspace+1)^0,c
  6431  0045B0  C005  F009         	movff	isspace@c,??_isspace+2
  6432  0045B4  C006  F00A         	movff	isspace@c+1,??_isspace+3
  6433  0045B8  5007               	movf	??_isspace^0,w,c
  6434  0045BA  2609               	addwf	(??_isspace+2)^0,f,c
  6435  0045BC  5008               	movf	(??_isspace+1)^0,w,c
  6436  0045BE  220A               	addwfc	(??_isspace+3)^0,f,c
  6437  0045C0  500A               	movf	(??_isspace+3)^0,w,c
  6438  0045C2  E109               	bnz	u7540
  6439  0045C4  0E05               	movlw	5
  6440  0045C6  5C09               	subwf	(??_isspace+2)^0,w,c
  6441  0045C8  A0D8               	btfss	status,0,c
  6442  0045CA  EFE9  F022         	goto	u7541
  6443  0045CE  EFEB  F022         	goto	u7540
  6444  0045D2                     u7541:
  6445  0045D2  EFED  F022         	goto	l7091
  6446  0045D6                     u7540:
  6447  0045D6  0E00               	movlw	0
  6448  0045D8  6E0B               	movwf	_isspace$2194^0,c
  6449  0045DA                     l7091:
  6450  0045DA  C00B  F005         	movff	_isspace$2194,?_isspace
  6451  0045DE  6A06               	clrf	(?_isspace+1)^0,c
  6452  0045E0  0012               	return		;funcret
  6453  0045E2                     __end_of_isspace:
  6454                           	callstack 0
  6455                           
  6456 ;; *************** function _isdigit *****************
  6457 ;; Defined at:
  6458 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isdigit.c"
  6459 ;; Parameters:    Size  Location     Type
  6460 ;;  c               2    4[COMRAM] int 
  6461 ;; Auto vars:     Size  Location     Type
  6462 ;;		None
  6463 ;; Return value:  Size  Location     Type
  6464 ;;                  2    4[COMRAM] int 
  6465 ;; Registers used:
  6466 ;;		wreg, status,2, status,0
  6467 ;; Tracked objects:
  6468 ;;		On entry : 0/0
  6469 ;;		On exit  : 0/0
  6470 ;;		Unchanged: 0/0
  6471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6472 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6474 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6475 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6476 ;;Total ram usage:        6 bytes
  6477 ;; Hardware stack levels used:    1
  6478 ;; Hardware stack levels required when called:    4
  6479 ;; This function calls:
  6480 ;;		Nothing
  6481 ;; This function is called by:
  6482 ;;		_vfpfcnvrt
  6483 ;;		_atoi
  6484 ;; This function uses a non-reentrant model
  6485 ;;
  6486                           
  6487                           	psect	text25
  6488  00482C                     __ptext25:
  6489                           	callstack 0
  6490  00482C                     _isdigit:
  6491                           	callstack 23
  6492  00482C  0ED0               	movlw	208
  6493  00482E  6E07               	movwf	??_isdigit^0,c
  6494  004830  0EFF               	movlw	255
  6495  004832  6E08               	movwf	(??_isdigit+1)^0,c
  6496  004834  C005  F009         	movff	isdigit@c,??_isdigit+2
  6497  004838  C006  F00A         	movff	isdigit@c+1,??_isdigit+3
  6498  00483C  5007               	movf	??_isdigit^0,w,c
  6499  00483E  2609               	addwf	(??_isdigit+2)^0,f,c
  6500  004840  5008               	movf	(??_isdigit+1)^0,w,c
  6501  004842  220A               	addwfc	(??_isdigit+3)^0,f,c
  6502  004844  500A               	movf	(??_isdigit+3)^0,w,c
  6503  004846  E10A               	bnz	u7510
  6504  004848  0E0A               	movlw	10
  6505  00484A  5C09               	subwf	(??_isdigit+2)^0,w,c
  6506  00484C  A0D8               	btfss	status,0,c
  6507  00484E  EF2B  F024         	goto	u7511
  6508  004852  EF2E  F024         	goto	u7510
  6509  004856                     u7511:
  6510  004856  0E01               	movlw	1
  6511  004858  EF2F  F024         	goto	u7520
  6512  00485C                     u7510:
  6513  00485C  0E00               	movlw	0
  6514  00485E                     u7520:
  6515  00485E  6E05               	movwf	?_isdigit^0,c
  6516  004860  6A06               	clrf	(?_isdigit+1)^0,c
  6517  004862  0012               	return		;funcret
  6518  004864                     __end_of_isdigit:
  6519                           	callstack 0
  6520                           
  6521 ;; *************** function ___wmul *****************
  6522 ;; Defined at:
  6523 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul16.c"
  6524 ;; Parameters:    Size  Location     Type
  6525 ;;  multiplier      2    4[COMRAM] unsigned int 
  6526 ;;  multiplicand    2    6[COMRAM] unsigned int 
  6527 ;; Auto vars:     Size  Location     Type
  6528 ;;  product         2    8[COMRAM] unsigned int 
  6529 ;; Return value:  Size  Location     Type
  6530 ;;                  2    4[COMRAM] unsigned int 
  6531 ;; Registers used:
  6532 ;;		wreg, status,2, status,0, prodl, prodh
  6533 ;; Tracked objects:
  6534 ;;		On entry : 0/0
  6535 ;;		On exit  : 0/0
  6536 ;;		Unchanged: 0/0
  6537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6538 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6539 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6541 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6542 ;;Total ram usage:        6 bytes
  6543 ;; Hardware stack levels used:    1
  6544 ;; Hardware stack levels required when called:    4
  6545 ;; This function calls:
  6546 ;;		Nothing
  6547 ;; This function is called by:
  6548 ;;		_atoi
  6549 ;; This function uses a non-reentrant model
  6550 ;;
  6551                           
  6552                           	psect	text26
  6553  004A26                     __ptext26:
  6554                           	callstack 0
  6555  004A26                     ___wmul:
  6556                           	callstack 22
  6557  004A26  5005               	movf	___wmul@multiplier^0,w,c
  6558  004A28  0207               	mulwf	___wmul@multiplicand^0,c
  6559  004A2A  CFF3 F009          	movff	prodl,___wmul@product
  6560  004A2E  CFF4 F00A          	movff	prodh,___wmul@product+1
  6561  004A32  5005               	movf	___wmul@multiplier^0,w,c
  6562  004A34  0208               	mulwf	(___wmul@multiplicand+1)^0,c
  6563  004A36  50F3               	movf	243,w,c
  6564  004A38  260A               	addwf	(___wmul@product+1)^0,f,c
  6565  004A3A  5006               	movf	(___wmul@multiplier+1)^0,w,c
  6566  004A3C  0207               	mulwf	___wmul@multiplicand^0,c
  6567  004A3E  50F3               	movf	243,w,c
  6568  004A40  260A               	addwf	(___wmul@product+1)^0,f,c
  6569  004A42  C009  F005         	movff	___wmul@product,?___wmul
  6570  004A46  C00A  F006         	movff	___wmul@product+1,?___wmul+1
  6571  004A4A  0012               	return		;funcret
  6572  004A4C                     __end_of___wmul:
  6573                           	callstack 0
  6574                           
  6575 ;; *************** function _SYSTEM_Initialize *****************
  6576 ;; Defined at:
  6577 ;;		line 50 in file "mcc_generated_files/mcc.c"
  6578 ;; Parameters:    Size  Location     Type
  6579 ;;		None
  6580 ;; Auto vars:     Size  Location     Type
  6581 ;;		None
  6582 ;; Return value:  Size  Location     Type
  6583 ;;                  1    wreg      void 
  6584 ;; Registers used:
  6585 ;;		wreg, status,2, status,0, cstack
  6586 ;; Tracked objects:
  6587 ;;		On entry : 0/0
  6588 ;;		On exit  : 0/0
  6589 ;;		Unchanged: 0/0
  6590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6594 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6595 ;;Total ram usage:        0 bytes
  6596 ;; Hardware stack levels used:    1
  6597 ;; Hardware stack levels required when called:    6
  6598 ;; This function calls:
  6599 ;;		_EUSART_Initialize
  6600 ;;		_I2C_Initialize
  6601 ;;		_INTERRUPT_Initialize
  6602 ;;		_OSCILLATOR_Initialize
  6603 ;;		_PIN_MANAGER_Initialize
  6604 ;; This function is called by:
  6605 ;;		_main
  6606 ;; This function uses a non-reentrant model
  6607 ;;
  6608                           
  6609                           	psect	text27
  6610  004AE0                     __ptext27:
  6611                           	callstack 0
  6612  004AE0                     _SYSTEM_Initialize:
  6613                           	callstack 24
  6614  004AE0                     
  6615                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  6616  004AE0  EC10  F026         	call	_INTERRUPT_Initialize	;wreg free
  6617  004AE4                     
  6618                           ;mcc_generated_files/mcc.c: 54:     I2C_Initialize();
  6619  004AE4  EC7B  F025         	call	_I2C_Initialize	;wreg free
  6620  004AE8                     
  6621                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
  6622  004AE8  EC4D  F024         	call	_PIN_MANAGER_Initialize	;wreg free
  6623  004AEC                     
  6624                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
  6625  004AEC  ECBE  F025         	call	_OSCILLATOR_Initialize	;wreg free
  6626  004AF0                     
  6627                           ;mcc_generated_files/mcc.c: 57:     EUSART_Initialize();
  6628  004AF0  EC38  F021         	call	_EUSART_Initialize	;wreg free
  6629  004AF4  0012               	return		;funcret
  6630  004AF6                     __end_of_SYSTEM_Initialize:
  6631                           	callstack 0
  6632                           
  6633 ;; *************** function _PIN_MANAGER_Initialize *****************
  6634 ;; Defined at:
  6635 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  6636 ;; Parameters:    Size  Location     Type
  6637 ;;		None
  6638 ;; Auto vars:     Size  Location     Type
  6639 ;;		None
  6640 ;; Return value:  Size  Location     Type
  6641 ;;                  1    wreg      void 
  6642 ;; Registers used:
  6643 ;;		wreg, status,2
  6644 ;; Tracked objects:
  6645 ;;		On entry : 0/0
  6646 ;;		On exit  : 0/0
  6647 ;;		Unchanged: 0/0
  6648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6652 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6653 ;;Total ram usage:        0 bytes
  6654 ;; Hardware stack levels used:    1
  6655 ;; Hardware stack levels required when called:    4
  6656 ;; This function calls:
  6657 ;;		Nothing
  6658 ;; This function is called by:
  6659 ;;		_SYSTEM_Initialize
  6660 ;; This function uses a non-reentrant model
  6661 ;;
  6662                           
  6663                           	psect	text28
  6664  00489A                     __ptext28:
  6665                           	callstack 0
  6666  00489A                     _PIN_MANAGER_Initialize:
  6667                           	callstack 25
  6668  00489A                     
  6669                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  6670  00489A  0E00               	movlw	0
  6671  00489C  6E8D               	movwf	141,c	;volatile
  6672                           
  6673                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  6674  00489E  0E00               	movlw	0
  6675  0048A0  6E8C               	movwf	140,c	;volatile
  6676                           
  6677                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  6678  0048A2  0E00               	movlw	0
  6679  0048A4  6E89               	movwf	137,c	;volatile
  6680                           
  6681                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  6682  0048A6  0E00               	movlw	0
  6683  0048A8  6E8A               	movwf	138,c	;volatile
  6684                           
  6685                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  6686  0048AA  0E00               	movlw	0
  6687  0048AC  6E8B               	movwf	139,c	;volatile
  6688                           
  6689                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  6690  0048AE  0E07               	movlw	7
  6691  0048B0  6E96               	movwf	150,c	;volatile
  6692  0048B2                     
  6693                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFF;
  6694  0048B2  6892               	setf	146,c	;volatile
  6695  0048B4                     
  6696                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
  6697  0048B4  6893               	setf	147,c	;volatile
  6698                           
  6699                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xBF;
  6700  0048B6  0EBF               	movlw	191
  6701  0048B8  6E94               	movwf	148,c	;volatile
  6702  0048BA                     
  6703                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
  6704  0048BA  6895               	setf	149,c	;volatile
  6705  0048BC                     
  6706                           ;mcc_generated_files/pin_manager.c: 78:     ANSEL = 0xFF;
  6707  0048BC  687E               	setf	126,c	;volatile
  6708                           
  6709                           ;mcc_generated_files/pin_manager.c: 79:     ANSELH = 0x1F;
  6710  0048BE  0E1F               	movlw	31
  6711  0048C0  6E7F               	movwf	127,c	;volatile
  6712                           
  6713                           ;mcc_generated_files/pin_manager.c: 84:     WPUB = 0x00;
  6714  0048C2  0E00               	movlw	0
  6715  0048C4  6E7C               	movwf	124,c	;volatile
  6716  0048C6                     
  6717                           ;mcc_generated_files/pin_manager.c: 85:     INTCON2bits.nRBPU = 1;
  6718  0048C6  8EF1               	bsf	241,7,c	;volatile
  6719  0048C8  0012               	return		;funcret
  6720  0048CA                     __end_of_PIN_MANAGER_Initialize:
  6721                           	callstack 0
  6722                           
  6723 ;; *************** function _OSCILLATOR_Initialize *****************
  6724 ;; Defined at:
  6725 ;;		line 60 in file "mcc_generated_files/mcc.c"
  6726 ;; Parameters:    Size  Location     Type
  6727 ;;		None
  6728 ;; Auto vars:     Size  Location     Type
  6729 ;;		None
  6730 ;; Return value:  Size  Location     Type
  6731 ;;                  1    wreg      void 
  6732 ;; Registers used:
  6733 ;;		wreg, status,2
  6734 ;; Tracked objects:
  6735 ;;		On entry : 0/0
  6736 ;;		On exit  : 0/0
  6737 ;;		Unchanged: 0/0
  6738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6742 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6743 ;;Total ram usage:        0 bytes
  6744 ;; Hardware stack levels used:    1
  6745 ;; Hardware stack levels required when called:    4
  6746 ;; This function calls:
  6747 ;;		Nothing
  6748 ;; This function is called by:
  6749 ;;		_SYSTEM_Initialize
  6750 ;; This function uses a non-reentrant model
  6751 ;;
  6752                           
  6753                           	psect	text29
  6754  004B7C                     __ptext29:
  6755                           	callstack 0
  6756  004B7C                     _OSCILLATOR_Initialize:
  6757                           	callstack 25
  6758  004B7C                     
  6759                           ;mcc_generated_files/mcc.c: 63:     OSCCON = 0x60;
  6760  004B7C  0E60               	movlw	96
  6761  004B7E  6ED3               	movwf	211,c	;volatile
  6762                           
  6763                           ;mcc_generated_files/mcc.c: 65:     OSCTUNE = 0x00;
  6764  004B80  0E00               	movlw	0
  6765  004B82  6E9B               	movwf	155,c	;volatile
  6766  004B84  0012               	return		;funcret
  6767  004B86                     __end_of_OSCILLATOR_Initialize:
  6768                           	callstack 0
  6769                           
  6770 ;; *************** function _INTERRUPT_Initialize *****************
  6771 ;; Defined at:
  6772 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  6773 ;; Parameters:    Size  Location     Type
  6774 ;;		None
  6775 ;; Auto vars:     Size  Location     Type
  6776 ;;		None
  6777 ;; Return value:  Size  Location     Type
  6778 ;;                  1    wreg      void 
  6779 ;; Registers used:
  6780 ;;		None
  6781 ;; Tracked objects:
  6782 ;;		On entry : 0/0
  6783 ;;		On exit  : 0/0
  6784 ;;		Unchanged: 0/0
  6785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6790 ;;Total ram usage:        0 bytes
  6791 ;; Hardware stack levels used:    1
  6792 ;; Hardware stack levels required when called:    4
  6793 ;; This function calls:
  6794 ;;		Nothing
  6795 ;; This function is called by:
  6796 ;;		_SYSTEM_Initialize
  6797 ;; This function uses a non-reentrant model
  6798 ;;
  6799                           
  6800                           	psect	text30
  6801  004C20                     __ptext30:
  6802                           	callstack 0
  6803  004C20                     _INTERRUPT_Initialize:
  6804                           	callstack 25
  6805  004C20                     
  6806                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  6807  004C20  9ED0               	bcf	208,7,c	;volatile
  6808  004C22  0012               	return		;funcret
  6809  004C24                     __end_of_INTERRUPT_Initialize:
  6810                           	callstack 0
  6811                           
  6812 ;; *************** function _I2C_Initialize *****************
  6813 ;; Defined at:
  6814 ;;		line 167 in file "mcc_generated_files/i2c_master.c"
  6815 ;; Parameters:    Size  Location     Type
  6816 ;;		None
  6817 ;; Auto vars:     Size  Location     Type
  6818 ;;		None
  6819 ;; Return value:  Size  Location     Type
  6820 ;;                  1    wreg      void 
  6821 ;; Registers used:
  6822 ;;		wreg, status,2
  6823 ;; Tracked objects:
  6824 ;;		On entry : 0/0
  6825 ;;		On exit  : 0/0
  6826 ;;		Unchanged: 0/0
  6827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6831 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6832 ;;Total ram usage:        0 bytes
  6833 ;; Hardware stack levels used:    1
  6834 ;; Hardware stack levels required when called:    4
  6835 ;; This function calls:
  6836 ;;		Nothing
  6837 ;; This function is called by:
  6838 ;;		_SYSTEM_Initialize
  6839 ;; This function uses a non-reentrant model
  6840 ;;
  6841                           
  6842                           	psect	text31
  6843  004AF6                     __ptext31:
  6844                           	callstack 0
  6845  004AF6                     _I2C_Initialize:
  6846                           	callstack 25
  6847  004AF6                     
  6848                           ;mcc_generated_files/i2c_master.c: 169:     SSPSTAT = 0x00;
  6849  004AF6  0E00               	movlw	0
  6850  004AF8  6EC7               	movwf	199,c	;volatile
  6851                           
  6852                           ;mcc_generated_files/i2c_master.c: 170:     SSPCON1 = 0x08;
  6853  004AFA  0E08               	movlw	8
  6854  004AFC  6EC6               	movwf	198,c	;volatile
  6855                           
  6856                           ;mcc_generated_files/i2c_master.c: 171:     SSPCON2 = 0x00;
  6857  004AFE  0E00               	movlw	0
  6858  004B00  6EC5               	movwf	197,c	;volatile
  6859                           
  6860                           ;mcc_generated_files/i2c_master.c: 172:     SSPADD = 0x13;
  6861  004B02  0E13               	movlw	19
  6862  004B04  6EC8               	movwf	200,c	;volatile
  6863  004B06                     
  6864                           ;mcc_generated_files/i2c_master.c: 173:     SSPCON1bits.SSPEN = 0;
  6865  004B06  9AC6               	bcf	198,5,c	;volatile
  6866  004B08  0012               	return		;funcret
  6867  004B0A                     __end_of_I2C_Initialize:
  6868                           	callstack 0
  6869                           
  6870 ;; *************** function _EUSART_Initialize *****************
  6871 ;; Defined at:
  6872 ;;		line 88 in file "mcc_generated_files/eusart.c"
  6873 ;; Parameters:    Size  Location     Type
  6874 ;;		None
  6875 ;; Auto vars:     Size  Location     Type
  6876 ;;		None
  6877 ;; Return value:  Size  Location     Type
  6878 ;;                  1    wreg      void 
  6879 ;; Registers used:
  6880 ;;		wreg, status,2, status,0, cstack
  6881 ;; Tracked objects:
  6882 ;;		On entry : 0/0
  6883 ;;		On exit  : 0/0
  6884 ;;		Unchanged: 0/0
  6885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6889 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6890 ;;Total ram usage:        0 bytes
  6891 ;; Hardware stack levels used:    1
  6892 ;; Hardware stack levels required when called:    5
  6893 ;; This function calls:
  6894 ;;		_EUSART_SetErrorHandler
  6895 ;;		_EUSART_SetFramingErrorHandler
  6896 ;;		_EUSART_SetOverrunErrorHandler
  6897 ;;		_EUSART_SetRxInterruptHandler
  6898 ;;		_EUSART_SetTxInterruptHandler
  6899 ;; This function is called by:
  6900 ;;		_SYSTEM_Initialize
  6901 ;; This function uses a non-reentrant model
  6902 ;;
  6903                           
  6904                           	psect	text32
  6905  004270                     __ptext32:
  6906                           	callstack 0
  6907  004270                     _EUSART_Initialize:
  6908                           	callstack 24
  6909  004270                     
  6910                           ;mcc_generated_files/eusart.c: 91:     PIE1bits.RC1IE = 0;
  6911  004270  9A9D               	bcf	157,5,c	;volatile
  6912  004272                     
  6913                           ;mcc_generated_files/eusart.c: 92:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  6914  004272  0EEA               	movlw	low _EUSART_Receive_ISR
  6915  004274  6E05               	movwf	EUSART_SetRxInterruptHandler@interruptHandler^0,c
  6916  004276  0E3C               	movlw	high _EUSART_Receive_ISR
  6917  004278  6E06               	movwf	(EUSART_SetRxInterruptHandler@interruptHandler+1)^0,c
  6918  00427A  ECC8  F025         	call	_EUSART_SetRxInterruptHandler	;wreg free
  6919  00427E                     
  6920                           ;mcc_generated_files/eusart.c: 93:     PIE1bits.TX1IE = 0;
  6921  00427E  989D               	bcf	157,4,c	;volatile
  6922                           
  6923                           ;mcc_generated_files/eusart.c: 94:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR)
      +                          ;
  6924  004280  0E3A               	movlw	low _EUSART_Transmit_ISR
  6925  004282  6E05               	movwf	EUSART_SetTxInterruptHandler@interruptHandler^0,c
  6926  004284  0E47               	movlw	high _EUSART_Transmit_ISR
  6927  004286  6E06               	movwf	(EUSART_SetTxInterruptHandler@interruptHandler+1)^0,c
  6928  004288  ECC3  F025         	call	_EUSART_SetTxInterruptHandler	;wreg free
  6929  00428C                     
  6930                           ;mcc_generated_files/eusart.c: 98:     BAUDCON = 0x08;
  6931  00428C  0E08               	movlw	8
  6932  00428E  6EB8               	movwf	184,c	;volatile
  6933  004290                     
  6934                           ;mcc_generated_files/eusart.c: 101:     RCSTA = 0x90;
  6935  004290  0E90               	movlw	144
  6936  004292  6EAB               	movwf	171,c	;volatile
  6937  004294                     
  6938                           ;mcc_generated_files/eusart.c: 104:     TXSTA = 0x24;
  6939  004294  0E24               	movlw	36
  6940  004296  6EAC               	movwf	172,c	;volatile
  6941  004298                     
  6942                           ;mcc_generated_files/eusart.c: 107:     SPBRG = 0xCF;
  6943  004298  0ECF               	movlw	207
  6944  00429A  6EAF               	movwf	175,c	;volatile
  6945  00429C                     
  6946                           ;mcc_generated_files/eusart.c: 110:     SPBRGH = 0x00;
  6947  00429C  0E00               	movlw	0
  6948  00429E  6EB0               	movwf	176,c	;volatile
  6949  0042A0                     
  6950                           ;mcc_generated_files/eusart.c: 113:     EUSART_SetFramingErrorHandler(EUSART_DefaultFram
      +                          ingErrorHandler);
  6951  0042A0  0E50               	movlw	low _EUSART_DefaultFramingErrorHandler
  6952  0042A2  6E05               	movwf	EUSART_SetFramingErrorHandler@interruptHandler^0,c
  6953  0042A4  0E4C               	movlw	high _EUSART_DefaultFramingErrorHandler
  6954  0042A6  6E06               	movwf	(EUSART_SetFramingErrorHandler@interruptHandler+1)^0,c
  6955  0042A8  ECD2  F025         	call	_EUSART_SetFramingErrorHandler	;wreg free
  6956  0042AC                     
  6957                           ;mcc_generated_files/eusart.c: 114:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOver
      +                          runErrorHandler);
  6958  0042AC  0E14               	movlw	low _EUSART_DefaultOverrunErrorHandler
  6959  0042AE  6E05               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler^0,c
  6960  0042B0  0E4C               	movlw	high _EUSART_DefaultOverrunErrorHandler
  6961  0042B2  6E06               	movwf	(EUSART_SetOverrunErrorHandler@interruptHandler+1)^0,c
  6962  0042B4  ECCD  F025         	call	_EUSART_SetOverrunErrorHandler	;wreg free
  6963  0042B8                     
  6964                           ;mcc_generated_files/eusart.c: 115:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandle
      +                          r);
  6965  0042B8  0E1A               	movlw	low _EUSART_DefaultErrorHandler
  6966  0042BA  6E05               	movwf	EUSART_SetErrorHandler@interruptHandler^0,c
  6967  0042BC  0E4C               	movlw	high _EUSART_DefaultErrorHandler
  6968  0042BE  6E06               	movwf	(EUSART_SetErrorHandler@interruptHandler+1)^0,c
  6969  0042C0  ECD7  F025         	call	_EUSART_SetErrorHandler	;wreg free
  6970                           
  6971                           ;mcc_generated_files/eusart.c: 117:     eusartRxLastError.status = 0;
  6972  0042C4  0E00               	movlw	0
  6973  0042C6  0100               	movlb	0	; () banked
  6974  0042C8  6FF8               	movwf	_eusartRxLastError& (0+255),b	;volatile
  6975                           
  6976                           ;mcc_generated_files/eusart.c: 120:     eusartTxHead = 0;
  6977  0042CA  0E00               	movlw	0
  6978  0042CC  6E59               	movwf	_eusartTxHead^0,c	;volatile
  6979                           
  6980                           ;mcc_generated_files/eusart.c: 121:     eusartTxTail = 0;
  6981  0042CE  0E00               	movlw	0
  6982  0042D0  6E58               	movwf	_eusartTxTail^0,c	;volatile
  6983                           
  6984                           ;mcc_generated_files/eusart.c: 122:     eusartTxBufferRemaining = sizeof(eusartTxBuffer)
      +                          ;
  6985  0042D2  0E08               	movlw	8
  6986  0042D4  6FFE               	movwf	_eusartTxBufferRemaining& (0+255),b	;volatile
  6987                           
  6988                           ;mcc_generated_files/eusart.c: 124:     eusartRxHead = 0;
  6989  0042D6  0E00               	movlw	0
  6990  0042D8  6E57               	movwf	_eusartRxHead^0,c	;volatile
  6991                           
  6992                           ;mcc_generated_files/eusart.c: 125:     eusartRxTail = 0;
  6993  0042DA  0E00               	movlw	0
  6994  0042DC  6E56               	movwf	_eusartRxTail^0,c	;volatile
  6995                           
  6996                           ;mcc_generated_files/eusart.c: 126:     eusartRxCount = 0;
  6997  0042DE  0E00               	movlw	0
  6998  0042E0  6FF9               	movwf	_eusartRxCount& (0+255),b	;volatile
  6999  0042E2                     
  7000                           ; BSR set to: 0
  7001                           ;mcc_generated_files/eusart.c: 129:     PIE1bits.RC1IE = 1;
  7002  0042E2  8A9D               	bsf	157,5,c	;volatile
  7003  0042E4                     
  7004                           ; BSR set to: 0
  7005  0042E4  0012               	return		;funcret
  7006  0042E6                     __end_of_EUSART_Initialize:
  7007                           	callstack 0
  7008                           
  7009 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  7010 ;; Defined at:
  7011 ;;		line 285 in file "mcc_generated_files/eusart.c"
  7012 ;; Parameters:    Size  Location     Type
  7013 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  7014 ;;		 -> EUSART_Transmit_ISR(1), 
  7015 ;; Auto vars:     Size  Location     Type
  7016 ;;		None
  7017 ;; Return value:  Size  Location     Type
  7018 ;;                  1    wreg      void 
  7019 ;; Registers used:
  7020 ;;		wreg, status,2, status,0
  7021 ;; Tracked objects:
  7022 ;;		On entry : 0/0
  7023 ;;		On exit  : 0/0
  7024 ;;		Unchanged: 0/0
  7025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7026 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7029 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7030 ;;Total ram usage:        2 bytes
  7031 ;; Hardware stack levels used:    1
  7032 ;; Hardware stack levels required when called:    4
  7033 ;; This function calls:
  7034 ;;		Nothing
  7035 ;; This function is called by:
  7036 ;;		_EUSART_Initialize
  7037 ;; This function uses a non-reentrant model
  7038 ;;
  7039                           
  7040                           	psect	text33
  7041  004B86                     __ptext33:
  7042                           	callstack 0
  7043  004B86                     _EUSART_SetTxInterruptHandler:
  7044                           	callstack 24
  7045  004B86                     
  7046                           ;mcc_generated_files/eusart.c: 286:     EUSART_TxDefaultInterruptHandler = interruptHand
      +                          ler;
  7047  004B86  C005  F0FC         	movff	EUSART_SetTxInterruptHandler@interruptHandler,_EUSART_TxDefaultInterruptHandler
  7048  004B8A  C006  F0FD         	movff	EUSART_SetTxInterruptHandler@interruptHandler+1,_EUSART_TxDefaultInterruptHandler
      +                          +1
  7049  004B8E  0012               	return		;funcret
  7050  004B90                     __end_of_EUSART_SetTxInterruptHandler:
  7051                           	callstack 0
  7052                           
  7053 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  7054 ;; Defined at:
  7055 ;;		line 289 in file "mcc_generated_files/eusart.c"
  7056 ;; Parameters:    Size  Location     Type
  7057 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  7058 ;;		 -> EUSART_Receive_ISR(1), 
  7059 ;; Auto vars:     Size  Location     Type
  7060 ;;		None
  7061 ;; Return value:  Size  Location     Type
  7062 ;;                  1    wreg      void 
  7063 ;; Registers used:
  7064 ;;		wreg, status,2, status,0
  7065 ;; Tracked objects:
  7066 ;;		On entry : 0/0
  7067 ;;		On exit  : 0/0
  7068 ;;		Unchanged: 0/0
  7069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7070 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7073 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7074 ;;Total ram usage:        2 bytes
  7075 ;; Hardware stack levels used:    1
  7076 ;; Hardware stack levels required when called:    4
  7077 ;; This function calls:
  7078 ;;		Nothing
  7079 ;; This function is called by:
  7080 ;;		_EUSART_Initialize
  7081 ;; This function uses a non-reentrant model
  7082 ;;
  7083                           
  7084                           	psect	text34
  7085  004B90                     __ptext34:
  7086                           	callstack 0
  7087  004B90                     _EUSART_SetRxInterruptHandler:
  7088                           	callstack 24
  7089  004B90                     
  7090                           ;mcc_generated_files/eusart.c: 290:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
  7091  004B90  C005  F0FA         	movff	EUSART_SetRxInterruptHandler@interruptHandler,_EUSART_RxDefaultInterruptHandler
  7092  004B94  C006  F0FB         	movff	EUSART_SetRxInterruptHandler@interruptHandler+1,_EUSART_RxDefaultInterruptHandler
      +                          +1
  7093  004B98  0012               	return		;funcret
  7094  004B9A                     __end_of_EUSART_SetRxInterruptHandler:
  7095                           	callstack 0
  7096                           
  7097 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  7098 ;; Defined at:
  7099 ;;		line 277 in file "mcc_generated_files/eusart.c"
  7100 ;; Parameters:    Size  Location     Type
  7101 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  7102 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  7103 ;; Auto vars:     Size  Location     Type
  7104 ;;		None
  7105 ;; Return value:  Size  Location     Type
  7106 ;;                  1    wreg      void 
  7107 ;; Registers used:
  7108 ;;		wreg, status,2, status,0
  7109 ;; Tracked objects:
  7110 ;;		On entry : 0/0
  7111 ;;		On exit  : 0/0
  7112 ;;		Unchanged: 0/0
  7113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7114 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7117 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7118 ;;Total ram usage:        2 bytes
  7119 ;; Hardware stack levels used:    1
  7120 ;; Hardware stack levels required when called:    4
  7121 ;; This function calls:
  7122 ;;		Nothing
  7123 ;; This function is called by:
  7124 ;;		_EUSART_Initialize
  7125 ;; This function uses a non-reentrant model
  7126 ;;
  7127                           
  7128                           	psect	text35
  7129  004B9A                     __ptext35:
  7130                           	callstack 0
  7131  004B9A                     _EUSART_SetOverrunErrorHandler:
  7132                           	callstack 24
  7133  004B9A                     
  7134                           ;mcc_generated_files/eusart.c: 278:     EUSART_OverrunErrorHandler = interruptHandler;
  7135  004B9A  C005  F180         	movff	EUSART_SetOverrunErrorHandler@interruptHandler,_EUSART_OverrunErrorHandler
  7136  004B9E  C006  F181         	movff	EUSART_SetOverrunErrorHandler@interruptHandler+1,_EUSART_OverrunErrorHandler+1
  7137  004BA2  0012               	return		;funcret
  7138  004BA4                     __end_of_EUSART_SetOverrunErrorHandler:
  7139                           	callstack 0
  7140                           
  7141 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  7142 ;; Defined at:
  7143 ;;		line 273 in file "mcc_generated_files/eusart.c"
  7144 ;; Parameters:    Size  Location     Type
  7145 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  7146 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  7147 ;; Auto vars:     Size  Location     Type
  7148 ;;		None
  7149 ;; Return value:  Size  Location     Type
  7150 ;;                  1    wreg      void 
  7151 ;; Registers used:
  7152 ;;		wreg, status,2, status,0
  7153 ;; Tracked objects:
  7154 ;;		On entry : 0/0
  7155 ;;		On exit  : 0/0
  7156 ;;		Unchanged: 0/0
  7157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7158 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7161 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7162 ;;Total ram usage:        2 bytes
  7163 ;; Hardware stack levels used:    1
  7164 ;; Hardware stack levels required when called:    4
  7165 ;; This function calls:
  7166 ;;		Nothing
  7167 ;; This function is called by:
  7168 ;;		_EUSART_Initialize
  7169 ;; This function uses a non-reentrant model
  7170 ;;
  7171                           
  7172                           	psect	text36
  7173  004BA4                     __ptext36:
  7174                           	callstack 0
  7175  004BA4                     _EUSART_SetFramingErrorHandler:
  7176                           	callstack 24
  7177  004BA4                     
  7178                           ;mcc_generated_files/eusart.c: 274:     EUSART_FramingErrorHandler = interruptHandler;
  7179  004BA4  C005  F182         	movff	EUSART_SetFramingErrorHandler@interruptHandler,_EUSART_FramingErrorHandler
  7180  004BA8  C006  F183         	movff	EUSART_SetFramingErrorHandler@interruptHandler+1,_EUSART_FramingErrorHandler+1
  7181  004BAC  0012               	return		;funcret
  7182  004BAE                     __end_of_EUSART_SetFramingErrorHandler:
  7183                           	callstack 0
  7184                           
  7185 ;; *************** function _EUSART_SetErrorHandler *****************
  7186 ;; Defined at:
  7187 ;;		line 281 in file "mcc_generated_files/eusart.c"
  7188 ;; Parameters:    Size  Location     Type
  7189 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
  7190 ;;		 -> EUSART_DefaultErrorHandler(1), 
  7191 ;; Auto vars:     Size  Location     Type
  7192 ;;		None
  7193 ;; Return value:  Size  Location     Type
  7194 ;;                  1    wreg      void 
  7195 ;; Registers used:
  7196 ;;		wreg, status,2, status,0
  7197 ;; Tracked objects:
  7198 ;;		On entry : 0/0
  7199 ;;		On exit  : 0/0
  7200 ;;		Unchanged: 0/0
  7201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7202 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7205 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7206 ;;Total ram usage:        2 bytes
  7207 ;; Hardware stack levels used:    1
  7208 ;; Hardware stack levels required when called:    4
  7209 ;; This function calls:
  7210 ;;		Nothing
  7211 ;; This function is called by:
  7212 ;;		_EUSART_Initialize
  7213 ;; This function uses a non-reentrant model
  7214 ;;
  7215                           
  7216                           	psect	text37
  7217  004BAE                     __ptext37:
  7218                           	callstack 0
  7219  004BAE                     _EUSART_SetErrorHandler:
  7220                           	callstack 24
  7221  004BAE                     
  7222                           ;mcc_generated_files/eusart.c: 282:     EUSART_ErrorHandler = interruptHandler;
  7223  004BAE  C005  F17E         	movff	EUSART_SetErrorHandler@interruptHandler,_EUSART_ErrorHandler
  7224  004BB2  C006  F17F         	movff	EUSART_SetErrorHandler@interruptHandler+1,_EUSART_ErrorHandler+1
  7225  004BB6  0012               	return		;funcret
  7226  004BB8                     __end_of_EUSART_SetErrorHandler:
  7227                           	callstack 0
  7228                           
  7229 ;; *************** function _SHT40_temp_GetValue *****************
  7230 ;; Defined at:
  7231 ;;		line 32 in file "sht40.c"
  7232 ;; Parameters:    Size  Location     Type
  7233 ;;		None
  7234 ;; Auto vars:     Size  Location     Type
  7235 ;;  tempDataAnz     4   76[COMRAM] float 
  7236 ;; Return value:  Size  Location     Type
  7237 ;;                  4   70[COMRAM] float 
  7238 ;; Registers used:
  7239 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7240 ;; Tracked objects:
  7241 ;;		On entry : 0/0
  7242 ;;		On exit  : 0/0
  7243 ;;		Unchanged: 0/0
  7244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7245 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7246 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7247 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7248 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7249 ;;Total ram usage:       10 bytes
  7250 ;; Hardware stack levels used:    1
  7251 ;; Hardware stack levels required when called:   14
  7252 ;; This function calls:
  7253 ;;		_SHT40_Read
  7254 ;;		___fladd
  7255 ;;		___fldiv
  7256 ;;		___flmul
  7257 ;;		___xxtofl
  7258 ;; This function is called by:
  7259 ;;		_main
  7260 ;; This function uses a non-reentrant model
  7261 ;;
  7262                           
  7263                           	psect	text38
  7264  0039CC                     __ptext38:
  7265                           	callstack 0
  7266  0039CC                     _SHT40_temp_GetValue:
  7267                           	callstack 16
  7268  0039CC                     
  7269                           ;sht40.c: 33:     float tempDataAnz;;sht40.c: 35:     SHT40_Read();
  7270  0039CC  EC59  F023         	call	_SHT40_Read	;wreg free
  7271  0039D0                     
  7272                           ;sht40.c: 36:     tempDataAnz = readBuffer[0] * 256 + readBuffer[1];
  7273  0039D0  0101               	movlb	1	; () banked
  7274  0039D2  5175               	movf	(_readBuffer+1)& (0+255),w,b
  7275  0039D4  C174  F04B         	movff	_readBuffer,??_SHT40_temp_GetValue
  7276  0039D8  6A4C               	clrf	(??_SHT40_temp_GetValue+1)^0,c
  7277  0039DA  C04B  F04C         	movff	??_SHT40_temp_GetValue,??_SHT40_temp_GetValue+1
  7278  0039DE  6A4B               	clrf	??_SHT40_temp_GetValue^0,c
  7279  0039E0  264B               	addwf	??_SHT40_temp_GetValue^0,f,c
  7280  0039E2  0E00               	movlw	0
  7281  0039E4  224C               	addwfc	(??_SHT40_temp_GetValue+1)^0,f,c
  7282  0039E6  C04B  F005         	movff	??_SHT40_temp_GetValue,___xxtofl@val
  7283  0039EA  C04C  F006         	movff	??_SHT40_temp_GetValue+1,___xxtofl@val+1
  7284  0039EE  0E00               	movlw	0
  7285  0039F0  BE06               	btfsc	(___xxtofl@val+1)^0,7,c
  7286  0039F2  0EFF               	movlw	-1
  7287  0039F4  6E07               	movwf	(___xxtofl@val+2)^0,c
  7288  0039F6  6E08               	movwf	(___xxtofl@val+3)^0,c
  7289  0039F8  0E01               	movlw	1
  7290  0039FA  ECB5  F018         	call	___xxtofl
  7291  0039FE  C005  F04D         	movff	?___xxtofl,SHT40_temp_GetValue@tempDataAnz
  7292  003A02  C006  F04E         	movff	?___xxtofl+1,SHT40_temp_GetValue@tempDataAnz+1
  7293  003A06  C007  F04F         	movff	?___xxtofl+2,SHT40_temp_GetValue@tempDataAnz+2
  7294  003A0A  C008  F050         	movff	?___xxtofl+3,SHT40_temp_GetValue@tempDataAnz+3
  7295  003A0E                     
  7296                           ;sht40.c: 37:     tempDataAnz = -45 + 175 * tempDataAnz/65535;
  7297  003A0E  0E00               	movlw	0
  7298  003A10  6E22               	movwf	___fldiv@a^0,c
  7299  003A12  0EFF               	movlw	255
  7300  003A14  6E23               	movwf	(___fldiv@a+1)^0,c
  7301  003A16  0E7F               	movlw	127
  7302  003A18  6E24               	movwf	(___fldiv@a+2)^0,c
  7303  003A1A  0E47               	movlw	71
  7304  003A1C  6E25               	movwf	(___fldiv@a+3)^0,c
  7305  003A1E  0E00               	movlw	0
  7306  003A20  6E09               	movwf	___flmul@a^0,c
  7307  003A22  0E00               	movlw	0
  7308  003A24  6E0A               	movwf	(___flmul@a+1)^0,c
  7309  003A26  0E2F               	movlw	47
  7310  003A28  6E0B               	movwf	(___flmul@a+2)^0,c
  7311  003A2A  0E43               	movlw	67
  7312  003A2C  6E0C               	movwf	(___flmul@a+3)^0,c
  7313  003A2E  C04D  F005         	movff	SHT40_temp_GetValue@tempDataAnz,___flmul@b
  7314  003A32  C04E  F006         	movff	SHT40_temp_GetValue@tempDataAnz+1,___flmul@b+1
  7315  003A36  C04F  F007         	movff	SHT40_temp_GetValue@tempDataAnz+2,___flmul@b+2
  7316  003A3A  C050  F008         	movff	SHT40_temp_GetValue@tempDataAnz+3,___flmul@b+3
  7317  003A3E  ECCA  F013         	call	___flmul	;wreg free
  7318  003A42  C005  F01E         	movff	?___flmul,___fldiv@b
  7319  003A46  C006  F01F         	movff	?___flmul+1,___fldiv@b+1
  7320  003A4A  C007  F020         	movff	?___flmul+2,___fldiv@b+2
  7321  003A4E  C008  F021         	movff	?___flmul+3,___fldiv@b+3
  7322  003A52  ECDF  F015         	call	___fldiv	;wreg free
  7323  003A56  C01E  F037         	movff	?___fldiv,___fladd@b
  7324  003A5A  C01F  F038         	movff	?___fldiv+1,___fladd@b+1
  7325  003A5E  C020  F039         	movff	?___fldiv+2,___fladd@b+2
  7326  003A62  C021  F03A         	movff	?___fldiv+3,___fladd@b+3
  7327  003A66  0E00               	movlw	0
  7328  003A68  6E3B               	movwf	___fladd@a^0,c
  7329  003A6A  0E00               	movlw	0
  7330  003A6C  6E3C               	movwf	(___fladd@a+1)^0,c
  7331  003A6E  0E34               	movlw	52
  7332  003A70  6E3D               	movwf	(___fladd@a+2)^0,c
  7333  003A72  0EC2               	movlw	194
  7334  003A74  6E3E               	movwf	(___fladd@a+3)^0,c
  7335  003A76  EC6A  F011         	call	___fladd	;wreg free
  7336  003A7A  C037  F04D         	movff	?___fladd,SHT40_temp_GetValue@tempDataAnz
  7337  003A7E  C038  F04E         	movff	?___fladd+1,SHT40_temp_GetValue@tempDataAnz+1
  7338  003A82  C039  F04F         	movff	?___fladd+2,SHT40_temp_GetValue@tempDataAnz+2
  7339  003A86  C03A  F050         	movff	?___fladd+3,SHT40_temp_GetValue@tempDataAnz+3
  7340  003A8A                     
  7341                           ;sht40.c: 39:     return tempDataAnz;
  7342  003A8A  C04D  F047         	movff	SHT40_temp_GetValue@tempDataAnz,?_SHT40_temp_GetValue
  7343  003A8E  C04E  F048         	movff	SHT40_temp_GetValue@tempDataAnz+1,?_SHT40_temp_GetValue+1
  7344  003A92  C04F  F049         	movff	SHT40_temp_GetValue@tempDataAnz+2,?_SHT40_temp_GetValue+2
  7345  003A96  C050  F04A         	movff	SHT40_temp_GetValue@tempDataAnz+3,?_SHT40_temp_GetValue+3
  7346  003A9A  0012               	return		;funcret
  7347  003A9C                     __end_of_SHT40_temp_GetValue:
  7348                           	callstack 0
  7349                           
  7350 ;; *************** function _SHT40_humy_GetValue *****************
  7351 ;; Defined at:
  7352 ;;		line 42 in file "sht40.c"
  7353 ;; Parameters:    Size  Location     Type
  7354 ;;		None
  7355 ;; Auto vars:     Size  Location     Type
  7356 ;;  pressDataAnz    4   76[COMRAM] float 
  7357 ;; Return value:  Size  Location     Type
  7358 ;;                  4   70[COMRAM] float 
  7359 ;; Registers used:
  7360 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7361 ;; Tracked objects:
  7362 ;;		On entry : 0/0
  7363 ;;		On exit  : 0/0
  7364 ;;		Unchanged: 0/0
  7365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7366 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7367 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7368 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7369 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7370 ;;Total ram usage:       10 bytes
  7371 ;; Hardware stack levels used:    1
  7372 ;; Hardware stack levels required when called:   14
  7373 ;; This function calls:
  7374 ;;		_SHT40_Read
  7375 ;;		___fladd
  7376 ;;		___fldiv
  7377 ;;		___flge
  7378 ;;		___flmul
  7379 ;;		___xxtofl
  7380 ;; This function is called by:
  7381 ;;		_main
  7382 ;; This function uses a non-reentrant model
  7383 ;;
  7384                           
  7385                           	psect	text39
  7386  0034B8                     __ptext39:
  7387                           	callstack 0
  7388  0034B8                     _SHT40_humy_GetValue:
  7389                           	callstack 16
  7390  0034B8                     
  7391                           ;sht40.c: 43:     float pressDataAnz;;sht40.c: 45:     SHT40_Read();
  7392  0034B8  EC59  F023         	call	_SHT40_Read	;wreg free
  7393  0034BC                     
  7394                           ;sht40.c: 46:     pressDataAnz = readBuffer[3] * 256 + readBuffer[4];
  7395  0034BC  0101               	movlb	1	; () banked
  7396  0034BE  5178               	movf	(_readBuffer+4)& (0+255),w,b
  7397  0034C0  C177  F04B         	movff	_readBuffer+3,??_SHT40_humy_GetValue
  7398  0034C4  6A4C               	clrf	(??_SHT40_humy_GetValue+1)^0,c
  7399  0034C6  C04B  F04C         	movff	??_SHT40_humy_GetValue,??_SHT40_humy_GetValue+1
  7400  0034CA  6A4B               	clrf	??_SHT40_humy_GetValue^0,c
  7401  0034CC  264B               	addwf	??_SHT40_humy_GetValue^0,f,c
  7402  0034CE  0E00               	movlw	0
  7403  0034D0  224C               	addwfc	(??_SHT40_humy_GetValue+1)^0,f,c
  7404  0034D2  C04B  F005         	movff	??_SHT40_humy_GetValue,___xxtofl@val
  7405  0034D6  C04C  F006         	movff	??_SHT40_humy_GetValue+1,___xxtofl@val+1
  7406  0034DA  0E00               	movlw	0
  7407  0034DC  BE06               	btfsc	(___xxtofl@val+1)^0,7,c
  7408  0034DE  0EFF               	movlw	-1
  7409  0034E0  6E07               	movwf	(___xxtofl@val+2)^0,c
  7410  0034E2  6E08               	movwf	(___xxtofl@val+3)^0,c
  7411  0034E4  0E01               	movlw	1
  7412  0034E6  ECB5  F018         	call	___xxtofl
  7413  0034EA  C005  F04D         	movff	?___xxtofl,SHT40_humy_GetValue@pressDataAnz
  7414  0034EE  C006  F04E         	movff	?___xxtofl+1,SHT40_humy_GetValue@pressDataAnz+1
  7415  0034F2  C007  F04F         	movff	?___xxtofl+2,SHT40_humy_GetValue@pressDataAnz+2
  7416  0034F6  C008  F050         	movff	?___xxtofl+3,SHT40_humy_GetValue@pressDataAnz+3
  7417  0034FA                     
  7418                           ;sht40.c: 47:     pressDataAnz = -6 + 125 * pressDataAnz/65535;
  7419  0034FA  0E00               	movlw	0
  7420  0034FC  6E22               	movwf	___fldiv@a^0,c
  7421  0034FE  0EFF               	movlw	255
  7422  003500  6E23               	movwf	(___fldiv@a+1)^0,c
  7423  003502  0E7F               	movlw	127
  7424  003504  6E24               	movwf	(___fldiv@a+2)^0,c
  7425  003506  0E47               	movlw	71
  7426  003508  6E25               	movwf	(___fldiv@a+3)^0,c
  7427  00350A  0E00               	movlw	0
  7428  00350C  6E09               	movwf	___flmul@a^0,c
  7429  00350E  0E00               	movlw	0
  7430  003510  6E0A               	movwf	(___flmul@a+1)^0,c
  7431  003512  0EFA               	movlw	250
  7432  003514  6E0B               	movwf	(___flmul@a+2)^0,c
  7433  003516  0E42               	movlw	66
  7434  003518  6E0C               	movwf	(___flmul@a+3)^0,c
  7435  00351A  C04D  F005         	movff	SHT40_humy_GetValue@pressDataAnz,___flmul@b
  7436  00351E  C04E  F006         	movff	SHT40_humy_GetValue@pressDataAnz+1,___flmul@b+1
  7437  003522  C04F  F007         	movff	SHT40_humy_GetValue@pressDataAnz+2,___flmul@b+2
  7438  003526  C050  F008         	movff	SHT40_humy_GetValue@pressDataAnz+3,___flmul@b+3
  7439  00352A  ECCA  F013         	call	___flmul	;wreg free
  7440  00352E  C005  F01E         	movff	?___flmul,___fldiv@b
  7441  003532  C006  F01F         	movff	?___flmul+1,___fldiv@b+1
  7442  003536  C007  F020         	movff	?___flmul+2,___fldiv@b+2
  7443  00353A  C008  F021         	movff	?___flmul+3,___fldiv@b+3
  7444  00353E  ECDF  F015         	call	___fldiv	;wreg free
  7445  003542  C01E  F037         	movff	?___fldiv,___fladd@b
  7446  003546  C01F  F038         	movff	?___fldiv+1,___fladd@b+1
  7447  00354A  C020  F039         	movff	?___fldiv+2,___fladd@b+2
  7448  00354E  C021  F03A         	movff	?___fldiv+3,___fladd@b+3
  7449  003552  0E00               	movlw	0
  7450  003554  6E3B               	movwf	___fladd@a^0,c
  7451  003556  0E00               	movlw	0
  7452  003558  6E3C               	movwf	(___fladd@a+1)^0,c
  7453  00355A  0EC0               	movlw	192
  7454  00355C  6E3D               	movwf	(___fladd@a+2)^0,c
  7455  00355E  0EC0               	movlw	192
  7456  003560  6E3E               	movwf	(___fladd@a+3)^0,c
  7457  003562  EC6A  F011         	call	___fladd	;wreg free
  7458  003566  C037  F04D         	movff	?___fladd,SHT40_humy_GetValue@pressDataAnz
  7459  00356A  C038  F04E         	movff	?___fladd+1,SHT40_humy_GetValue@pressDataAnz+1
  7460  00356E  C039  F04F         	movff	?___fladd+2,SHT40_humy_GetValue@pressDataAnz+2
  7461  003572  C03A  F050         	movff	?___fladd+3,SHT40_humy_GetValue@pressDataAnz+3
  7462  003576                     
  7463                           ;sht40.c: 49:     if(pressDataAnz > 100){
  7464  003576  0E00               	movlw	0
  7465  003578  6E1E               	movwf	___flge@ff1^0,c
  7466  00357A  0E00               	movlw	0
  7467  00357C  6E1F               	movwf	(___flge@ff1+1)^0,c
  7468  00357E  0EC8               	movlw	200
  7469  003580  6E20               	movwf	(___flge@ff1+2)^0,c
  7470  003582  0E42               	movlw	66
  7471  003584  6E21               	movwf	(___flge@ff1+3)^0,c
  7472  003586  C04D  F022         	movff	SHT40_humy_GetValue@pressDataAnz,___flge@ff2
  7473  00358A  C04E  F023         	movff	SHT40_humy_GetValue@pressDataAnz+1,___flge@ff2+1
  7474  00358E  C04F  F024         	movff	SHT40_humy_GetValue@pressDataAnz+2,___flge@ff2+2
  7475  003592  C050  F025         	movff	SHT40_humy_GetValue@pressDataAnz+3,___flge@ff2+3
  7476  003596  EC77  F01B         	call	___flge	;wreg free
  7477  00359A  B0D8               	btfsc	status,0,c
  7478  00359C  EFD2  F01A         	goto	u8411
  7479  0035A0  EFD4  F01A         	goto	u8410
  7480  0035A4                     u8411:
  7481  0035A4  EFDC  F01A         	goto	l7629
  7482  0035A8                     u8410:
  7483  0035A8                     
  7484                           ;sht40.c: 50:         pressDataAnz = 100;
  7485  0035A8  0E00               	movlw	0
  7486  0035AA  6E4D               	movwf	SHT40_humy_GetValue@pressDataAnz^0,c
  7487  0035AC  0E00               	movlw	0
  7488  0035AE  6E4E               	movwf	(SHT40_humy_GetValue@pressDataAnz+1)^0,c
  7489  0035B0  0EC8               	movlw	200
  7490  0035B2  6E4F               	movwf	(SHT40_humy_GetValue@pressDataAnz+2)^0,c
  7491  0035B4  0E42               	movlw	66
  7492  0035B6  6E50               	movwf	(SHT40_humy_GetValue@pressDataAnz+3)^0,c
  7493  0035B8                     l7629:
  7494                           
  7495                           ;sht40.c: 52:     if (pressDataAnz < 0){
  7496  0035B8  BE50               	btfsc	(SHT40_humy_GetValue@pressDataAnz+3)^0,7,c
  7497  0035BA  EFE3  F01A         	goto	u8420
  7498  0035BE  EFE1  F01A         	goto	u8421
  7499  0035C2                     u8421:
  7500  0035C2  EFEB  F01A         	goto	l7633
  7501  0035C6                     u8420:
  7502  0035C6                     
  7503                           ;sht40.c: 53:         pressDataAnz = 0;
  7504  0035C6  0E00               	movlw	0
  7505  0035C8  6E4D               	movwf	SHT40_humy_GetValue@pressDataAnz^0,c
  7506  0035CA  0E00               	movlw	0
  7507  0035CC  6E4E               	movwf	(SHT40_humy_GetValue@pressDataAnz+1)^0,c
  7508  0035CE  0E00               	movlw	0
  7509  0035D0  6E4F               	movwf	(SHT40_humy_GetValue@pressDataAnz+2)^0,c
  7510  0035D2  0E00               	movlw	0
  7511  0035D4  6E50               	movwf	(SHT40_humy_GetValue@pressDataAnz+3)^0,c
  7512  0035D6                     l7633:
  7513                           
  7514                           ;sht40.c: 56:     return pressDataAnz;
  7515  0035D6  C04D  F047         	movff	SHT40_humy_GetValue@pressDataAnz,?_SHT40_humy_GetValue
  7516  0035DA  C04E  F048         	movff	SHT40_humy_GetValue@pressDataAnz+1,?_SHT40_humy_GetValue+1
  7517  0035DE  C04F  F049         	movff	SHT40_humy_GetValue@pressDataAnz+2,?_SHT40_humy_GetValue+2
  7518  0035E2  C050  F04A         	movff	SHT40_humy_GetValue@pressDataAnz+3,?_SHT40_humy_GetValue+3
  7519  0035E6  0012               	return		;funcret
  7520  0035E8                     __end_of_SHT40_humy_GetValue:
  7521                           	callstack 0
  7522                           
  7523 ;; *************** function ___xxtofl *****************
  7524 ;; Defined at:
  7525 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\xxtofl.c"
  7526 ;; Parameters:    Size  Location     Type
  7527 ;;  sign            1    wreg     unsigned char 
  7528 ;;  val             4    4[COMRAM] long 
  7529 ;; Auto vars:     Size  Location     Type
  7530 ;;  sign            1   12[COMRAM] unsigned char 
  7531 ;;  arg             4   14[COMRAM] unsigned long 
  7532 ;;  exp             1   13[COMRAM] unsigned char 
  7533 ;; Return value:  Size  Location     Type
  7534 ;;                  4    4[COMRAM] unsigned char 
  7535 ;; Registers used:
  7536 ;;		wreg, status,2, status,0
  7537 ;; Tracked objects:
  7538 ;;		On entry : 0/0
  7539 ;;		On exit  : 0/0
  7540 ;;		Unchanged: 0/0
  7541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7542 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7543 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7544 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7545 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7546 ;;Total ram usage:       14 bytes
  7547 ;; Hardware stack levels used:    1
  7548 ;; Hardware stack levels required when called:    4
  7549 ;; This function calls:
  7550 ;;		Nothing
  7551 ;; This function is called by:
  7552 ;;		_SHT40_temp_GetValue
  7553 ;;		_SHT40_humy_GetValue
  7554 ;; This function uses a non-reentrant model
  7555 ;;
  7556                           
  7557                           	psect	text40
  7558  00316A                     __ptext40:
  7559                           	callstack 0
  7560  00316A                     ___xxtofl:
  7561                           	callstack 25
  7562                           
  7563                           ;incstack = 0
  7564                           ;___xxtofl@sign stored from wreg
  7565  00316A  6E0D               	movwf	___xxtofl@sign^0,c
  7566  00316C  500D               	movf	___xxtofl@sign^0,w,c
  7567  00316E  B4D8               	btfsc	status,2,c
  7568  003170  EFBC  F018         	goto	u5631
  7569  003174  EFBE  F018         	goto	u5630
  7570  003178                     u5631:
  7571  003178  EFE0  F018         	goto	l1379
  7572  00317C                     u5630:
  7573  00317C  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  7574  00317E  EFC5  F018         	goto	u5640
  7575  003182  EFC3  F018         	goto	u5641
  7576  003186                     u5641:
  7577  003186  EFE0  F018         	goto	l1379
  7578  00318A                     u5640:
  7579  00318A  C005  F009         	movff	___xxtofl@val,??___xxtofl
  7580  00318E  C006  F00A         	movff	___xxtofl@val+1,??___xxtofl+1
  7581  003192  C007  F00B         	movff	___xxtofl@val+2,??___xxtofl+2
  7582  003196  C008  F00C         	movff	___xxtofl@val+3,??___xxtofl+3
  7583  00319A  1E09               	comf	??___xxtofl^0,f,c
  7584  00319C  1E0A               	comf	(??___xxtofl+1)^0,f,c
  7585  00319E  1E0B               	comf	(??___xxtofl+2)^0,f,c
  7586  0031A0  1E0C               	comf	(??___xxtofl+3)^0,f,c
  7587  0031A2  2A09               	incf	??___xxtofl^0,f,c
  7588  0031A4  0E00               	movlw	0
  7589  0031A6  220A               	addwfc	(??___xxtofl+1)^0,f,c
  7590  0031A8  220B               	addwfc	(??___xxtofl+2)^0,f,c
  7591  0031AA  220C               	addwfc	(??___xxtofl+3)^0,f,c
  7592  0031AC  C009  F00F         	movff	??___xxtofl,___xxtofl@arg
  7593  0031B0  C00A  F010         	movff	??___xxtofl+1,___xxtofl@arg+1
  7594  0031B4  C00B  F011         	movff	??___xxtofl+2,___xxtofl@arg+2
  7595  0031B8  C00C  F012         	movff	??___xxtofl+3,___xxtofl@arg+3
  7596  0031BC  EFE8  F018         	goto	l5823
  7597  0031C0                     l1379:
  7598  0031C0  C005  F00F         	movff	___xxtofl@val,___xxtofl@arg
  7599  0031C4  C006  F010         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7600  0031C8  C007  F011         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7601  0031CC  C008  F012         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7602  0031D0                     l5823:
  7603  0031D0  5005               	movf	___xxtofl@val^0,w,c
  7604  0031D2  1006               	iorwf	(___xxtofl@val+1)^0,w,c
  7605  0031D4  1007               	iorwf	(___xxtofl@val+2)^0,w,c
  7606  0031D6  1008               	iorwf	(___xxtofl@val+3)^0,w,c
  7607  0031D8  A4D8               	btfss	status,2,c
  7608  0031DA  EFF1  F018         	goto	u5651
  7609  0031DE  EFF3  F018         	goto	u5650
  7610  0031E2                     u5651:
  7611  0031E2  EFFD  F018         	goto	l5829
  7612  0031E6                     u5650:
  7613  0031E6  0E00               	movlw	0
  7614  0031E8  6E05               	movwf	?___xxtofl^0,c
  7615  0031EA  0E00               	movlw	0
  7616  0031EC  6E06               	movwf	(?___xxtofl+1)^0,c
  7617  0031EE  0E00               	movlw	0
  7618  0031F0  6E07               	movwf	(?___xxtofl+2)^0,c
  7619  0031F2  0E00               	movlw	0
  7620  0031F4  6E08               	movwf	(?___xxtofl+3)^0,c
  7621  0031F6  EF8E  F019         	goto	l1382
  7622  0031FA                     l5829:
  7623  0031FA  0E96               	movlw	150
  7624  0031FC  6E0E               	movwf	___xxtofl@exp^0,c
  7625  0031FE  EF07  F019         	goto	l5833
  7626  003202                     l5831:
  7627  003202  2A0E               	incf	___xxtofl@exp^0,f,c
  7628  003204  90D8               	bcf	status,0,c
  7629  003206  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  7630  003208  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  7631  00320A  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  7632  00320C  320F               	rrcf	___xxtofl@arg^0,f,c
  7633  00320E                     l5833:
  7634  00320E  0E00               	movlw	0
  7635  003210  140F               	andwf	___xxtofl@arg^0,w,c
  7636  003212  6E09               	movwf	??___xxtofl^0,c
  7637  003214  0E00               	movlw	0
  7638  003216  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  7639  003218  6E0A               	movwf	(??___xxtofl+1)^0,c
  7640  00321A  0E00               	movlw	0
  7641  00321C  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  7642  00321E  6E0B               	movwf	(??___xxtofl+2)^0,c
  7643  003220  0EFE               	movlw	254
  7644  003222  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  7645  003224  6E0C               	movwf	(??___xxtofl+3)^0,c
  7646  003226  5009               	movf	??___xxtofl^0,w,c
  7647  003228  100A               	iorwf	(??___xxtofl+1)^0,w,c
  7648  00322A  100B               	iorwf	(??___xxtofl+2)^0,w,c
  7649  00322C  100C               	iorwf	(??___xxtofl+3)^0,w,c
  7650  00322E  A4D8               	btfss	status,2,c
  7651  003230  EF1C  F019         	goto	u5661
  7652  003234  EF1E  F019         	goto	u5660
  7653  003238                     u5661:
  7654  003238  EF01  F019         	goto	l5831
  7655  00323C                     u5660:
  7656  00323C  EF2C  F019         	goto	l1386
  7657  003240                     l5835:
  7658  003240  2A0E               	incf	___xxtofl@exp^0,f,c
  7659  003242  0E01               	movlw	1
  7660  003244  260F               	addwf	___xxtofl@arg^0,f,c
  7661  003246  0E00               	movlw	0
  7662  003248  2210               	addwfc	(___xxtofl@arg+1)^0,f,c
  7663  00324A  2211               	addwfc	(___xxtofl@arg+2)^0,f,c
  7664  00324C  2212               	addwfc	(___xxtofl@arg+3)^0,f,c
  7665  00324E  90D8               	bcf	status,0,c
  7666  003250  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  7667  003252  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  7668  003254  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  7669  003256  320F               	rrcf	___xxtofl@arg^0,f,c
  7670  003258                     l1386:
  7671  003258  0E00               	movlw	0
  7672  00325A  140F               	andwf	___xxtofl@arg^0,w,c
  7673  00325C  6E09               	movwf	??___xxtofl^0,c
  7674  00325E  0E00               	movlw	0
  7675  003260  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  7676  003262  6E0A               	movwf	(??___xxtofl+1)^0,c
  7677  003264  0E00               	movlw	0
  7678  003266  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  7679  003268  6E0B               	movwf	(??___xxtofl+2)^0,c
  7680  00326A  0EFF               	movlw	255
  7681  00326C  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  7682  00326E  6E0C               	movwf	(??___xxtofl+3)^0,c
  7683  003270  5009               	movf	??___xxtofl^0,w,c
  7684  003272  100A               	iorwf	(??___xxtofl+1)^0,w,c
  7685  003274  100B               	iorwf	(??___xxtofl+2)^0,w,c
  7686  003276  100C               	iorwf	(??___xxtofl+3)^0,w,c
  7687  003278  A4D8               	btfss	status,2,c
  7688  00327A  EF41  F019         	goto	u5671
  7689  00327E  EF43  F019         	goto	u5670
  7690  003282                     u5671:
  7691  003282  EF20  F019         	goto	l5835
  7692  003286                     u5670:
  7693  003286  EF4B  F019         	goto	l5843
  7694  00328A                     l5841:
  7695  00328A  060E               	decf	___xxtofl@exp^0,f,c
  7696  00328C  90D8               	bcf	status,0,c
  7697  00328E  360F               	rlcf	___xxtofl@arg^0,f,c
  7698  003290  3610               	rlcf	(___xxtofl@arg+1)^0,f,c
  7699  003292  3611               	rlcf	(___xxtofl@arg+2)^0,f,c
  7700  003294  3612               	rlcf	(___xxtofl@arg+3)^0,f,c
  7701  003296                     l5843:
  7702  003296  BE11               	btfsc	(___xxtofl@arg+2)^0,7,c
  7703  003298  EF50  F019         	goto	u5681
  7704  00329C  EF52  F019         	goto	u5680
  7705  0032A0                     u5681:
  7706  0032A0  EF5A  F019         	goto	l1393
  7707  0032A4                     u5680:
  7708  0032A4  0E02               	movlw	2
  7709  0032A6  600E               	cpfslt	___xxtofl@exp^0,c
  7710  0032A8  EF58  F019         	goto	u5691
  7711  0032AC  EF5A  F019         	goto	u5690
  7712  0032B0                     u5691:
  7713  0032B0  EF45  F019         	goto	l5841
  7714  0032B4                     u5690:
  7715  0032B4                     l1393:
  7716  0032B4  B00E               	btfsc	___xxtofl@exp^0,0,c
  7717  0032B6  EF5F  F019         	goto	u5701
  7718  0032BA  EF61  F019         	goto	u5700
  7719  0032BE                     u5701:
  7720  0032BE  EF62  F019         	goto	l5849
  7721  0032C2                     u5700:
  7722  0032C2  9E11               	bcf	(___xxtofl@arg+2)^0,7,c
  7723  0032C4                     l5849:
  7724  0032C4  90D8               	bcf	status,0,c
  7725  0032C6  320E               	rrcf	___xxtofl@exp^0,f,c
  7726  0032C8  C00E  F009         	movff	___xxtofl@exp,??___xxtofl
  7727  0032CC  6A0A               	clrf	(??___xxtofl+1)^0,c
  7728  0032CE  6A0B               	clrf	(??___xxtofl+2)^0,c
  7729  0032D0  6A0C               	clrf	(??___xxtofl+3)^0,c
  7730  0032D2  C009  F00C         	movff	??___xxtofl,??___xxtofl+3
  7731  0032D6  6A0B               	clrf	(??___xxtofl+2)^0,c
  7732  0032D8  6A0A               	clrf	(??___xxtofl+1)^0,c
  7733  0032DA  6A09               	clrf	??___xxtofl^0,c
  7734  0032DC  5009               	movf	??___xxtofl^0,w,c
  7735  0032DE  120F               	iorwf	___xxtofl@arg^0,f,c
  7736  0032E0  500A               	movf	(??___xxtofl+1)^0,w,c
  7737  0032E2  1210               	iorwf	(___xxtofl@arg+1)^0,f,c
  7738  0032E4  500B               	movf	(??___xxtofl+2)^0,w,c
  7739  0032E6  1211               	iorwf	(___xxtofl@arg+2)^0,f,c
  7740  0032E8  500C               	movf	(??___xxtofl+3)^0,w,c
  7741  0032EA  1212               	iorwf	(___xxtofl@arg+3)^0,f,c
  7742  0032EC  500D               	movf	___xxtofl@sign^0,w,c
  7743  0032EE  B4D8               	btfsc	status,2,c
  7744  0032F0  EF7C  F019         	goto	u5711
  7745  0032F4  EF7E  F019         	goto	u5710
  7746  0032F8                     u5711:
  7747  0032F8  EF86  F019         	goto	l5859
  7748  0032FC                     u5710:
  7749  0032FC  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  7750  0032FE  EF85  F019         	goto	u5720
  7751  003302  EF83  F019         	goto	u5721
  7752  003306                     u5721:
  7753  003306  EF86  F019         	goto	l5859
  7754  00330A                     u5720:
  7755  00330A  8E12               	bsf	(___xxtofl@arg+3)^0,7,c
  7756  00330C                     l5859:
  7757  00330C  C00F  F005         	movff	___xxtofl@arg,?___xxtofl
  7758  003310  C010  F006         	movff	___xxtofl@arg+1,?___xxtofl+1
  7759  003314  C011  F007         	movff	___xxtofl@arg+2,?___xxtofl+2
  7760  003318  C012  F008         	movff	___xxtofl@arg+3,?___xxtofl+3
  7761  00331C                     l1382:
  7762  00331C  0012               	return		;funcret
  7763  00331E                     __end_of___xxtofl:
  7764                           	callstack 0
  7765                           
  7766 ;; *************** function ___flmul *****************
  7767 ;; Defined at:
  7768 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcmul.c"
  7769 ;; Parameters:    Size  Location     Type
  7770 ;;  b               4    4[COMRAM] unsigned char 
  7771 ;;  a               4    8[COMRAM] unsigned char 
  7772 ;; Auto vars:     Size  Location     Type
  7773 ;;  prod            4   23[COMRAM] struct .
  7774 ;;  grs             4   18[COMRAM] unsigned long 
  7775 ;;  temp            2   27[COMRAM] struct .
  7776 ;;  bexp            1   22[COMRAM] unsigned char 
  7777 ;;  aexp            1   17[COMRAM] unsigned char 
  7778 ;;  sign            1   16[COMRAM] unsigned char 
  7779 ;; Return value:  Size  Location     Type
  7780 ;;                  4    4[COMRAM] unsigned char 
  7781 ;; Registers used:
  7782 ;;		wreg, status,2, status,0, prodl, prodh
  7783 ;; Tracked objects:
  7784 ;;		On entry : 0/0
  7785 ;;		On exit  : 0/0
  7786 ;;		Unchanged: 0/0
  7787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7788 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7789 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7790 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7791 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7792 ;;Total ram usage:       25 bytes
  7793 ;; Hardware stack levels used:    1
  7794 ;; Hardware stack levels required when called:    4
  7795 ;; This function calls:
  7796 ;;		Nothing
  7797 ;; This function is called by:
  7798 ;;		_SHT40_temp_GetValue
  7799 ;;		_SHT40_humy_GetValue
  7800 ;;		_efgtoa
  7801 ;; This function uses a non-reentrant model
  7802 ;;
  7803                           
  7804                           	psect	text41
  7805  002794                     __ptext41:
  7806                           	callstack 0
  7807  002794                     ___flmul:
  7808                           	callstack 22
  7809  002794  5008               	movf	(___flmul@b+3)^0,w,c
  7810  002796  0B80               	andlw	128
  7811  002798  6E11               	movwf	___flmul@sign^0,c
  7812  00279A  5008               	movf	(___flmul@b+3)^0,w,c
  7813  00279C  2408               	addwf	(___flmul@b+3)^0,w,c
  7814  00279E  6E17               	movwf	___flmul@bexp^0,c
  7815  0027A0  AE07               	btfss	(___flmul@b+2)^0,7,c
  7816  0027A2  EFD5  F013         	goto	u6781
  7817  0027A6  EFD7  F013         	goto	u6780
  7818  0027AA                     u6781:
  7819  0027AA  EFD8  F013         	goto	l6693
  7820  0027AE                     u6780:
  7821  0027AE  8017               	bsf	___flmul@bexp^0,0,c
  7822  0027B0                     l6693:
  7823  0027B0  5017               	movf	___flmul@bexp^0,w,c
  7824  0027B2  B4D8               	btfsc	status,2,c
  7825  0027B4  EFDE  F013         	goto	u6791
  7826  0027B8  EFE0  F013         	goto	u6790
  7827  0027BC                     u6791:
  7828  0027BC  EFF3  F013         	goto	l6701
  7829  0027C0                     u6790:
  7830  0027C0  2817               	incf	___flmul@bexp^0,w,c
  7831  0027C2  A4D8               	btfss	status,2,c
  7832  0027C4  EFE6  F013         	goto	u6801
  7833  0027C8  EFE8  F013         	goto	u6800
  7834  0027CC                     u6801:
  7835  0027CC  EFF0  F013         	goto	l6699
  7836  0027D0                     u6800:
  7837  0027D0  0E00               	movlw	0
  7838  0027D2  6E05               	movwf	___flmul@b^0,c
  7839  0027D4  0E00               	movlw	0
  7840  0027D6  6E06               	movwf	(___flmul@b+1)^0,c
  7841  0027D8  0E00               	movlw	0
  7842  0027DA  6E07               	movwf	(___flmul@b+2)^0,c
  7843  0027DC  0E00               	movlw	0
  7844  0027DE  6E08               	movwf	(___flmul@b+3)^0,c
  7845  0027E0                     l6699:
  7846  0027E0  8E07               	bsf	(___flmul@b+2)^0,7,c
  7847  0027E2  EFFB  F013         	goto	l6703
  7848  0027E6                     l6701:
  7849  0027E6  0E00               	movlw	0
  7850  0027E8  6E05               	movwf	___flmul@b^0,c
  7851  0027EA  0E00               	movlw	0
  7852  0027EC  6E06               	movwf	(___flmul@b+1)^0,c
  7853  0027EE  0E00               	movlw	0
  7854  0027F0  6E07               	movwf	(___flmul@b+2)^0,c
  7855  0027F2  0E00               	movlw	0
  7856  0027F4  6E08               	movwf	(___flmul@b+3)^0,c
  7857  0027F6                     l6703:
  7858  0027F6  500C               	movf	(___flmul@a+3)^0,w,c
  7859  0027F8  0B80               	andlw	128
  7860  0027FA  1A11               	xorwf	___flmul@sign^0,f,c
  7861  0027FC  500C               	movf	(___flmul@a+3)^0,w,c
  7862  0027FE  240C               	addwf	(___flmul@a+3)^0,w,c
  7863  002800  6E12               	movwf	___flmul@aexp^0,c
  7864  002802  AE0B               	btfss	(___flmul@a+2)^0,7,c
  7865  002804  EF06  F014         	goto	u6811
  7866  002808  EF08  F014         	goto	u6810
  7867  00280C                     u6811:
  7868  00280C  EF09  F014         	goto	l6711
  7869  002810                     u6810:
  7870  002810  8012               	bsf	___flmul@aexp^0,0,c
  7871  002812                     l6711:
  7872  002812  5012               	movf	___flmul@aexp^0,w,c
  7873  002814  B4D8               	btfsc	status,2,c
  7874  002816  EF0F  F014         	goto	u6821
  7875  00281A  EF11  F014         	goto	u6820
  7876  00281E                     u6821:
  7877  00281E  EF24  F014         	goto	l6719
  7878  002822                     u6820:
  7879  002822  2812               	incf	___flmul@aexp^0,w,c
  7880  002824  A4D8               	btfss	status,2,c
  7881  002826  EF17  F014         	goto	u6831
  7882  00282A  EF19  F014         	goto	u6830
  7883  00282E                     u6831:
  7884  00282E  EF21  F014         	goto	l6717
  7885  002832                     u6830:
  7886  002832  0E00               	movlw	0
  7887  002834  6E09               	movwf	___flmul@a^0,c
  7888  002836  0E00               	movlw	0
  7889  002838  6E0A               	movwf	(___flmul@a+1)^0,c
  7890  00283A  0E00               	movlw	0
  7891  00283C  6E0B               	movwf	(___flmul@a+2)^0,c
  7892  00283E  0E00               	movlw	0
  7893  002840  6E0C               	movwf	(___flmul@a+3)^0,c
  7894  002842                     l6717:
  7895  002842  8E0B               	bsf	(___flmul@a+2)^0,7,c
  7896  002844  EF2C  F014         	goto	l1338
  7897  002848                     l6719:
  7898  002848  0E00               	movlw	0
  7899  00284A  6E09               	movwf	___flmul@a^0,c
  7900  00284C  0E00               	movlw	0
  7901  00284E  6E0A               	movwf	(___flmul@a+1)^0,c
  7902  002850  0E00               	movlw	0
  7903  002852  6E0B               	movwf	(___flmul@a+2)^0,c
  7904  002854  0E00               	movlw	0
  7905  002856  6E0C               	movwf	(___flmul@a+3)^0,c
  7906  002858                     l1338:
  7907  002858  5012               	movf	___flmul@aexp^0,w,c
  7908  00285A  B4D8               	btfsc	status,2,c
  7909  00285C  EF32  F014         	goto	u6841
  7910  002860  EF34  F014         	goto	u6840
  7911  002864                     u6841:
  7912  002864  EF3C  F014         	goto	l6723
  7913  002868                     u6840:
  7914  002868  5017               	movf	___flmul@bexp^0,w,c
  7915  00286A  A4D8               	btfss	status,2,c
  7916  00286C  EF3A  F014         	goto	u6851
  7917  002870  EF3C  F014         	goto	u6850
  7918  002874                     u6851:
  7919  002874  EF46  F014         	goto	l6727
  7920  002878                     u6850:
  7921  002878                     l6723:
  7922  002878  0E00               	movlw	0
  7923  00287A  6E05               	movwf	?___flmul^0,c
  7924  00287C  0E00               	movlw	0
  7925  00287E  6E06               	movwf	(?___flmul+1)^0,c
  7926  002880  0E00               	movlw	0
  7927  002882  6E07               	movwf	(?___flmul+2)^0,c
  7928  002884  0E00               	movlw	0
  7929  002886  6E08               	movwf	(?___flmul+3)^0,c
  7930  002888  EFDE  F015         	goto	l1342
  7931  00288C                     l6727:
  7932  00288C  500B               	movf	(___flmul@a+2)^0,w,c
  7933  00288E  0205               	mulwf	___flmul@b^0,c
  7934  002890  CFF3 F01C          	movff	prodl,___flmul@temp
  7935  002894  CFF4 F01D          	movff	prodh,___flmul@temp+1
  7936  002898  501C               	movf	___flmul@temp^0,w,c
  7937  00289A  6E13               	movwf	___flmul@grs^0,c
  7938  00289C  6A14               	clrf	(___flmul@grs+1)^0,c
  7939  00289E  6A15               	clrf	(___flmul@grs+2)^0,c
  7940  0028A0  6A16               	clrf	(___flmul@grs+3)^0,c
  7941  0028A2  501D               	movf	(___flmul@temp+1)^0,w,c
  7942  0028A4  6E18               	movwf	___flmul@prod^0,c
  7943  0028A6  6A19               	clrf	(___flmul@prod+1)^0,c
  7944  0028A8  6A1A               	clrf	(___flmul@prod+2)^0,c
  7945  0028AA  6A1B               	clrf	(___flmul@prod+3)^0,c
  7946  0028AC  500A               	movf	(___flmul@a+1)^0,w,c
  7947  0028AE  0206               	mulwf	(___flmul@b+1)^0,c
  7948  0028B0  CFF3 F01C          	movff	prodl,___flmul@temp
  7949  0028B4  CFF4 F01D          	movff	prodh,___flmul@temp+1
  7950  0028B8  501C               	movf	___flmul@temp^0,w,c
  7951  0028BA  2613               	addwf	___flmul@grs^0,f,c
  7952  0028BC  0E00               	movlw	0
  7953  0028BE  2214               	addwfc	(___flmul@grs+1)^0,f,c
  7954  0028C0  2215               	addwfc	(___flmul@grs+2)^0,f,c
  7955  0028C2  2216               	addwfc	(___flmul@grs+3)^0,f,c
  7956  0028C4  501D               	movf	(___flmul@temp+1)^0,w,c
  7957  0028C6  2618               	addwf	___flmul@prod^0,f,c
  7958  0028C8  0E00               	movlw	0
  7959  0028CA  2219               	addwfc	(___flmul@prod+1)^0,f,c
  7960  0028CC  221A               	addwfc	(___flmul@prod+2)^0,f,c
  7961  0028CE  221B               	addwfc	(___flmul@prod+3)^0,f,c
  7962  0028D0  5009               	movf	___flmul@a^0,w,c
  7963  0028D2  0207               	mulwf	(___flmul@b+2)^0,c
  7964  0028D4  CFF3 F01C          	movff	prodl,___flmul@temp
  7965  0028D8  CFF4 F01D          	movff	prodh,___flmul@temp+1
  7966  0028DC  501C               	movf	___flmul@temp^0,w,c
  7967  0028DE  2613               	addwf	___flmul@grs^0,f,c
  7968  0028E0  0E00               	movlw	0
  7969  0028E2  2214               	addwfc	(___flmul@grs+1)^0,f,c
  7970  0028E4  2215               	addwfc	(___flmul@grs+2)^0,f,c
  7971  0028E6  2216               	addwfc	(___flmul@grs+3)^0,f,c
  7972  0028E8  501D               	movf	(___flmul@temp+1)^0,w,c
  7973  0028EA  2618               	addwf	___flmul@prod^0,f,c
  7974  0028EC  0E00               	movlw	0
  7975  0028EE  2219               	addwfc	(___flmul@prod+1)^0,f,c
  7976  0028F0  221A               	addwfc	(___flmul@prod+2)^0,f,c
  7977  0028F2  221B               	addwfc	(___flmul@prod+3)^0,f,c
  7978  0028F4  C015  F016         	movff	___flmul@grs+2,___flmul@grs+3
  7979  0028F8  C014  F015         	movff	___flmul@grs+1,___flmul@grs+2
  7980  0028FC  C013  F014         	movff	___flmul@grs,___flmul@grs+1
  7981  002900  6A13               	clrf	___flmul@grs^0,c
  7982  002902  5009               	movf	___flmul@a^0,w,c
  7983  002904  0206               	mulwf	(___flmul@b+1)^0,c
  7984  002906  CFF3 F01C          	movff	prodl,___flmul@temp
  7985  00290A  CFF4 F01D          	movff	prodh,___flmul@temp+1
  7986  00290E  501C               	movf	___flmul@temp^0,w,c
  7987  002910  2613               	addwf	___flmul@grs^0,f,c
  7988  002912  501D               	movf	(___flmul@temp+1)^0,w,c
  7989  002914  2214               	addwfc	(___flmul@grs+1)^0,f,c
  7990  002916  0E00               	movlw	0
  7991  002918  2215               	addwfc	(___flmul@grs+2)^0,f,c
  7992  00291A  0E00               	movlw	0
  7993  00291C  2216               	addwfc	(___flmul@grs+3)^0,f,c
  7994  00291E  500A               	movf	(___flmul@a+1)^0,w,c
  7995  002920  0205               	mulwf	___flmul@b^0,c
  7996  002922  CFF3 F01C          	movff	prodl,___flmul@temp
  7997  002926  CFF4 F01D          	movff	prodh,___flmul@temp+1
  7998  00292A  501C               	movf	___flmul@temp^0,w,c
  7999  00292C  2613               	addwf	___flmul@grs^0,f,c
  8000  00292E  501D               	movf	(___flmul@temp+1)^0,w,c
  8001  002930  2214               	addwfc	(___flmul@grs+1)^0,f,c
  8002  002932  0E00               	movlw	0
  8003  002934  2215               	addwfc	(___flmul@grs+2)^0,f,c
  8004  002936  0E00               	movlw	0
  8005  002938  2216               	addwfc	(___flmul@grs+3)^0,f,c
  8006  00293A  C015  F016         	movff	___flmul@grs+2,___flmul@grs+3
  8007  00293E  C014  F015         	movff	___flmul@grs+1,___flmul@grs+2
  8008  002942  C013  F014         	movff	___flmul@grs,___flmul@grs+1
  8009  002946  6A13               	clrf	___flmul@grs^0,c
  8010  002948  5009               	movf	___flmul@a^0,w,c
  8011  00294A  0205               	mulwf	___flmul@b^0,c
  8012  00294C  CFF3 F01C          	movff	prodl,___flmul@temp
  8013  002950  CFF4 F01D          	movff	prodh,___flmul@temp+1
  8014  002954  501C               	movf	___flmul@temp^0,w,c
  8015  002956  2613               	addwf	___flmul@grs^0,f,c
  8016  002958  501D               	movf	(___flmul@temp+1)^0,w,c
  8017  00295A  2214               	addwfc	(___flmul@grs+1)^0,f,c
  8018  00295C  0E00               	movlw	0
  8019  00295E  2215               	addwfc	(___flmul@grs+2)^0,f,c
  8020  002960  0E00               	movlw	0
  8021  002962  2216               	addwfc	(___flmul@grs+3)^0,f,c
  8022  002964  500B               	movf	(___flmul@a+2)^0,w,c
  8023  002966  0206               	mulwf	(___flmul@b+1)^0,c
  8024  002968  CFF3 F01C          	movff	prodl,___flmul@temp
  8025  00296C  CFF4 F01D          	movff	prodh,___flmul@temp+1
  8026  002970  501C               	movf	___flmul@temp^0,w,c
  8027  002972  2618               	addwf	___flmul@prod^0,f,c
  8028  002974  501D               	movf	(___flmul@temp+1)^0,w,c
  8029  002976  2219               	addwfc	(___flmul@prod+1)^0,f,c
  8030  002978  0E00               	movlw	0
  8031  00297A  221A               	addwfc	(___flmul@prod+2)^0,f,c
  8032  00297C  0E00               	movlw	0
  8033  00297E  221B               	addwfc	(___flmul@prod+3)^0,f,c
  8034  002980  500A               	movf	(___flmul@a+1)^0,w,c
  8035  002982  0207               	mulwf	(___flmul@b+2)^0,c
  8036  002984  CFF3 F01C          	movff	prodl,___flmul@temp
  8037  002988  CFF4 F01D          	movff	prodh,___flmul@temp+1
  8038  00298C  501C               	movf	___flmul@temp^0,w,c
  8039  00298E  2618               	addwf	___flmul@prod^0,f,c
  8040  002990  501D               	movf	(___flmul@temp+1)^0,w,c
  8041  002992  2219               	addwfc	(___flmul@prod+1)^0,f,c
  8042  002994  0E00               	movlw	0
  8043  002996  221A               	addwfc	(___flmul@prod+2)^0,f,c
  8044  002998  0E00               	movlw	0
  8045  00299A  221B               	addwfc	(___flmul@prod+3)^0,f,c
  8046  00299C  500B               	movf	(___flmul@a+2)^0,w,c
  8047  00299E  0207               	mulwf	(___flmul@b+2)^0,c
  8048  0029A0  CFF3 F01C          	movff	prodl,___flmul@temp
  8049  0029A4  CFF4 F01D          	movff	prodh,___flmul@temp+1
  8050  0029A8  501C               	movf	___flmul@temp^0,w,c
  8051  0029AA  6E0D               	movwf	??___flmul^0,c
  8052  0029AC  501D               	movf	(___flmul@temp+1)^0,w,c
  8053  0029AE  6E0E               	movwf	(??___flmul+1)^0,c
  8054  0029B0  6A0F               	clrf	(??___flmul+2)^0,c
  8055  0029B2  6A10               	clrf	(??___flmul+3)^0,c
  8056  0029B4  C00F  F010         	movff	??___flmul+2,??___flmul+3
  8057  0029B8  C00E  F00F         	movff	??___flmul+1,??___flmul+2
  8058  0029BC  C00D  F00E         	movff	??___flmul,??___flmul+1
  8059  0029C0  6A0D               	clrf	??___flmul^0,c
  8060  0029C2  500D               	movf	??___flmul^0,w,c
  8061  0029C4  2618               	addwf	___flmul@prod^0,f,c
  8062  0029C6  500E               	movf	(??___flmul+1)^0,w,c
  8063  0029C8  2219               	addwfc	(___flmul@prod+1)^0,f,c
  8064  0029CA  500F               	movf	(??___flmul+2)^0,w,c
  8065  0029CC  221A               	addwfc	(___flmul@prod+2)^0,f,c
  8066  0029CE  5010               	movf	(??___flmul+3)^0,w,c
  8067  0029D0  221B               	addwfc	(___flmul@prod+3)^0,f,c
  8068  0029D2  C013  F00D         	movff	___flmul@grs,??___flmul
  8069  0029D6  C014  F00E         	movff	___flmul@grs+1,??___flmul+1
  8070  0029DA  C015  F00F         	movff	___flmul@grs+2,??___flmul+2
  8071  0029DE  C016  F010         	movff	___flmul@grs+3,??___flmul+3
  8072  0029E2  0E19               	movlw	25
  8073  0029E4  EFF9  F014         	goto	u6860
  8074  0029E8                     u6865:
  8075  0029E8  90D8               	bcf	status,0,c
  8076  0029EA  3210               	rrcf	(??___flmul+3)^0,f,c
  8077  0029EC  320F               	rrcf	(??___flmul+2)^0,f,c
  8078  0029EE  320E               	rrcf	(??___flmul+1)^0,f,c
  8079  0029F0  320D               	rrcf	??___flmul^0,f,c
  8080  0029F2                     u6860:
  8081  0029F2  2EE8               	decfsz	wreg,f,c
  8082  0029F4  EFF4  F014         	goto	u6865
  8083  0029F8  500D               	movf	??___flmul^0,w,c
  8084  0029FA  2618               	addwf	___flmul@prod^0,f,c
  8085  0029FC  500E               	movf	(??___flmul+1)^0,w,c
  8086  0029FE  2219               	addwfc	(___flmul@prod+1)^0,f,c
  8087  002A00  500F               	movf	(??___flmul+2)^0,w,c
  8088  002A02  221A               	addwfc	(___flmul@prod+2)^0,f,c
  8089  002A04  5010               	movf	(??___flmul+3)^0,w,c
  8090  002A06  221B               	addwfc	(___flmul@prod+3)^0,f,c
  8091  002A08  C015  F016         	movff	___flmul@grs+2,___flmul@grs+3
  8092  002A0C  C014  F015         	movff	___flmul@grs+1,___flmul@grs+2
  8093  002A10  C013  F014         	movff	___flmul@grs,___flmul@grs+1
  8094  002A14  6A13               	clrf	___flmul@grs^0,c
  8095  002A16  5012               	movf	___flmul@aexp^0,w,c
  8096  002A18  C017  F00D         	movff	___flmul@bexp,??___flmul
  8097  002A1C  6A0E               	clrf	(??___flmul+1)^0,c
  8098  002A1E  260D               	addwf	??___flmul^0,f,c
  8099  002A20  0E00               	movlw	0
  8100  002A22  220E               	addwfc	(??___flmul+1)^0,f,c
  8101  002A24  0E82               	movlw	130
  8102  002A26  240D               	addwf	??___flmul^0,w,c
  8103  002A28  6E1C               	movwf	___flmul@temp^0,c
  8104  002A2A  0EFF               	movlw	255
  8105  002A2C  200E               	addwfc	(??___flmul+1)^0,w,c
  8106  002A2E  6E1D               	movwf	(___flmul@temp+1)^0,c
  8107  002A30  EF2F  F015         	goto	l6775
  8108  002A34                     l6769:
  8109  002A34  90D8               	bcf	status,0,c
  8110  002A36  3618               	rlcf	___flmul@prod^0,f,c
  8111  002A38  3619               	rlcf	(___flmul@prod+1)^0,f,c
  8112  002A3A  361A               	rlcf	(___flmul@prod+2)^0,f,c
  8113  002A3C  361B               	rlcf	(___flmul@prod+3)^0,f,c
  8114  002A3E  AE16               	btfss	(___flmul@grs+3)^0,7,c
  8115  002A40  EF24  F015         	goto	u6871
  8116  002A44  EF26  F015         	goto	u6870
  8117  002A48                     u6871:
  8118  002A48  EF27  F015         	goto	l1345
  8119  002A4C                     u6870:
  8120  002A4C  8018               	bsf	___flmul@prod^0,0,c
  8121  002A4E                     l1345:
  8122  002A4E  90D8               	bcf	status,0,c
  8123  002A50  3613               	rlcf	___flmul@grs^0,f,c
  8124  002A52  3614               	rlcf	(___flmul@grs+1)^0,f,c
  8125  002A54  3615               	rlcf	(___flmul@grs+2)^0,f,c
  8126  002A56  3616               	rlcf	(___flmul@grs+3)^0,f,c
  8127  002A58  061C               	decf	___flmul@temp^0,f,c
  8128  002A5A  A0D8               	btfss	status,0,c
  8129  002A5C  061D               	decf	(___flmul@temp+1)^0,f,c
  8130  002A5E                     l6775:
  8131  002A5E  AE1A               	btfss	(___flmul@prod+2)^0,7,c
  8132  002A60  EF34  F015         	goto	u6881
  8133  002A64  EF36  F015         	goto	u6880
  8134  002A68                     u6881:
  8135  002A68  EF1A  F015         	goto	l6769
  8136  002A6C                     u6880:
  8137  002A6C  0E00               	movlw	0
  8138  002A6E  6E12               	movwf	___flmul@aexp^0,c
  8139  002A70  AE16               	btfss	(___flmul@grs+3)^0,7,c
  8140  002A72  EF3D  F015         	goto	u6891
  8141  002A76  EF3F  F015         	goto	u6890
  8142  002A7A                     u6891:
  8143  002A7A  EF63  F015         	goto	l1347
  8144  002A7E                     u6890:
  8145  002A7E  0EFF               	movlw	255
  8146  002A80  1413               	andwf	___flmul@grs^0,w,c
  8147  002A82  6E0D               	movwf	??___flmul^0,c
  8148  002A84  0EFF               	movlw	255
  8149  002A86  1414               	andwf	(___flmul@grs+1)^0,w,c
  8150  002A88  6E0E               	movwf	(??___flmul+1)^0,c
  8151  002A8A  0EFF               	movlw	255
  8152  002A8C  1415               	andwf	(___flmul@grs+2)^0,w,c
  8153  002A8E  6E0F               	movwf	(??___flmul+2)^0,c
  8154  002A90  0E7F               	movlw	127
  8155  002A92  1416               	andwf	(___flmul@grs+3)^0,w,c
  8156  002A94  6E10               	movwf	(??___flmul+3)^0,c
  8157  002A96  500D               	movf	??___flmul^0,w,c
  8158  002A98  100E               	iorwf	(??___flmul+1)^0,w,c
  8159  002A9A  100F               	iorwf	(??___flmul+2)^0,w,c
  8160  002A9C  1010               	iorwf	(??___flmul+3)^0,w,c
  8161  002A9E  B4D8               	btfsc	status,2,c
  8162  002AA0  EF54  F015         	goto	u6901
  8163  002AA4  EF56  F015         	goto	u6900
  8164  002AA8                     u6901:
  8165  002AA8  EF5A  F015         	goto	l1348
  8166  002AAC                     u6900:
  8167  002AAC                     l6783:
  8168  002AAC  0E01               	movlw	1
  8169  002AAE  6E12               	movwf	___flmul@aexp^0,c
  8170  002AB0  EF63  F015         	goto	l1347
  8171  002AB4                     l1348:
  8172  002AB4  A018               	btfss	___flmul@prod^0,0,c
  8173  002AB6  EF5F  F015         	goto	u6911
  8174  002ABA  EF61  F015         	goto	u6910
  8175  002ABE                     u6911:
  8176  002ABE  EF63  F015         	goto	l1347
  8177  002AC2                     u6910:
  8178  002AC2  EF56  F015         	goto	l6783
  8179  002AC6                     l1347:
  8180  002AC6  5012               	movf	___flmul@aexp^0,w,c
  8181  002AC8  B4D8               	btfsc	status,2,c
  8182  002ACA  EF69  F015         	goto	u6921
  8183  002ACE  EF6B  F015         	goto	u6920
  8184  002AD2                     u6921:
  8185  002AD2  EF8F  F015         	goto	l6795
  8186  002AD6                     u6920:
  8187  002AD6  0E01               	movlw	1
  8188  002AD8  2618               	addwf	___flmul@prod^0,f,c
  8189  002ADA  0E00               	movlw	0
  8190  002ADC  2219               	addwfc	(___flmul@prod+1)^0,f,c
  8191  002ADE  221A               	addwfc	(___flmul@prod+2)^0,f,c
  8192  002AE0  221B               	addwfc	(___flmul@prod+3)^0,f,c
  8193  002AE2  A01B               	btfss	(___flmul@prod+3)^0,0,c
  8194  002AE4  EF76  F015         	goto	u6931
  8195  002AE8  EF78  F015         	goto	u6930
  8196  002AEC                     u6931:
  8197  002AEC  EF8F  F015         	goto	l6795
  8198  002AF0                     u6930:
  8199  002AF0  C018  F00D         	movff	___flmul@prod,??___flmul
  8200  002AF4  C019  F00E         	movff	___flmul@prod+1,??___flmul+1
  8201  002AF8  C01A  F00F         	movff	___flmul@prod+2,??___flmul+2
  8202  002AFC  C01B  F010         	movff	___flmul@prod+3,??___flmul+3
  8203  002B00  3410               	rlcf	(??___flmul+3)^0,w,c
  8204  002B02  3210               	rrcf	(??___flmul+3)^0,f,c
  8205  002B04  320F               	rrcf	(??___flmul+2)^0,f,c
  8206  002B06  320E               	rrcf	(??___flmul+1)^0,f,c
  8207  002B08  320D               	rrcf	??___flmul^0,f,c
  8208  002B0A  C00D  F018         	movff	??___flmul,___flmul@prod
  8209  002B0E  C00E  F019         	movff	??___flmul+1,___flmul@prod+1
  8210  002B12  C00F  F01A         	movff	??___flmul+2,___flmul@prod+2
  8211  002B16  C010  F01B         	movff	??___flmul+3,___flmul@prod+3
  8212  002B1A  4A1C               	infsnz	___flmul@temp^0,f,c
  8213  002B1C  2A1D               	incf	(___flmul@temp+1)^0,f,c
  8214  002B1E                     l6795:
  8215  002B1E  BE1D               	btfsc	(___flmul@temp+1)^0,7,c
  8216  002B20  EF9A  F015         	goto	u6941
  8217  002B24  501D               	movf	(___flmul@temp+1)^0,w,c
  8218  002B26  E108               	bnz	u6940
  8219  002B28  281C               	incf	___flmul@temp^0,w,c
  8220  002B2A  A0D8               	btfss	status,0,c
  8221  002B2C  EF9A  F015         	goto	u6941
  8222  002B30  EF9C  F015         	goto	u6940
  8223  002B34                     u6941:
  8224  002B34  EFA6  F015         	goto	l6799
  8225  002B38                     u6940:
  8226  002B38  0E00               	movlw	0
  8227  002B3A  6E18               	movwf	___flmul@prod^0,c
  8228  002B3C  0E00               	movlw	0
  8229  002B3E  6E19               	movwf	(___flmul@prod+1)^0,c
  8230  002B40  0E80               	movlw	128
  8231  002B42  6E1A               	movwf	(___flmul@prod+2)^0,c
  8232  002B44  0E7F               	movlw	127
  8233  002B46  6E1B               	movwf	(___flmul@prod+3)^0,c
  8234  002B48  EFD4  F015         	goto	l6811
  8235  002B4C                     l6799:
  8236  002B4C  BE1D               	btfsc	(___flmul@temp+1)^0,7,c
  8237  002B4E  EFB3  F015         	goto	u6950
  8238  002B52  501D               	movf	(___flmul@temp+1)^0,w,c
  8239  002B54  E106               	bnz	u6951
  8240  002B56  041C               	decf	___flmul@temp^0,w,c
  8241  002B58  B0D8               	btfsc	status,0,c
  8242  002B5A  EFB1  F015         	goto	u6951
  8243  002B5E  EFB3  F015         	goto	u6950
  8244  002B62                     u6951:
  8245  002B62  EFBF  F015         	goto	l1355
  8246  002B66                     u6950:
  8247  002B66  0E00               	movlw	0
  8248  002B68  6E18               	movwf	___flmul@prod^0,c
  8249  002B6A  0E00               	movlw	0
  8250  002B6C  6E19               	movwf	(___flmul@prod+1)^0,c
  8251  002B6E  0E00               	movlw	0
  8252  002B70  6E1A               	movwf	(___flmul@prod+2)^0,c
  8253  002B72  0E00               	movlw	0
  8254  002B74  6E1B               	movwf	(___flmul@prod+3)^0,c
  8255  002B76  0E00               	movlw	0
  8256  002B78  6E11               	movwf	___flmul@sign^0,c
  8257  002B7A  EFD4  F015         	goto	l6811
  8258  002B7E                     l1355:
  8259  002B7E  C01C  F017         	movff	___flmul@temp,___flmul@bexp
  8260  002B82  0EFF               	movlw	255
  8261  002B84  1618               	andwf	___flmul@prod^0,f,c
  8262  002B86  0EFF               	movlw	255
  8263  002B88  1619               	andwf	(___flmul@prod+1)^0,f,c
  8264  002B8A  0E7F               	movlw	127
  8265  002B8C  161A               	andwf	(___flmul@prod+2)^0,f,c
  8266  002B8E  0E00               	movlw	0
  8267  002B90  161B               	andwf	(___flmul@prod+3)^0,f,c
  8268  002B92  A017               	btfss	___flmul@bexp^0,0,c
  8269  002B94  EFCE  F015         	goto	u6961
  8270  002B98  EFD0  F015         	goto	u6960
  8271  002B9C                     u6961:
  8272  002B9C  EFD1  F015         	goto	l6809
  8273  002BA0                     u6960:
  8274  002BA0  8E1A               	bsf	(___flmul@prod+2)^0,7,c
  8275  002BA2                     l6809:
  8276  002BA2  90D8               	bcf	status,0,c
  8277  002BA4  3017               	rrcf	___flmul@bexp^0,w,c
  8278  002BA6  6E1B               	movwf	(___flmul@prod+3)^0,c
  8279  002BA8                     l6811:
  8280  002BA8  5011               	movf	___flmul@sign^0,w,c
  8281  002BAA  121B               	iorwf	(___flmul@prod+3)^0,f,c
  8282  002BAC  C018  F005         	movff	___flmul@prod,?___flmul
  8283  002BB0  C019  F006         	movff	___flmul@prod+1,?___flmul+1
  8284  002BB4  C01A  F007         	movff	___flmul@prod+2,?___flmul+2
  8285  002BB8  C01B  F008         	movff	___flmul@prod+3,?___flmul+3
  8286  002BBC                     l1342:
  8287  002BBC  0012               	return		;funcret
  8288  002BBE                     __end_of___flmul:
  8289                           	callstack 0
  8290                           
  8291 ;; *************** function ___flge *****************
  8292 ;; Defined at:
  8293 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flge.c"
  8294 ;; Parameters:    Size  Location     Type
  8295 ;;  ff1             4   29[COMRAM] unsigned char 
  8296 ;;  ff2             4   33[COMRAM] unsigned char 
  8297 ;; Auto vars:     Size  Location     Type
  8298 ;;		None
  8299 ;; Return value:  Size  Location     Type
  8300 ;;		None               void
  8301 ;; Registers used:
  8302 ;;		wreg, status,2, status,0
  8303 ;; Tracked objects:
  8304 ;;		On entry : 0/0
  8305 ;;		On exit  : 0/0
  8306 ;;		Unchanged: 0/0
  8307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8308 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8310 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8311 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8312 ;;Total ram usage:       12 bytes
  8313 ;; Hardware stack levels used:    1
  8314 ;; Hardware stack levels required when called:    4
  8315 ;; This function calls:
  8316 ;;		Nothing
  8317 ;; This function is called by:
  8318 ;;		_SHT40_humy_GetValue
  8319 ;;		_efgtoa
  8320 ;; This function uses a non-reentrant model
  8321 ;;
  8322                           
  8323                           	psect	text42
  8324  0036EE                     __ptext42:
  8325                           	callstack 0
  8326  0036EE                     ___flge:
  8327                           	callstack 22
  8328  0036EE  0E00               	movlw	0
  8329  0036F0  141E               	andwf	___flge@ff1^0,w,c
  8330  0036F2  6E26               	movwf	??___flge^0,c
  8331  0036F4  0E00               	movlw	0
  8332  0036F6  141F               	andwf	(___flge@ff1+1)^0,w,c
  8333  0036F8  6E27               	movwf	(??___flge+1)^0,c
  8334  0036FA  0E80               	movlw	128
  8335  0036FC  1420               	andwf	(___flge@ff1+2)^0,w,c
  8336  0036FE  6E28               	movwf	(??___flge+2)^0,c
  8337  003700  0E7F               	movlw	127
  8338  003702  1421               	andwf	(___flge@ff1+3)^0,w,c
  8339  003704  6E29               	movwf	(??___flge+3)^0,c
  8340  003706  5026               	movf	??___flge^0,w,c
  8341  003708  1027               	iorwf	(??___flge+1)^0,w,c
  8342  00370A  1028               	iorwf	(??___flge+2)^0,w,c
  8343  00370C  1029               	iorwf	(??___flge+3)^0,w,c
  8344  00370E  A4D8               	btfss	status,2,c
  8345  003710  EF8C  F01B         	goto	u7121
  8346  003714  EF8E  F01B         	goto	u7120
  8347  003718                     u7121:
  8348  003718  EF96  F01B         	goto	l6923
  8349  00371C                     u7120:
  8350  00371C  0E00               	movlw	0
  8351  00371E  6E1E               	movwf	___flge@ff1^0,c
  8352  003720  0E00               	movlw	0
  8353  003722  6E1F               	movwf	(___flge@ff1+1)^0,c
  8354  003724  0E00               	movlw	0
  8355  003726  6E20               	movwf	(___flge@ff1+2)^0,c
  8356  003728  0E00               	movlw	0
  8357  00372A  6E21               	movwf	(___flge@ff1+3)^0,c
  8358  00372C                     l6923:
  8359  00372C  0E00               	movlw	0
  8360  00372E  1422               	andwf	___flge@ff2^0,w,c
  8361  003730  6E26               	movwf	??___flge^0,c
  8362  003732  0E00               	movlw	0
  8363  003734  1423               	andwf	(___flge@ff2+1)^0,w,c
  8364  003736  6E27               	movwf	(??___flge+1)^0,c
  8365  003738  0E80               	movlw	128
  8366  00373A  1424               	andwf	(___flge@ff2+2)^0,w,c
  8367  00373C  6E28               	movwf	(??___flge+2)^0,c
  8368  00373E  0E7F               	movlw	127
  8369  003740  1425               	andwf	(___flge@ff2+3)^0,w,c
  8370  003742  6E29               	movwf	(??___flge+3)^0,c
  8371  003744  5026               	movf	??___flge^0,w,c
  8372  003746  1027               	iorwf	(??___flge+1)^0,w,c
  8373  003748  1028               	iorwf	(??___flge+2)^0,w,c
  8374  00374A  1029               	iorwf	(??___flge+3)^0,w,c
  8375  00374C  A4D8               	btfss	status,2,c
  8376  00374E  EFAB  F01B         	goto	u7131
  8377  003752  EFAD  F01B         	goto	u7130
  8378  003756                     u7131:
  8379  003756  EFB5  F01B         	goto	l6927
  8380  00375A                     u7130:
  8381  00375A  0E00               	movlw	0
  8382  00375C  6E22               	movwf	___flge@ff2^0,c
  8383  00375E  0E00               	movlw	0
  8384  003760  6E23               	movwf	(___flge@ff2+1)^0,c
  8385  003762  0E00               	movlw	0
  8386  003764  6E24               	movwf	(___flge@ff2+2)^0,c
  8387  003766  0E00               	movlw	0
  8388  003768  6E25               	movwf	(___flge@ff2+3)^0,c
  8389  00376A                     l6927:
  8390  00376A  AE21               	btfss	(___flge@ff1+3)^0,7,c
  8391  00376C  EFBA  F01B         	goto	u7141
  8392  003770  EFBC  F01B         	goto	u7140
  8393  003774                     u7141:
  8394  003774  EFC5  F01B         	goto	l6931
  8395  003778                     u7140:
  8396  003778  6C1E               	negf	___flge@ff1^0,c
  8397  00377A  1E1F               	comf	(___flge@ff1+1)^0,f,c
  8398  00377C  B0D8               	btfsc	status,0,c
  8399  00377E  2A1F               	incf	(___flge@ff1+1)^0,f,c
  8400  003780  1E20               	comf	(___flge@ff1+2)^0,f,c
  8401  003782  B0D8               	btfsc	status,0,c
  8402  003784  2A20               	incf	(___flge@ff1+2)^0,f,c
  8403  003786  0E80               	movlw	128
  8404  003788  5621               	subfwb	(___flge@ff1+3)^0,f,c
  8405  00378A                     l6931:
  8406  00378A  AE25               	btfss	(___flge@ff2+3)^0,7,c
  8407  00378C  EFCA  F01B         	goto	u7151
  8408  003790  EFCC  F01B         	goto	u7150
  8409  003794                     u7151:
  8410  003794  EFD5  F01B         	goto	l989
  8411  003798                     u7150:
  8412  003798  6C22               	negf	___flge@ff2^0,c
  8413  00379A  1E23               	comf	(___flge@ff2+1)^0,f,c
  8414  00379C  B0D8               	btfsc	status,0,c
  8415  00379E  2A23               	incf	(___flge@ff2+1)^0,f,c
  8416  0037A0  1E24               	comf	(___flge@ff2+2)^0,f,c
  8417  0037A2  B0D8               	btfsc	status,0,c
  8418  0037A4  2A24               	incf	(___flge@ff2+2)^0,f,c
  8419  0037A6  0E80               	movlw	128
  8420  0037A8  5625               	subfwb	(___flge@ff2+3)^0,f,c
  8421  0037AA                     l989:
  8422  0037AA  0E00               	movlw	0
  8423  0037AC  1A1E               	xorwf	___flge@ff1^0,f,c
  8424  0037AE  0E00               	movlw	0
  8425  0037B0  1A1F               	xorwf	(___flge@ff1+1)^0,f,c
  8426  0037B2  0E00               	movlw	0
  8427  0037B4  1A20               	xorwf	(___flge@ff1+2)^0,f,c
  8428  0037B6  0E80               	movlw	128
  8429  0037B8  1A21               	xorwf	(___flge@ff1+3)^0,f,c
  8430  0037BA  0E00               	movlw	0
  8431  0037BC  1A22               	xorwf	___flge@ff2^0,f,c
  8432  0037BE  0E00               	movlw	0
  8433  0037C0  1A23               	xorwf	(___flge@ff2+1)^0,f,c
  8434  0037C2  0E00               	movlw	0
  8435  0037C4  1A24               	xorwf	(___flge@ff2+2)^0,f,c
  8436  0037C6  0E80               	movlw	128
  8437  0037C8  1A25               	xorwf	(___flge@ff2+3)^0,f,c
  8438  0037CA  5022               	movf	___flge@ff2^0,w,c
  8439  0037CC  5C1E               	subwf	___flge@ff1^0,w,c
  8440  0037CE  5023               	movf	(___flge@ff2+1)^0,w,c
  8441  0037D0  581F               	subwfb	(___flge@ff1+1)^0,w,c
  8442  0037D2  5024               	movf	(___flge@ff2+2)^0,w,c
  8443  0037D4  5820               	subwfb	(___flge@ff1+2)^0,w,c
  8444  0037D6  5025               	movf	(___flge@ff2+3)^0,w,c
  8445  0037D8  5821               	subwfb	(___flge@ff1+3)^0,w,c
  8446  0037DA  B0D8               	btfsc	status,0,c
  8447  0037DC  EFF2  F01B         	goto	u7161
  8448  0037E0  EFF4  F01B         	goto	u7160
  8449  0037E4                     u7161:
  8450  0037E4  EFF7  F01B         	goto	l6937
  8451  0037E8                     u7160:
  8452  0037E8  90D8               	bcf	status,0,c
  8453  0037EA  EFF8  F01B         	goto	l994
  8454  0037EE                     l6937:
  8455  0037EE  80D8               	bsf	status,0,c
  8456  0037F0                     l994:
  8457  0037F0  0012               	return		;funcret
  8458  0037F2                     __end_of___flge:
  8459                           	callstack 0
  8460                           
  8461 ;; *************** function ___fldiv *****************
  8462 ;; Defined at:
  8463 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcdiv.c"
  8464 ;; Parameters:    Size  Location     Type
  8465 ;;  b               4   29[COMRAM] unsigned char 
  8466 ;;  a               4   33[COMRAM] unsigned char 
  8467 ;; Auto vars:     Size  Location     Type
  8468 ;;  grs             4   48[COMRAM] unsigned long 
  8469 ;;  rem             4   41[COMRAM] unsigned long 
  8470 ;;  new_exp         2   46[COMRAM] short 
  8471 ;;  aexp            1   53[COMRAM] unsigned char 
  8472 ;;  bexp            1   52[COMRAM] unsigned char 
  8473 ;;  sign            1   45[COMRAM] unsigned char 
  8474 ;; Return value:  Size  Location     Type
  8475 ;;                  4   29[COMRAM] unsigned char 
  8476 ;; Registers used:
  8477 ;;		wreg, status,2, status,0
  8478 ;; Tracked objects:
  8479 ;;		On entry : 0/0
  8480 ;;		On exit  : 0/0
  8481 ;;		Unchanged: 0/0
  8482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8483 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8484 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8485 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8486 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8487 ;;Total ram usage:       25 bytes
  8488 ;; Hardware stack levels used:    1
  8489 ;; Hardware stack levels required when called:    4
  8490 ;; This function calls:
  8491 ;;		Nothing
  8492 ;; This function is called by:
  8493 ;;		_SHT40_temp_GetValue
  8494 ;;		_SHT40_humy_GetValue
  8495 ;;		_efgtoa
  8496 ;; This function uses a non-reentrant model
  8497 ;;
  8498                           
  8499                           	psect	text43
  8500  002BBE                     __ptext43:
  8501                           	callstack 0
  8502  002BBE                     ___fldiv:
  8503                           	callstack 22
  8504  002BBE  5021               	movf	(___fldiv@b+3)^0,w,c
  8505  002BC0  0B80               	andlw	128
  8506  002BC2  6E2E               	movwf	___fldiv@sign^0,c
  8507  002BC4  5021               	movf	(___fldiv@b+3)^0,w,c
  8508  002BC6  2421               	addwf	(___fldiv@b+3)^0,w,c
  8509  002BC8  6E35               	movwf	___fldiv@bexp^0,c
  8510  002BCA  AE20               	btfss	(___fldiv@b+2)^0,7,c
  8511  002BCC  EFEA  F015         	goto	u6551
  8512  002BD0  EFEC  F015         	goto	u6550
  8513  002BD4                     u6551:
  8514  002BD4  EFED  F015         	goto	l6555
  8515  002BD8                     u6550:
  8516  002BD8  8035               	bsf	___fldiv@bexp^0,0,c
  8517  002BDA                     l6555:
  8518  002BDA  5035               	movf	___fldiv@bexp^0,w,c
  8519  002BDC  B4D8               	btfsc	status,2,c
  8520  002BDE  EFF3  F015         	goto	u6561
  8521  002BE2  EFF5  F015         	goto	u6560
  8522  002BE6                     u6561:
  8523  002BE6  EF0A  F016         	goto	l6565
  8524  002BEA                     u6560:
  8525  002BEA  2835               	incf	___fldiv@bexp^0,w,c
  8526  002BEC  A4D8               	btfss	status,2,c
  8527  002BEE  EFFB  F015         	goto	u6571
  8528  002BF2  EFFD  F015         	goto	u6570
  8529  002BF6                     u6571:
  8530  002BF6  EF05  F016         	goto	l6561
  8531  002BFA                     u6570:
  8532  002BFA  0E00               	movlw	0
  8533  002BFC  6E1E               	movwf	___fldiv@b^0,c
  8534  002BFE  0E00               	movlw	0
  8535  002C00  6E1F               	movwf	(___fldiv@b+1)^0,c
  8536  002C02  0E00               	movlw	0
  8537  002C04  6E20               	movwf	(___fldiv@b+2)^0,c
  8538  002C06  0E00               	movlw	0
  8539  002C08  6E21               	movwf	(___fldiv@b+3)^0,c
  8540  002C0A                     l6561:
  8541  002C0A  8E20               	bsf	(___fldiv@b+2)^0,7,c
  8542  002C0C  0E00               	movlw	0
  8543  002C0E  6E21               	movwf	(___fldiv@b+3)^0,c
  8544  002C10  EF12  F016         	goto	l6567
  8545  002C14                     l6565:
  8546  002C14  0E00               	movlw	0
  8547  002C16  6E1E               	movwf	___fldiv@b^0,c
  8548  002C18  0E00               	movlw	0
  8549  002C1A  6E1F               	movwf	(___fldiv@b+1)^0,c
  8550  002C1C  0E00               	movlw	0
  8551  002C1E  6E20               	movwf	(___fldiv@b+2)^0,c
  8552  002C20  0E00               	movlw	0
  8553  002C22  6E21               	movwf	(___fldiv@b+3)^0,c
  8554  002C24                     l6567:
  8555  002C24  5025               	movf	(___fldiv@a+3)^0,w,c
  8556  002C26  0B80               	andlw	128
  8557  002C28  1A2E               	xorwf	___fldiv@sign^0,f,c
  8558  002C2A  5025               	movf	(___fldiv@a+3)^0,w,c
  8559  002C2C  2425               	addwf	(___fldiv@a+3)^0,w,c
  8560  002C2E  6E36               	movwf	___fldiv@aexp^0,c
  8561  002C30  AE24               	btfss	(___fldiv@a+2)^0,7,c
  8562  002C32  EF1D  F016         	goto	u6581
  8563  002C36  EF1F  F016         	goto	u6580
  8564  002C3A                     u6581:
  8565  002C3A  EF20  F016         	goto	l6575
  8566  002C3E                     u6580:
  8567  002C3E  8036               	bsf	___fldiv@aexp^0,0,c
  8568  002C40                     l6575:
  8569  002C40  5036               	movf	___fldiv@aexp^0,w,c
  8570  002C42  B4D8               	btfsc	status,2,c
  8571  002C44  EF26  F016         	goto	u6591
  8572  002C48  EF28  F016         	goto	u6590
  8573  002C4C                     u6591:
  8574  002C4C  EF3D  F016         	goto	l6585
  8575  002C50                     u6590:
  8576  002C50  2836               	incf	___fldiv@aexp^0,w,c
  8577  002C52  A4D8               	btfss	status,2,c
  8578  002C54  EF2E  F016         	goto	u6601
  8579  002C58  EF30  F016         	goto	u6600
  8580  002C5C                     u6601:
  8581  002C5C  EF38  F016         	goto	l6581
  8582  002C60                     u6600:
  8583  002C60  0E00               	movlw	0
  8584  002C62  6E22               	movwf	___fldiv@a^0,c
  8585  002C64  0E00               	movlw	0
  8586  002C66  6E23               	movwf	(___fldiv@a+1)^0,c
  8587  002C68  0E00               	movlw	0
  8588  002C6A  6E24               	movwf	(___fldiv@a+2)^0,c
  8589  002C6C  0E00               	movlw	0
  8590  002C6E  6E25               	movwf	(___fldiv@a+3)^0,c
  8591  002C70                     l6581:
  8592  002C70  8E24               	bsf	(___fldiv@a+2)^0,7,c
  8593  002C72  0E00               	movlw	0
  8594  002C74  6E25               	movwf	(___fldiv@a+3)^0,c
  8595  002C76  EF45  F016         	goto	l6587
  8596  002C7A                     l6585:
  8597  002C7A  0E00               	movlw	0
  8598  002C7C  6E22               	movwf	___fldiv@a^0,c
  8599  002C7E  0E00               	movlw	0
  8600  002C80  6E23               	movwf	(___fldiv@a+1)^0,c
  8601  002C82  0E00               	movlw	0
  8602  002C84  6E24               	movwf	(___fldiv@a+2)^0,c
  8603  002C86  0E00               	movlw	0
  8604  002C88  6E25               	movwf	(___fldiv@a+3)^0,c
  8605  002C8A                     l6587:
  8606  002C8A  5022               	movf	___fldiv@a^0,w,c
  8607  002C8C  1023               	iorwf	(___fldiv@a+1)^0,w,c
  8608  002C8E  1024               	iorwf	(___fldiv@a+2)^0,w,c
  8609  002C90  1025               	iorwf	(___fldiv@a+3)^0,w,c
  8610  002C92  A4D8               	btfss	status,2,c
  8611  002C94  EF4E  F016         	goto	u6611
  8612  002C98  EF50  F016         	goto	u6610
  8613  002C9C                     u6611:
  8614  002C9C  EF68  F016         	goto	l6599
  8615  002CA0                     u6610:
  8616  002CA0  0E00               	movlw	0
  8617  002CA2  6E1E               	movwf	___fldiv@b^0,c
  8618  002CA4  0E00               	movlw	0
  8619  002CA6  6E1F               	movwf	(___fldiv@b+1)^0,c
  8620  002CA8  0E00               	movlw	0
  8621  002CAA  6E20               	movwf	(___fldiv@b+2)^0,c
  8622  002CAC  0E00               	movlw	0
  8623  002CAE  6E21               	movwf	(___fldiv@b+3)^0,c
  8624  002CB0  0E80               	movlw	128
  8625  002CB2  1220               	iorwf	(___fldiv@b+2)^0,f,c
  8626  002CB4  0E7F               	movlw	127
  8627  002CB6  1221               	iorwf	(___fldiv@b+3)^0,f,c
  8628  002CB8                     l6593:
  8629  002CB8  502E               	movf	___fldiv@sign^0,w,c
  8630  002CBA  1221               	iorwf	(___fldiv@b+3)^0,f,c
  8631  002CBC  C01E  F01E         	movff	___fldiv@b,?___fldiv
  8632  002CC0  C01F  F01F         	movff	___fldiv@b+1,?___fldiv+1
  8633  002CC4  C020  F020         	movff	___fldiv@b+2,?___fldiv+2
  8634  002CC8  C021  F021         	movff	___fldiv@b+3,?___fldiv+3
  8635  002CCC  EFAB  F017         	goto	l1306
  8636  002CD0                     l6599:
  8637  002CD0  5035               	movf	___fldiv@bexp^0,w,c
  8638  002CD2  A4D8               	btfss	status,2,c
  8639  002CD4  EF6E  F016         	goto	u6621
  8640  002CD8  EF70  F016         	goto	u6620
  8641  002CDC                     u6621:
  8642  002CDC  EF7A  F016         	goto	l6607
  8643  002CE0                     u6620:
  8644  002CE0  0E00               	movlw	0
  8645  002CE2  6E1E               	movwf	?___fldiv^0,c
  8646  002CE4  0E00               	movlw	0
  8647  002CE6  6E1F               	movwf	(?___fldiv+1)^0,c
  8648  002CE8  0E00               	movlw	0
  8649  002CEA  6E20               	movwf	(?___fldiv+2)^0,c
  8650  002CEC  0E00               	movlw	0
  8651  002CEE  6E21               	movwf	(?___fldiv+3)^0,c
  8652  002CF0  EFAB  F017         	goto	l1306
  8653  002CF4                     l6607:
  8654  002CF4  5036               	movf	___fldiv@aexp^0,w,c
  8655  002CF6  C035  F026         	movff	___fldiv@bexp,??___fldiv
  8656  002CFA  6A27               	clrf	(??___fldiv+1)^0,c
  8657  002CFC  5E26               	subwf	??___fldiv^0,f,c
  8658  002CFE  0E00               	movlw	0
  8659  002D00  5A27               	subwfb	(??___fldiv+1)^0,f,c
  8660  002D02  0E7F               	movlw	127
  8661  002D04  2426               	addwf	??___fldiv^0,w,c
  8662  002D06  6E2F               	movwf	___fldiv@new_exp^0,c
  8663  002D08  0E00               	movlw	0
  8664  002D0A  2027               	addwfc	(??___fldiv+1)^0,w,c
  8665  002D0C  6E30               	movwf	(___fldiv@new_exp+1)^0,c
  8666  002D0E  C01E  F02A         	movff	___fldiv@b,___fldiv@rem
  8667  002D12  C01F  F02B         	movff	___fldiv@b+1,___fldiv@rem+1
  8668  002D16  C020  F02C         	movff	___fldiv@b+2,___fldiv@rem+2
  8669  002D1A  C021  F02D         	movff	___fldiv@b+3,___fldiv@rem+3
  8670  002D1E  0E00               	movlw	0
  8671  002D20  6E1E               	movwf	___fldiv@b^0,c
  8672  002D22  0E00               	movlw	0
  8673  002D24  6E1F               	movwf	(___fldiv@b+1)^0,c
  8674  002D26  0E00               	movlw	0
  8675  002D28  6E20               	movwf	(___fldiv@b+2)^0,c
  8676  002D2A  0E00               	movlw	0
  8677  002D2C  6E21               	movwf	(___fldiv@b+3)^0,c
  8678  002D2E  0E00               	movlw	0
  8679  002D30  6E31               	movwf	___fldiv@grs^0,c
  8680  002D32  0E00               	movlw	0
  8681  002D34  6E32               	movwf	(___fldiv@grs+1)^0,c
  8682  002D36  0E00               	movlw	0
  8683  002D38  6E33               	movwf	(___fldiv@grs+2)^0,c
  8684  002D3A  0E00               	movlw	0
  8685  002D3C  6E34               	movwf	(___fldiv@grs+3)^0,c
  8686  002D3E  0E00               	movlw	0
  8687  002D40  6E36               	movwf	___fldiv@aexp^0,c
  8688  002D42  EFDB  F016         	goto	l1308
  8689  002D46                     l6617:
  8690  002D46  5036               	movf	___fldiv@aexp^0,w,c
  8691  002D48  B4D8               	btfsc	status,2,c
  8692  002D4A  EFA9  F016         	goto	u6631
  8693  002D4E  EFAB  F016         	goto	u6630
  8694  002D52                     u6631:
  8695  002D52  EFC2  F016         	goto	l6625
  8696  002D56                     u6630:
  8697  002D56  90D8               	bcf	status,0,c
  8698  002D58  362A               	rlcf	___fldiv@rem^0,f,c
  8699  002D5A  362B               	rlcf	(___fldiv@rem+1)^0,f,c
  8700  002D5C  362C               	rlcf	(___fldiv@rem+2)^0,f,c
  8701  002D5E  362D               	rlcf	(___fldiv@rem+3)^0,f,c
  8702  002D60  90D8               	bcf	status,0,c
  8703  002D62  361E               	rlcf	___fldiv@b^0,f,c
  8704  002D64  361F               	rlcf	(___fldiv@b+1)^0,f,c
  8705  002D66  3620               	rlcf	(___fldiv@b+2)^0,f,c
  8706  002D68  3621               	rlcf	(___fldiv@b+3)^0,f,c
  8707  002D6A  AE34               	btfss	(___fldiv@grs+3)^0,7,c
  8708  002D6C  EFBA  F016         	goto	u6641
  8709  002D70  EFBC  F016         	goto	u6640
  8710  002D74                     u6641:
  8711  002D74  EFBD  F016         	goto	l1311
  8712  002D78                     u6640:
  8713  002D78  801E               	bsf	___fldiv@b^0,0,c
  8714  002D7A                     l1311:
  8715  002D7A  90D8               	bcf	status,0,c
  8716  002D7C  3631               	rlcf	___fldiv@grs^0,f,c
  8717  002D7E  3632               	rlcf	(___fldiv@grs+1)^0,f,c
  8718  002D80  3633               	rlcf	(___fldiv@grs+2)^0,f,c
  8719  002D82  3634               	rlcf	(___fldiv@grs+3)^0,f,c
  8720  002D84                     l6625:
  8721  002D84  5022               	movf	___fldiv@a^0,w,c
  8722  002D86  5C2A               	subwf	___fldiv@rem^0,w,c
  8723  002D88  5023               	movf	(___fldiv@a+1)^0,w,c
  8724  002D8A  582B               	subwfb	(___fldiv@rem+1)^0,w,c
  8725  002D8C  5024               	movf	(___fldiv@a+2)^0,w,c
  8726  002D8E  582C               	subwfb	(___fldiv@rem+2)^0,w,c
  8727  002D90  5025               	movf	(___fldiv@a+3)^0,w,c
  8728  002D92  582D               	subwfb	(___fldiv@rem+3)^0,w,c
  8729  002D94  A0D8               	btfss	status,0,c
  8730  002D96  EFCF  F016         	goto	u6651
  8731  002D9A  EFD1  F016         	goto	u6650
  8732  002D9E                     u6651:
  8733  002D9E  EFDA  F016         	goto	l6631
  8734  002DA2                     u6650:
  8735  002DA2  8C34               	bsf	(___fldiv@grs+3)^0,6,c
  8736  002DA4  5022               	movf	___fldiv@a^0,w,c
  8737  002DA6  5E2A               	subwf	___fldiv@rem^0,f,c
  8738  002DA8  5023               	movf	(___fldiv@a+1)^0,w,c
  8739  002DAA  5A2B               	subwfb	(___fldiv@rem+1)^0,f,c
  8740  002DAC  5024               	movf	(___fldiv@a+2)^0,w,c
  8741  002DAE  5A2C               	subwfb	(___fldiv@rem+2)^0,f,c
  8742  002DB0  5025               	movf	(___fldiv@a+3)^0,w,c
  8743  002DB2  5A2D               	subwfb	(___fldiv@rem+3)^0,f,c
  8744  002DB4                     l6631:
  8745  002DB4  2A36               	incf	___fldiv@aexp^0,f,c
  8746  002DB6                     l1308:
  8747  002DB6  0E19               	movlw	25
  8748  002DB8  6436               	cpfsgt	___fldiv@aexp^0,c
  8749  002DBA  EFE1  F016         	goto	u6661
  8750  002DBE  EFE3  F016         	goto	u6660
  8751  002DC2                     u6661:
  8752  002DC2  EFA3  F016         	goto	l6617
  8753  002DC6                     u6660:
  8754  002DC6  502A               	movf	___fldiv@rem^0,w,c
  8755  002DC8  102B               	iorwf	(___fldiv@rem+1)^0,w,c
  8756  002DCA  102C               	iorwf	(___fldiv@rem+2)^0,w,c
  8757  002DCC  102D               	iorwf	(___fldiv@rem+3)^0,w,c
  8758  002DCE  B4D8               	btfsc	status,2,c
  8759  002DD0  EFEC  F016         	goto	u6671
  8760  002DD4  EFEE  F016         	goto	u6670
  8761  002DD8                     u6671:
  8762  002DD8  EF06  F017         	goto	l6643
  8763  002DDC                     u6670:
  8764  002DDC  8031               	bsf	___fldiv@grs^0,0,c
  8765  002DDE  EF06  F017         	goto	l6643
  8766  002DE2                     l6637:
  8767  002DE2  90D8               	bcf	status,0,c
  8768  002DE4  361E               	rlcf	___fldiv@b^0,f,c
  8769  002DE6  361F               	rlcf	(___fldiv@b+1)^0,f,c
  8770  002DE8  3620               	rlcf	(___fldiv@b+2)^0,f,c
  8771  002DEA  3621               	rlcf	(___fldiv@b+3)^0,f,c
  8772  002DEC  AE34               	btfss	(___fldiv@grs+3)^0,7,c
  8773  002DEE  EFFB  F016         	goto	u6681
  8774  002DF2  EFFD  F016         	goto	u6680
  8775  002DF6                     u6681:
  8776  002DF6  EFFE  F016         	goto	l1317
  8777  002DFA                     u6680:
  8778  002DFA  801E               	bsf	___fldiv@b^0,0,c
  8779  002DFC                     l1317:
  8780  002DFC  90D8               	bcf	status,0,c
  8781  002DFE  3631               	rlcf	___fldiv@grs^0,f,c
  8782  002E00  3632               	rlcf	(___fldiv@grs+1)^0,f,c
  8783  002E02  3633               	rlcf	(___fldiv@grs+2)^0,f,c
  8784  002E04  3634               	rlcf	(___fldiv@grs+3)^0,f,c
  8785  002E06  062F               	decf	___fldiv@new_exp^0,f,c
  8786  002E08  A0D8               	btfss	status,0,c
  8787  002E0A  0630               	decf	(___fldiv@new_exp+1)^0,f,c
  8788  002E0C                     l6643:
  8789  002E0C  AE20               	btfss	(___fldiv@b+2)^0,7,c
  8790  002E0E  EF0B  F017         	goto	u6691
  8791  002E12  EF0D  F017         	goto	u6690
  8792  002E16                     u6691:
  8793  002E16  EFF1  F016         	goto	l6637
  8794  002E1A                     u6690:
  8795  002E1A  0E00               	movlw	0
  8796  002E1C  6E36               	movwf	___fldiv@aexp^0,c
  8797  002E1E  AE34               	btfss	(___fldiv@grs+3)^0,7,c
  8798  002E20  EF14  F017         	goto	u6701
  8799  002E24  EF16  F017         	goto	u6700
  8800  002E28                     u6701:
  8801  002E28  EF3A  F017         	goto	l1319
  8802  002E2C                     u6700:
  8803  002E2C  0EFF               	movlw	255
  8804  002E2E  1431               	andwf	___fldiv@grs^0,w,c
  8805  002E30  6E26               	movwf	??___fldiv^0,c
  8806  002E32  0EFF               	movlw	255
  8807  002E34  1432               	andwf	(___fldiv@grs+1)^0,w,c
  8808  002E36  6E27               	movwf	(??___fldiv+1)^0,c
  8809  002E38  0EFF               	movlw	255
  8810  002E3A  1433               	andwf	(___fldiv@grs+2)^0,w,c
  8811  002E3C  6E28               	movwf	(??___fldiv+2)^0,c
  8812  002E3E  0E7F               	movlw	127
  8813  002E40  1434               	andwf	(___fldiv@grs+3)^0,w,c
  8814  002E42  6E29               	movwf	(??___fldiv+3)^0,c
  8815  002E44  5026               	movf	??___fldiv^0,w,c
  8816  002E46  1027               	iorwf	(??___fldiv+1)^0,w,c
  8817  002E48  1028               	iorwf	(??___fldiv+2)^0,w,c
  8818  002E4A  1029               	iorwf	(??___fldiv+3)^0,w,c
  8819  002E4C  B4D8               	btfsc	status,2,c
  8820  002E4E  EF2B  F017         	goto	u6711
  8821  002E52  EF2D  F017         	goto	u6710
  8822  002E56                     u6711:
  8823  002E56  EF31  F017         	goto	l1320
  8824  002E5A                     u6710:
  8825  002E5A                     l6651:
  8826  002E5A  0E01               	movlw	1
  8827  002E5C  6E36               	movwf	___fldiv@aexp^0,c
  8828  002E5E  EF3A  F017         	goto	l1319
  8829  002E62                     l1320:
  8830  002E62  A01E               	btfss	___fldiv@b^0,0,c
  8831  002E64  EF36  F017         	goto	u6721
  8832  002E68  EF38  F017         	goto	u6720
  8833  002E6C                     u6721:
  8834  002E6C  EF3A  F017         	goto	l1319
  8835  002E70                     u6720:
  8836  002E70  EF2D  F017         	goto	l6651
  8837  002E74                     l1319:
  8838  002E74  5036               	movf	___fldiv@aexp^0,w,c
  8839  002E76  B4D8               	btfsc	status,2,c
  8840  002E78  EF40  F017         	goto	u6731
  8841  002E7C  EF42  F017         	goto	u6730
  8842  002E80                     u6731:
  8843  002E80  EF66  F017         	goto	l6663
  8844  002E84                     u6730:
  8845  002E84  0E01               	movlw	1
  8846  002E86  261E               	addwf	___fldiv@b^0,f,c
  8847  002E88  0E00               	movlw	0
  8848  002E8A  221F               	addwfc	(___fldiv@b+1)^0,f,c
  8849  002E8C  2220               	addwfc	(___fldiv@b+2)^0,f,c
  8850  002E8E  2221               	addwfc	(___fldiv@b+3)^0,f,c
  8851  002E90  A021               	btfss	(___fldiv@b+3)^0,0,c
  8852  002E92  EF4D  F017         	goto	u6741
  8853  002E96  EF4F  F017         	goto	u6740
  8854  002E9A                     u6741:
  8855  002E9A  EF66  F017         	goto	l6663
  8856  002E9E                     u6740:
  8857  002E9E  C01E  F026         	movff	___fldiv@b,??___fldiv
  8858  002EA2  C01F  F027         	movff	___fldiv@b+1,??___fldiv+1
  8859  002EA6  C020  F028         	movff	___fldiv@b+2,??___fldiv+2
  8860  002EAA  C021  F029         	movff	___fldiv@b+3,??___fldiv+3
  8861  002EAE  3429               	rlcf	(??___fldiv+3)^0,w,c
  8862  002EB0  3229               	rrcf	(??___fldiv+3)^0,f,c
  8863  002EB2  3228               	rrcf	(??___fldiv+2)^0,f,c
  8864  002EB4  3227               	rrcf	(??___fldiv+1)^0,f,c
  8865  002EB6  3226               	rrcf	??___fldiv^0,f,c
  8866  002EB8  C026  F01E         	movff	??___fldiv,___fldiv@b
  8867  002EBC  C027  F01F         	movff	??___fldiv+1,___fldiv@b+1
  8868  002EC0  C028  F020         	movff	??___fldiv+2,___fldiv@b+2
  8869  002EC4  C029  F021         	movff	??___fldiv+3,___fldiv@b+3
  8870  002EC8  4A2F               	infsnz	___fldiv@new_exp^0,f,c
  8871  002ECA  2A30               	incf	(___fldiv@new_exp+1)^0,f,c
  8872  002ECC                     l6663:
  8873  002ECC  BE30               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8874  002ECE  EF71  F017         	goto	u6751
  8875  002ED2  5030               	movf	(___fldiv@new_exp+1)^0,w,c
  8876  002ED4  E108               	bnz	u6750
  8877  002ED6  282F               	incf	___fldiv@new_exp^0,w,c
  8878  002ED8  A0D8               	btfss	status,0,c
  8879  002EDA  EF71  F017         	goto	u6751
  8880  002EDE  EF73  F017         	goto	u6750
  8881  002EE2                     u6751:
  8882  002EE2  EF7E  F017         	goto	l6667
  8883  002EE6                     u6750:
  8884  002EE6  0E00               	movlw	0
  8885  002EE8  6E30               	movwf	(___fldiv@new_exp+1)^0,c
  8886  002EEA  682F               	setf	___fldiv@new_exp^0,c
  8887  002EEC  0E00               	movlw	0
  8888  002EEE  6E1E               	movwf	___fldiv@b^0,c
  8889  002EF0  0E00               	movlw	0
  8890  002EF2  6E1F               	movwf	(___fldiv@b+1)^0,c
  8891  002EF4  0E00               	movlw	0
  8892  002EF6  6E20               	movwf	(___fldiv@b+2)^0,c
  8893  002EF8  0E00               	movlw	0
  8894  002EFA  6E21               	movwf	(___fldiv@b+3)^0,c
  8895  002EFC                     l6667:
  8896  002EFC  BE30               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8897  002EFE  EF8B  F017         	goto	u6760
  8898  002F02  5030               	movf	(___fldiv@new_exp+1)^0,w,c
  8899  002F04  E106               	bnz	u6761
  8900  002F06  042F               	decf	___fldiv@new_exp^0,w,c
  8901  002F08  B0D8               	btfsc	status,0,c
  8902  002F0A  EF89  F017         	goto	u6761
  8903  002F0E  EF8B  F017         	goto	u6760
  8904  002F12                     u6761:
  8905  002F12  EF99  F017         	goto	l6671
  8906  002F16                     u6760:
  8907  002F16  0E00               	movlw	0
  8908  002F18  6E30               	movwf	(___fldiv@new_exp+1)^0,c
  8909  002F1A  0E00               	movlw	0
  8910  002F1C  6E2F               	movwf	___fldiv@new_exp^0,c
  8911  002F1E  0E00               	movlw	0
  8912  002F20  6E1E               	movwf	___fldiv@b^0,c
  8913  002F22  0E00               	movlw	0
  8914  002F24  6E1F               	movwf	(___fldiv@b+1)^0,c
  8915  002F26  0E00               	movlw	0
  8916  002F28  6E20               	movwf	(___fldiv@b+2)^0,c
  8917  002F2A  0E00               	movlw	0
  8918  002F2C  6E21               	movwf	(___fldiv@b+3)^0,c
  8919  002F2E  0E00               	movlw	0
  8920  002F30  6E2E               	movwf	___fldiv@sign^0,c
  8921  002F32                     l6671:
  8922  002F32  C02F  F035         	movff	___fldiv@new_exp,___fldiv@bexp
  8923  002F36  A035               	btfss	___fldiv@bexp^0,0,c
  8924  002F38  EFA0  F017         	goto	u6771
  8925  002F3C  EFA2  F017         	goto	u6770
  8926  002F40                     u6771:
  8927  002F40  EFA5  F017         	goto	l6677
  8928  002F44                     u6770:
  8929  002F44  8E20               	bsf	(___fldiv@b+2)^0,7,c
  8930  002F46  EFA6  F017         	goto	l6679
  8931  002F4A                     l6677:
  8932  002F4A  9E20               	bcf	(___fldiv@b+2)^0,7,c
  8933  002F4C                     l6679:
  8934  002F4C  90D8               	bcf	status,0,c
  8935  002F4E  3035               	rrcf	___fldiv@bexp^0,w,c
  8936  002F50  6E21               	movwf	(___fldiv@b+3)^0,c
  8937  002F52  EF5C  F016         	goto	l6593
  8938  002F56                     l1306:
  8939  002F56  0012               	return		;funcret
  8940  002F58                     __end_of___fldiv:
  8941                           	callstack 0
  8942                           
  8943 ;; *************** function ___fladd *****************
  8944 ;; Defined at:
  8945 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
  8946 ;; Parameters:    Size  Location     Type
  8947 ;;  b               4   54[COMRAM] unsigned char 
  8948 ;;  a               4   58[COMRAM] unsigned char 
  8949 ;; Auto vars:     Size  Location     Type
  8950 ;;  grs             1   69[COMRAM] unsigned char 
  8951 ;;  bexp            1   68[COMRAM] unsigned char 
  8952 ;;  aexp            1   67[COMRAM] unsigned char 
  8953 ;;  signs           1   66[COMRAM] unsigned char 
  8954 ;; Return value:  Size  Location     Type
  8955 ;;                  4   54[COMRAM] unsigned char 
  8956 ;; Registers used:
  8957 ;;		wreg, status,2, status,0
  8958 ;; Tracked objects:
  8959 ;;		On entry : 0/0
  8960 ;;		On exit  : 0/0
  8961 ;;		Unchanged: 0/0
  8962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8963 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8964 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8965 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8966 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8967 ;;Total ram usage:       16 bytes
  8968 ;; Hardware stack levels used:    1
  8969 ;; Hardware stack levels required when called:    4
  8970 ;; This function calls:
  8971 ;;		Nothing
  8972 ;; This function is called by:
  8973 ;;		_SHT40_temp_GetValue
  8974 ;;		_SHT40_humy_GetValue
  8975 ;;		___flsub
  8976 ;;		_efgtoa
  8977 ;; This function uses a non-reentrant model
  8978 ;;
  8979                           
  8980                           	psect	text44
  8981  0022D4                     __ptext44:
  8982                           	callstack 0
  8983  0022D4                     ___fladd:
  8984                           	callstack 21
  8985  0022D4  503A               	movf	(___fladd@b+3)^0,w,c
  8986  0022D6  0B80               	andlw	128
  8987  0022D8  6E43               	movwf	___fladd@signs^0,c
  8988  0022DA  503A               	movf	(___fladd@b+3)^0,w,c
  8989  0022DC  243A               	addwf	(___fladd@b+3)^0,w,c
  8990  0022DE  6E45               	movwf	___fladd@bexp^0,c
  8991  0022E0  AE39               	btfss	(___fladd@b+2)^0,7,c
  8992  0022E2  EF75  F011         	goto	u6121
  8993  0022E6  EF77  F011         	goto	u6120
  8994  0022EA                     u6121:
  8995  0022EA  EF78  F011         	goto	l6325
  8996  0022EE                     u6120:
  8997  0022EE  8045               	bsf	___fladd@bexp^0,0,c
  8998  0022F0                     l6325:
  8999  0022F0  5045               	movf	___fladd@bexp^0,w,c
  9000  0022F2  B4D8               	btfsc	status,2,c
  9001  0022F4  EF7E  F011         	goto	u6131
  9002  0022F8  EF80  F011         	goto	u6130
  9003  0022FC                     u6131:
  9004  0022FC  EF95  F011         	goto	l6335
  9005  002300                     u6130:
  9006  002300  2845               	incf	___fladd@bexp^0,w,c
  9007  002302  A4D8               	btfss	status,2,c
  9008  002304  EF86  F011         	goto	u6141
  9009  002308  EF88  F011         	goto	u6140
  9010  00230C                     u6141:
  9011  00230C  EF90  F011         	goto	l6331
  9012  002310                     u6140:
  9013  002310  0E00               	movlw	0
  9014  002312  6E37               	movwf	___fladd@b^0,c
  9015  002314  0E00               	movlw	0
  9016  002316  6E38               	movwf	(___fladd@b+1)^0,c
  9017  002318  0E00               	movlw	0
  9018  00231A  6E39               	movwf	(___fladd@b+2)^0,c
  9019  00231C  0E00               	movlw	0
  9020  00231E  6E3A               	movwf	(___fladd@b+3)^0,c
  9021  002320                     l6331:
  9022  002320  8E39               	bsf	(___fladd@b+2)^0,7,c
  9023  002322  0E00               	movlw	0
  9024  002324  6E3A               	movwf	(___fladd@b+3)^0,c
  9025  002326  EF9D  F011         	goto	l6337
  9026  00232A                     l6335:
  9027  00232A  0E00               	movlw	0
  9028  00232C  6E37               	movwf	___fladd@b^0,c
  9029  00232E  0E00               	movlw	0
  9030  002330  6E38               	movwf	(___fladd@b+1)^0,c
  9031  002332  0E00               	movlw	0
  9032  002334  6E39               	movwf	(___fladd@b+2)^0,c
  9033  002336  0E00               	movlw	0
  9034  002338  6E3A               	movwf	(___fladd@b+3)^0,c
  9035  00233A                     l6337:
  9036  00233A  503E               	movf	(___fladd@a+3)^0,w,c
  9037  00233C  0B80               	andlw	128
  9038  00233E  6E44               	movwf	___fladd@aexp^0,c
  9039  002340  5043               	movf	___fladd@signs^0,w,c
  9040  002342  1844               	xorwf	___fladd@aexp^0,w,c
  9041  002344  B4D8               	btfsc	status,2,c
  9042  002346  EFA7  F011         	goto	u6151
  9043  00234A  EFA9  F011         	goto	u6150
  9044  00234E                     u6151:
  9045  00234E  EFAA  F011         	goto	l6343
  9046  002352                     u6150:
  9047  002352  8C43               	bsf	___fladd@signs^0,6,c
  9048  002354                     l6343:
  9049  002354  503E               	movf	(___fladd@a+3)^0,w,c
  9050  002356  243E               	addwf	(___fladd@a+3)^0,w,c
  9051  002358  6E44               	movwf	___fladd@aexp^0,c
  9052  00235A  AE3D               	btfss	(___fladd@a+2)^0,7,c
  9053  00235C  EFB2  F011         	goto	u6161
  9054  002360  EFB4  F011         	goto	u6160
  9055  002364                     u6161:
  9056  002364  EFB5  F011         	goto	l6349
  9057  002368                     u6160:
  9058  002368  8044               	bsf	___fladd@aexp^0,0,c
  9059  00236A                     l6349:
  9060  00236A  5044               	movf	___fladd@aexp^0,w,c
  9061  00236C  B4D8               	btfsc	status,2,c
  9062  00236E  EFBB  F011         	goto	u6171
  9063  002372  EFBD  F011         	goto	u6170
  9064  002376                     u6171:
  9065  002376  EFD2  F011         	goto	l6359
  9066  00237A                     u6170:
  9067  00237A  2844               	incf	___fladd@aexp^0,w,c
  9068  00237C  A4D8               	btfss	status,2,c
  9069  00237E  EFC3  F011         	goto	u6181
  9070  002382  EFC5  F011         	goto	u6180
  9071  002386                     u6181:
  9072  002386  EFCD  F011         	goto	l6355
  9073  00238A                     u6180:
  9074  00238A  0E00               	movlw	0
  9075  00238C  6E3B               	movwf	___fladd@a^0,c
  9076  00238E  0E00               	movlw	0
  9077  002390  6E3C               	movwf	(___fladd@a+1)^0,c
  9078  002392  0E00               	movlw	0
  9079  002394  6E3D               	movwf	(___fladd@a+2)^0,c
  9080  002396  0E00               	movlw	0
  9081  002398  6E3E               	movwf	(___fladd@a+3)^0,c
  9082  00239A                     l6355:
  9083  00239A  8E3D               	bsf	(___fladd@a+2)^0,7,c
  9084  00239C  0E00               	movlw	0
  9085  00239E  6E3E               	movwf	(___fladd@a+3)^0,c
  9086  0023A0  EFDA  F011         	goto	l6361
  9087  0023A4                     l6359:
  9088  0023A4  0E00               	movlw	0
  9089  0023A6  6E3B               	movwf	___fladd@a^0,c
  9090  0023A8  0E00               	movlw	0
  9091  0023AA  6E3C               	movwf	(___fladd@a+1)^0,c
  9092  0023AC  0E00               	movlw	0
  9093  0023AE  6E3D               	movwf	(___fladd@a+2)^0,c
  9094  0023B0  0E00               	movlw	0
  9095  0023B2  6E3E               	movwf	(___fladd@a+3)^0,c
  9096  0023B4                     l6361:
  9097  0023B4  5045               	movf	___fladd@bexp^0,w,c
  9098  0023B6  5C44               	subwf	___fladd@aexp^0,w,c
  9099  0023B8  B0D8               	btfsc	status,0,c
  9100  0023BA  EFE1  F011         	goto	u6191
  9101  0023BE  EFE3  F011         	goto	u6190
  9102  0023C2                     u6191:
  9103  0023C2  EF0A  F012         	goto	l6397
  9104  0023C6                     u6190:
  9105  0023C6  AC43               	btfss	___fladd@signs^0,6,c
  9106  0023C8  EFE8  F011         	goto	u6201
  9107  0023CC  EFEA  F011         	goto	u6200
  9108  0023D0                     u6201:
  9109  0023D0  EFEC  F011         	goto	l6367
  9110  0023D4                     u6200:
  9111  0023D4  0E80               	movlw	128
  9112  0023D6  1A43               	xorwf	___fladd@signs^0,f,c
  9113  0023D8                     l6367:
  9114  0023D8  C045  F046         	movff	___fladd@bexp,___fladd@grs
  9115  0023DC  C044  F045         	movff	___fladd@aexp,___fladd@bexp
  9116  0023E0  C046  F044         	movff	___fladd@grs,___fladd@aexp
  9117  0023E4  C037  F046         	movff	___fladd@b,___fladd@grs
  9118  0023E8  C03B  F037         	movff	___fladd@a,___fladd@b
  9119  0023EC  C046  F03B         	movff	___fladd@grs,___fladd@a
  9120  0023F0  C038  F046         	movff	___fladd@b+1,___fladd@grs
  9121  0023F4  C03C  F038         	movff	___fladd@a+1,___fladd@b+1
  9122  0023F8  C046  F03C         	movff	___fladd@grs,___fladd@a+1
  9123  0023FC  C039  F046         	movff	___fladd@b+2,___fladd@grs
  9124  002400  C03D  F039         	movff	___fladd@a+2,___fladd@b+2
  9125  002404  C046  F03D         	movff	___fladd@grs,___fladd@a+2
  9126  002408  C03A  F046         	movff	___fladd@b+3,___fladd@grs
  9127  00240C  C03E  F03A         	movff	___fladd@a+3,___fladd@b+3
  9128  002410  C046  F03E         	movff	___fladd@grs,___fladd@a+3
  9129  002414                     l6397:
  9130  002414  0E00               	movlw	0
  9131  002416  6E46               	movwf	___fladd@grs^0,c
  9132  002418  5045               	movf	___fladd@bexp^0,w,c
  9133  00241A  C044  F03F         	movff	___fladd@aexp,??___fladd
  9134  00241E  6A40               	clrf	(??___fladd+1)^0,c
  9135  002420  5E3F               	subwf	??___fladd^0,f,c
  9136  002422  0E00               	movlw	0
  9137  002424  5A40               	subwfb	(??___fladd+1)^0,f,c
  9138  002426  BE40               	btfsc	(??___fladd+1)^0,7,c
  9139  002428  EF1F  F012         	goto	u6211
  9140  00242C  5040               	movf	(??___fladd+1)^0,w,c
  9141  00242E  E109               	bnz	u6210
  9142  002430  0E1A               	movlw	26
  9143  002432  5C3F               	subwf	??___fladd^0,w,c
  9144  002434  A0D8               	btfss	status,0,c
  9145  002436  EF1F  F012         	goto	u6211
  9146  00243A  EF21  F012         	goto	u6210
  9147  00243E                     u6211:
  9148  00243E  EF58  F012         	goto	l1253
  9149  002442                     u6210:
  9150  002442  5037               	movf	___fladd@b^0,w,c
  9151  002444  1038               	iorwf	(___fladd@b+1)^0,w,c
  9152  002446  1039               	iorwf	(___fladd@b+2)^0,w,c
  9153  002448  103A               	iorwf	(___fladd@b+3)^0,w,c
  9154  00244A  A4D8               	btfss	status,2,c
  9155  00244C  EF2A  F012         	goto	u6221
  9156  002450  EF2D  F012         	goto	u6220
  9157  002454                     u6221:
  9158  002454  0E01               	movlw	1
  9159  002456  EF2E  F012         	goto	u6230
  9160  00245A                     u6220:
  9161  00245A  0E00               	movlw	0
  9162  00245C                     u6230:
  9163  00245C  6E46               	movwf	___fladd@grs^0,c
  9164  00245E  0E00               	movlw	0
  9165  002460  6E37               	movwf	___fladd@b^0,c
  9166  002462  0E00               	movlw	0
  9167  002464  6E38               	movwf	(___fladd@b+1)^0,c
  9168  002466  0E00               	movlw	0
  9169  002468  6E39               	movwf	(___fladd@b+2)^0,c
  9170  00246A  0E00               	movlw	0
  9171  00246C  6E3A               	movwf	(___fladd@b+3)^0,c
  9172  00246E  C044  F045         	movff	___fladd@aexp,___fladd@bexp
  9173  002472  EF61  F012         	goto	l1252
  9174  002476                     l1254:
  9175  002476  A046               	btfss	___fladd@grs^0,0,c
  9176  002478  EF40  F012         	goto	u6241
  9177  00247C  EF42  F012         	goto	u6240
  9178  002480                     u6241:
  9179  002480  EF48  F012         	goto	l6409
  9180  002484                     u6240:
  9181  002484  90D8               	bcf	status,0,c
  9182  002486  3046               	rrcf	___fladd@grs^0,w,c
  9183  002488  0901               	iorlw	1
  9184  00248A  6E46               	movwf	___fladd@grs^0,c
  9185  00248C  EF4A  F012         	goto	l6411
  9186  002490                     l6409:
  9187  002490  90D8               	bcf	status,0,c
  9188  002492  3246               	rrcf	___fladd@grs^0,f,c
  9189  002494                     l6411:
  9190  002494  A037               	btfss	___fladd@b^0,0,c
  9191  002496  EF4F  F012         	goto	u6251
  9192  00249A  EF51  F012         	goto	u6250
  9193  00249E                     u6251:
  9194  00249E  EF52  F012         	goto	l6415
  9195  0024A2                     u6250:
  9196  0024A2  8E46               	bsf	___fladd@grs^0,7,c
  9197  0024A4                     l6415:
  9198  0024A4  343A               	rlcf	(___fladd@b+3)^0,w,c
  9199  0024A6  323A               	rrcf	(___fladd@b+3)^0,f,c
  9200  0024A8  3239               	rrcf	(___fladd@b+2)^0,f,c
  9201  0024AA  3238               	rrcf	(___fladd@b+1)^0,f,c
  9202  0024AC  3237               	rrcf	___fladd@b^0,f,c
  9203  0024AE  2A45               	incf	___fladd@bexp^0,f,c
  9204  0024B0                     l1253:
  9205  0024B0  5044               	movf	___fladd@aexp^0,w,c
  9206  0024B2  5C45               	subwf	___fladd@bexp^0,w,c
  9207  0024B4  A0D8               	btfss	status,0,c
  9208  0024B6  EF5F  F012         	goto	u6261
  9209  0024BA  EF61  F012         	goto	u6260
  9210  0024BE                     u6261:
  9211  0024BE  EF3B  F012         	goto	l1254
  9212  0024C2                     u6260:
  9213  0024C2                     l1252:
  9214  0024C2  BC43               	btfsc	___fladd@signs^0,6,c
  9215  0024C4  EF66  F012         	goto	u6271
  9216  0024C8  EF68  F012         	goto	u6270
  9217  0024CC                     u6271:
  9218  0024CC  EFA8  F012         	goto	l6443
  9219  0024D0                     u6270:
  9220  0024D0  5045               	movf	___fladd@bexp^0,w,c
  9221  0024D2  A4D8               	btfss	status,2,c
  9222  0024D4  EF6E  F012         	goto	u6281
  9223  0024D8  EF70  F012         	goto	u6280
  9224  0024DC                     u6281:
  9225  0024DC  EF7A  F012         	goto	l6425
  9226  0024E0                     u6280:
  9227  0024E0  0E00               	movlw	0
  9228  0024E2  6E37               	movwf	?___fladd^0,c
  9229  0024E4  0E00               	movlw	0
  9230  0024E6  6E38               	movwf	(?___fladd+1)^0,c
  9231  0024E8  0E00               	movlw	0
  9232  0024EA  6E39               	movwf	(?___fladd+2)^0,c
  9233  0024EC  0E00               	movlw	0
  9234  0024EE  6E3A               	movwf	(?___fladd+3)^0,c
  9235  0024F0  EFC9  F013         	goto	l1261
  9236  0024F4                     l6425:
  9237  0024F4  503B               	movf	___fladd@a^0,w,c
  9238  0024F6  2637               	addwf	___fladd@b^0,f,c
  9239  0024F8  503C               	movf	(___fladd@a+1)^0,w,c
  9240  0024FA  2238               	addwfc	(___fladd@b+1)^0,f,c
  9241  0024FC  503D               	movf	(___fladd@a+2)^0,w,c
  9242  0024FE  2239               	addwfc	(___fladd@b+2)^0,f,c
  9243  002500  503E               	movf	(___fladd@a+3)^0,w,c
  9244  002502  223A               	addwfc	(___fladd@b+3)^0,f,c
  9245  002504  A03A               	btfss	(___fladd@b+3)^0,0,c
  9246  002506  EF87  F012         	goto	u6291
  9247  00250A  EF89  F012         	goto	u6290
  9248  00250E                     u6291:
  9249  00250E  EF35  F013         	goto	l6479
  9250  002512                     u6290:
  9251  002512  A046               	btfss	___fladd@grs^0,0,c
  9252  002514  EF8E  F012         	goto	u6301
  9253  002518  EF90  F012         	goto	u6300
  9254  00251C                     u6301:
  9255  00251C  EF96  F012         	goto	l6433
  9256  002520                     u6300:
  9257  002520  90D8               	bcf	status,0,c
  9258  002522  3046               	rrcf	___fladd@grs^0,w,c
  9259  002524  0901               	iorlw	1
  9260  002526  6E46               	movwf	___fladd@grs^0,c
  9261  002528  EF98  F012         	goto	l6435
  9262  00252C                     l6433:
  9263  00252C  90D8               	bcf	status,0,c
  9264  00252E  3246               	rrcf	___fladd@grs^0,f,c
  9265  002530                     l6435:
  9266  002530  A037               	btfss	___fladd@b^0,0,c
  9267  002532  EF9D  F012         	goto	u6311
  9268  002536  EF9F  F012         	goto	u6310
  9269  00253A                     u6311:
  9270  00253A  EFA0  F012         	goto	l6439
  9271  00253E                     u6310:
  9272  00253E  8E46               	bsf	___fladd@grs^0,7,c
  9273  002540                     l6439:
  9274  002540  343A               	rlcf	(___fladd@b+3)^0,w,c
  9275  002542  323A               	rrcf	(___fladd@b+3)^0,f,c
  9276  002544  3239               	rrcf	(___fladd@b+2)^0,f,c
  9277  002546  3238               	rrcf	(___fladd@b+1)^0,f,c
  9278  002548  3237               	rrcf	___fladd@b^0,f,c
  9279  00254A  2A45               	incf	___fladd@bexp^0,f,c
  9280  00254C  EF35  F013         	goto	l6479
  9281  002550                     l6443:
  9282  002550  503B               	movf	___fladd@a^0,w,c
  9283  002552  5C37               	subwf	___fladd@b^0,w,c
  9284  002554  503C               	movf	(___fladd@a+1)^0,w,c
  9285  002556  5838               	subwfb	(___fladd@b+1)^0,w,c
  9286  002558  503D               	movf	(___fladd@a+2)^0,w,c
  9287  00255A  5839               	subwfb	(___fladd@b+2)^0,w,c
  9288  00255C  503A               	movf	(___fladd@b+3)^0,w,c
  9289  00255E  0A80               	xorlw	128
  9290  002560  6E3F               	movwf	??___fladd^0,c
  9291  002562  503E               	movf	(___fladd@a+3)^0,w,c
  9292  002564  0A80               	xorlw	128
  9293  002566  583F               	subwfb	??___fladd^0,w,c
  9294  002568  B0D8               	btfsc	status,0,c
  9295  00256A  EFB9  F012         	goto	u6321
  9296  00256E  EFBB  F012         	goto	u6320
  9297  002572                     u6321:
  9298  002572  EFE6  F012         	goto	l6453
  9299  002576                     u6320:
  9300  002576  5037               	movf	___fladd@b^0,w,c
  9301  002578  5C3B               	subwf	___fladd@a^0,w,c
  9302  00257A  6E3F               	movwf	??___fladd^0,c
  9303  00257C  5038               	movf	(___fladd@b+1)^0,w,c
  9304  00257E  583C               	subwfb	(___fladd@a+1)^0,w,c
  9305  002580  6E40               	movwf	(??___fladd+1)^0,c
  9306  002582  5039               	movf	(___fladd@b+2)^0,w,c
  9307  002584  583D               	subwfb	(___fladd@a+2)^0,w,c
  9308  002586  6E41               	movwf	(??___fladd+2)^0,c
  9309  002588  503A               	movf	(___fladd@b+3)^0,w,c
  9310  00258A  583E               	subwfb	(___fladd@a+3)^0,w,c
  9311  00258C  6E42               	movwf	(??___fladd+3)^0,c
  9312  00258E  0EFF               	movlw	255
  9313  002590  243F               	addwf	??___fladd^0,w,c
  9314  002592  6E37               	movwf	___fladd@b^0,c
  9315  002594  0EFF               	movlw	255
  9316  002596  2040               	addwfc	(??___fladd+1)^0,w,c
  9317  002598  6E38               	movwf	(___fladd@b+1)^0,c
  9318  00259A  0EFF               	movlw	255
  9319  00259C  2041               	addwfc	(??___fladd+2)^0,w,c
  9320  00259E  6E39               	movwf	(___fladd@b+2)^0,c
  9321  0025A0  0EFF               	movlw	255
  9322  0025A2  2042               	addwfc	(??___fladd+3)^0,w,c
  9323  0025A4  6E3A               	movwf	(___fladd@b+3)^0,c
  9324  0025A6  0E80               	movlw	128
  9325  0025A8  1A43               	xorwf	___fladd@signs^0,f,c
  9326  0025AA  6C46               	negf	___fladd@grs^0,c
  9327  0025AC  5046               	movf	___fladd@grs^0,w,c
  9328  0025AE  A4D8               	btfss	status,2,c
  9329  0025B0  EFDC  F012         	goto	u6331
  9330  0025B4  EFDE  F012         	goto	u6330
  9331  0025B8                     u6331:
  9332  0025B8  EFEE  F012         	goto	l1269
  9333  0025BC                     u6330:
  9334  0025BC  0E01               	movlw	1
  9335  0025BE  2637               	addwf	___fladd@b^0,f,c
  9336  0025C0  0E00               	movlw	0
  9337  0025C2  2238               	addwfc	(___fladd@b+1)^0,f,c
  9338  0025C4  2239               	addwfc	(___fladd@b+2)^0,f,c
  9339  0025C6  223A               	addwfc	(___fladd@b+3)^0,f,c
  9340  0025C8  EFEE  F012         	goto	l1269
  9341  0025CC                     l6453:
  9342  0025CC  503B               	movf	___fladd@a^0,w,c
  9343  0025CE  5E37               	subwf	___fladd@b^0,f,c
  9344  0025D0  503C               	movf	(___fladd@a+1)^0,w,c
  9345  0025D2  5A38               	subwfb	(___fladd@b+1)^0,f,c
  9346  0025D4  503D               	movf	(___fladd@a+2)^0,w,c
  9347  0025D6  5A39               	subwfb	(___fladd@b+2)^0,f,c
  9348  0025D8  503E               	movf	(___fladd@a+3)^0,w,c
  9349  0025DA  5A3A               	subwfb	(___fladd@b+3)^0,f,c
  9350  0025DC                     l1269:
  9351  0025DC  5037               	movf	___fladd@b^0,w,c
  9352  0025DE  1038               	iorwf	(___fladd@b+1)^0,w,c
  9353  0025E0  1039               	iorwf	(___fladd@b+2)^0,w,c
  9354  0025E2  103A               	iorwf	(___fladd@b+3)^0,w,c
  9355  0025E4  A4D8               	btfss	status,2,c
  9356  0025E6  EFF7  F012         	goto	u6341
  9357  0025EA  EFF9  F012         	goto	u6340
  9358  0025EE                     u6341:
  9359  0025EE  EF2E  F013         	goto	l6477
  9360  0025F2                     u6340:
  9361  0025F2  5046               	movf	___fladd@grs^0,w,c
  9362  0025F4  A4D8               	btfss	status,2,c
  9363  0025F6  EFFF  F012         	goto	u6351
  9364  0025FA  EF01  F013         	goto	u6350
  9365  0025FE                     u6351:
  9366  0025FE  EF2E  F013         	goto	l6477
  9367  002602                     u6350:
  9368  002602  0E00               	movlw	0
  9369  002604  6E37               	movwf	?___fladd^0,c
  9370  002606  0E00               	movlw	0
  9371  002608  6E38               	movwf	(?___fladd+1)^0,c
  9372  00260A  0E00               	movlw	0
  9373  00260C  6E39               	movwf	(?___fladd+2)^0,c
  9374  00260E  0E00               	movlw	0
  9375  002610  6E3A               	movwf	(?___fladd+3)^0,c
  9376  002612  EFC9  F013         	goto	l1261
  9377  002616                     l6461:
  9378  002616  90D8               	bcf	status,0,c
  9379  002618  3637               	rlcf	___fladd@b^0,f,c
  9380  00261A  3638               	rlcf	(___fladd@b+1)^0,f,c
  9381  00261C  3639               	rlcf	(___fladd@b+2)^0,f,c
  9382  00261E  363A               	rlcf	(___fladd@b+3)^0,f,c
  9383  002620  AE46               	btfss	___fladd@grs^0,7,c
  9384  002622  EF15  F013         	goto	u6361
  9385  002626  EF17  F013         	goto	u6360
  9386  00262A                     u6361:
  9387  00262A  EF18  F013         	goto	l6467
  9388  00262E                     u6360:
  9389  00262E  8037               	bsf	___fladd@b^0,0,c
  9390  002630                     l6467:
  9391  002630  A046               	btfss	___fladd@grs^0,0,c
  9392  002632  EF1D  F013         	goto	u6371
  9393  002636  EF1F  F013         	goto	u6370
  9394  00263A                     u6371:
  9395  00263A  EF23  F013         	goto	l6471
  9396  00263E                     u6370:
  9397  00263E  80D8               	bsf	status,0,c
  9398  002640  3646               	rlcf	___fladd@grs^0,f,c
  9399  002642  EF25  F013         	goto	l6473
  9400  002646                     l6471:
  9401  002646  90D8               	bcf	status,0,c
  9402  002648  3646               	rlcf	___fladd@grs^0,f,c
  9403  00264A                     l6473:
  9404  00264A  5045               	movf	___fladd@bexp^0,w,c
  9405  00264C  B4D8               	btfsc	status,2,c
  9406  00264E  EF2B  F013         	goto	u6381
  9407  002652  EF2D  F013         	goto	u6380
  9408  002656                     u6381:
  9409  002656  EF2E  F013         	goto	l6477
  9410  00265A                     u6380:
  9411  00265A  0645               	decf	___fladd@bexp^0,f,c
  9412  00265C                     l6477:
  9413  00265C  AE39               	btfss	(___fladd@b+2)^0,7,c
  9414  00265E  EF33  F013         	goto	u6391
  9415  002662  EF35  F013         	goto	u6390
  9416  002666                     u6391:
  9417  002666  EF0B  F013         	goto	l6461
  9418  00266A                     u6390:
  9419  00266A                     l6479:
  9420  00266A  0E00               	movlw	0
  9421  00266C  6E44               	movwf	___fladd@aexp^0,c
  9422  00266E  AE46               	btfss	___fladd@grs^0,7,c
  9423  002670  EF3C  F013         	goto	u6401
  9424  002674  EF3E  F013         	goto	u6400
  9425  002678                     u6401:
  9426  002678  EF56  F013         	goto	l1278
  9427  00267C                     u6400:
  9428  00267C  C046  F03F         	movff	___fladd@grs,??___fladd
  9429  002680  0E7F               	movlw	127
  9430  002682  163F               	andwf	??___fladd^0,f,c
  9431  002684  B4D8               	btfsc	status,2,c
  9432  002686  EF47  F013         	goto	u6411
  9433  00268A  EF49  F013         	goto	u6410
  9434  00268E                     u6411:
  9435  00268E  EF4D  F013         	goto	l1279
  9436  002692                     u6410:
  9437  002692                     l6485:
  9438  002692  0E01               	movlw	1
  9439  002694  6E44               	movwf	___fladd@aexp^0,c
  9440  002696  EF56  F013         	goto	l1278
  9441  00269A                     l1279:
  9442  00269A  A037               	btfss	___fladd@b^0,0,c
  9443  00269C  EF52  F013         	goto	u6421
  9444  0026A0  EF54  F013         	goto	u6420
  9445  0026A4                     u6421:
  9446  0026A4  EF56  F013         	goto	l1278
  9447  0026A8                     u6420:
  9448  0026A8  EF49  F013         	goto	l6485
  9449  0026AC                     l1278:
  9450  0026AC  5044               	movf	___fladd@aexp^0,w,c
  9451  0026AE  B4D8               	btfsc	status,2,c
  9452  0026B0  EF5C  F013         	goto	u6431
  9453  0026B4  EF5E  F013         	goto	u6430
  9454  0026B8                     u6431:
  9455  0026B8  EF89  F013         	goto	l6497
  9456  0026BC                     u6430:
  9457  0026BC  0E01               	movlw	1
  9458  0026BE  2637               	addwf	___fladd@b^0,f,c
  9459  0026C0  0E00               	movlw	0
  9460  0026C2  2238               	addwfc	(___fladd@b+1)^0,f,c
  9461  0026C4  2239               	addwfc	(___fladd@b+2)^0,f,c
  9462  0026C6  223A               	addwfc	(___fladd@b+3)^0,f,c
  9463  0026C8  A03A               	btfss	(___fladd@b+3)^0,0,c
  9464  0026CA  EF69  F013         	goto	u6441
  9465  0026CE  EF6B  F013         	goto	u6440
  9466  0026D2                     u6441:
  9467  0026D2  EF89  F013         	goto	l6497
  9468  0026D6                     u6440:
  9469  0026D6  C037  F03F         	movff	___fladd@b,??___fladd
  9470  0026DA  C038  F040         	movff	___fladd@b+1,??___fladd+1
  9471  0026DE  C039  F041         	movff	___fladd@b+2,??___fladd+2
  9472  0026E2  C03A  F042         	movff	___fladd@b+3,??___fladd+3
  9473  0026E6  3442               	rlcf	(??___fladd+3)^0,w,c
  9474  0026E8  3242               	rrcf	(??___fladd+3)^0,f,c
  9475  0026EA  3241               	rrcf	(??___fladd+2)^0,f,c
  9476  0026EC  3240               	rrcf	(??___fladd+1)^0,f,c
  9477  0026EE  323F               	rrcf	??___fladd^0,f,c
  9478  0026F0  C03F  F037         	movff	??___fladd,___fladd@b
  9479  0026F4  C040  F038         	movff	??___fladd+1,___fladd@b+1
  9480  0026F8  C041  F039         	movff	??___fladd+2,___fladd@b+2
  9481  0026FC  C042  F03A         	movff	??___fladd+3,___fladd@b+3
  9482  002700  2845               	incf	___fladd@bexp^0,w,c
  9483  002702  B4D8               	btfsc	status,2,c
  9484  002704  EF86  F013         	goto	u6451
  9485  002708  EF88  F013         	goto	u6450
  9486  00270C                     u6451:
  9487  00270C  EF89  F013         	goto	l6497
  9488  002710                     u6450:
  9489  002710  2A45               	incf	___fladd@bexp^0,f,c
  9490  002712                     l6497:
  9491  002712  2845               	incf	___fladd@bexp^0,w,c
  9492  002714  B4D8               	btfsc	status,2,c
  9493  002716  EF8F  F013         	goto	u6461
  9494  00271A  EF91  F013         	goto	u6460
  9495  00271E                     u6461:
  9496  00271E  EF99  F013         	goto	l6501
  9497  002722                     u6460:
  9498  002722  5045               	movf	___fladd@bexp^0,w,c
  9499  002724  A4D8               	btfss	status,2,c
  9500  002726  EF97  F013         	goto	u6471
  9501  00272A  EF99  F013         	goto	u6470
  9502  00272E                     u6471:
  9503  00272E  EFAB  F013         	goto	l6505
  9504  002732                     u6470:
  9505  002732                     l6501:
  9506  002732  0E00               	movlw	0
  9507  002734  6E37               	movwf	___fladd@b^0,c
  9508  002736  0E00               	movlw	0
  9509  002738  6E38               	movwf	(___fladd@b+1)^0,c
  9510  00273A  0E00               	movlw	0
  9511  00273C  6E39               	movwf	(___fladd@b+2)^0,c
  9512  00273E  0E00               	movlw	0
  9513  002740  6E3A               	movwf	(___fladd@b+3)^0,c
  9514  002742  5045               	movf	___fladd@bexp^0,w,c
  9515  002744  A4D8               	btfss	status,2,c
  9516  002746  EFA7  F013         	goto	u6481
  9517  00274A  EFA9  F013         	goto	u6480
  9518  00274E                     u6481:
  9519  00274E  EFAB  F013         	goto	l6505
  9520  002752                     u6480:
  9521  002752  0E00               	movlw	0
  9522  002754  6E43               	movwf	___fladd@signs^0,c
  9523  002756                     l6505:
  9524  002756  A045               	btfss	___fladd@bexp^0,0,c
  9525  002758  EFB0  F013         	goto	u6491
  9526  00275C  EFB2  F013         	goto	u6490
  9527  002760                     u6491:
  9528  002760  EFB5  F013         	goto	l6509
  9529  002764                     u6490:
  9530  002764  8E39               	bsf	(___fladd@b+2)^0,7,c
  9531  002766  EFB6  F013         	goto	l6511
  9532  00276A                     l6509:
  9533  00276A  9E39               	bcf	(___fladd@b+2)^0,7,c
  9534  00276C                     l6511:
  9535  00276C  90D8               	bcf	status,0,c
  9536  00276E  3045               	rrcf	___fladd@bexp^0,w,c
  9537  002770  6E3A               	movwf	(___fladd@b+3)^0,c
  9538  002772  AE43               	btfss	___fladd@signs^0,7,c
  9539  002774  EFBE  F013         	goto	u6501
  9540  002778  EFC0  F013         	goto	u6500
  9541  00277C                     u6501:
  9542  00277C  EFC1  F013         	goto	l6517
  9543  002780                     u6500:
  9544  002780  8E3A               	bsf	(___fladd@b+3)^0,7,c
  9545  002782                     l6517:
  9546  002782  C037  F037         	movff	___fladd@b,?___fladd
  9547  002786  C038  F038         	movff	___fladd@b+1,?___fladd+1
  9548  00278A  C039  F039         	movff	___fladd@b+2,?___fladd+2
  9549  00278E  C03A  F03A         	movff	___fladd@b+3,?___fladd+3
  9550  002792                     l1261:
  9551  002792  0012               	return		;funcret
  9552  002794                     __end_of___fladd:
  9553                           	callstack 0
  9554                           
  9555 ;; *************** function _SHT40_Read *****************
  9556 ;; Defined at:
  9557 ;;		line 20 in file "sht40.c"
  9558 ;; Parameters:    Size  Location     Type
  9559 ;;		None
  9560 ;; Auto vars:     Size  Location     Type
  9561 ;;  regist          1   27[COMRAM] unsigned char 
  9562 ;; Return value:  Size  Location     Type
  9563 ;;                  1    wreg      void 
  9564 ;; Registers used:
  9565 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9566 ;; Tracked objects:
  9567 ;;		On entry : 0/0
  9568 ;;		On exit  : 0/0
  9569 ;;		Unchanged: 0/0
  9570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9572 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9573 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9574 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9575 ;;Total ram usage:        2 bytes
  9576 ;; Hardware stack levels used:    1
  9577 ;; Hardware stack levels required when called:   13
  9578 ;; This function calls:
  9579 ;;		_I2C_ReadNBytes
  9580 ;;		_I2C_WriteNBytes
  9581 ;; This function is called by:
  9582 ;;		_SHT40_temp_GetValue
  9583 ;;		_SHT40_humy_GetValue
  9584 ;; This function uses a non-reentrant model
  9585 ;;
  9586                           
  9587                           	psect	text45
  9588  0046B2                     __ptext45:
  9589                           	callstack 0
  9590  0046B2                     _SHT40_Read:
  9591                           	callstack 16
  9592  0046B2                     
  9593                           ;sht40.c: 21:     uint8_t regist = 0xFD;
  9594  0046B2  0EFD               	movlw	253
  9595  0046B4  6E1C               	movwf	SHT40_Read@regist^0,c
  9596  0046B6                     
  9597                           ;sht40.c: 27:     I2C_WriteNBytes(0x44, &regist, 1);
  9598  0046B6  0E1C               	movlw	low SHT40_Read@regist
  9599  0046B8  6E16               	movwf	I2C_WriteNBytes@data^0,c
  9600  0046BA  0E00               	movlw	high SHT40_Read@regist
  9601  0046BC  6E17               	movwf	(I2C_WriteNBytes@data+1)^0,c
  9602  0046BE  0E00               	movlw	0
  9603  0046C0  6E19               	movwf	(I2C_WriteNBytes@len+1)^0,c
  9604  0046C2  0E01               	movlw	1
  9605  0046C4  6E18               	movwf	I2C_WriteNBytes@len^0,c
  9606  0046C6  0E44               	movlw	68
  9607  0046C8  EC6F  F022         	call	_I2C_WriteNBytes
  9608  0046CC                     
  9609                           ;sht40.c: 28:     _delay((unsigned long)((10)*(8000000/4000.0)));
  9610  0046CC  0E1A               	movlw	26
  9611  0046CE  6E1B               	movwf	??_SHT40_Read^0,c
  9612  0046D0  0EF8               	movlw	248
  9613  0046D2                     u8457:
  9614  0046D2  2EE8               	decfsz	wreg,f,c
  9615  0046D4  D7FE               	bra	u8457
  9616  0046D6  2E1B               	decfsz	??_SHT40_Read^0,f,c
  9617  0046D8  D7FC               	bra	u8457
  9618  0046DA  F000 F000          	nop2	
  9619  0046DE                     
  9620                           ;sht40.c: 29:     I2C_ReadNBytes(0x44, &readBuffer, 6);
  9621  0046DE  0E74               	movlw	low _readBuffer
  9622  0046E0  6E16               	movwf	I2C_ReadNBytes@data^0,c
  9623  0046E2  0E01               	movlw	high _readBuffer
  9624  0046E4  6E17               	movwf	(I2C_ReadNBytes@data+1)^0,c
  9625  0046E6  0E00               	movlw	0
  9626  0046E8  6E19               	movwf	(I2C_ReadNBytes@len+1)^0,c
  9627  0046EA  0E06               	movlw	6
  9628  0046EC  6E18               	movwf	I2C_ReadNBytes@len^0,c
  9629  0046EE  0E44               	movlw	68
  9630  0046F0  EC14  F023         	call	_I2C_ReadNBytes
  9631  0046F4  0012               	return		;funcret
  9632  0046F6                     __end_of_SHT40_Read:
  9633                           	callstack 0
  9634                           
  9635 ;; *************** function _I2C_WriteNBytes *****************
  9636 ;; Defined at:
  9637 ;;		line 111 in file "mcc_generated_files/examples/i2c_master_example.c"
  9638 ;; Parameters:    Size  Location     Type
  9639 ;;  address         1    wreg     unsigned char 
  9640 ;;  data            2   21[COMRAM] PTR unsigned char 
  9641 ;;		 -> SHT40_Read@regist(1), 
  9642 ;;  len             2   23[COMRAM] unsigned int 
  9643 ;; Auto vars:     Size  Location     Type
  9644 ;;  address         1   25[COMRAM] unsigned char 
  9645 ;; Return value:  Size  Location     Type
  9646 ;;                  1    wreg      void 
  9647 ;; Registers used:
  9648 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9649 ;; Tracked objects:
  9650 ;;		On entry : 0/0
  9651 ;;		On exit  : 0/0
  9652 ;;		Unchanged: 0/0
  9653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9654 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9655 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9657 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9658 ;;Total ram usage:        5 bytes
  9659 ;; Hardware stack levels used:    1
  9660 ;; Hardware stack levels required when called:   12
  9661 ;; This function calls:
  9662 ;;		_I2C_Close
  9663 ;;		_I2C_MasterWrite
  9664 ;;		_I2C_Open
  9665 ;;		_I2C_SetAddressNackCallback
  9666 ;;		_I2C_SetBuffer
  9667 ;; This function is called by:
  9668 ;;		_SHT40_Read
  9669 ;; This function uses a non-reentrant model
  9670 ;;
  9671                           
  9672                           	psect	text46
  9673  0044DE                     __ptext46:
  9674                           	callstack 0
  9675  0044DE                     _I2C_WriteNBytes:
  9676                           	callstack 16
  9677                           
  9678                           ;incstack = 0
  9679                           ;I2C_WriteNBytes@address stored from wreg
  9680  0044DE  6E1A               	movwf	I2C_WriteNBytes@address^0,c
  9681  0044E0                     l5575:
  9682  0044E0  501A               	movf	I2C_WriteNBytes@address^0,w,c
  9683  0044E2  EC76  F020         	call	_I2C_Open
  9684  0044E6  0900               	iorlw	0
  9685  0044E8  B4D8               	btfsc	status,2,c
  9686  0044EA  EF79  F022         	goto	u5371
  9687  0044EE  EF7B  F022         	goto	u5370
  9688  0044F2                     u5371:
  9689  0044F2  EF70  F022         	goto	l5575
  9690  0044F6                     u5370:
  9691  0044F6                     
  9692                           ;mcc_generated_files/examples/i2c_master_example.c: 114:     I2C_SetBuffer(data,len);
  9693  0044F6  C016  F005         	movff	I2C_WriteNBytes@data,I2C_SetBuffer@buffer
  9694  0044FA  C017  F006         	movff	I2C_WriteNBytes@data+1,I2C_SetBuffer@buffer+1
  9695  0044FE  C018  F007         	movff	I2C_WriteNBytes@len,I2C_SetBuffer@bufferSize
  9696  004502  C019  F008         	movff	I2C_WriteNBytes@len+1,I2C_SetBuffer@bufferSize+1
  9697  004506  EC26  F025         	call	_I2C_SetBuffer	;wreg free
  9698  00450A                     
  9699                           ;mcc_generated_files/examples/i2c_master_example.c: 115:     I2C_SetAddressNackCallback(
      +                          ((void*)0),((void*)0));
  9700  00450A  0E00               	movlw	0
  9701  00450C  6E0A               	movwf	I2C_SetAddressNackCallback@cb^0,c
  9702  00450E  0E00               	movlw	0
  9703  004510  6E0B               	movwf	(I2C_SetAddressNackCallback@cb+1)^0,c
  9704  004512  0E00               	movlw	0
  9705  004514  6E0C               	movwf	I2C_SetAddressNackCallback@ptr^0,c
  9706  004516  0E00               	movlw	0
  9707  004518  6E0D               	movwf	(I2C_SetAddressNackCallback@ptr+1)^0,c
  9708  00451A  EC58  F025         	call	_I2C_SetAddressNackCallback	;wreg free
  9709  00451E                     
  9710                           ;mcc_generated_files/examples/i2c_master_example.c: 116:     I2C_MasterWrite();
  9711  00451E  ECDC  F025         	call	_I2C_MasterWrite	;wreg free
  9712  004522                     l5583:
  9713  004522  ECBD  F024         	call	_I2C_Close	;wreg free
  9714  004526  06E8               	decf	wreg,f,c
  9715  004528  B4D8               	btfsc	status,2,c
  9716  00452A  EF99  F022         	goto	u5381
  9717  00452E  EF9B  F022         	goto	u5380
  9718  004532                     u5381:
  9719  004532  EF91  F022         	goto	l5583
  9720  004536                     u5380:
  9721  004536  0012               	return		;funcret
  9722  004538                     __end_of_I2C_WriteNBytes:
  9723                           	callstack 0
  9724                           
  9725 ;; *************** function _I2C_SetAddressNackCallback *****************
  9726 ;; Defined at:
  9727 ;;		line 283 in file "mcc_generated_files/i2c_master.c"
  9728 ;; Parameters:    Size  Location     Type
  9729 ;;  cb              2    9[COMRAM] PTR FTN(PTR void ,)enum 
  9730 ;;		 -> Absolute function(1), 
  9731 ;;  ptr             2   11[COMRAM] PTR void 
  9732 ;;		 -> NULL(0), 
  9733 ;; Auto vars:     Size  Location     Type
  9734 ;;		None
  9735 ;; Return value:  Size  Location     Type
  9736 ;;                  1    wreg      void 
  9737 ;; Registers used:
  9738 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9739 ;; Tracked objects:
  9740 ;;		On entry : 0/0
  9741 ;;		On exit  : 0/0
  9742 ;;		Unchanged: 0/0
  9743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9744 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9747 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9748 ;;Total ram usage:        4 bytes
  9749 ;; Hardware stack levels used:    1
  9750 ;; Hardware stack levels required when called:    5
  9751 ;; This function calls:
  9752 ;;		_I2C_SetCallback
  9753 ;; This function is called by:
  9754 ;;		_I2C_WriteNBytes
  9755 ;;		_I2C_Read1ByteRegister
  9756 ;;		_I2C_Read2ByteRegister
  9757 ;;		_I2C_Write1ByteRegister
  9758 ;;		_I2C_Write2ByteRegister
  9759 ;;		_I2C_ReadDataBlock
  9760 ;; This function uses a non-reentrant model
  9761 ;;
  9762                           
  9763                           	psect	text47
  9764  004AB0                     __ptext47:
  9765                           	callstack 0
  9766  004AB0                     _I2C_SetAddressNackCallback:
  9767                           	callstack 22
  9768  004AB0                     
  9769                           ;mcc_generated_files/i2c_master.c: 283: void I2C_SetAddressNackCallback(i2c_callback_t c
      +                          b, void *ptr);mcc_generated_files/i2c_master.c: 284: {;mcc_generated_files/i2c_master.c:
      +                           285:     I2C_SetCallback(I2C_ADDR_NACK, cb, ptr);
  9770  004AB0  C00A  F005         	movff	I2C_SetAddressNackCallback@cb,I2C_SetCallback@cb
  9771  004AB4  C00B  F006         	movff	I2C_SetAddressNackCallback@cb+1,I2C_SetCallback@cb+1
  9772  004AB8  C00C  F007         	movff	I2C_SetAddressNackCallback@ptr,I2C_SetCallback@ptr
  9773  004ABC  C00D  F008         	movff	I2C_SetAddressNackCallback@ptr+1,I2C_SetCallback@ptr+1
  9774  004AC0  0E02               	movlw	2
  9775  004AC2  ECFB  F020         	call	_I2C_SetCallback
  9776  004AC6  0012               	return		;funcret
  9777  004AC8                     __end_of_I2C_SetAddressNackCallback:
  9778                           	callstack 0
  9779                           
  9780 ;; *************** function _I2C_MasterWrite *****************
  9781 ;; Defined at:
  9782 ;;		line 251 in file "mcc_generated_files/i2c_master.c"
  9783 ;; Parameters:    Size  Location     Type
  9784 ;;		None
  9785 ;; Auto vars:     Size  Location     Type
  9786 ;;		None
  9787 ;; Return value:  Size  Location     Type
  9788 ;;                  1    wreg      enum E353
  9789 ;; Registers used:
  9790 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9791 ;; Tracked objects:
  9792 ;;		On entry : 0/0
  9793 ;;		On exit  : 0/0
  9794 ;;		Unchanged: 0/0
  9795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9799 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9800 ;;Total ram usage:        0 bytes
  9801 ;; Hardware stack levels used:    1
  9802 ;; Hardware stack levels required when called:   11
  9803 ;; This function calls:
  9804 ;;		_I2C_MasterOperation
  9805 ;; This function is called by:
  9806 ;;		_I2C_WriteNBytes
  9807 ;;		_I2C_Read1ByteRegister
  9808 ;;		_I2C_Read2ByteRegister
  9809 ;;		_I2C_Write1ByteRegister
  9810 ;;		_I2C_Write2ByteRegister
  9811 ;;		_I2C_ReadDataBlock
  9812 ;; This function uses a non-reentrant model
  9813 ;;
  9814                           
  9815                           	psect	text48
  9816  004BB8                     __ptext48:
  9817                           	callstack 0
  9818  004BB8                     _I2C_MasterWrite:
  9819                           	callstack 16
  9820  004BB8                     
  9821                           ;mcc_generated_files/i2c_master.c: 253:     return I2C_MasterOperation(0);;	Return value
      +                           of _I2C_MasterWrite is never used
  9822  004BB8  0E00               	movlw	0
  9823  004BBA  EC7B  F023         	call	_I2C_MasterOperation
  9824  004BBE  0012               	return		;funcret
  9825  004BC0                     __end_of_I2C_MasterWrite:
  9826                           	callstack 0
  9827                           
  9828 ;; *************** function _I2C_ReadNBytes *****************
  9829 ;; Defined at:
  9830 ;;		line 120 in file "mcc_generated_files/examples/i2c_master_example.c"
  9831 ;; Parameters:    Size  Location     Type
  9832 ;;  address         1    wreg     unsigned char 
  9833 ;;  data            2   21[COMRAM] PTR unsigned char 
  9834 ;;		 -> readBuffer(10), 
  9835 ;;  len             2   23[COMRAM] unsigned int 
  9836 ;; Auto vars:     Size  Location     Type
  9837 ;;  address         1   25[COMRAM] unsigned char 
  9838 ;; Return value:  Size  Location     Type
  9839 ;;                  1    wreg      void 
  9840 ;; Registers used:
  9841 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9842 ;; Tracked objects:
  9843 ;;		On entry : 0/0
  9844 ;;		On exit  : 0/0
  9845 ;;		Unchanged: 0/0
  9846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9847 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9848 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9850 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9851 ;;Total ram usage:        5 bytes
  9852 ;; Hardware stack levels used:    1
  9853 ;; Hardware stack levels required when called:   12
  9854 ;; This function calls:
  9855 ;;		_I2C_Close
  9856 ;;		_I2C_MasterRead
  9857 ;;		_I2C_Open
  9858 ;;		_I2C_SetBuffer
  9859 ;; This function is called by:
  9860 ;;		_SHT40_Read
  9861 ;; This function uses a non-reentrant model
  9862 ;;
  9863                           
  9864                           	psect	text49
  9865  004628                     __ptext49:
  9866                           	callstack 0
  9867  004628                     _I2C_ReadNBytes:
  9868                           	callstack 16
  9869                           
  9870                           ;incstack = 0
  9871                           ;I2C_ReadNBytes@address stored from wreg
  9872  004628  6E1A               	movwf	I2C_ReadNBytes@address^0,c
  9873  00462A                     l5587:
  9874  00462A  501A               	movf	I2C_ReadNBytes@address^0,w,c
  9875  00462C  EC76  F020         	call	_I2C_Open
  9876  004630  0900               	iorlw	0
  9877  004632  B4D8               	btfsc	status,2,c
  9878  004634  EF1E  F023         	goto	u5391
  9879  004638  EF20  F023         	goto	u5390
  9880  00463C                     u5391:
  9881  00463C  EF15  F023         	goto	l5587
  9882  004640                     u5390:
  9883  004640                     
  9884                           ;mcc_generated_files/examples/i2c_master_example.c: 123:     I2C_SetBuffer(data,len);
  9885  004640  C016  F005         	movff	I2C_ReadNBytes@data,I2C_SetBuffer@buffer
  9886  004644  C017  F006         	movff	I2C_ReadNBytes@data+1,I2C_SetBuffer@buffer+1
  9887  004648  C018  F007         	movff	I2C_ReadNBytes@len,I2C_SetBuffer@bufferSize
  9888  00464C  C019  F008         	movff	I2C_ReadNBytes@len+1,I2C_SetBuffer@bufferSize+1
  9889  004650  EC26  F025         	call	_I2C_SetBuffer	;wreg free
  9890  004654                     
  9891                           ;mcc_generated_files/examples/i2c_master_example.c: 124:     I2C_MasterRead();
  9892  004654  ECE0  F025         	call	_I2C_MasterRead	;wreg free
  9893  004658                     l5593:
  9894  004658  ECBD  F024         	call	_I2C_Close	;wreg free
  9895  00465C  06E8               	decf	wreg,f,c
  9896  00465E  B4D8               	btfsc	status,2,c
  9897  004660  EF34  F023         	goto	u5401
  9898  004664  EF36  F023         	goto	u5400
  9899  004668                     u5401:
  9900  004668  EF2C  F023         	goto	l5593
  9901  00466C                     u5400:
  9902  00466C  0012               	return		;funcret
  9903  00466E                     __end_of_I2C_ReadNBytes:
  9904                           	callstack 0
  9905                           
  9906 ;; *************** function _I2C_Open *****************
  9907 ;; Defined at:
  9908 ;;		line 176 in file "mcc_generated_files/i2c_master.c"
  9909 ;; Parameters:    Size  Location     Type
  9910 ;;  address         1    wreg     unsigned char 
  9911 ;; Auto vars:     Size  Location     Type
  9912 ;;  address         1    4[COMRAM] unsigned char 
  9913 ;;  returnValue     1    5[COMRAM] enum E353
  9914 ;; Return value:  Size  Location     Type
  9915 ;;                  1    wreg      enum E353
  9916 ;; Registers used:
  9917 ;;		wreg, status,2, status,0, cstack
  9918 ;; Tracked objects:
  9919 ;;		On entry : 0/0
  9920 ;;		On exit  : 0/0
  9921 ;;		Unchanged: 0/0
  9922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9924 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9926 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9927 ;;Total ram usage:        2 bytes
  9928 ;; Hardware stack levels used:    1
  9929 ;; Hardware stack levels required when called:    5
  9930 ;; This function calls:
  9931 ;;		_I2C_MasterClearIrq
  9932 ;;		_I2C_MasterOpen
  9933 ;; This function is called by:
  9934 ;;		_I2C_WriteNBytes
  9935 ;;		_I2C_ReadNBytes
  9936 ;;		_I2C_Read1ByteRegister
  9937 ;;		_I2C_Read2ByteRegister
  9938 ;;		_I2C_Write1ByteRegister
  9939 ;;		_I2C_Write2ByteRegister
  9940 ;;		_I2C_ReadDataBlock
  9941 ;; This function uses a non-reentrant model
  9942 ;;
  9943                           
  9944                           	psect	text50
  9945  0040EC                     __ptext50:
  9946                           	callstack 0
  9947  0040EC                     _I2C_Open:
  9948                           	callstack 22
  9949                           
  9950                           ;incstack = 0
  9951                           ;I2C_Open@address stored from wreg
  9952  0040EC  6E05               	movwf	I2C_Open@address^0,c
  9953  0040EE                     
  9954                           ;mcc_generated_files/i2c_master.c: 176: i2c_error_t I2C_Open(i2c_address_t address);mcc_
      +                          generated_files/i2c_master.c: 177: {;mcc_generated_files/i2c_master.c: 178:     i2c_erro
      +                          r_t returnValue = I2C_BUSY;
  9955  0040EE  0E01               	movlw	1
  9956  0040F0  6E06               	movwf	I2C_Open@returnValue^0,c
  9957  0040F2                     
  9958                           ;mcc_generated_files/i2c_master.c: 180:     if(!I2C_Status.inUse)
  9959  0040F2  0101               	movlb	1	; () banked
  9960  0040F4  B523               	btfsc	(_I2C_Status+35)& (0+255),2,b
  9961  0040F6  EF7F  F020         	goto	u4711
  9962  0040FA  EF81  F020         	goto	u4710
  9963  0040FE                     u4711:
  9964  0040FE  EFBB  F020         	goto	l5185
  9965  004102                     u4710:
  9966  004102                     
  9967                           ; BSR set to: 1
  9968                           ;mcc_generated_files/i2c_master.c: 181:     {;mcc_generated_files/i2c_master.c: 182:    
      +                               I2C_Status.address = address;
  9969  004102  C005  F11C         	movff	I2C_Open@address,_I2C_Status+28
  9970  004106                     
  9971                           ; BSR set to: 1
  9972                           ;mcc_generated_files/i2c_master.c: 183:         I2C_Status.busy = 0;
  9973  004106  9323               	bcf	(_I2C_Status+35)& (0+255),1,b
  9974  004108                     
  9975                           ; BSR set to: 1
  9976                           ;mcc_generated_files/i2c_master.c: 184:         I2C_Status.inUse = 1;
  9977  004108  8523               	bsf	(_I2C_Status+35)& (0+255),2,b
  9978  00410A                     
  9979                           ; BSR set to: 1
  9980                           ;mcc_generated_files/i2c_master.c: 185:         I2C_Status.addressNackCheck = 0;
  9981  00410A  9123               	bcf	(_I2C_Status+35)& (0+255),0,b
  9982  00410C                     
  9983                           ; BSR set to: 1
  9984                           ;mcc_generated_files/i2c_master.c: 186:         I2C_Status.state = I2C_RESET;
  9985  00410C  0E0E               	movlw	14
  9986  00410E  6F21               	movwf	(_I2C_Status+33)& (0+255),b
  9987  004110                     
  9988                           ; BSR set to: 1
  9989                           ;mcc_generated_files/i2c_master.c: 187:         I2C_Status.time_out_value = 500;
  9990  004110  0E01               	movlw	1
  9991  004112  6F1B               	movwf	(_I2C_Status+27)& (0+255),b
  9992  004114  0EF4               	movlw	244
  9993  004116  6F1A               	movwf	(_I2C_Status+26)& (0+255),b
  9994  004118                     
  9995                           ; BSR set to: 1
  9996                           ;mcc_generated_files/i2c_master.c: 188:         I2C_Status.bufferFree = 1;
  9997  004118  8723               	bsf	(_I2C_Status+35)& (0+255),3,b
  9998  00411A                     
  9999                           ; BSR set to: 1
 10000                           ;mcc_generated_files/i2c_master.c: 191:         I2C_Status.callbackTable[I2C_DATA_COMPLE
      +                          TE]=I2C_CallbackReturnStop;
 10001  00411A  0E34               	movlw	low _I2C_CallbackReturnStop
 10002  00411C  6F00               	movwf	_I2C_Status& (0+255),b
 10003  00411E  0E4C               	movlw	high _I2C_CallbackReturnStop
 10004  004120  6F01               	movwf	(_I2C_Status+1)& (0+255),b
 10005  004122                     
 10006                           ; BSR set to: 1
 10007                           ;mcc_generated_files/i2c_master.c: 192:         I2C_Status.callbackPayload[I2C_DATA_COMP
      +                          LETE] = ((void*)0);
 10008  004122  0E00               	movlw	0
 10009  004124  6F0C               	movwf	(_I2C_Status+12)& (0+255),b
 10010  004126  0E00               	movlw	0
 10011  004128  6F0D               	movwf	(_I2C_Status+13)& (0+255),b
 10012  00412A                     
 10013                           ; BSR set to: 1
 10014                           ;mcc_generated_files/i2c_master.c: 193:         I2C_Status.callbackTable[I2C_WRITE_COLLI
      +                          SION]=I2C_CallbackReturnStop;
 10015  00412A  0E34               	movlw	low _I2C_CallbackReturnStop
 10016  00412C  6F02               	movwf	(_I2C_Status+2)& (0+255),b
 10017  00412E  0E4C               	movlw	high _I2C_CallbackReturnStop
 10018  004130  6F03               	movwf	(_I2C_Status+3)& (0+255),b
 10019  004132                     
 10020                           ; BSR set to: 1
 10021                           ;mcc_generated_files/i2c_master.c: 194:         I2C_Status.callbackPayload[I2C_WRITE_COL
      +                          LISION] = ((void*)0);
 10022  004132  0E00               	movlw	0
 10023  004134  6F0E               	movwf	(_I2C_Status+14)& (0+255),b
 10024  004136  0E00               	movlw	0
 10025  004138  6F0F               	movwf	(_I2C_Status+15)& (0+255),b
 10026  00413A                     
 10027                           ; BSR set to: 1
 10028                           ;mcc_generated_files/i2c_master.c: 195:         I2C_Status.callbackTable[I2C_ADDR_NACK]=
      +                          I2C_CallbackReturnStop;
 10029  00413A  0E34               	movlw	low _I2C_CallbackReturnStop
 10030  00413C  6F04               	movwf	(_I2C_Status+4)& (0+255),b
 10031  00413E  0E4C               	movlw	high _I2C_CallbackReturnStop
 10032  004140  6F05               	movwf	(_I2C_Status+5)& (0+255),b
 10033  004142                     
 10034                           ; BSR set to: 1
 10035                           ;mcc_generated_files/i2c_master.c: 196:         I2C_Status.callbackPayload[I2C_ADDR_NACK
      +                          ] = ((void*)0);
 10036  004142  0E00               	movlw	0
 10037  004144  6F10               	movwf	(_I2C_Status+16)& (0+255),b
 10038  004146  0E00               	movlw	0
 10039  004148  6F11               	movwf	(_I2C_Status+17)& (0+255),b
 10040  00414A                     
 10041                           ; BSR set to: 1
 10042                           ;mcc_generated_files/i2c_master.c: 197:         I2C_Status.callbackTable[I2C_DATA_NACK]=
      +                          I2C_CallbackReturnStop;
 10043  00414A  0E34               	movlw	low _I2C_CallbackReturnStop
 10044  00414C  6F06               	movwf	(_I2C_Status+6)& (0+255),b
 10045  00414E  0E4C               	movlw	high _I2C_CallbackReturnStop
 10046  004150  6F07               	movwf	(_I2C_Status+7)& (0+255),b
 10047  004152                     
 10048                           ; BSR set to: 1
 10049                           ;mcc_generated_files/i2c_master.c: 198:         I2C_Status.callbackPayload[I2C_DATA_NACK
      +                          ] = ((void*)0);
 10050  004152  0E00               	movlw	0
 10051  004154  6F12               	movwf	(_I2C_Status+18)& (0+255),b
 10052  004156  0E00               	movlw	0
 10053  004158  6F13               	movwf	(_I2C_Status+19)& (0+255),b
 10054  00415A                     
 10055                           ; BSR set to: 1
 10056                           ;mcc_generated_files/i2c_master.c: 199:         I2C_Status.callbackTable[I2C_TIMEOUT]=I2
      +                          C_CallbackReturnReset;
 10057  00415A  0E30               	movlw	low _I2C_CallbackReturnReset
 10058  00415C  6F08               	movwf	(_I2C_Status+8)& (0+255),b
 10059  00415E  0E4C               	movlw	high _I2C_CallbackReturnReset
 10060  004160  6F09               	movwf	(_I2C_Status+9)& (0+255),b
 10061  004162                     
 10062                           ; BSR set to: 1
 10063                           ;mcc_generated_files/i2c_master.c: 200:         I2C_Status.callbackPayload[I2C_TIMEOUT] 
      +                          = ((void*)0);
 10064  004162  0E00               	movlw	0
 10065  004164  6F14               	movwf	(_I2C_Status+20)& (0+255),b
 10066  004166  0E00               	movlw	0
 10067  004168  6F15               	movwf	(_I2C_Status+21)& (0+255),b
 10068  00416A                     
 10069                           ; BSR set to: 1
 10070                           ;mcc_generated_files/i2c_master.c: 202:         I2C_MasterClearIrq();
 10071  00416A  EC26  F026         	call	_I2C_MasterClearIrq	;wreg free
 10072  00416E                     
 10073                           ;mcc_generated_files/i2c_master.c: 203:         I2C_MasterOpen();
 10074  00416E  EC38  F025         	call	_I2C_MasterOpen	;wreg free
 10075  004172                     
 10076                           ;mcc_generated_files/i2c_master.c: 204:         returnValue = I2C_NOERR;
 10077  004172  0E00               	movlw	0
 10078  004174  6E06               	movwf	I2C_Open@returnValue^0,c
 10079  004176                     l5185:
 10080                           
 10081                           ;mcc_generated_files/i2c_master.c: 206:     return returnValue;
 10082  004176  5006               	movf	I2C_Open@returnValue^0,w,c
 10083  004178  0012               	return		;funcret
 10084  00417A                     __end_of_I2C_Open:
 10085                           	callstack 0
 10086                           
 10087 ;; *************** function _I2C_MasterOpen *****************
 10088 ;; Defined at:
 10089 ;;		line 543 in file "mcc_generated_files/i2c_master.c"
 10090 ;; Parameters:    Size  Location     Type
 10091 ;;		None
 10092 ;; Auto vars:     Size  Location     Type
 10093 ;;		None
 10094 ;; Return value:  Size  Location     Type
 10095 ;;                  1    wreg      _Bool 
 10096 ;; Registers used:
 10097 ;;		wreg, status,2
 10098 ;; Tracked objects:
 10099 ;;		On entry : 0/0
 10100 ;;		On exit  : 0/0
 10101 ;;		Unchanged: 0/0
 10102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10106 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10107 ;;Total ram usage:        0 bytes
 10108 ;; Hardware stack levels used:    1
 10109 ;; Hardware stack levels required when called:    4
 10110 ;; This function calls:
 10111 ;;		Nothing
 10112 ;; This function is called by:
 10113 ;;		_I2C_Open
 10114 ;; This function uses a non-reentrant model
 10115 ;;
 10116                           
 10117                           	psect	text51
 10118  004A70                     __ptext51:
 10119                           	callstack 0
 10120  004A70                     _I2C_MasterOpen:
 10121                           	callstack 22
 10122  004A70                     
 10123                           ;mcc_generated_files/i2c_master.c: 545:     if(!SSPCON1bits.SSPEN)
 10124  004A70  BAC6               	btfsc	198,5,c	;volatile
 10125  004A72  EF3D  F025         	goto	u3681
 10126  004A76  EF3F  F025         	goto	u3680
 10127  004A7A                     u3681:
 10128  004A7A  EF48  F025         	goto	l378
 10129  004A7E                     u3680:
 10130  004A7E                     
 10131                           ;mcc_generated_files/i2c_master.c: 546:     {;mcc_generated_files/i2c_master.c: 547:    
      +                               SSPSTAT = 0x00;
 10132  004A7E  0E00               	movlw	0
 10133  004A80  6EC7               	movwf	199,c	;volatile
 10134                           
 10135                           ;mcc_generated_files/i2c_master.c: 548:         SSPCON1 = 0x08;
 10136  004A82  0E08               	movlw	8
 10137  004A84  6EC6               	movwf	198,c	;volatile
 10138                           
 10139                           ;mcc_generated_files/i2c_master.c: 549:         SSPCON2 = 0x00;
 10140  004A86  0E00               	movlw	0
 10141  004A88  6EC5               	movwf	197,c	;volatile
 10142                           
 10143                           ;mcc_generated_files/i2c_master.c: 550:         SSPADD = 0x13;
 10144  004A8A  0E13               	movlw	19
 10145  004A8C  6EC8               	movwf	200,c	;volatile
 10146  004A8E                     
 10147                           ;mcc_generated_files/i2c_master.c: 551:         SSPCON1bits.SSPEN = 1;
 10148  004A8E  8AC6               	bsf	198,5,c	;volatile
 10149  004A90                     l378:
 10150  004A90  0012               	return		;funcret
 10151  004A92                     __end_of_I2C_MasterOpen:
 10152                           	callstack 0
 10153                           
 10154 ;; *************** function _I2C_MasterRead *****************
 10155 ;; Defined at:
 10156 ;;		line 246 in file "mcc_generated_files/i2c_master.c"
 10157 ;; Parameters:    Size  Location     Type
 10158 ;;		None
 10159 ;; Auto vars:     Size  Location     Type
 10160 ;;		None
 10161 ;; Return value:  Size  Location     Type
 10162 ;;                  1    wreg      enum E353
 10163 ;; Registers used:
 10164 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10165 ;; Tracked objects:
 10166 ;;		On entry : 0/0
 10167 ;;		On exit  : 0/0
 10168 ;;		Unchanged: 0/0
 10169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10173 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10174 ;;Total ram usage:        0 bytes
 10175 ;; Hardware stack levels used:    1
 10176 ;; Hardware stack levels required when called:   11
 10177 ;; This function calls:
 10178 ;;		_I2C_MasterOperation
 10179 ;; This function is called by:
 10180 ;;		_I2C_ReadNBytes
 10181 ;; This function uses a non-reentrant model
 10182 ;;
 10183                           
 10184                           	psect	text52
 10185  004BC0                     __ptext52:
 10186                           	callstack 0
 10187  004BC0                     _I2C_MasterRead:
 10188                           	callstack 16
 10189  004BC0                     
 10190                           ;mcc_generated_files/i2c_master.c: 248:     return I2C_MasterOperation(1);;	Return value
      +                           of _I2C_MasterRead is never used
 10191  004BC0  0E01               	movlw	1
 10192  004BC2  EC7B  F023         	call	_I2C_MasterOperation
 10193  004BC6  0012               	return		;funcret
 10194  004BC8                     __end_of_I2C_MasterRead:
 10195                           	callstack 0
 10196                           
 10197 ;; *************** function _I2C_MasterOperation *****************
 10198 ;; Defined at:
 10199 ;;		line 224 in file "mcc_generated_files/i2c_master.c"
 10200 ;; Parameters:    Size  Location     Type
 10201 ;;  read            1    wreg     _Bool 
 10202 ;; Auto vars:     Size  Location     Type
 10203 ;;  read            1   19[COMRAM] _Bool 
 10204 ;;  returnValue     1   20[COMRAM] enum E353
 10205 ;; Return value:  Size  Location     Type
 10206 ;;                  1    wreg      enum E353
 10207 ;; Registers used:
 10208 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10209 ;; Tracked objects:
 10210 ;;		On entry : 0/0
 10211 ;;		On exit  : 0/0
 10212 ;;		Unchanged: 0/0
 10213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10215 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10217 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10218 ;;Total ram usage:        2 bytes
 10219 ;; Hardware stack levels used:    1
 10220 ;; Hardware stack levels required when called:   10
 10221 ;; This function calls:
 10222 ;;		_I2C_MasterStart
 10223 ;;		_I2C_Poller
 10224 ;; This function is called by:
 10225 ;;		_I2C_MasterRead
 10226 ;;		_I2C_MasterWrite
 10227 ;; This function uses a non-reentrant model
 10228 ;;
 10229                           
 10230                           	psect	text53
 10231  0046F6                     __ptext53:
 10232                           	callstack 0
 10233  0046F6                     _I2C_MasterOperation:
 10234                           	callstack 16
 10235                           
 10236                           ;incstack = 0
 10237                           ;I2C_MasterOperation@read stored from wreg
 10238  0046F6  6E14               	movwf	I2C_MasterOperation@read^0,c
 10239  0046F8                     
 10240                           ;mcc_generated_files/i2c_master.c: 224: i2c_error_t I2C_MasterOperation(_Bool read);mcc_
      +                          generated_files/i2c_master.c: 225: {;mcc_generated_files/i2c_master.c: 226:     i2c_erro
      +                          r_t returnValue = I2C_BUSY;
 10241  0046F8  0E01               	movlw	1
 10242  0046FA  6E15               	movwf	I2C_MasterOperation@returnValue^0,c
 10243  0046FC                     
 10244                           ;mcc_generated_files/i2c_master.c: 227:     if(!I2C_Status.busy)
 10245  0046FC  0101               	movlb	1	; () banked
 10246  0046FE  B323               	btfsc	(_I2C_Status+35)& (0+255),1,b
 10247  004700  EF84  F023         	goto	u3691
 10248  004704  EF86  F023         	goto	u3690
 10249  004708                     u3691:
 10250  004708  EF9B  F023         	goto	l4585
 10251  00470C                     u3690:
 10252  00470C                     
 10253                           ; BSR set to: 1
 10254                           ;mcc_generated_files/i2c_master.c: 228:     {;mcc_generated_files/i2c_master.c: 229:    
      +                               I2C_Status.busy = 1;
 10255  00470C  8323               	bsf	(_I2C_Status+35)& (0+255),1,b
 10256  00470E                     
 10257                           ; BSR set to: 1
 10258                           ;mcc_generated_files/i2c_master.c: 230:         returnValue = I2C_NOERR;
 10259  00470E  0E00               	movlw	0
 10260  004710  6E15               	movwf	I2C_MasterOperation@returnValue^0,c
 10261  004712                     
 10262                           ; BSR set to: 1
 10263                           ;mcc_generated_files/i2c_master.c: 232:         if(read)
 10264  004712  5014               	movf	I2C_MasterOperation@read^0,w,c
 10265  004714  B4D8               	btfsc	status,2,c
 10266  004716  EF8F  F023         	goto	u3701
 10267  00471A  EF91  F023         	goto	u3700
 10268  00471E                     u3701:
 10269  00471E  EF95  F023         	goto	l4579
 10270  004722                     u3700:
 10271  004722                     
 10272                           ; BSR set to: 1
 10273                           ;mcc_generated_files/i2c_master.c: 233:         {;mcc_generated_files/i2c_master.c: 234:
      +                                       I2C_Status.state = I2C_SEND_ADR_READ;
 10274  004722  0E01               	movlw	1
 10275  004724  6F21               	movwf	(_I2C_Status+33)& (0+255),b
 10276                           
 10277                           ;mcc_generated_files/i2c_master.c: 235:         }
 10278  004726  EF97  F023         	goto	l4581
 10279  00472A                     l4579:
 10280                           
 10281                           ; BSR set to: 1
 10282                           ;mcc_generated_files/i2c_master.c: 237:         {;mcc_generated_files/i2c_master.c: 238:
      +                                       I2C_Status.state = I2C_SEND_ADR_WRITE;
 10283  00472A  0E02               	movlw	2
 10284  00472C  6F21               	movwf	(_I2C_Status+33)& (0+255),b
 10285  00472E                     l4581:
 10286                           
 10287                           ; BSR set to: 1
 10288                           ;mcc_generated_files/i2c_master.c: 240:         I2C_MasterStart();
 10289  00472E  EC20  F026         	call	_I2C_MasterStart	;wreg free
 10290  004732                     
 10291                           ;mcc_generated_files/i2c_master.c: 241:         I2C_Poller();
 10292  004732  EC49  F025         	call	_I2C_Poller	;wreg free
 10293  004736                     l4585:
 10294                           
 10295                           ;mcc_generated_files/i2c_master.c: 243:     return returnValue;
 10296  004736  5015               	movf	I2C_MasterOperation@returnValue^0,w,c
 10297  004738  0012               	return		;funcret
 10298  00473A                     __end_of_I2C_MasterOperation:
 10299                           	callstack 0
 10300                           
 10301 ;; *************** function _I2C_Poller *****************
 10302 ;; Defined at:
 10303 ;;		line 312 in file "mcc_generated_files/i2c_master.c"
 10304 ;; Parameters:    Size  Location     Type
 10305 ;;		None
 10306 ;; Auto vars:     Size  Location     Type
 10307 ;;		None
 10308 ;; Return value:  Size  Location     Type
 10309 ;;                  1    wreg      void 
 10310 ;; Registers used:
 10311 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10312 ;; Tracked objects:
 10313 ;;		On entry : 0/0
 10314 ;;		On exit  : 0/0
 10315 ;;		Unchanged: 0/0
 10316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10320 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10321 ;;Total ram usage:        0 bytes
 10322 ;; Hardware stack levels used:    1
 10323 ;; Hardware stack levels required when called:    9
 10324 ;; This function calls:
 10325 ;;		_I2C_MasterFsm
 10326 ;;		_I2C_MasterWaitForEvent
 10327 ;; This function is called by:
 10328 ;;		_I2C_MasterOperation
 10329 ;; This function uses a non-reentrant model
 10330 ;;
 10331                           
 10332                           	psect	text54
 10333  004A92                     __ptext54:
 10334                           	callstack 0
 10335  004A92                     _I2C_Poller:
 10336                           	callstack 16
 10337  004A92                     
 10338                           ;mcc_generated_files/i2c_master.c: 314:     while(I2C_Status.busy)
 10339  004A92  EF4F  F025         	goto	l4329
 10340  004A96                     l4325:
 10341                           
 10342                           ; BSR set to: 1
 10343                           ;mcc_generated_files/i2c_master.c: 315:     {;mcc_generated_files/i2c_master.c: 316:    
      +                               I2C_MasterWaitForEvent();
 10344  004A96  EC8F  F025         	call	_I2C_MasterWaitForEvent	;wreg free
 10345  004A9A                     
 10346                           ;mcc_generated_files/i2c_master.c: 317:         I2C_MasterFsm();
 10347  004A9A  EC73  F021         	call	_I2C_MasterFsm	;wreg free
 10348  004A9E                     l4329:
 10349                           
 10350                           ;mcc_generated_files/i2c_master.c: 314:     while(I2C_Status.busy)
 10351  004A9E  0101               	movlb	1	; () banked
 10352  004AA0  B323               	btfsc	(_I2C_Status+35)& (0+255),1,b
 10353  004AA2  EF55  F025         	goto	u3241
 10354  004AA6  EF57  F025         	goto	u3240
 10355  004AAA                     u3241:
 10356  004AAA  EF4B  F025         	goto	l4325
 10357  004AAE                     u3240:
 10358  004AAE                     
 10359                           ; BSR set to: 1
 10360  004AAE  0012               	return		;funcret
 10361  004AB0                     __end_of_I2C_Poller:
 10362                           	callstack 0
 10363                           
 10364 ;; *************** function _I2C_MasterWaitForEvent *****************
 10365 ;; Defined at:
 10366 ;;		line 650 in file "mcc_generated_files/i2c_master.c"
 10367 ;; Parameters:    Size  Location     Type
 10368 ;;		None
 10369 ;; Auto vars:     Size  Location     Type
 10370 ;;		None
 10371 ;; Return value:  Size  Location     Type
 10372 ;;                  1    wreg      void 
 10373 ;; Registers used:
 10374 ;;		None
 10375 ;; Tracked objects:
 10376 ;;		On entry : 0/0
 10377 ;;		On exit  : 0/0
 10378 ;;		Unchanged: 0/0
 10379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10383 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10384 ;;Total ram usage:        0 bytes
 10385 ;; Hardware stack levels used:    1
 10386 ;; Hardware stack levels required when called:    4
 10387 ;; This function calls:
 10388 ;;		Nothing
 10389 ;; This function is called by:
 10390 ;;		_I2C_Poller
 10391 ;; This function uses a non-reentrant model
 10392 ;;
 10393                           
 10394                           	psect	text55
 10395  004B1E                     __ptext55:
 10396                           	callstack 0
 10397  004B1E                     _I2C_MasterWaitForEvent:
 10398                           	callstack 20
 10399  004B1E                     l435:
 10400                           
 10401                           ;mcc_generated_files/i2c_master.c: 653:     {;mcc_generated_files/i2c_master.c: 654:    
      +                               if(PIR1bits.SSPIF)
 10402  004B1E  A69E               	btfss	158,3,c	;volatile
 10403  004B20  EF94  F025         	goto	u3161
 10404  004B24  EF96  F025         	goto	u3160
 10405  004B28                     u3161:
 10406  004B28  EF8F  F025         	goto	l435
 10407  004B2C                     u3160:
 10408  004B2C  0012               	return		;funcret
 10409  004B2E                     __end_of_I2C_MasterWaitForEvent:
 10410                           	callstack 0
 10411                           
 10412 ;; *************** function _I2C_MasterFsm *****************
 10413 ;; Defined at:
 10414 ;;		line 321 in file "mcc_generated_files/i2c_master.c"
 10415 ;; Parameters:    Size  Location     Type
 10416 ;;		None
 10417 ;; Auto vars:     Size  Location     Type
 10418 ;;		None
 10419 ;; Return value:  Size  Location     Type
 10420 ;;                  1    wreg      void 
 10421 ;; Registers used:
 10422 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10423 ;; Tracked objects:
 10424 ;;		On entry : 0/0
 10425 ;;		On exit  : 0/0
 10426 ;;		Unchanged: 0/0
 10427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10430 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10431 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10432 ;;Total ram usage:        2 bytes
 10433 ;; Hardware stack levels used:    1
 10434 ;; Hardware stack levels required when called:    8
 10435 ;; This function calls:
 10436 ;;		_I2C_DO_ADDRESS_NACK
 10437 ;;		_I2C_DO_IDLE
 10438 ;;		_I2C_DO_RCEN
 10439 ;;		_I2C_DO_RESET
 10440 ;;		_I2C_DO_RX
 10441 ;;		_I2C_DO_RX_ACK
 10442 ;;		_I2C_DO_RX_NACK_RESTART
 10443 ;;		_I2C_DO_RX_NACK_STOP
 10444 ;;		_I2C_DO_SEND_ADR_READ
 10445 ;;		_I2C_DO_SEND_ADR_WRITE
 10446 ;;		_I2C_DO_SEND_RESTART
 10447 ;;		_I2C_DO_SEND_RESTART_READ
 10448 ;;		_I2C_DO_SEND_RESTART_WRITE
 10449 ;;		_I2C_DO_SEND_STOP
 10450 ;;		_I2C_DO_TX
 10451 ;;		_I2C_DO_TX_EMPTY
 10452 ;;		_I2C_MasterClearIrq
 10453 ;;		_I2C_MasterIsNack
 10454 ;; This function is called by:
 10455 ;;		_I2C_Poller
 10456 ;; This function uses a non-reentrant model
 10457 ;;
 10458                           
 10459                           	psect	text56
 10460  0042E6                     __ptext56:
 10461                           	callstack 0
 10462  0042E6                     _I2C_MasterFsm:
 10463                           	callstack 16
 10464  0042E6                     
 10465                           ;mcc_generated_files/i2c_master.c: 323:     I2C_MasterClearIrq();
 10466  0042E6  EC26  F026         	call	_I2C_MasterClearIrq	;wreg free
 10467  0042EA                     
 10468                           ;mcc_generated_files/i2c_master.c: 325:     if(I2C_Status.addressNackCheck && I2C_Master
      +                          IsNack())
 10469  0042EA  0101               	movlb	1	; () banked
 10470  0042EC  A123               	btfss	(_I2C_Status+35)& (0+255),0,b
 10471  0042EE  EF7B  F021         	goto	u3171
 10472  0042F2  EF7D  F021         	goto	u3170
 10473  0042F6                     u3171:
 10474  0042F6  EF8A  F021         	goto	l4305
 10475  0042FA                     u3170:
 10476  0042FA                     
 10477                           ; BSR set to: 1
 10478  0042FA  EC85  F025         	call	_I2C_MasterIsNack	;wreg free
 10479  0042FE  0900               	iorlw	0
 10480  004300  B4D8               	btfsc	status,2,c
 10481  004302  EF85  F021         	goto	u3181
 10482  004306  EF87  F021         	goto	u3180
 10483  00430A                     u3181:
 10484  00430A  EF8A  F021         	goto	l4305
 10485  00430E                     u3180:
 10486  00430E                     
 10487                           ;mcc_generated_files/i2c_master.c: 326:     {;mcc_generated_files/i2c_master.c: 327:    
      +                               I2C_Status.state = I2C_ADDRESS_NACK;
 10488  00430E  0E0F               	movlw	15
 10489  004310  0101               	movlb	1	; () banked
 10490  004312  6F21               	movwf	(_I2C_Status+33)& (0+255),b
 10491  004314                     l4305:
 10492                           
 10493                           ;mcc_generated_files/i2c_master.c: 329:     I2C_Status.state = fsmStateTable[I2C_Status.
      +                          state]();
 10494  004314  0101               	movlb	1	; () banked
 10495  004316  5121               	movf	(_I2C_Status+33)& (0+255),w,b
 10496  004318  0D02               	mullw	2
 10497  00431A  0E01               	movlw	low _fsmStateTable
 10498  00431C  24F3               	addwf	243,w,c
 10499  00431E  6EF6               	movwf	tblptrl,c
 10500  004320  0E10               	movlw	high _fsmStateTable
 10501  004322  20F4               	addwfc	244,w,c
 10502  004324  6EF7               	movwf	tblptrh,c
 10503  004326                     	if	1	;There are 3 active tblptr bytes
 10504  004326  6AF8               	clrf	tblptru,c
 10505  004328  0E00               	movlw	low (__mediumconst shr (0+16))
 10506  00432A  22F8               	addwfc	tblptru,f,c
 10507  00432C                     	endif
 10508  00432C  0009               	tblrd		*+
 10509  00432E  CFF5 F012          	movff	tablat,??_I2C_MasterFsm
 10510  004332  0009               	tblrd		*+
 10511  004334  CFF5 F013          	movff	tablat,??_I2C_MasterFsm+1
 10512  004338  D802               	call	u3198
 10513  00433A  EFA8  F021         	goto	u3199
 10514  00433E                     u3198:
 10515  00433E  0005               	push	
 10516  004340  6EFA               	movwf	pclath,c
 10517  004342  5012               	movf	??_I2C_MasterFsm^0,w,c
 10518  004344  6EFD               	movwf	tosl,c
 10519  004346  5013               	movf	(??_I2C_MasterFsm+1)^0,w,c
 10520  004348  6EFE               	movwf	tosh,c
 10521  00434A  6AFF               	clrf	tosu,c
 10522  00434C  50FA               	movf	pclath,w,c
 10523  00434E  0012               	return		;indir
 10524  004350                     u3199:
 10525  004350  0101               	movlb	1	; () banked
 10526  004352  6F21               	movwf	(_I2C_Status+33)& (0+255),b
 10527  004354                     
 10528                           ; BSR set to: 1
 10529  004354  0012               	return		;funcret
 10530  004356                     __end_of_I2C_MasterFsm:
 10531                           	callstack 0
 10532                           
 10533 ;; *************** function _I2C_DO_ADDRESS_NACK *****************
 10534 ;; Defined at:
 10535 ;;		line 500 in file "mcc_generated_files/i2c_master.c"
 10536 ;; Parameters:    Size  Location     Type
 10537 ;;		None
 10538 ;; Auto vars:     Size  Location     Type
 10539 ;;		None
 10540 ;; Return value:  Size  Location     Type
 10541 ;;                  1    wreg      enum E3101
 10542 ;; Registers used:
 10543 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 10544 ;; Tracked objects:
 10545 ;;		On entry : 0/0
 10546 ;;		On exit  : 0/0
 10547 ;;		Unchanged: 0/0
 10548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10551 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10552 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10553 ;;Total ram usage:        2 bytes
 10554 ;; Hardware stack levels used:    1
 10555 ;; Hardware stack levels required when called:    7
 10556 ;; This function calls:
 10557 ;;		Absolute function
 10558 ;;		_I2C_CallbackReturnReset
 10559 ;;		_I2C_CallbackReturnStop
 10560 ;;		_I2C_DO_SEND_RESTART
 10561 ;;		_I2C_DO_SEND_STOP
 10562 ;;		_rd1RegCompleteHandler
 10563 ;;		_rd2RegCompleteHandler
 10564 ;;		_rdBlkRegCompleteHandler
 10565 ;;		_wr1RegCompleteHandler
 10566 ;;		_wr2RegCompleteHandler
 10567 ;; This function is called by:
 10568 ;;		_I2C_MasterFsm
 10569 ;; This function uses a non-reentrant model
 10570 ;;
 10571                           
 10572                           	psect	text57
 10573  004356                     __ptext57:
 10574                           	callstack 0
 10575  004356                     _I2C_DO_ADDRESS_NACK:
 10576                           	callstack 16
 10577  004356                     
 10578                           ;mcc_generated_files/i2c_master.c: 502:     I2C_Status.addressNackCheck = 0;
 10579  004356  0101               	movlb	1	; () banked
 10580  004358  9123               	bcf	(_I2C_Status+35)& (0+255),0,b
 10581  00435A                     
 10582                           ; BSR set to: 1
 10583                           ;mcc_generated_files/i2c_master.c: 503:     I2C_Status.error = I2C_FAIL;
 10584  00435A  0E02               	movlw	2
 10585  00435C  6F22               	movwf	(_I2C_Status+34)& (0+255),b
 10586                           
 10587                           ;mcc_generated_files/i2c_master.c: 504:     switch(I2C_Status.callbackTable[I2C_ADDR_NAC
      +                          K](I2C_Status.callbackPayload[I2C_ADDR_NACK]))
 10588  00435E  EFB9  F021         	goto	l4285
 10589  004362                     l4275:
 10590                           
 10591                           ;mcc_generated_files/i2c_master.c: 508:             return I2C_DO_SEND_RESTART();
 10592  004362  ECF4  F025         	call	_I2C_DO_SEND_RESTART	;wreg free
 10593  004366  EFDD  F021         	goto	l357
 10594  00436A                     l4279:
 10595                           
 10596                           ;mcc_generated_files/i2c_master.c: 510:             return I2C_DO_SEND_STOP();
 10597  00436A  ECF0  F025         	call	_I2C_DO_SEND_STOP	;wreg free
 10598  00436E  EFDD  F021         	goto	l357
 10599  004372                     l4285:
 10600                           
 10601                           ; BSR set to: 1
 10602  004372  C110  F00E         	movff	_I2C_Status+16,I2C_CallbackReturnReset@funPtr
 10603  004376  C111  F00F         	movff	_I2C_Status+17,I2C_CallbackReturnReset@funPtr+1
 10604  00437A  D802               	call	u3158
 10605  00437C  EFC9  F021         	goto	u3159
 10606  004380                     u3158:
 10607  004380  0005               	push	
 10608  004382  6EFA               	movwf	pclath,c
 10609  004384  5104               	movf	(_I2C_Status+4)& (0+255),w,b
 10610  004386  6EFD               	movwf	tosl,c
 10611  004388  5105               	movf	(_I2C_Status+5)& (0+255),w,b
 10612  00438A  6EFE               	movwf	tosh,c
 10613  00438C  6AFF               	clrf	tosu,c
 10614  00438E  50FA               	movf	pclath,w,c
 10615  004390  0012               	return		;indir
 10616  004392                     u3159:
 10617  004392  6E10               	movwf	??_I2C_DO_ADDRESS_NACK^0,c
 10618  004394  6A11               	clrf	(??_I2C_DO_ADDRESS_NACK+1)^0,c
 10619                           
 10620                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10621                           ; Switch size 1, requested type "simple"
 10622                           ; Number of cases is 1, Range of values is 0 to 0
 10623                           ; switch strategies available:
 10624                           ; Name         Instructions Cycles
 10625                           ; simple_byte            4     3 (average)
 10626                           ;	Chosen strategy is simple_byte
 10627  004396  5011               	movf	(??_I2C_DO_ADDRESS_NACK+1)^0,w,c
 10628  004398  0A00               	xorlw	0	; case 0
 10629  00439A  B4D8               	btfsc	status,2,c
 10630  00439C  EFD2  F021         	goto	l7825
 10631  0043A0  EFB5  F021         	goto	l4279
 10632  0043A4                     l7825:
 10633                           
 10634                           ; Switch size 1, requested type "simple"
 10635                           ; Number of cases is 2, Range of values is 2 to 3
 10636                           ; switch strategies available:
 10637                           ; Name         Instructions Cycles
 10638                           ; simple_byte            7     4 (average)
 10639                           ;	Chosen strategy is simple_byte
 10640  0043A4  5010               	movf	??_I2C_DO_ADDRESS_NACK^0,w,c
 10641  0043A6  0A02               	xorlw	2	; case 2
 10642  0043A8  B4D8               	btfsc	status,2,c
 10643  0043AA  EFB1  F021         	goto	l4275
 10644  0043AE  0A01               	xorlw	1	; case 3
 10645  0043B0  B4D8               	btfsc	status,2,c
 10646  0043B2  EFB1  F021         	goto	l4275
 10647  0043B6  EFB5  F021         	goto	l4279
 10648  0043BA                     l357:
 10649  0043BA  0012               	return		;funcret
 10650  0043BC                     __end_of_I2C_DO_ADDRESS_NACK:
 10651                           	callstack 0
 10652                           
 10653 ;; *************** function _I2C_DO_RESET *****************
 10654 ;; Defined at:
 10655 ;;		line 494 in file "mcc_generated_files/i2c_master.c"
 10656 ;; Parameters:    Size  Location     Type
 10657 ;;		None
 10658 ;; Auto vars:     Size  Location     Type
 10659 ;;		None
 10660 ;; Return value:  Size  Location     Type
 10661 ;;                  1    wreg      enum E3101
 10662 ;; Registers used:
 10663 ;;		wreg, status,2
 10664 ;; Tracked objects:
 10665 ;;		On entry : 0/0
 10666 ;;		On exit  : 0/0
 10667 ;;		Unchanged: 0/0
 10668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10672 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10673 ;;Total ram usage:        0 bytes
 10674 ;; Hardware stack levels used:    1
 10675 ;; Hardware stack levels required when called:    4
 10676 ;; This function calls:
 10677 ;;		Nothing
 10678 ;; This function is called by:
 10679 ;;		_I2C_MasterFsm
 10680 ;; This function uses a non-reentrant model
 10681 ;;
 10682                           
 10683                           	psect	text58
 10684  004B4E                     __ptext58:
 10685                           	callstack 0
 10686  004B4E                     _I2C_DO_RESET:
 10687                           	callstack 19
 10688  004B4E                     
 10689                           ;mcc_generated_files/i2c_master.c: 496:     I2C_Status.busy = 0;
 10690  004B4E  0101               	movlb	1	; () banked
 10691  004B50  9323               	bcf	(_I2C_Status+35)& (0+255),1,b
 10692  004B52                     
 10693                           ; BSR set to: 1
 10694                           ;mcc_generated_files/i2c_master.c: 497:     I2C_Status.error = I2C_NOERR;
 10695  004B52  0E00               	movlw	0
 10696  004B54  6F22               	movwf	(_I2C_Status+34)& (0+255),b
 10697  004B56                     
 10698                           ; BSR set to: 1
 10699                           ;mcc_generated_files/i2c_master.c: 498:     return I2C_RESET;
 10700  004B56  0E0E               	movlw	14
 10701  004B58                     
 10702                           ; BSR set to: 1
 10703  004B58  0012               	return		;funcret
 10704  004B5A                     __end_of_I2C_DO_RESET:
 10705                           	callstack 0
 10706                           
 10707 ;; *************** function _I2C_DO_RX_NACK_RESTART *****************
 10708 ;; Defined at:
 10709 ;;		line 488 in file "mcc_generated_files/i2c_master.c"
 10710 ;; Parameters:    Size  Location     Type
 10711 ;;		None
 10712 ;; Auto vars:     Size  Location     Type
 10713 ;;		None
 10714 ;; Return value:  Size  Location     Type
 10715 ;;                  1    wreg      enum E3101
 10716 ;; Registers used:
 10717 ;;		wreg, cstack
 10718 ;; Tracked objects:
 10719 ;;		On entry : 0/0
 10720 ;;		On exit  : 0/0
 10721 ;;		Unchanged: 0/0
 10722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10726 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10727 ;;Total ram usage:        0 bytes
 10728 ;; Hardware stack levels used:    1
 10729 ;; Hardware stack levels required when called:    5
 10730 ;; This function calls:
 10731 ;;		_I2C_MasterSendNack
 10732 ;; This function is called by:
 10733 ;;		_I2C_DO_RX
 10734 ;;		_I2C_MasterFsm
 10735 ;; This function uses a non-reentrant model
 10736 ;;
 10737                           
 10738                           	psect	text59
 10739  004BC8                     __ptext59:
 10740                           	callstack 0
 10741  004BC8                     _I2C_DO_RX_NACK_RESTART:
 10742                           	callstack 18
 10743  004BC8                     
 10744                           ;mcc_generated_files/i2c_master.c: 490:     I2C_MasterSendNack();
 10745  004BC8  EC07  F026         	call	_I2C_MasterSendNack	;wreg free
 10746  004BCC                     
 10747                           ;mcc_generated_files/i2c_master.c: 491:     return I2C_SEND_RESTART;
 10748  004BCC  0E09               	movlw	9
 10749  004BCE  0012               	return		;funcret
 10750  004BD0                     __end_of_I2C_DO_RX_NACK_RESTART:
 10751                           	callstack 0
 10752                           
 10753 ;; *************** function _I2C_DO_RX_NACK_STOP *****************
 10754 ;; Defined at:
 10755 ;;		line 482 in file "mcc_generated_files/i2c_master.c"
 10756 ;; Parameters:    Size  Location     Type
 10757 ;;		None
 10758 ;; Auto vars:     Size  Location     Type
 10759 ;;		None
 10760 ;; Return value:  Size  Location     Type
 10761 ;;                  1    wreg      enum E3101
 10762 ;; Registers used:
 10763 ;;		wreg, cstack
 10764 ;; Tracked objects:
 10765 ;;		On entry : 0/0
 10766 ;;		On exit  : 0/0
 10767 ;;		Unchanged: 0/0
 10768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10773 ;;Total ram usage:        0 bytes
 10774 ;; Hardware stack levels used:    1
 10775 ;; Hardware stack levels required when called:    5
 10776 ;; This function calls:
 10777 ;;		_I2C_MasterSendNack
 10778 ;; This function is called by:
 10779 ;;		_I2C_DO_RX
 10780 ;;		_I2C_MasterFsm
 10781 ;; This function uses a non-reentrant model
 10782 ;;
 10783                           
 10784                           	psect	text60
 10785  004BD0                     __ptext60:
 10786                           	callstack 0
 10787  004BD0                     _I2C_DO_RX_NACK_STOP:
 10788                           	callstack 18
 10789  004BD0                     
 10790                           ;mcc_generated_files/i2c_master.c: 484:     I2C_MasterSendNack();
 10791  004BD0  EC07  F026         	call	_I2C_MasterSendNack	;wreg free
 10792  004BD4                     
 10793                           ;mcc_generated_files/i2c_master.c: 485:     return I2C_SEND_STOP;
 10794  004BD4  0E0A               	movlw	10
 10795  004BD6  0012               	return		;funcret
 10796  004BD8                     __end_of_I2C_DO_RX_NACK_STOP:
 10797                           	callstack 0
 10798                           
 10799 ;; *************** function _I2C_DO_RX_ACK *****************
 10800 ;; Defined at:
 10801 ;;		line 475 in file "mcc_generated_files/i2c_master.c"
 10802 ;; Parameters:    Size  Location     Type
 10803 ;;		None
 10804 ;; Auto vars:     Size  Location     Type
 10805 ;;		None
 10806 ;; Return value:  Size  Location     Type
 10807 ;;                  1    wreg      enum E3101
 10808 ;; Registers used:
 10809 ;;		wreg, cstack
 10810 ;; Tracked objects:
 10811 ;;		On entry : 0/0
 10812 ;;		On exit  : 0/0
 10813 ;;		Unchanged: 0/0
 10814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10818 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10819 ;;Total ram usage:        0 bytes
 10820 ;; Hardware stack levels used:    1
 10821 ;; Hardware stack levels required when called:    5
 10822 ;; This function calls:
 10823 ;;		_I2C_MasterSendAck
 10824 ;; This function is called by:
 10825 ;;		_I2C_MasterFsm
 10826 ;; This function uses a non-reentrant model
 10827 ;;
 10828                           
 10829                           	psect	text61
 10830  004BD8                     __ptext61:
 10831                           	callstack 0
 10832  004BD8                     _I2C_DO_RX_ACK:
 10833                           	callstack 18
 10834  004BD8                     
 10835                           ;mcc_generated_files/i2c_master.c: 477:     I2C_MasterSendAck();
 10836  004BD8  EC04  F026         	call	_I2C_MasterSendAck	;wreg free
 10837  004BDC                     
 10838                           ;mcc_generated_files/i2c_master.c: 478:     return I2C_RCEN;
 10839  004BDC  0E05               	movlw	5
 10840  004BDE  0012               	return		;funcret
 10841  004BE0                     __end_of_I2C_DO_RX_ACK:
 10842                           	callstack 0
 10843                           
 10844 ;; *************** function _I2C_DO_SEND_STOP *****************
 10845 ;; Defined at:
 10846 ;;		line 469 in file "mcc_generated_files/i2c_master.c"
 10847 ;; Parameters:    Size  Location     Type
 10848 ;;		None
 10849 ;; Auto vars:     Size  Location     Type
 10850 ;;		None
 10851 ;; Return value:  Size  Location     Type
 10852 ;;                  1    wreg      enum E3101
 10853 ;; Registers used:
 10854 ;;		wreg, cstack
 10855 ;; Tracked objects:
 10856 ;;		On entry : 0/0
 10857 ;;		On exit  : 0/0
 10858 ;;		Unchanged: 0/0
 10859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10863 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10864 ;;Total ram usage:        0 bytes
 10865 ;; Hardware stack levels used:    1
 10866 ;; Hardware stack levels required when called:    5
 10867 ;; This function calls:
 10868 ;;		_I2C_MasterStop
 10869 ;; This function is called by:
 10870 ;;		_I2C_DO_TX
 10871 ;;		_I2C_DO_TX_EMPTY
 10872 ;;		_I2C_DO_ADDRESS_NACK
 10873 ;;		_I2C_MasterFsm
 10874 ;; This function uses a non-reentrant model
 10875 ;;
 10876                           
 10877                           	psect	text62
 10878  004BE0                     __ptext62:
 10879                           	callstack 0
 10880  004BE0                     _I2C_DO_SEND_STOP:
 10881                           	callstack 17
 10882  004BE0                     
 10883                           ;mcc_generated_files/i2c_master.c: 471:     I2C_MasterStop();
 10884  004BE0  EC1C  F026         	call	_I2C_MasterStop	;wreg free
 10885  004BE4                     
 10886                           ;mcc_generated_files/i2c_master.c: 472:     return I2C_IDLE;
 10887  004BE4  0E00               	movlw	0
 10888  004BE6  0012               	return		;funcret
 10889  004BE8                     __end_of_I2C_DO_SEND_STOP:
 10890                           	callstack 0
 10891                           
 10892 ;; *************** function _I2C_DO_SEND_RESTART *****************
 10893 ;; Defined at:
 10894 ;;		line 463 in file "mcc_generated_files/i2c_master.c"
 10895 ;; Parameters:    Size  Location     Type
 10896 ;;		None
 10897 ;; Auto vars:     Size  Location     Type
 10898 ;;		None
 10899 ;; Return value:  Size  Location     Type
 10900 ;;                  1    wreg      enum E3101
 10901 ;; Registers used:
 10902 ;;		wreg, cstack
 10903 ;; Tracked objects:
 10904 ;;		On entry : 0/0
 10905 ;;		On exit  : 0/0
 10906 ;;		Unchanged: 0/0
 10907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10911 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10912 ;;Total ram usage:        0 bytes
 10913 ;; Hardware stack levels used:    1
 10914 ;; Hardware stack levels required when called:    5
 10915 ;; This function calls:
 10916 ;;		_I2C_MasterEnableRestart
 10917 ;; This function is called by:
 10918 ;;		_I2C_DO_TX_EMPTY
 10919 ;;		_I2C_DO_ADDRESS_NACK
 10920 ;;		_I2C_MasterFsm
 10921 ;; This function uses a non-reentrant model
 10922 ;;
 10923                           
 10924                           	psect	text63
 10925  004BE8                     __ptext63:
 10926                           	callstack 0
 10927  004BE8                     _I2C_DO_SEND_RESTART:
 10928                           	callstack 17
 10929  004BE8                     
 10930                           ;mcc_generated_files/i2c_master.c: 465:     I2C_MasterEnableRestart();
 10931  004BE8  EC1E  F026         	call	_I2C_MasterEnableRestart	;wreg free
 10932  004BEC                     
 10933                           ;mcc_generated_files/i2c_master.c: 466:     return I2C_SEND_ADR_READ;
 10934  004BEC  0E01               	movlw	1
 10935  004BEE  0012               	return		;funcret
 10936  004BF0                     __end_of_I2C_DO_SEND_RESTART:
 10937                           	callstack 0
 10938                           
 10939 ;; *************** function _I2C_DO_SEND_RESTART_WRITE *****************
 10940 ;; Defined at:
 10941 ;;		line 456 in file "mcc_generated_files/i2c_master.c"
 10942 ;; Parameters:    Size  Location     Type
 10943 ;;		None
 10944 ;; Auto vars:     Size  Location     Type
 10945 ;;		None
 10946 ;; Return value:  Size  Location     Type
 10947 ;;                  1    wreg      enum E3101
 10948 ;; Registers used:
 10949 ;;		wreg, cstack
 10950 ;; Tracked objects:
 10951 ;;		On entry : 0/0
 10952 ;;		On exit  : 0/0
 10953 ;;		Unchanged: 0/0
 10954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10959 ;;Total ram usage:        0 bytes
 10960 ;; Hardware stack levels used:    1
 10961 ;; Hardware stack levels required when called:    5
 10962 ;; This function calls:
 10963 ;;		_I2C_MasterEnableRestart
 10964 ;; This function is called by:
 10965 ;;		_I2C_DO_TX
 10966 ;;		_I2C_MasterFsm
 10967 ;; This function uses a non-reentrant model
 10968 ;;
 10969                           
 10970                           	psect	text64
 10971  004BF0                     __ptext64:
 10972                           	callstack 0
 10973  004BF0                     _I2C_DO_SEND_RESTART_WRITE:
 10974                           	callstack 17
 10975  004BF0                     
 10976                           ;mcc_generated_files/i2c_master.c: 458:     I2C_MasterEnableRestart();
 10977  004BF0  EC1E  F026         	call	_I2C_MasterEnableRestart	;wreg free
 10978  004BF4                     
 10979                           ;mcc_generated_files/i2c_master.c: 459:     return I2C_SEND_ADR_WRITE;
 10980  004BF4  0E02               	movlw	2
 10981  004BF6  0012               	return		;funcret
 10982  004BF8                     __end_of_I2C_DO_SEND_RESTART_WRITE:
 10983                           	callstack 0
 10984                           
 10985 ;; *************** function _I2C_DO_SEND_RESTART_READ *****************
 10986 ;; Defined at:
 10987 ;;		line 450 in file "mcc_generated_files/i2c_master.c"
 10988 ;; Parameters:    Size  Location     Type
 10989 ;;		None
 10990 ;; Auto vars:     Size  Location     Type
 10991 ;;		None
 10992 ;; Return value:  Size  Location     Type
 10993 ;;                  1    wreg      enum E3101
 10994 ;; Registers used:
 10995 ;;		wreg, cstack
 10996 ;; Tracked objects:
 10997 ;;		On entry : 0/0
 10998 ;;		On exit  : 0/0
 10999 ;;		Unchanged: 0/0
 11000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11004 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11005 ;;Total ram usage:        0 bytes
 11006 ;; Hardware stack levels used:    1
 11007 ;; Hardware stack levels required when called:    5
 11008 ;; This function calls:
 11009 ;;		_I2C_MasterEnableRestart
 11010 ;; This function is called by:
 11011 ;;		_I2C_DO_TX
 11012 ;;		_I2C_MasterFsm
 11013 ;; This function uses a non-reentrant model
 11014 ;;
 11015                           
 11016                           	psect	text65
 11017  004BF8                     __ptext65:
 11018                           	callstack 0
 11019  004BF8                     _I2C_DO_SEND_RESTART_READ:
 11020                           	callstack 17
 11021  004BF8                     
 11022                           ;mcc_generated_files/i2c_master.c: 452:     I2C_MasterEnableRestart();
 11023  004BF8  EC1E  F026         	call	_I2C_MasterEnableRestart	;wreg free
 11024  004BFC                     
 11025                           ;mcc_generated_files/i2c_master.c: 453:     return I2C_SEND_ADR_READ;
 11026  004BFC  0E01               	movlw	1
 11027  004BFE  0012               	return		;funcret
 11028  004C00                     __end_of_I2C_DO_SEND_RESTART_READ:
 11029                           	callstack 0
 11030                           
 11031 ;; *************** function _I2C_DO_RCEN *****************
 11032 ;; Defined at:
 11033 ;;		line 402 in file "mcc_generated_files/i2c_master.c"
 11034 ;; Parameters:    Size  Location     Type
 11035 ;;		None
 11036 ;; Auto vars:     Size  Location     Type
 11037 ;;		None
 11038 ;; Return value:  Size  Location     Type
 11039 ;;                  1    wreg      enum E3101
 11040 ;; Registers used:
 11041 ;;		wreg, cstack
 11042 ;; Tracked objects:
 11043 ;;		On entry : 0/0
 11044 ;;		On exit  : 0/0
 11045 ;;		Unchanged: 0/0
 11046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11050 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11051 ;;Total ram usage:        0 bytes
 11052 ;; Hardware stack levels used:    1
 11053 ;; Hardware stack levels required when called:    5
 11054 ;; This function calls:
 11055 ;;		_I2C_MasterStartRx
 11056 ;; This function is called by:
 11057 ;;		_I2C_MasterFsm
 11058 ;; This function uses a non-reentrant model
 11059 ;;
 11060                           
 11061                           	psect	text66
 11062  004B5A                     __ptext66:
 11063                           	callstack 0
 11064  004B5A                     _I2C_DO_RCEN:
 11065                           	callstack 18
 11066  004B5A                     
 11067                           ;mcc_generated_files/i2c_master.c: 404:     I2C_Status.addressNackCheck = 0;
 11068  004B5A  0101               	movlb	1	; () banked
 11069  004B5C  9123               	bcf	(_I2C_Status+35)& (0+255),0,b
 11070  004B5E                     
 11071                           ; BSR set to: 1
 11072                           ;mcc_generated_files/i2c_master.c: 405:     I2C_MasterStartRx();
 11073  004B5E  EC16  F026         	call	_I2C_MasterStartRx	;wreg free
 11074  004B62                     
 11075                           ;mcc_generated_files/i2c_master.c: 406:     return I2C_RX;
 11076  004B62  0E04               	movlw	4
 11077  004B64  0012               	return		;funcret
 11078  004B66                     __end_of_I2C_DO_RCEN:
 11079                           	callstack 0
 11080                           
 11081 ;; *************** function _I2C_DO_RX *****************
 11082 ;; Defined at:
 11083 ;;		line 378 in file "mcc_generated_files/i2c_master.c"
 11084 ;; Parameters:    Size  Location     Type
 11085 ;;		None
 11086 ;; Auto vars:     Size  Location     Type
 11087 ;;		None
 11088 ;; Return value:  Size  Location     Type
 11089 ;;                  1    wreg      enum E3101
 11090 ;; Registers used:
 11091 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 11092 ;; Tracked objects:
 11093 ;;		On entry : 0/0
 11094 ;;		On exit  : 0/0
 11095 ;;		Unchanged: 0/0
 11096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11099 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11100 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11101 ;;Total ram usage:        2 bytes
 11102 ;; Hardware stack levels used:    1
 11103 ;; Hardware stack levels required when called:    7
 11104 ;; This function calls:
 11105 ;;		Absolute function
 11106 ;;		_I2C_CallbackReturnReset
 11107 ;;		_I2C_CallbackReturnStop
 11108 ;;		_I2C_DO_RX_NACK_RESTART
 11109 ;;		_I2C_DO_RX_NACK_STOP
 11110 ;;		_I2C_MasterGetRxData
 11111 ;;		_I2C_MasterSendAck
 11112 ;;		_rd1RegCompleteHandler
 11113 ;;		_rd2RegCompleteHandler
 11114 ;;		_rdBlkRegCompleteHandler
 11115 ;;		_wr1RegCompleteHandler
 11116 ;;		_wr2RegCompleteHandler
 11117 ;; This function is called by:
 11118 ;;		_I2C_MasterFsm
 11119 ;; This function uses a non-reentrant model
 11120 ;;
 11121                           
 11122                           	psect	text67
 11123  003FB0                     __ptext67:
 11124                           	callstack 0
 11125  003FB0                     _I2C_DO_RX:
 11126                           	callstack 16
 11127  003FB0                     
 11128                           ;mcc_generated_files/i2c_master.c: 380:     *I2C_Status.data_ptr++ = I2C_MasterGetRxData
      +                          ();
 11129  003FB0  EC14  F026         	call	_I2C_MasterGetRxData	;wreg free
 11130  003FB4  C11D  FFD9         	movff	_I2C_Status+29,fsr2l
 11131  003FB8  C11E  FFDA         	movff	_I2C_Status+30,fsr2h
 11132  003FBC  6EDF               	movwf	indf2,c
 11133  003FBE  0101               	movlb	1	; () banked
 11134  003FC0  4B1D               	infsnz	(_I2C_Status+29)& (0+255),f,b
 11135  003FC2  2B1E               	incf	(_I2C_Status+30)& (0+255),f,b
 11136  003FC4                     
 11137                           ; BSR set to: 1
 11138                           ;mcc_generated_files/i2c_master.c: 381:     if(--I2C_Status.data_length)
 11139  003FC4  071F               	decf	(_I2C_Status+31)& (0+255),f,b
 11140  003FC6  A0D8               	btfss	status,0,c
 11141  003FC8  0720               	decf	(_I2C_Status+32)& (0+255),f,b
 11142  003FCA  511F               	movf	(_I2C_Status+31)& (0+255),w,b
 11143  003FCC  1120               	iorwf	(_I2C_Status+32)& (0+255),w,b
 11144  003FCE  B4D8               	btfsc	status,2,c
 11145  003FD0  EFEC  F01F         	goto	u3121
 11146  003FD4  EFEE  F01F         	goto	u3120
 11147  003FD8                     u3121:
 11148  003FD8  EFF3  F01F         	goto	l294
 11149  003FDC                     u3120:
 11150  003FDC                     
 11151                           ; BSR set to: 1
 11152                           ;mcc_generated_files/i2c_master.c: 382:     {;mcc_generated_files/i2c_master.c: 383:    
      +                               I2C_MasterSendAck();
 11153  003FDC  EC04  F026         	call	_I2C_MasterSendAck	;wreg free
 11154  003FE0                     
 11155                           ;mcc_generated_files/i2c_master.c: 384:         return I2C_RCEN;
 11156  003FE0  0E05               	movlw	5
 11157  003FE2  EF2A  F020         	goto	l295
 11158  003FE6                     l294:
 11159                           
 11160                           ; BSR set to: 1
 11161                           ;mcc_generated_files/i2c_master.c: 387:     {;mcc_generated_files/i2c_master.c: 388:    
      +                               I2C_Status.bufferFree = 1;
 11162  003FE6  8723               	bsf	(_I2C_Status+35)& (0+255),3,b
 11163                           
 11164                           ;mcc_generated_files/i2c_master.c: 389:         switch(I2C_Status.callbackTable[I2C_DATA
      +                          _COMPLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
 11165  003FE8  EFFE  F01F         	goto	l4215
 11166  003FEC                     l4205:
 11167                           
 11168                           ;mcc_generated_files/i2c_master.c: 393:                 return I2C_DO_RX_NACK_RESTART();
 11169  003FEC  ECE4  F025         	call	_I2C_DO_RX_NACK_RESTART	;wreg free
 11170  003FF0  EF2A  F020         	goto	l295
 11171  003FF4                     l4209:
 11172                           
 11173                           ;mcc_generated_files/i2c_master.c: 397:                 return I2C_DO_RX_NACK_STOP();
 11174  003FF4  ECE8  F025         	call	_I2C_DO_RX_NACK_STOP	;wreg free
 11175  003FF8  EF2A  F020         	goto	l295
 11176  003FFC                     l4215:
 11177                           
 11178                           ; BSR set to: 1
 11179  003FFC  C10C  F00E         	movff	_I2C_Status+12,I2C_CallbackReturnReset@funPtr
 11180  004000  C10D  F00F         	movff	_I2C_Status+13,I2C_CallbackReturnReset@funPtr+1
 11181  004004  D802               	call	u3138
 11182  004006  EF0E  F020         	goto	u3139
 11183  00400A                     u3138:
 11184  00400A  0005               	push	
 11185  00400C  6EFA               	movwf	pclath,c
 11186  00400E  5100               	movf	_I2C_Status& (0+255),w,b
 11187  004010  6EFD               	movwf	tosl,c
 11188  004012  5101               	movf	(_I2C_Status+1)& (0+255),w,b
 11189  004014  6EFE               	movwf	tosh,c
 11190  004016  6AFF               	clrf	tosu,c
 11191  004018  50FA               	movf	pclath,w,c
 11192  00401A  0012               	return		;indir
 11193  00401C                     u3139:
 11194  00401C  6E10               	movwf	??_I2C_DO_RX^0,c
 11195  00401E  6A11               	clrf	(??_I2C_DO_RX+1)^0,c
 11196                           
 11197                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11198                           ; Switch size 1, requested type "simple"
 11199                           ; Number of cases is 1, Range of values is 0 to 0
 11200                           ; switch strategies available:
 11201                           ; Name         Instructions Cycles
 11202                           ; simple_byte            4     3 (average)
 11203                           ;	Chosen strategy is simple_byte
 11204  004020  5011               	movf	(??_I2C_DO_RX+1)^0,w,c
 11205  004022  0A00               	xorlw	0	; case 0
 11206  004024  B4D8               	btfsc	status,2,c
 11207  004026  EF17  F020         	goto	l7827
 11208  00402A  EFFA  F01F         	goto	l4209
 11209  00402E                     l7827:
 11210                           
 11211                           ; Switch size 1, requested type "simple"
 11212                           ; Number of cases is 4, Range of values is 1 to 4
 11213                           ; switch strategies available:
 11214                           ; Name         Instructions Cycles
 11215                           ; simple_byte           13     7 (average)
 11216                           ;	Chosen strategy is simple_byte
 11217  00402E  5010               	movf	??_I2C_DO_RX^0,w,c
 11218  004030  0A01               	xorlw	1	; case 1
 11219  004032  B4D8               	btfsc	status,2,c
 11220  004034  EFFA  F01F         	goto	l4209
 11221  004038  0A03               	xorlw	3	; case 2
 11222  00403A  B4D8               	btfsc	status,2,c
 11223  00403C  EFF6  F01F         	goto	l4205
 11224  004040  0A01               	xorlw	1	; case 3
 11225  004042  B4D8               	btfsc	status,2,c
 11226  004044  EFF6  F01F         	goto	l4205
 11227  004048  0A07               	xorlw	7	; case 4
 11228  00404A  B4D8               	btfsc	status,2,c
 11229  00404C  EFFA  F01F         	goto	l4209
 11230  004050  EFFA  F01F         	goto	l4209
 11231  004054                     l295:
 11232  004054  0012               	return		;funcret
 11233  004056                     __end_of_I2C_DO_RX:
 11234                           	callstack 0
 11235                           
 11236 ;; *************** function _I2C_DO_TX *****************
 11237 ;; Defined at:
 11238 ;;		line 354 in file "mcc_generated_files/i2c_master.c"
 11239 ;; Parameters:    Size  Location     Type
 11240 ;;		None
 11241 ;; Auto vars:     Size  Location     Type
 11242 ;;		None
 11243 ;; Return value:  Size  Location     Type
 11244 ;;                  1    wreg      enum E3101
 11245 ;; Registers used:
 11246 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 11247 ;; Tracked objects:
 11248 ;;		On entry : 0/0
 11249 ;;		On exit  : 0/0
 11250 ;;		Unchanged: 0/0
 11251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11254 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11255 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11256 ;;Total ram usage:        2 bytes
 11257 ;; Hardware stack levels used:    1
 11258 ;; Hardware stack levels required when called:    7
 11259 ;; This function calls:
 11260 ;;		Absolute function
 11261 ;;		_I2C_CallbackReturnReset
 11262 ;;		_I2C_CallbackReturnStop
 11263 ;;		_I2C_DO_SEND_RESTART_READ
 11264 ;;		_I2C_DO_SEND_RESTART_WRITE
 11265 ;;		_I2C_DO_SEND_STOP
 11266 ;;		_I2C_MasterIsNack
 11267 ;;		_I2C_MasterSendTxData
 11268 ;;		_rd1RegCompleteHandler
 11269 ;;		_rd2RegCompleteHandler
 11270 ;;		_rdBlkRegCompleteHandler
 11271 ;;		_wr1RegCompleteHandler
 11272 ;;		_wr2RegCompleteHandler
 11273 ;; This function is called by:
 11274 ;;		_I2C_MasterFsm
 11275 ;; This function uses a non-reentrant model
 11276 ;;
 11277                           
 11278                           	psect	text68
 11279  003C26                     __ptext68:
 11280                           	callstack 0
 11281  003C26                     _I2C_DO_TX:
 11282                           	callstack 16
 11283  003C26                     
 11284                           ;mcc_generated_files/i2c_master.c: 356:     if(I2C_MasterIsNack())
 11285  003C26  EC85  F025         	call	_I2C_MasterIsNack	;wreg free
 11286  003C2A  0900               	iorlw	0
 11287  003C2C  B4D8               	btfsc	status,2,c
 11288  003C2E  EF1B  F01E         	goto	u3091
 11289  003C32  EF1D  F01E         	goto	u3090
 11290  003C36                     u3091:
 11291  003C36  EF58  F01E         	goto	l278
 11292  003C3A                     u3090:
 11293  003C3A  EF2B  F01E         	goto	l4175
 11294  003C3E                     l4161:
 11295                           
 11296                           ;mcc_generated_files/i2c_master.c: 361:                 return I2C_DO_SEND_RESTART_READ(
      +                          );
 11297  003C3E  ECFC  F025         	call	_I2C_DO_SEND_RESTART_READ	;wreg free
 11298  003C42  EF74  F01E         	goto	l281
 11299  003C46                     l4165:
 11300                           
 11301                           ;mcc_generated_files/i2c_master.c: 363:                   return I2C_DO_SEND_RESTART_WRI
      +                          TE();
 11302  003C46  ECF8  F025         	call	_I2C_DO_SEND_RESTART_WRITE	;wreg free
 11303  003C4A  EF74  F01E         	goto	l281
 11304  003C4E                     l4169:
 11305                           
 11306                           ;mcc_generated_files/i2c_master.c: 367:                 return I2C_DO_SEND_STOP();
 11307  003C4E  ECF0  F025         	call	_I2C_DO_SEND_STOP	;wreg free
 11308  003C52  EF74  F01E         	goto	l281
 11309  003C56                     l4175:
 11310  003C56  C112  F00E         	movff	_I2C_Status+18,I2C_CallbackReturnReset@funPtr
 11311  003C5A  C113  F00F         	movff	_I2C_Status+19,I2C_CallbackReturnReset@funPtr+1
 11312  003C5E  D802               	call	u3108
 11313  003C60  EF3C  F01E         	goto	u3109
 11314  003C64                     u3108:
 11315  003C64  0005               	push	
 11316  003C66  6EFA               	movwf	pclath,c
 11317  003C68  0101               	movlb	1	; () banked
 11318  003C6A  5106               	movf	(_I2C_Status+6)& (0+255),w,b
 11319  003C6C  6EFD               	movwf	tosl,c
 11320  003C6E  5107               	movf	(_I2C_Status+7)& (0+255),w,b
 11321  003C70  6EFE               	movwf	tosh,c
 11322  003C72  6AFF               	clrf	tosu,c
 11323  003C74  50FA               	movf	pclath,w,c
 11324  003C76  0012               	return		;indir
 11325  003C78                     u3109:
 11326  003C78  6E10               	movwf	??_I2C_DO_TX^0,c
 11327  003C7A  6A11               	clrf	(??_I2C_DO_TX+1)^0,c
 11328                           
 11329                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11330                           ; Switch size 1, requested type "simple"
 11331                           ; Number of cases is 1, Range of values is 0 to 0
 11332                           ; switch strategies available:
 11333                           ; Name         Instructions Cycles
 11334                           ; simple_byte            4     3 (average)
 11335                           ;	Chosen strategy is simple_byte
 11336  003C7C  5011               	movf	(??_I2C_DO_TX+1)^0,w,c
 11337  003C7E  0A00               	xorlw	0	; case 0
 11338  003C80  B4D8               	btfsc	status,2,c
 11339  003C82  EF45  F01E         	goto	l7829
 11340  003C86  EF27  F01E         	goto	l4169
 11341  003C8A                     l7829:
 11342                           
 11343                           ; Switch size 1, requested type "simple"
 11344                           ; Number of cases is 4, Range of values is 1 to 4
 11345                           ; switch strategies available:
 11346                           ; Name         Instructions Cycles
 11347                           ; simple_byte           13     7 (average)
 11348                           ;	Chosen strategy is simple_byte
 11349  003C8A  5010               	movf	??_I2C_DO_TX^0,w,c
 11350  003C8C  0A01               	xorlw	1	; case 1
 11351  003C8E  B4D8               	btfsc	status,2,c
 11352  003C90  EF27  F01E         	goto	l4169
 11353  003C94  0A03               	xorlw	3	; case 2
 11354  003C96  B4D8               	btfsc	status,2,c
 11355  003C98  EF1F  F01E         	goto	l4161
 11356  003C9C  0A01               	xorlw	1	; case 3
 11357  003C9E  B4D8               	btfsc	status,2,c
 11358  003CA0  EF23  F01E         	goto	l4165
 11359  003CA4  0A07               	xorlw	7	; case 4
 11360  003CA6  B4D8               	btfsc	status,2,c
 11361  003CA8  EF27  F01E         	goto	l4169
 11362  003CAC  EF27  F01E         	goto	l4169
 11363  003CB0                     l278:
 11364                           
 11365                           ;mcc_generated_files/i2c_master.c: 371:     {;mcc_generated_files/i2c_master.c: 372:    
      +                               I2C_Status.addressNackCheck = 0;
 11366  003CB0  0101               	movlb	1	; () banked
 11367  003CB2  9123               	bcf	(_I2C_Status+35)& (0+255),0,b
 11368  003CB4                     
 11369                           ; BSR set to: 1
 11370                           ;mcc_generated_files/i2c_master.c: 373:         I2C_MasterSendTxData(*I2C_Status.data_pt
      +                          r++);
 11371  003CB4  C11D  FFD9         	movff	_I2C_Status+29,fsr2l
 11372  003CB8  C11E  FFDA         	movff	_I2C_Status+30,fsr2h
 11373  003CBC  4B1D               	infsnz	(_I2C_Status+29)& (0+255),f,b
 11374  003CBE  2B1E               	incf	(_I2C_Status+30)& (0+255),f,b
 11375  003CC0  50DF               	movf	indf2,w,c
 11376  003CC2  EC00  F026         	call	_I2C_MasterSendTxData
 11377  003CC6                     
 11378                           ;mcc_generated_files/i2c_master.c: 374:         return (--I2C_Status.data_length)?I2C_TX
      +                          :I2C_TX_EMPTY;
 11379  003CC6  0101               	movlb	1	; () banked
 11380  003CC8  071F               	decf	(_I2C_Status+31)& (0+255),f,b
 11381  003CCA  A0D8               	btfss	status,0,c
 11382  003CCC  0720               	decf	(_I2C_Status+32)& (0+255),f,b
 11383  003CCE  511F               	movf	(_I2C_Status+31)& (0+255),w,b
 11384  003CD0  1120               	iorwf	(_I2C_Status+32)& (0+255),w,b
 11385  003CD2  A4D8               	btfss	status,2,c
 11386  003CD4  EF6E  F01E         	goto	u3111
 11387  003CD8  EF70  F01E         	goto	u3110
 11388  003CDC                     u3111:
 11389  003CDC  EF73  F01E         	goto	l4183
 11390  003CE0                     u3110:
 11391  003CE0                     
 11392                           ; BSR set to: 1
 11393  003CE0  0E06               	movlw	6
 11394  003CE2  EF74  F01E         	goto	l281
 11395  003CE6                     l4183:
 11396                           
 11397                           ; BSR set to: 1
 11398  003CE6  0E03               	movlw	3
 11399  003CE8                     l281:
 11400  003CE8  0012               	return		;funcret
 11401  003CEA                     __end_of_I2C_DO_TX:
 11402                           	callstack 0
 11403                           
 11404 ;; *************** function _I2C_DO_SEND_ADR_WRITE *****************
 11405 ;; Defined at:
 11406 ;;		line 347 in file "mcc_generated_files/i2c_master.c"
 11407 ;; Parameters:    Size  Location     Type
 11408 ;;		None
 11409 ;; Auto vars:     Size  Location     Type
 11410 ;;		None
 11411 ;; Return value:  Size  Location     Type
 11412 ;;                  1    wreg      enum E3101
 11413 ;; Registers used:
 11414 ;;		wreg, status,2, status,0, cstack
 11415 ;; Tracked objects:
 11416 ;;		On entry : 0/0
 11417 ;;		On exit  : 0/0
 11418 ;;		Unchanged: 0/0
 11419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11423 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11424 ;;Total ram usage:        0 bytes
 11425 ;; Hardware stack levels used:    1
 11426 ;; Hardware stack levels required when called:    5
 11427 ;; This function calls:
 11428 ;;		_I2C_MasterSendTxData
 11429 ;; This function is called by:
 11430 ;;		_I2C_MasterFsm
 11431 ;; This function uses a non-reentrant model
 11432 ;;
 11433                           
 11434                           	psect	text69
 11435  004B2E                     __ptext69:
 11436                           	callstack 0
 11437  004B2E                     _I2C_DO_SEND_ADR_WRITE:
 11438                           	callstack 18
 11439  004B2E                     
 11440                           ;mcc_generated_files/i2c_master.c: 349:     I2C_Status.addressNackCheck = 1;
 11441  004B2E  0101               	movlb	1	; () banked
 11442  004B30  8123               	bsf	(_I2C_Status+35)& (0+255),0,b
 11443  004B32                     
 11444                           ; BSR set to: 1
 11445                           ;mcc_generated_files/i2c_master.c: 350:     I2C_MasterSendTxData(I2C_Status.address << 1
      +                          );
 11446  004B32  511C               	movf	(_I2C_Status+28)& (0+255),w,b
 11447  004B34  251C               	addwf	(_I2C_Status+28)& (0+255),w,b
 11448  004B36  EC00  F026         	call	_I2C_MasterSendTxData
 11449  004B3A                     
 11450                           ;mcc_generated_files/i2c_master.c: 351:     return I2C_TX;
 11451  004B3A  0E03               	movlw	3
 11452  004B3C  0012               	return		;funcret
 11453  004B3E                     __end_of_I2C_DO_SEND_ADR_WRITE:
 11454                           	callstack 0
 11455                           
 11456 ;; *************** function _I2C_DO_SEND_ADR_READ *****************
 11457 ;; Defined at:
 11458 ;;		line 340 in file "mcc_generated_files/i2c_master.c"
 11459 ;; Parameters:    Size  Location     Type
 11460 ;;		None
 11461 ;; Auto vars:     Size  Location     Type
 11462 ;;		None
 11463 ;; Return value:  Size  Location     Type
 11464 ;;                  1    wreg      enum E3101
 11465 ;; Registers used:
 11466 ;;		wreg, status,0, cstack
 11467 ;; Tracked objects:
 11468 ;;		On entry : 0/0
 11469 ;;		On exit  : 0/0
 11470 ;;		Unchanged: 0/0
 11471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11475 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11476 ;;Total ram usage:        0 bytes
 11477 ;; Hardware stack levels used:    1
 11478 ;; Hardware stack levels required when called:    5
 11479 ;; This function calls:
 11480 ;;		_I2C_MasterSendTxData
 11481 ;; This function is called by:
 11482 ;;		_I2C_MasterFsm
 11483 ;; This function uses a non-reentrant model
 11484 ;;
 11485                           
 11486                           	psect	text70
 11487  004B3E                     __ptext70:
 11488                           	callstack 0
 11489  004B3E                     _I2C_DO_SEND_ADR_READ:
 11490                           	callstack 18
 11491  004B3E                     
 11492                           ;mcc_generated_files/i2c_master.c: 342:     I2C_Status.addressNackCheck = 1;
 11493  004B3E  0101               	movlb	1	; () banked
 11494  004B40  8123               	bsf	(_I2C_Status+35)& (0+255),0,b
 11495  004B42                     
 11496                           ; BSR set to: 1
 11497                           ;mcc_generated_files/i2c_master.c: 343:     I2C_MasterSendTxData(I2C_Status.address << 1
      +                           | 1);
 11498  004B42  80D8               	bsf	status,0,c
 11499  004B44  351C               	rlcf	(_I2C_Status+28)& (0+255),w,b
 11500  004B46  EC00  F026         	call	_I2C_MasterSendTxData
 11501  004B4A                     
 11502                           ;mcc_generated_files/i2c_master.c: 344:     return I2C_RCEN;
 11503  004B4A  0E05               	movlw	5
 11504  004B4C  0012               	return		;funcret
 11505  004B4E                     __end_of_I2C_DO_SEND_ADR_READ:
 11506                           	callstack 0
 11507                           
 11508 ;; *************** function _I2C_DO_IDLE *****************
 11509 ;; Defined at:
 11510 ;;		line 333 in file "mcc_generated_files/i2c_master.c"
 11511 ;; Parameters:    Size  Location     Type
 11512 ;;		None
 11513 ;; Auto vars:     Size  Location     Type
 11514 ;;		None
 11515 ;; Return value:  Size  Location     Type
 11516 ;;                  1    wreg      enum E3101
 11517 ;; Registers used:
 11518 ;;		wreg, status,2
 11519 ;; Tracked objects:
 11520 ;;		On entry : 0/0
 11521 ;;		On exit  : 0/0
 11522 ;;		Unchanged: 0/0
 11523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11527 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11528 ;;Total ram usage:        0 bytes
 11529 ;; Hardware stack levels used:    1
 11530 ;; Hardware stack levels required when called:    4
 11531 ;; This function calls:
 11532 ;;		Nothing
 11533 ;; This function is called by:
 11534 ;;		_I2C_MasterFsm
 11535 ;; This function uses a non-reentrant model
 11536 ;;
 11537                           
 11538                           	psect	text71
 11539  004B66                     __ptext71:
 11540                           	callstack 0
 11541  004B66                     _I2C_DO_IDLE:
 11542                           	callstack 19
 11543  004B66                     
 11544                           ;mcc_generated_files/i2c_master.c: 335:     I2C_Status.busy = 0;
 11545  004B66  0101               	movlb	1	; () banked
 11546  004B68  9323               	bcf	(_I2C_Status+35)& (0+255),1,b
 11547  004B6A                     
 11548                           ; BSR set to: 1
 11549                           ;mcc_generated_files/i2c_master.c: 336:     I2C_Status.error = I2C_NOERR;
 11550  004B6A  0E00               	movlw	0
 11551  004B6C  6F22               	movwf	(_I2C_Status+34)& (0+255),b
 11552  004B6E                     
 11553                           ; BSR set to: 1
 11554                           ;mcc_generated_files/i2c_master.c: 337:     return I2C_RESET;
 11555  004B6E  0E0E               	movlw	14
 11556  004B70                     
 11557                           ; BSR set to: 1
 11558  004B70  0012               	return		;funcret
 11559  004B72                     __end_of_I2C_DO_IDLE:
 11560                           	callstack 0
 11561                           
 11562 ;; *************** function _I2C_DO_TX_EMPTY *****************
 11563 ;; Defined at:
 11564 ;;		line 409 in file "mcc_generated_files/i2c_master.c"
 11565 ;; Parameters:    Size  Location     Type
 11566 ;;		None
 11567 ;; Auto vars:     Size  Location     Type
 11568 ;;		None
 11569 ;; Return value:  Size  Location     Type
 11570 ;;                  1    wreg      enum E3101
 11571 ;; Registers used:
 11572 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 11573 ;; Tracked objects:
 11574 ;;		On entry : 0/0
 11575 ;;		On exit  : 0/0
 11576 ;;		Unchanged: 0/0
 11577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11580 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11581 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11582 ;;Total ram usage:        2 bytes
 11583 ;; Hardware stack levels used:    1
 11584 ;; Hardware stack levels required when called:    7
 11585 ;; This function calls:
 11586 ;;		Absolute function
 11587 ;;		_I2C_CallbackReturnReset
 11588 ;;		_I2C_CallbackReturnStop
 11589 ;;		_I2C_DO_SEND_RESTART
 11590 ;;		_I2C_DO_SEND_STOP
 11591 ;;		_I2C_MasterSetIrq
 11592 ;;		_rd1RegCompleteHandler
 11593 ;;		_rd2RegCompleteHandler
 11594 ;;		_rdBlkRegCompleteHandler
 11595 ;;		_wr1RegCompleteHandler
 11596 ;;		_wr2RegCompleteHandler
 11597 ;; This function is called by:
 11598 ;;		_I2C_MasterFsm
 11599 ;; This function uses a non-reentrant model
 11600 ;;
 11601                           
 11602                           	psect	text72
 11603  00417A                     __ptext72:
 11604                           	callstack 0
 11605  00417A                     _I2C_DO_TX_EMPTY:
 11606                           	callstack 16
 11607  00417A                     
 11608                           ;mcc_generated_files/i2c_master.c: 411:     I2C_Status.bufferFree = 1;
 11609  00417A  0101               	movlb	1	; () banked
 11610  00417C  8723               	bsf	(_I2C_Status+35)& (0+255),3,b
 11611                           
 11612                           ;mcc_generated_files/i2c_master.c: 412:     switch(I2C_Status.callbackTable[I2C_DATA_COM
      +                          PLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
 11613  00417E  EFCE  F020         	goto	l4249
 11614  004182                     l4233:
 11615                           
 11616                           ;mcc_generated_files/i2c_master.c: 416:             return I2C_DO_SEND_RESTART();
 11617  004182  ECF4  F025         	call	_I2C_DO_SEND_RESTART	;wreg free
 11618  004186  EFFA  F020         	goto	l312
 11619  00418A                     l4237:
 11620                           
 11621                           ;mcc_generated_files/i2c_master.c: 418:             I2C_MasterSetIrq();
 11622  00418A  EC12  F026         	call	_I2C_MasterSetIrq	;wreg free
 11623  00418E                     
 11624                           ;mcc_generated_files/i2c_master.c: 419:             return I2C_TX;
 11625  00418E  0E03               	movlw	3
 11626  004190  EFFA  F020         	goto	l312
 11627  004194                     l4243:
 11628                           
 11629                           ;mcc_generated_files/i2c_master.c: 422:             return I2C_DO_SEND_STOP();
 11630  004194  ECF0  F025         	call	_I2C_DO_SEND_STOP	;wreg free
 11631  004198  EFFA  F020         	goto	l312
 11632  00419C                     l4249:
 11633                           
 11634                           ; BSR set to: 1
 11635  00419C  C10C  F00E         	movff	_I2C_Status+12,I2C_CallbackReturnReset@funPtr
 11636  0041A0  C10D  F00F         	movff	_I2C_Status+13,I2C_CallbackReturnReset@funPtr+1
 11637  0041A4  D802               	call	u3148
 11638  0041A6  EFDE  F020         	goto	u3149
 11639  0041AA                     u3148:
 11640  0041AA  0005               	push	
 11641  0041AC  6EFA               	movwf	pclath,c
 11642  0041AE  5100               	movf	_I2C_Status& (0+255),w,b
 11643  0041B0  6EFD               	movwf	tosl,c
 11644  0041B2  5101               	movf	(_I2C_Status+1)& (0+255),w,b
 11645  0041B4  6EFE               	movwf	tosh,c
 11646  0041B6  6AFF               	clrf	tosu,c
 11647  0041B8  50FA               	movf	pclath,w,c
 11648  0041BA  0012               	return		;indir
 11649  0041BC                     u3149:
 11650  0041BC  6E10               	movwf	??_I2C_DO_TX_EMPTY^0,c
 11651  0041BE  6A11               	clrf	(??_I2C_DO_TX_EMPTY+1)^0,c
 11652                           
 11653                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11654                           ; Switch size 1, requested type "simple"
 11655                           ; Number of cases is 1, Range of values is 0 to 0
 11656                           ; switch strategies available:
 11657                           ; Name         Instructions Cycles
 11658                           ; simple_byte            4     3 (average)
 11659                           ;	Chosen strategy is simple_byte
 11660  0041C0  5011               	movf	(??_I2C_DO_TX_EMPTY+1)^0,w,c
 11661  0041C2  0A00               	xorlw	0	; case 0
 11662  0041C4  B4D8               	btfsc	status,2,c
 11663  0041C6  EFE7  F020         	goto	l7831
 11664  0041CA  EFCA  F020         	goto	l4243
 11665  0041CE                     l7831:
 11666                           
 11667                           ; Switch size 1, requested type "simple"
 11668                           ; Number of cases is 4, Range of values is 1 to 4
 11669                           ; switch strategies available:
 11670                           ; Name         Instructions Cycles
 11671                           ; simple_byte           13     7 (average)
 11672                           ;	Chosen strategy is simple_byte
 11673  0041CE  5010               	movf	??_I2C_DO_TX_EMPTY^0,w,c
 11674  0041D0  0A01               	xorlw	1	; case 1
 11675  0041D2  B4D8               	btfsc	status,2,c
 11676  0041D4  EFCA  F020         	goto	l4243
 11677  0041D8  0A03               	xorlw	3	; case 2
 11678  0041DA  B4D8               	btfsc	status,2,c
 11679  0041DC  EFC1  F020         	goto	l4233
 11680  0041E0  0A01               	xorlw	1	; case 3
 11681  0041E2  B4D8               	btfsc	status,2,c
 11682  0041E4  EFC1  F020         	goto	l4233
 11683  0041E8  0A07               	xorlw	7	; case 4
 11684  0041EA  B4D8               	btfsc	status,2,c
 11685  0041EC  EFC5  F020         	goto	l4237
 11686  0041F0  EFCA  F020         	goto	l4243
 11687  0041F4                     l312:
 11688  0041F4  0012               	return		;funcret
 11689  0041F6                     __end_of_I2C_DO_TX_EMPTY:
 11690                           	callstack 0
 11691                           
 11692 ;; *************** function _I2C_MasterSetIrq *****************
 11693 ;; Defined at:
 11694 ;;		line 645 in file "mcc_generated_files/i2c_master.c"
 11695 ;; Parameters:    Size  Location     Type
 11696 ;;		None
 11697 ;; Auto vars:     Size  Location     Type
 11698 ;;		None
 11699 ;; Return value:  Size  Location     Type
 11700 ;;                  1    wreg      void 
 11701 ;; Registers used:
 11702 ;;		None
 11703 ;; Tracked objects:
 11704 ;;		On entry : 0/0
 11705 ;;		On exit  : 0/0
 11706 ;;		Unchanged: 0/0
 11707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11711 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11712 ;;Total ram usage:        0 bytes
 11713 ;; Hardware stack levels used:    1
 11714 ;; Hardware stack levels required when called:    4
 11715 ;; This function calls:
 11716 ;;		Nothing
 11717 ;; This function is called by:
 11718 ;;		_I2C_DO_TX_EMPTY
 11719 ;; This function uses a non-reentrant model
 11720 ;;
 11721                           
 11722                           	psect	text73
 11723  004C24                     __ptext73:
 11724                           	callstack 0
 11725  004C24                     _I2C_MasterSetIrq:
 11726                           	callstack 18
 11727  004C24                     
 11728                           ;mcc_generated_files/i2c_master.c: 647:     PIR1bits.SSPIF = 1;
 11729  004C24  869E               	bsf	158,3,c	;volatile
 11730  004C26  0012               	return		;funcret
 11731  004C28                     __end_of_I2C_MasterSetIrq:
 11732                           	callstack 0
 11733                           
 11734 ;; *************** function _I2C_MasterIsNack *****************
 11735 ;; Defined at:
 11736 ;;		line 598 in file "mcc_generated_files/i2c_master.c"
 11737 ;; Parameters:    Size  Location     Type
 11738 ;;		None
 11739 ;; Auto vars:     Size  Location     Type
 11740 ;;		None
 11741 ;; Return value:  Size  Location     Type
 11742 ;;                  1    wreg      _Bool 
 11743 ;; Registers used:
 11744 ;;		wreg
 11745 ;; Tracked objects:
 11746 ;;		On entry : 0/0
 11747 ;;		On exit  : 0/0
 11748 ;;		Unchanged: 0/0
 11749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11753 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11754 ;;Total ram usage:        0 bytes
 11755 ;; Hardware stack levels used:    1
 11756 ;; Hardware stack levels required when called:    4
 11757 ;; This function calls:
 11758 ;;		Nothing
 11759 ;; This function is called by:
 11760 ;;		_I2C_MasterFsm
 11761 ;;		_I2C_DO_TX
 11762 ;; This function uses a non-reentrant model
 11763 ;;
 11764                           
 11765                           	psect	text74
 11766  004B0A                     __ptext74:
 11767                           	callstack 0
 11768  004B0A                     _I2C_MasterIsNack:
 11769                           	callstack 19
 11770  004B0A                     
 11771                           ;mcc_generated_files/i2c_master.c: 600:     return SSPCON2bits.ACKSTAT;
 11772  004B0A  BCC5               	btfsc	197,6,c	;volatile
 11773  004B0C  EF8A  F025         	goto	u3051
 11774  004B10  EF8D  F025         	goto	u3050
 11775  004B14                     u3051:
 11776  004B14  0E01               	movlw	1
 11777  004B16  EF8E  F025         	goto	u3056
 11778  004B1A                     u3050:
 11779  004B1A  0E00               	movlw	0
 11780  004B1C                     u3056:
 11781  004B1C  0012               	return		;funcret
 11782  004B1E                     __end_of_I2C_MasterIsNack:
 11783                           	callstack 0
 11784                           
 11785 ;; *************** function _I2C_MasterSendTxData *****************
 11786 ;; Defined at:
 11787 ;;		line 568 in file "mcc_generated_files/i2c_master.c"
 11788 ;; Parameters:    Size  Location     Type
 11789 ;;  data            1    wreg     unsigned char 
 11790 ;; Auto vars:     Size  Location     Type
 11791 ;;  data            1    4[COMRAM] unsigned char 
 11792 ;; Return value:  Size  Location     Type
 11793 ;;                  1    wreg      void 
 11794 ;; Registers used:
 11795 ;;		wreg
 11796 ;; Tracked objects:
 11797 ;;		On entry : 0/0
 11798 ;;		On exit  : 0/0
 11799 ;;		Unchanged: 0/0
 11800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11802 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11804 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11805 ;;Total ram usage:        1 bytes
 11806 ;; Hardware stack levels used:    1
 11807 ;; Hardware stack levels required when called:    4
 11808 ;; This function calls:
 11809 ;;		Nothing
 11810 ;; This function is called by:
 11811 ;;		_I2C_DO_SEND_ADR_READ
 11812 ;;		_I2C_DO_SEND_ADR_WRITE
 11813 ;;		_I2C_DO_TX
 11814 ;; This function uses a non-reentrant model
 11815 ;;
 11816                           
 11817                           	psect	text75
 11818  004C00                     __ptext75:
 11819                           	callstack 0
 11820  004C00                     _I2C_MasterSendTxData:
 11821                           	callstack 18
 11822                           
 11823                           ;incstack = 0
 11824                           ;I2C_MasterSendTxData@data stored from wreg
 11825  004C00  6E05               	movwf	I2C_MasterSendTxData@data^0,c
 11826  004C02                     
 11827                           ;mcc_generated_files/i2c_master.c: 568: static __attribute__((inline)) void I2C_MasterSe
      +                          ndTxData(uint8_t data);mcc_generated_files/i2c_master.c: 569: {;mcc_generated_files/i2c_
      +                          master.c: 570:     SSPBUF = data;
 11828  004C02  C005  FFC9         	movff	I2C_MasterSendTxData@data,4041	;volatile
 11829  004C06  0012               	return		;funcret
 11830  004C08                     __end_of_I2C_MasterSendTxData:
 11831                           	callstack 0
 11832                           
 11833 ;; *************** function _I2C_MasterSendAck *****************
 11834 ;; Defined at:
 11835 ;;		line 603 in file "mcc_generated_files/i2c_master.c"
 11836 ;; Parameters:    Size  Location     Type
 11837 ;;		None
 11838 ;; Auto vars:     Size  Location     Type
 11839 ;;		None
 11840 ;; Return value:  Size  Location     Type
 11841 ;;                  1    wreg      void 
 11842 ;; Registers used:
 11843 ;;		None
 11844 ;; Tracked objects:
 11845 ;;		On entry : 0/0
 11846 ;;		On exit  : 0/0
 11847 ;;		Unchanged: 0/0
 11848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11852 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11853 ;;Total ram usage:        0 bytes
 11854 ;; Hardware stack levels used:    1
 11855 ;; Hardware stack levels required when called:    4
 11856 ;; This function calls:
 11857 ;;		Nothing
 11858 ;; This function is called by:
 11859 ;;		_I2C_DO_RX
 11860 ;;		_I2C_DO_RX_ACK
 11861 ;; This function uses a non-reentrant model
 11862 ;;
 11863                           
 11864                           	psect	text76
 11865  004C08                     __ptext76:
 11866                           	callstack 0
 11867  004C08                     _I2C_MasterSendAck:
 11868                           	callstack 18
 11869  004C08                     
 11870                           ;mcc_generated_files/i2c_master.c: 605:     SSPCON2bits.ACKDT = 0;
 11871  004C08  9AC5               	bcf	197,5,c	;volatile
 11872                           
 11873                           ;mcc_generated_files/i2c_master.c: 606:     SSPCON2bits.ACKEN = 1;
 11874  004C0A  88C5               	bsf	197,4,c	;volatile
 11875  004C0C  0012               	return		;funcret
 11876  004C0E                     __end_of_I2C_MasterSendAck:
 11877                           	callstack 0
 11878                           
 11879 ;; *************** function _I2C_MasterGetRxData *****************
 11880 ;; Defined at:
 11881 ;;		line 563 in file "mcc_generated_files/i2c_master.c"
 11882 ;; Parameters:    Size  Location     Type
 11883 ;;		None
 11884 ;; Auto vars:     Size  Location     Type
 11885 ;;		None
 11886 ;; Return value:  Size  Location     Type
 11887 ;;                  1    wreg      unsigned char 
 11888 ;; Registers used:
 11889 ;;		wreg, status,2
 11890 ;; Tracked objects:
 11891 ;;		On entry : 0/0
 11892 ;;		On exit  : 0/0
 11893 ;;		Unchanged: 0/0
 11894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11898 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11899 ;;Total ram usage:        0 bytes
 11900 ;; Hardware stack levels used:    1
 11901 ;; Hardware stack levels required when called:    4
 11902 ;; This function calls:
 11903 ;;		Nothing
 11904 ;; This function is called by:
 11905 ;;		_I2C_DO_RX
 11906 ;; This function uses a non-reentrant model
 11907 ;;
 11908                           
 11909                           	psect	text77
 11910  004C28                     __ptext77:
 11911                           	callstack 0
 11912  004C28                     _I2C_MasterGetRxData:
 11913                           	callstack 18
 11914  004C28                     
 11915                           ;mcc_generated_files/i2c_master.c: 565:     return SSPBUF;
 11916  004C28  50C9               	movf	201,w,c	;volatile
 11917  004C2A  0012               	return		;funcret
 11918  004C2C                     __end_of_I2C_MasterGetRxData:
 11919                           	callstack 0
 11920                           
 11921 ;; *************** function _I2C_MasterSendNack *****************
 11922 ;; Defined at:
 11923 ;;		line 609 in file "mcc_generated_files/i2c_master.c"
 11924 ;; Parameters:    Size  Location     Type
 11925 ;;		None
 11926 ;; Auto vars:     Size  Location     Type
 11927 ;;		None
 11928 ;; Return value:  Size  Location     Type
 11929 ;;                  1    wreg      void 
 11930 ;; Registers used:
 11931 ;;		None
 11932 ;; Tracked objects:
 11933 ;;		On entry : 0/0
 11934 ;;		On exit  : 0/0
 11935 ;;		Unchanged: 0/0
 11936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11940 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11941 ;;Total ram usage:        0 bytes
 11942 ;; Hardware stack levels used:    1
 11943 ;; Hardware stack levels required when called:    4
 11944 ;; This function calls:
 11945 ;;		Nothing
 11946 ;; This function is called by:
 11947 ;;		_I2C_DO_RX_NACK_STOP
 11948 ;;		_I2C_DO_RX_NACK_RESTART
 11949 ;; This function uses a non-reentrant model
 11950 ;;
 11951                           
 11952                           	psect	text78
 11953  004C0E                     __ptext78:
 11954                           	callstack 0
 11955  004C0E                     _I2C_MasterSendNack:
 11956                           	callstack 18
 11957  004C0E                     
 11958                           ;mcc_generated_files/i2c_master.c: 611:     SSPCON2bits.ACKDT = 1;
 11959  004C0E  8AC5               	bsf	197,5,c	;volatile
 11960                           
 11961                           ;mcc_generated_files/i2c_master.c: 612:     SSPCON2bits.ACKEN = 1;
 11962  004C10  88C5               	bsf	197,4,c	;volatile
 11963  004C12  0012               	return		;funcret
 11964  004C14                     __end_of_I2C_MasterSendNack:
 11965                           	callstack 0
 11966                           
 11967 ;; *************** function _I2C_MasterStartRx *****************
 11968 ;; Defined at:
 11969 ;;		line 583 in file "mcc_generated_files/i2c_master.c"
 11970 ;; Parameters:    Size  Location     Type
 11971 ;;		None
 11972 ;; Auto vars:     Size  Location     Type
 11973 ;;		None
 11974 ;; Return value:  Size  Location     Type
 11975 ;;                  1    wreg      void 
 11976 ;; Registers used:
 11977 ;;		None
 11978 ;; Tracked objects:
 11979 ;;		On entry : 0/0
 11980 ;;		On exit  : 0/0
 11981 ;;		Unchanged: 0/0
 11982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11986 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11987 ;;Total ram usage:        0 bytes
 11988 ;; Hardware stack levels used:    1
 11989 ;; Hardware stack levels required when called:    4
 11990 ;; This function calls:
 11991 ;;		Nothing
 11992 ;; This function is called by:
 11993 ;;		_I2C_DO_RCEN
 11994 ;; This function uses a non-reentrant model
 11995 ;;
 11996                           
 11997                           	psect	text79
 11998  004C2C                     __ptext79:
 11999                           	callstack 0
 12000  004C2C                     _I2C_MasterStartRx:
 12001                           	callstack 18
 12002  004C2C                     
 12003                           ;mcc_generated_files/i2c_master.c: 585:     SSPCON2bits.RCEN = 1;
 12004  004C2C  86C5               	bsf	197,3,c	;volatile
 12005  004C2E  0012               	return		;funcret
 12006  004C30                     __end_of_I2C_MasterStartRx:
 12007                           	callstack 0
 12008                           
 12009 ;; *************** function _I2C_CallbackReturnReset *****************
 12010 ;; Defined at:
 12011 ;;		line 525 in file "mcc_generated_files/i2c_master.c"
 12012 ;; Parameters:    Size  Location     Type
 12013 ;;  funPtr          2   13[COMRAM] PTR void 
 12014 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 12015 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 12016 ;; Auto vars:     Size  Location     Type
 12017 ;;		None
 12018 ;; Return value:  Size  Location     Type
 12019 ;;                  1    wreg      enum E358
 12020 ;; Registers used:
 12021 ;;		wreg
 12022 ;; Tracked objects:
 12023 ;;		On entry : 0/0
 12024 ;;		On exit  : 0/0
 12025 ;;		Unchanged: 0/0
 12026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12027 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12030 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12031 ;;Total ram usage:        2 bytes
 12032 ;; Hardware stack levels used:    1
 12033 ;; Hardware stack levels required when called:    4
 12034 ;; This function calls:
 12035 ;;		Nothing
 12036 ;; This function is called by:
 12037 ;;		_I2C_Open
 12038 ;;		_I2C_DO_TX
 12039 ;;		_I2C_DO_RX
 12040 ;;		_I2C_DO_TX_EMPTY
 12041 ;;		_I2C_DO_ADDRESS_NACK
 12042 ;;		_I2C_DO_RX_EMPTY
 12043 ;; This function uses a non-reentrant model
 12044 ;;
 12045                           
 12046                           	psect	text80
 12047  004C30                     __ptext80:
 12048                           	callstack 0
 12049  004C30                     _I2C_CallbackReturnReset:
 12050                           	callstack 18
 12051  004C30                     
 12052                           ;mcc_generated_files/i2c_master.c: 525: i2c_operations_t I2C_CallbackReturnReset(void *f
      +                          unPtr);mcc_generated_files/i2c_master.c: 526: {;mcc_generated_files/i2c_master.c: 527:  
      +                             return I2C_RESET_LINK;
 12053  004C30  0E05               	movlw	5
 12054  004C32  0012               	return		;funcret
 12055  004C34                     __end_of_I2C_CallbackReturnReset:
 12056                           	callstack 0
 12057                           
 12058 ;; *************** function _I2C_CallbackReturnStop *****************
 12059 ;; Defined at:
 12060 ;;		line 520 in file "mcc_generated_files/i2c_master.c"
 12061 ;; Parameters:    Size  Location     Type
 12062 ;;  funPtr          2   13[COMRAM] PTR void 
 12063 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 12064 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 12065 ;; Auto vars:     Size  Location     Type
 12066 ;;		None
 12067 ;; Return value:  Size  Location     Type
 12068 ;;                  1    wreg      enum E358
 12069 ;; Registers used:
 12070 ;;		wreg
 12071 ;; Tracked objects:
 12072 ;;		On entry : 0/0
 12073 ;;		On exit  : 0/0
 12074 ;;		Unchanged: 0/0
 12075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12076 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12079 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12080 ;;Total ram usage:        2 bytes
 12081 ;; Hardware stack levels used:    1
 12082 ;; Hardware stack levels required when called:    4
 12083 ;; This function calls:
 12084 ;;		Nothing
 12085 ;; This function is called by:
 12086 ;;		_I2C_Open
 12087 ;;		_I2C_SetCallback
 12088 ;;		_I2C_DO_TX
 12089 ;;		_I2C_DO_RX
 12090 ;;		_I2C_DO_TX_EMPTY
 12091 ;;		_I2C_DO_ADDRESS_NACK
 12092 ;;		_I2C_DO_RX_EMPTY
 12093 ;; This function uses a non-reentrant model
 12094 ;;
 12095                           
 12096                           	psect	text81
 12097  004C34                     __ptext81:
 12098                           	callstack 0
 12099  004C34                     _I2C_CallbackReturnStop:
 12100                           	callstack 18
 12101  004C34                     
 12102                           ;mcc_generated_files/i2c_master.c: 520: i2c_operations_t I2C_CallbackReturnStop(void *fu
      +                          nPtr);mcc_generated_files/i2c_master.c: 521: {;mcc_generated_files/i2c_master.c: 522:   
      +                            return I2C_STOP;
 12103  004C34  0E01               	movlw	1
 12104  004C36  0012               	return		;funcret
 12105  004C38                     __end_of_I2C_CallbackReturnStop:
 12106                           	callstack 0
 12107                           
 12108 ;; *************** function _rdBlkRegCompleteHandler *****************
 12109 ;; Defined at:
 12110 ;;		line 170 in file "mcc_generated_files/examples/i2c_master_example.c"
 12111 ;; Parameters:    Size  Location     Type
 12112 ;;  ptr             2   13[COMRAM] PTR void 
 12113 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 12114 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 12115 ;; Auto vars:     Size  Location     Type
 12116 ;;		None
 12117 ;; Return value:  Size  Location     Type
 12118 ;;                  1    wreg      enum E358
 12119 ;; Registers used:
 12120 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12121 ;; Tracked objects:
 12122 ;;		On entry : 0/0
 12123 ;;		On exit  : 0/0
 12124 ;;		Unchanged: 0/0
 12125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12126 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12129 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12130 ;;Total ram usage:        2 bytes
 12131 ;; Hardware stack levels used:    1
 12132 ;; Hardware stack levels required when called:    6
 12133 ;; This function calls:
 12134 ;;		_I2C_SetBuffer
 12135 ;;		_I2C_SetDataCompleteCallback
 12136 ;; This function is called by:
 12137 ;;		_I2C_ReadDataBlock
 12138 ;;		_I2C_DO_TX
 12139 ;;		_I2C_DO_RX
 12140 ;;		_I2C_DO_TX_EMPTY
 12141 ;;		_I2C_DO_ADDRESS_NACK
 12142 ;;		_I2C_DO_RX_EMPTY
 12143 ;; This function uses a non-reentrant model
 12144 ;;
 12145                           
 12146                           	psect	text82
 12147  00477C                     __ptext82:
 12148                           	callstack 0
 12149  00477C                     _rdBlkRegCompleteHandler:
 12150                           	callstack 16
 12151  00477C                     
 12152                           ;mcc_generated_files/examples/i2c_master_example.c: 170: static i2c_operations_t rdBlkRe
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 171: {;mc
      +                          c_generated_files/examples/i2c_master_example.c: 172:     I2C_SetBuffer(((i2c_buffer_t *
      +                          )ptr)->data,((i2c_buffer_t*)ptr)->len);
 12153  00477C  EE20 F002          	lfsr	2,2
 12154  004780  500E               	movf	rdBlkRegCompleteHandler@ptr^0,w,c
 12155  004782  26D9               	addwf	fsr2l,f,c
 12156  004784  500F               	movf	(rdBlkRegCompleteHandler@ptr+1)^0,w,c
 12157  004786  22DA               	addwfc	fsr2h,f,c
 12158  004788  CFDE F005          	movff	postinc2,I2C_SetBuffer@buffer
 12159  00478C  CFDD F006          	movff	postdec2,I2C_SetBuffer@buffer+1
 12160  004790  C00E  FFD9         	movff	rdBlkRegCompleteHandler@ptr,fsr2l
 12161  004794  C00F  FFDA         	movff	rdBlkRegCompleteHandler@ptr+1,fsr2h
 12162  004798  CFDE F007          	movff	postinc2,I2C_SetBuffer@bufferSize
 12163  00479C  CFDD F008          	movff	postdec2,I2C_SetBuffer@bufferSize+1
 12164  0047A0  EC26  F025         	call	_I2C_SetBuffer	;wreg free
 12165  0047A4                     
 12166                           ;mcc_generated_files/examples/i2c_master_example.c: 173:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 12167  0047A4  0E00               	movlw	0
 12168  0047A6  6E0A               	movwf	I2C_SetDataCompleteCallback@cb^0,c
 12169  0047A8  0E00               	movlw	0
 12170  0047AA  6E0B               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
 12171  0047AC  0E00               	movlw	0
 12172  0047AE  6E0C               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
 12173  0047B0  0E00               	movlw	0
 12174  0047B2  6E0D               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
 12175  0047B4  EC64  F025         	call	_I2C_SetDataCompleteCallback	;wreg free
 12176  0047B8                     
 12177                           ;mcc_generated_files/examples/i2c_master_example.c: 174:     return I2C_RESTART_READ;
 12178  0047B8  0E02               	movlw	2
 12179  0047BA  0012               	return		;funcret
 12180  0047BC                     __end_of_rdBlkRegCompleteHandler:
 12181                           	callstack 0
 12182                           
 12183 ;; *************** function _wr1RegCompleteHandler *****************
 12184 ;; Defined at:
 12185 ;;		line 156 in file "mcc_generated_files/examples/i2c_master_example.c"
 12186 ;; Parameters:    Size  Location     Type
 12187 ;;  ptr             2   13[COMRAM] PTR void 
 12188 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 12189 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 12190 ;; Auto vars:     Size  Location     Type
 12191 ;;		None
 12192 ;; Return value:  Size  Location     Type
 12193 ;;                  1    wreg      enum E358
 12194 ;; Registers used:
 12195 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12196 ;; Tracked objects:
 12197 ;;		On entry : 0/0
 12198 ;;		On exit  : 0/0
 12199 ;;		Unchanged: 0/0
 12200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12201 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12204 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12205 ;;Total ram usage:        2 bytes
 12206 ;; Hardware stack levels used:    1
 12207 ;; Hardware stack levels required when called:    6
 12208 ;; This function calls:
 12209 ;;		_I2C_SetBuffer
 12210 ;;		_I2C_SetDataCompleteCallback
 12211 ;; This function is called by:
 12212 ;;		_I2C_Write1ByteRegister
 12213 ;;		_I2C_DO_TX
 12214 ;;		_I2C_DO_RX
 12215 ;;		_I2C_DO_TX_EMPTY
 12216 ;;		_I2C_DO_ADDRESS_NACK
 12217 ;;		_I2C_DO_RX_EMPTY
 12218 ;; This function uses a non-reentrant model
 12219 ;;
 12220                           
 12221                           	psect	text83
 12222  0048CA                     __ptext83:
 12223                           	callstack 0
 12224  0048CA                     _wr1RegCompleteHandler:
 12225                           	callstack 16
 12226  0048CA                     
 12227                           ;mcc_generated_files/examples/i2c_master_example.c: 156: static i2c_operations_t wr1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 157: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 158:     I2C_SetBuffer(ptr,1);
 12228  0048CA  C00E  F005         	movff	wr1RegCompleteHandler@ptr,I2C_SetBuffer@buffer
 12229  0048CE  C00F  F006         	movff	wr1RegCompleteHandler@ptr+1,I2C_SetBuffer@buffer+1
 12230  0048D2  0E00               	movlw	0
 12231  0048D4  6E08               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
 12232  0048D6  0E01               	movlw	1
 12233  0048D8  6E07               	movwf	I2C_SetBuffer@bufferSize^0,c
 12234  0048DA  EC26  F025         	call	_I2C_SetBuffer	;wreg free
 12235  0048DE                     
 12236                           ;mcc_generated_files/examples/i2c_master_example.c: 159:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 12237  0048DE  0E00               	movlw	0
 12238  0048E0  6E0A               	movwf	I2C_SetDataCompleteCallback@cb^0,c
 12239  0048E2  0E00               	movlw	0
 12240  0048E4  6E0B               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
 12241  0048E6  0E00               	movlw	0
 12242  0048E8  6E0C               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
 12243  0048EA  0E00               	movlw	0
 12244  0048EC  6E0D               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
 12245  0048EE  EC64  F025         	call	_I2C_SetDataCompleteCallback	;wreg free
 12246  0048F2                     
 12247                           ;mcc_generated_files/examples/i2c_master_example.c: 160:     return I2C_CONTINUE;
 12248  0048F2  0E04               	movlw	4
 12249  0048F4  0012               	return		;funcret
 12250  0048F6                     __end_of_wr1RegCompleteHandler:
 12251                           	callstack 0
 12252                           
 12253 ;; *************** function _rd2RegCompleteHandler *****************
 12254 ;; Defined at:
 12255 ;;		line 149 in file "mcc_generated_files/examples/i2c_master_example.c"
 12256 ;; Parameters:    Size  Location     Type
 12257 ;;  ptr             2   13[COMRAM] PTR void 
 12258 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 12259 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 12260 ;; Auto vars:     Size  Location     Type
 12261 ;;		None
 12262 ;; Return value:  Size  Location     Type
 12263 ;;                  1    wreg      enum E358
 12264 ;; Registers used:
 12265 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12266 ;; Tracked objects:
 12267 ;;		On entry : 0/0
 12268 ;;		On exit  : 0/0
 12269 ;;		Unchanged: 0/0
 12270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12271 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12274 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12275 ;;Total ram usage:        2 bytes
 12276 ;; Hardware stack levels used:    1
 12277 ;; Hardware stack levels required when called:    6
 12278 ;; This function calls:
 12279 ;;		_I2C_SetBuffer
 12280 ;;		_I2C_SetDataCompleteCallback
 12281 ;; This function is called by:
 12282 ;;		_I2C_Read2ByteRegister
 12283 ;;		_I2C_DO_TX
 12284 ;;		_I2C_DO_RX
 12285 ;;		_I2C_DO_TX_EMPTY
 12286 ;;		_I2C_DO_ADDRESS_NACK
 12287 ;;		_I2C_DO_RX_EMPTY
 12288 ;; This function uses a non-reentrant model
 12289 ;;
 12290                           
 12291                           	psect	text84
 12292  0048F6                     __ptext84:
 12293                           	callstack 0
 12294  0048F6                     _rd2RegCompleteHandler:
 12295                           	callstack 16
 12296  0048F6                     
 12297                           ;mcc_generated_files/examples/i2c_master_example.c: 149: static i2c_operations_t rd2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 150: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 151:     I2C_SetBuffer(ptr,2);
 12298  0048F6  C00E  F005         	movff	rd2RegCompleteHandler@ptr,I2C_SetBuffer@buffer
 12299  0048FA  C00F  F006         	movff	rd2RegCompleteHandler@ptr+1,I2C_SetBuffer@buffer+1
 12300  0048FE  0E00               	movlw	0
 12301  004900  6E08               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
 12302  004902  0E02               	movlw	2
 12303  004904  6E07               	movwf	I2C_SetBuffer@bufferSize^0,c
 12304  004906  EC26  F025         	call	_I2C_SetBuffer	;wreg free
 12305  00490A                     
 12306                           ;mcc_generated_files/examples/i2c_master_example.c: 152:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 12307  00490A  0E00               	movlw	0
 12308  00490C  6E0A               	movwf	I2C_SetDataCompleteCallback@cb^0,c
 12309  00490E  0E00               	movlw	0
 12310  004910  6E0B               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
 12311  004912  0E00               	movlw	0
 12312  004914  6E0C               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
 12313  004916  0E00               	movlw	0
 12314  004918  6E0D               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
 12315  00491A  EC64  F025         	call	_I2C_SetDataCompleteCallback	;wreg free
 12316  00491E                     
 12317                           ;mcc_generated_files/examples/i2c_master_example.c: 153:     return I2C_RESTART_READ;
 12318  00491E  0E02               	movlw	2
 12319  004920  0012               	return		;funcret
 12320  004922                     __end_of_rd2RegCompleteHandler:
 12321                           	callstack 0
 12322                           
 12323 ;; *************** function _rd1RegCompleteHandler *****************
 12324 ;; Defined at:
 12325 ;;		line 142 in file "mcc_generated_files/examples/i2c_master_example.c"
 12326 ;; Parameters:    Size  Location     Type
 12327 ;;  ptr             2   13[COMRAM] PTR void 
 12328 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 12329 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 12330 ;; Auto vars:     Size  Location     Type
 12331 ;;		None
 12332 ;; Return value:  Size  Location     Type
 12333 ;;                  1    wreg      enum E358
 12334 ;; Registers used:
 12335 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12336 ;; Tracked objects:
 12337 ;;		On entry : 0/0
 12338 ;;		On exit  : 0/0
 12339 ;;		Unchanged: 0/0
 12340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12341 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12344 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12345 ;;Total ram usage:        2 bytes
 12346 ;; Hardware stack levels used:    1
 12347 ;; Hardware stack levels required when called:    6
 12348 ;; This function calls:
 12349 ;;		_I2C_SetBuffer
 12350 ;;		_I2C_SetDataCompleteCallback
 12351 ;; This function is called by:
 12352 ;;		_I2C_Read1ByteRegister
 12353 ;;		_I2C_DO_TX
 12354 ;;		_I2C_DO_RX
 12355 ;;		_I2C_DO_TX_EMPTY
 12356 ;;		_I2C_DO_ADDRESS_NACK
 12357 ;;		_I2C_DO_RX_EMPTY
 12358 ;; This function uses a non-reentrant model
 12359 ;;
 12360                           
 12361                           	psect	text85
 12362  004922                     __ptext85:
 12363                           	callstack 0
 12364  004922                     _rd1RegCompleteHandler:
 12365                           	callstack 16
 12366  004922                     
 12367                           ;mcc_generated_files/examples/i2c_master_example.c: 142: static i2c_operations_t rd1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 143: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 144:     I2C_SetBuffer(ptr,1);
 12368  004922  C00E  F005         	movff	rd1RegCompleteHandler@ptr,I2C_SetBuffer@buffer
 12369  004926  C00F  F006         	movff	rd1RegCompleteHandler@ptr+1,I2C_SetBuffer@buffer+1
 12370  00492A  0E00               	movlw	0
 12371  00492C  6E08               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
 12372  00492E  0E01               	movlw	1
 12373  004930  6E07               	movwf	I2C_SetBuffer@bufferSize^0,c
 12374  004932  EC26  F025         	call	_I2C_SetBuffer	;wreg free
 12375  004936                     
 12376                           ;mcc_generated_files/examples/i2c_master_example.c: 145:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 12377  004936  0E00               	movlw	0
 12378  004938  6E0A               	movwf	I2C_SetDataCompleteCallback@cb^0,c
 12379  00493A  0E00               	movlw	0
 12380  00493C  6E0B               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
 12381  00493E  0E00               	movlw	0
 12382  004940  6E0C               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
 12383  004942  0E00               	movlw	0
 12384  004944  6E0D               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
 12385  004946  EC64  F025         	call	_I2C_SetDataCompleteCallback	;wreg free
 12386  00494A                     
 12387                           ;mcc_generated_files/examples/i2c_master_example.c: 146:     return I2C_RESTART_READ;
 12388  00494A  0E02               	movlw	2
 12389  00494C  0012               	return		;funcret
 12390  00494E                     __end_of_rd1RegCompleteHandler:
 12391                           	callstack 0
 12392                           
 12393 ;; *************** function _wr2RegCompleteHandler *****************
 12394 ;; Defined at:
 12395 ;;		line 163 in file "mcc_generated_files/examples/i2c_master_example.c"
 12396 ;; Parameters:    Size  Location     Type
 12397 ;;  ptr             2   13[COMRAM] PTR void 
 12398 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 12399 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 12400 ;; Auto vars:     Size  Location     Type
 12401 ;;		None
 12402 ;; Return value:  Size  Location     Type
 12403 ;;                  1    wreg      enum E358
 12404 ;; Registers used:
 12405 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12406 ;; Tracked objects:
 12407 ;;		On entry : 0/0
 12408 ;;		On exit  : 0/0
 12409 ;;		Unchanged: 0/0
 12410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12411 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12414 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12415 ;;Total ram usage:        2 bytes
 12416 ;; Hardware stack levels used:    1
 12417 ;; Hardware stack levels required when called:    6
 12418 ;; This function calls:
 12419 ;;		_I2C_SetBuffer
 12420 ;;		_I2C_SetDataCompleteCallback
 12421 ;; This function is called by:
 12422 ;;		_I2C_Write2ByteRegister
 12423 ;;		_I2C_DO_TX
 12424 ;;		_I2C_DO_RX
 12425 ;;		_I2C_DO_TX_EMPTY
 12426 ;;		_I2C_DO_ADDRESS_NACK
 12427 ;;		_I2C_DO_RX_EMPTY
 12428 ;; This function uses a non-reentrant model
 12429 ;;
 12430                           
 12431                           	psect	text86
 12432  00494E                     __ptext86:
 12433                           	callstack 0
 12434  00494E                     _wr2RegCompleteHandler:
 12435                           	callstack 16
 12436  00494E                     
 12437                           ;mcc_generated_files/examples/i2c_master_example.c: 163: static i2c_operations_t wr2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 164: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 165:     I2C_SetBuffer(ptr,2);
 12438  00494E  C00E  F005         	movff	wr2RegCompleteHandler@ptr,I2C_SetBuffer@buffer
 12439  004952  C00F  F006         	movff	wr2RegCompleteHandler@ptr+1,I2C_SetBuffer@buffer+1
 12440  004956  0E00               	movlw	0
 12441  004958  6E08               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
 12442  00495A  0E02               	movlw	2
 12443  00495C  6E07               	movwf	I2C_SetBuffer@bufferSize^0,c
 12444  00495E  EC26  F025         	call	_I2C_SetBuffer	;wreg free
 12445  004962                     
 12446                           ;mcc_generated_files/examples/i2c_master_example.c: 166:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 12447  004962  0E00               	movlw	0
 12448  004964  6E0A               	movwf	I2C_SetDataCompleteCallback@cb^0,c
 12449  004966  0E00               	movlw	0
 12450  004968  6E0B               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
 12451  00496A  0E00               	movlw	0
 12452  00496C  6E0C               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
 12453  00496E  0E00               	movlw	0
 12454  004970  6E0D               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
 12455  004972  EC64  F025         	call	_I2C_SetDataCompleteCallback	;wreg free
 12456  004976                     
 12457                           ;mcc_generated_files/examples/i2c_master_example.c: 167:     return I2C_CONTINUE;
 12458  004976  0E04               	movlw	4
 12459  004978  0012               	return		;funcret
 12460  00497A                     __end_of_wr2RegCompleteHandler:
 12461                           	callstack 0
 12462                           
 12463 ;; *************** function _I2C_SetDataCompleteCallback *****************
 12464 ;; Defined at:
 12465 ;;		line 273 in file "mcc_generated_files/i2c_master.c"
 12466 ;; Parameters:    Size  Location     Type
 12467 ;;  cb              2    9[COMRAM] PTR FTN(PTR void ,)enum 
 12468 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 12469 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 12470 ;;  ptr             2   11[COMRAM] PTR void 
 12471 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 12472 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 12473 ;; Auto vars:     Size  Location     Type
 12474 ;;		None
 12475 ;; Return value:  Size  Location     Type
 12476 ;;                  1    wreg      void 
 12477 ;; Registers used:
 12478 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12479 ;; Tracked objects:
 12480 ;;		On entry : 0/0
 12481 ;;		On exit  : 0/0
 12482 ;;		Unchanged: 0/0
 12483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12484 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12487 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12488 ;;Total ram usage:        4 bytes
 12489 ;; Hardware stack levels used:    1
 12490 ;; Hardware stack levels required when called:    5
 12491 ;; This function calls:
 12492 ;;		_I2C_SetCallback
 12493 ;; This function is called by:
 12494 ;;		_rd1RegCompleteHandler
 12495 ;;		_rd2RegCompleteHandler
 12496 ;;		_wr1RegCompleteHandler
 12497 ;;		_wr2RegCompleteHandler
 12498 ;;		_rdBlkRegCompleteHandler
 12499 ;;		_I2C_Read1ByteRegister
 12500 ;;		_I2C_Read2ByteRegister
 12501 ;;		_I2C_Write1ByteRegister
 12502 ;;		_I2C_Write2ByteRegister
 12503 ;;		_I2C_ReadDataBlock
 12504 ;; This function uses a non-reentrant model
 12505 ;;
 12506                           
 12507                           	psect	text87
 12508  004AC8                     __ptext87:
 12509                           	callstack 0
 12510  004AC8                     _I2C_SetDataCompleteCallback:
 12511                           	callstack 16
 12512  004AC8                     
 12513                           ;mcc_generated_files/i2c_master.c: 273: void I2C_SetDataCompleteCallback(i2c_callback_t 
      +                          cb, void *ptr);mcc_generated_files/i2c_master.c: 274: {;mcc_generated_files/i2c_master.c
      +                          : 275:     I2C_SetCallback(I2C_DATA_COMPLETE, cb, ptr);
 12514  004AC8  C00A  F005         	movff	I2C_SetDataCompleteCallback@cb,I2C_SetCallback@cb
 12515  004ACC  C00B  F006         	movff	I2C_SetDataCompleteCallback@cb+1,I2C_SetCallback@cb+1
 12516  004AD0  C00C  F007         	movff	I2C_SetDataCompleteCallback@ptr,I2C_SetCallback@ptr
 12517  004AD4  C00D  F008         	movff	I2C_SetDataCompleteCallback@ptr+1,I2C_SetCallback@ptr+1
 12518  004AD8  0E00               	movlw	0
 12519  004ADA  ECFB  F020         	call	_I2C_SetCallback
 12520  004ADE  0012               	return		;funcret
 12521  004AE0                     __end_of_I2C_SetDataCompleteCallback:
 12522                           	callstack 0
 12523                           
 12524 ;; *************** function _I2C_SetCallback *****************
 12525 ;; Defined at:
 12526 ;;		line 298 in file "mcc_generated_files/i2c_master.c"
 12527 ;; Parameters:    Size  Location     Type
 12528 ;;  idx             1    wreg     enum E3119
 12529 ;;  cb              2    4[COMRAM] PTR FTN(PTR void ,)enum 
 12530 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 12531 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 12532 ;;  ptr             2    6[COMRAM] PTR void 
 12533 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 12534 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 12535 ;; Auto vars:     Size  Location     Type
 12536 ;;  idx             1    8[COMRAM] enum E3119
 12537 ;; Return value:  Size  Location     Type
 12538 ;;                  1    wreg      void 
 12539 ;; Registers used:
 12540 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12541 ;; Tracked objects:
 12542 ;;		On entry : 0/0
 12543 ;;		On exit  : 0/0
 12544 ;;		Unchanged: 0/0
 12545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12546 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12547 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12549 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12550 ;;Total ram usage:        5 bytes
 12551 ;; Hardware stack levels used:    1
 12552 ;; Hardware stack levels required when called:    4
 12553 ;; This function calls:
 12554 ;;		Nothing
 12555 ;; This function is called by:
 12556 ;;		_I2C_SetDataCompleteCallback
 12557 ;;		_I2C_SetAddressNackCallback
 12558 ;;		_I2C_SetWriteCollisionCallback
 12559 ;;		_I2C_SetDataNackCallback
 12560 ;;		_I2C_SetTimeoutCallback
 12561 ;; This function uses a non-reentrant model
 12562 ;;
 12563                           
 12564                           	psect	text88
 12565  0041F6                     __ptext88:
 12566                           	callstack 0
 12567  0041F6                     _I2C_SetCallback:
 12568                           	callstack 22
 12569                           
 12570                           ;incstack = 0
 12571                           ;I2C_SetCallback@idx stored from wreg
 12572  0041F6  6E09               	movwf	I2C_SetCallback@idx^0,c
 12573  0041F8                     
 12574                           ;mcc_generated_files/i2c_master.c: 298: static void I2C_SetCallback(i2c_callbackIndex_t 
      +                          idx, i2c_callback_t cb, void *ptr);mcc_generated_files/i2c_master.c: 299: {;mcc_generate
      +                          d_files/i2c_master.c: 300:     if(cb)
 12575  0041F8  5005               	movf	I2C_SetCallback@cb^0,w,c
 12576  0041FA  1006               	iorwf	(I2C_SetCallback@cb+1)^0,w,c
 12577  0041FC  B4D8               	btfsc	status,2,c
 12578  0041FE  EF03  F021         	goto	u3031
 12579  004202  EF05  F021         	goto	u3030
 12580  004206                     u3031:
 12581  004206  EF1F  F021         	goto	l3995
 12582  00420A                     u3030:
 12583  00420A                     
 12584                           ;mcc_generated_files/i2c_master.c: 301:     {;mcc_generated_files/i2c_master.c: 302:    
      +                               I2C_Status.callbackTable[idx] = cb;
 12585  00420A  5009               	movf	I2C_SetCallback@idx^0,w,c
 12586  00420C  0D02               	mullw	2
 12587  00420E  0E00               	movlw	low _I2C_Status
 12588  004210  24F3               	addwf	243,w,c
 12589  004212  6ED9               	movwf	fsr2l,c
 12590  004214  0E01               	movlw	high _I2C_Status
 12591  004216  20F4               	addwfc	prodh,w,c
 12592  004218  6EDA               	movwf	fsr2h,c
 12593  00421A  C005  FFDE         	movff	I2C_SetCallback@cb,postinc2
 12594  00421E  C006  FFDD         	movff	I2C_SetCallback@cb+1,postdec2
 12595                           
 12596                           ;mcc_generated_files/i2c_master.c: 303:         I2C_Status.callbackPayload[idx] = ptr;
 12597  004222  5009               	movf	I2C_SetCallback@idx^0,w,c
 12598  004224  0D02               	mullw	2
 12599  004226  0E0C               	movlw	low (_I2C_Status+12)
 12600  004228  24F3               	addwf	243,w,c
 12601  00422A  6ED9               	movwf	fsr2l,c
 12602  00422C  0E01               	movlw	high (_I2C_Status+12)
 12603  00422E  20F4               	addwfc	prodh,w,c
 12604  004230  6EDA               	movwf	fsr2h,c
 12605  004232  C007  FFDE         	movff	I2C_SetCallback@ptr,postinc2
 12606  004236  C008  FFDD         	movff	I2C_SetCallback@ptr+1,postdec2
 12607                           
 12608                           ;mcc_generated_files/i2c_master.c: 304:     }
 12609  00423A  EF37  F021         	goto	l256
 12610  00423E                     l3995:
 12611                           
 12612                           ;mcc_generated_files/i2c_master.c: 306:     {;mcc_generated_files/i2c_master.c: 307:    
      +                               I2C_Status.callbackTable[idx] = I2C_CallbackReturnStop;
 12613  00423E  5009               	movf	I2C_SetCallback@idx^0,w,c
 12614  004240  0D02               	mullw	2
 12615  004242  0E00               	movlw	low _I2C_Status
 12616  004244  24F3               	addwf	243,w,c
 12617  004246  6ED9               	movwf	fsr2l,c
 12618  004248  0E01               	movlw	high _I2C_Status
 12619  00424A  20F4               	addwfc	prodh,w,c
 12620  00424C  6EDA               	movwf	fsr2h,c
 12621  00424E  0E34               	movlw	low _I2C_CallbackReturnStop
 12622  004250  6EDE               	movwf	postinc2,c
 12623  004252  0E4C               	movlw	high _I2C_CallbackReturnStop
 12624  004254  6EDD               	movwf	postdec2,c
 12625                           
 12626                           ;mcc_generated_files/i2c_master.c: 308:         I2C_Status.callbackPayload[idx] = ((void
      +                          *)0);
 12627  004256  5009               	movf	I2C_SetCallback@idx^0,w,c
 12628  004258  0D02               	mullw	2
 12629  00425A  0E0C               	movlw	low (_I2C_Status+12)
 12630  00425C  24F3               	addwf	243,w,c
 12631  00425E  6ED9               	movwf	fsr2l,c
 12632  004260  0E01               	movlw	high (_I2C_Status+12)
 12633  004262  20F4               	addwfc	prodh,w,c
 12634  004264  6EDA               	movwf	fsr2h,c
 12635  004266  0E00               	movlw	0
 12636  004268  6EDE               	movwf	postinc2,c
 12637  00426A  0E00               	movlw	0
 12638  00426C  6EDD               	movwf	postdec2,c
 12639  00426E                     l256:
 12640  00426E  0012               	return		;funcret
 12641  004270                     __end_of_I2C_SetCallback:
 12642                           	callstack 0
 12643                           
 12644 ;; *************** function _I2C_SetBuffer *****************
 12645 ;; Defined at:
 12646 ;;		line 263 in file "mcc_generated_files/i2c_master.c"
 12647 ;; Parameters:    Size  Location     Type
 12648 ;;  buffer          2    4[COMRAM] PTR void 
 12649 ;;		 -> readBuffer(10), SHT40_Read@regist(1), I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(4), 
 12650 ;;		 -> I2C_Write2ByteRegister@reg(1), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@reg(1), I2C_Write1ByteRegi
      +ster@data(1), 
 12651 ;;		 -> I2C_Read2ByteRegister@reg(1), I2C_Read2ByteRegister@returnValue(2), NULL(0), I2C_Read1ByteRegister@reg(1), 
 12652 ;;		 -> I2C_Read1ByteRegister@returnValue(1), 
 12653 ;;  bufferSize      2    6[COMRAM] unsigned int 
 12654 ;; Auto vars:     Size  Location     Type
 12655 ;;		None
 12656 ;; Return value:  Size  Location     Type
 12657 ;;                  1    wreg      void 
 12658 ;; Registers used:
 12659 ;;		wreg, status,2, status,0
 12660 ;; Tracked objects:
 12661 ;;		On entry : 0/0
 12662 ;;		On exit  : 0/0
 12663 ;;		Unchanged: 0/0
 12664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12665 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12668 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12669 ;;Total ram usage:        4 bytes
 12670 ;; Hardware stack levels used:    1
 12671 ;; Hardware stack levels required when called:    4
 12672 ;; This function calls:
 12673 ;;		Nothing
 12674 ;; This function is called by:
 12675 ;;		_I2C_WriteNBytes
 12676 ;;		_I2C_ReadNBytes
 12677 ;;		_rd1RegCompleteHandler
 12678 ;;		_rd2RegCompleteHandler
 12679 ;;		_wr1RegCompleteHandler
 12680 ;;		_wr2RegCompleteHandler
 12681 ;;		_rdBlkRegCompleteHandler
 12682 ;;		_I2C_Read1ByteRegister
 12683 ;;		_I2C_Read2ByteRegister
 12684 ;;		_I2C_Write1ByteRegister
 12685 ;;		_I2C_Write2ByteRegister
 12686 ;;		_I2C_ReadDataBlock
 12687 ;; This function uses a non-reentrant model
 12688 ;;
 12689                           
 12690                           	psect	text89
 12691  004A4C                     __ptext89:
 12692                           	callstack 0
 12693  004A4C                     _I2C_SetBuffer:
 12694                           	callstack 23
 12695  004A4C                     
 12696                           ;mcc_generated_files/i2c_master.c: 263: void I2C_SetBuffer(void *buffer, size_t bufferSi
      +                          ze);mcc_generated_files/i2c_master.c: 264: {;mcc_generated_files/i2c_master.c: 265:     
      +                          if(I2C_Status.bufferFree)
 12697  004A4C  0101               	movlb	1	; () banked
 12698  004A4E  A723               	btfss	(_I2C_Status+35)& (0+255),3,b
 12699  004A50  EF2C  F025         	goto	u3041
 12700  004A54  EF2E  F025         	goto	u3040
 12701  004A58                     u3041:
 12702  004A58  EF37  F025         	goto	l236
 12703  004A5C                     u3040:
 12704  004A5C                     
 12705                           ; BSR set to: 1
 12706                           ;mcc_generated_files/i2c_master.c: 266:     {;mcc_generated_files/i2c_master.c: 267:    
      +                               I2C_Status.data_ptr = buffer;
 12707  004A5C  C005  F11D         	movff	I2C_SetBuffer@buffer,_I2C_Status+29
 12708  004A60  C006  F11E         	movff	I2C_SetBuffer@buffer+1,_I2C_Status+30
 12709  004A64                     
 12710                           ; BSR set to: 1
 12711                           ;mcc_generated_files/i2c_master.c: 268:         I2C_Status.data_length = bufferSize;
 12712  004A64  C007  F11F         	movff	I2C_SetBuffer@bufferSize,_I2C_Status+31
 12713  004A68  C008  F120         	movff	I2C_SetBuffer@bufferSize+1,_I2C_Status+32
 12714  004A6C                     
 12715                           ; BSR set to: 1
 12716                           ;mcc_generated_files/i2c_master.c: 269:         I2C_Status.bufferFree = 0;
 12717  004A6C  9723               	bcf	(_I2C_Status+35)& (0+255),3,b
 12718  004A6E                     l236:
 12719                           
 12720                           ; BSR set to: 1
 12721  004A6E  0012               	return		;funcret
 12722  004A70                     __end_of_I2C_SetBuffer:
 12723                           	callstack 0
 12724                           
 12725 ;; *************** function _I2C_MasterStop *****************
 12726 ;; Defined at:
 12727 ;;		line 593 in file "mcc_generated_files/i2c_master.c"
 12728 ;; Parameters:    Size  Location     Type
 12729 ;;		None
 12730 ;; Auto vars:     Size  Location     Type
 12731 ;;		None
 12732 ;; Return value:  Size  Location     Type
 12733 ;;                  1    wreg      void 
 12734 ;; Registers used:
 12735 ;;		None
 12736 ;; Tracked objects:
 12737 ;;		On entry : 0/0
 12738 ;;		On exit  : 0/0
 12739 ;;		Unchanged: 0/0
 12740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12744 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12745 ;;Total ram usage:        0 bytes
 12746 ;; Hardware stack levels used:    1
 12747 ;; Hardware stack levels required when called:    4
 12748 ;; This function calls:
 12749 ;;		Nothing
 12750 ;; This function is called by:
 12751 ;;		_I2C_DO_SEND_STOP
 12752 ;; This function uses a non-reentrant model
 12753 ;;
 12754                           
 12755                           	psect	text90
 12756  004C38                     __ptext90:
 12757                           	callstack 0
 12758  004C38                     _I2C_MasterStop:
 12759                           	callstack 17
 12760  004C38                     
 12761                           ;mcc_generated_files/i2c_master.c: 595:     SSPCON2bits.PEN = 1;
 12762  004C38  84C5               	bsf	197,2,c	;volatile
 12763  004C3A  0012               	return		;funcret
 12764  004C3C                     __end_of_I2C_MasterStop:
 12765                           	callstack 0
 12766                           
 12767 ;; *************** function _I2C_MasterEnableRestart *****************
 12768 ;; Defined at:
 12769 ;;		line 573 in file "mcc_generated_files/i2c_master.c"
 12770 ;; Parameters:    Size  Location     Type
 12771 ;;		None
 12772 ;; Auto vars:     Size  Location     Type
 12773 ;;		None
 12774 ;; Return value:  Size  Location     Type
 12775 ;;                  1    wreg      void 
 12776 ;; Registers used:
 12777 ;;		None
 12778 ;; Tracked objects:
 12779 ;;		On entry : 0/0
 12780 ;;		On exit  : 0/0
 12781 ;;		Unchanged: 0/0
 12782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12786 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12787 ;;Total ram usage:        0 bytes
 12788 ;; Hardware stack levels used:    1
 12789 ;; Hardware stack levels required when called:    4
 12790 ;; This function calls:
 12791 ;;		Nothing
 12792 ;; This function is called by:
 12793 ;;		_I2C_DO_SEND_RESTART_READ
 12794 ;;		_I2C_DO_SEND_RESTART_WRITE
 12795 ;;		_I2C_DO_SEND_RESTART
 12796 ;;		_I2C_DO_RX_EMPTY
 12797 ;; This function uses a non-reentrant model
 12798 ;;
 12799                           
 12800                           	psect	text91
 12801  004C3C                     __ptext91:
 12802                           	callstack 0
 12803  004C3C                     _I2C_MasterEnableRestart:
 12804                           	callstack 17
 12805  004C3C                     
 12806                           ;mcc_generated_files/i2c_master.c: 575:     SSPCON2bits.RSEN = 1;
 12807  004C3C  82C5               	bsf	197,1,c	;volatile
 12808  004C3E  0012               	return		;funcret
 12809  004C40                     __end_of_I2C_MasterEnableRestart:
 12810                           	callstack 0
 12811                           
 12812 ;; *************** function _I2C_MasterStart *****************
 12813 ;; Defined at:
 12814 ;;		line 588 in file "mcc_generated_files/i2c_master.c"
 12815 ;; Parameters:    Size  Location     Type
 12816 ;;		None
 12817 ;; Auto vars:     Size  Location     Type
 12818 ;;		None
 12819 ;; Return value:  Size  Location     Type
 12820 ;;                  1    wreg      void 
 12821 ;; Registers used:
 12822 ;;		None
 12823 ;; Tracked objects:
 12824 ;;		On entry : 0/0
 12825 ;;		On exit  : 0/0
 12826 ;;		Unchanged: 0/0
 12827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12831 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12832 ;;Total ram usage:        0 bytes
 12833 ;; Hardware stack levels used:    1
 12834 ;; Hardware stack levels required when called:    4
 12835 ;; This function calls:
 12836 ;;		Nothing
 12837 ;; This function is called by:
 12838 ;;		_I2C_MasterOperation
 12839 ;; This function uses a non-reentrant model
 12840 ;;
 12841                           
 12842                           	psect	text92
 12843  004C40                     __ptext92:
 12844                           	callstack 0
 12845  004C40                     _I2C_MasterStart:
 12846                           	callstack 21
 12847  004C40                     
 12848                           ;mcc_generated_files/i2c_master.c: 590:     SSPCON2bits.SEN = 1;
 12849  004C40  80C5               	bsf	197,0,c	;volatile
 12850  004C42  0012               	return		;funcret
 12851  004C44                     __end_of_I2C_MasterStart:
 12852                           	callstack 0
 12853                           
 12854 ;; *************** function _I2C_Close *****************
 12855 ;; Defined at:
 12856 ;;		line 209 in file "mcc_generated_files/i2c_master.c"
 12857 ;; Parameters:    Size  Location     Type
 12858 ;;		None
 12859 ;; Auto vars:     Size  Location     Type
 12860 ;;  returnValue     1    4[COMRAM] enum E353
 12861 ;; Return value:  Size  Location     Type
 12862 ;;                  1    wreg      enum E353
 12863 ;; Registers used:
 12864 ;;		wreg, status,2, cstack
 12865 ;; Tracked objects:
 12866 ;;		On entry : 0/0
 12867 ;;		On exit  : 0/0
 12868 ;;		Unchanged: 0/0
 12869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12871 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12873 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12874 ;;Total ram usage:        1 bytes
 12875 ;; Hardware stack levels used:    1
 12876 ;; Hardware stack levels required when called:    5
 12877 ;; This function calls:
 12878 ;;		_I2C_MasterClearIrq
 12879 ;;		_I2C_MasterClose
 12880 ;;		_I2C_MasterDisableIrq
 12881 ;; This function is called by:
 12882 ;;		_I2C_WriteNBytes
 12883 ;;		_I2C_ReadNBytes
 12884 ;;		_I2C_Read1ByteRegister
 12885 ;;		_I2C_Read2ByteRegister
 12886 ;;		_I2C_Write1ByteRegister
 12887 ;;		_I2C_Write2ByteRegister
 12888 ;;		_I2C_ReadDataBlock
 12889 ;; This function uses a non-reentrant model
 12890 ;;
 12891                           
 12892                           	psect	text93
 12893  00497A                     __ptext93:
 12894                           	callstack 0
 12895  00497A                     _I2C_Close:
 12896                           	callstack 22
 12897  00497A                     
 12898                           ;mcc_generated_files/i2c_master.c: 211:     i2c_error_t returnValue = I2C_BUSY;
 12899  00497A  0E01               	movlw	1
 12900  00497C  6E05               	movwf	I2C_Close@returnValue^0,c
 12901  00497E                     
 12902                           ;mcc_generated_files/i2c_master.c: 212:     if(!I2C_Status.busy)
 12903  00497E  0101               	movlb	1	; () banked
 12904  004980  B323               	btfsc	(_I2C_Status+35)& (0+255),1,b
 12905  004982  EFC5  F024         	goto	u4721
 12906  004986  EFC7  F024         	goto	u4720
 12907  00498A                     u4721:
 12908  00498A  EFD1  F024         	goto	l5205
 12909  00498E                     u4720:
 12910  00498E                     
 12911                           ; BSR set to: 1
 12912                           ;mcc_generated_files/i2c_master.c: 213:     {;mcc_generated_files/i2c_master.c: 214:    
      +                               I2C_Status.inUse = 0;
 12913  00498E  9523               	bcf	(_I2C_Status+35)& (0+255),2,b
 12914                           
 12915                           ;mcc_generated_files/i2c_master.c: 215:         I2C_Status.address = 0xff;
 12916  004990  691C               	setf	(_I2C_Status+28)& (0+255),b
 12917  004992                     
 12918                           ; BSR set to: 1
 12919                           ;mcc_generated_files/i2c_master.c: 216:         I2C_MasterClearIrq();
 12920  004992  EC26  F026         	call	_I2C_MasterClearIrq	;wreg free
 12921                           
 12922                           ;mcc_generated_files/i2c_master.c: 217:         I2C_MasterDisableIrq();
 12923  004996  EC22  F026         	call	_I2C_MasterDisableIrq	;wreg free
 12924                           
 12925                           ;mcc_generated_files/i2c_master.c: 218:         I2C_MasterClose();
 12926  00499A  EC24  F026         	call	_I2C_MasterClose	;wreg free
 12927  00499E                     
 12928                           ;mcc_generated_files/i2c_master.c: 219:         returnValue = I2C_Status.error;
 12929  00499E  C122  F005         	movff	_I2C_Status+34,I2C_Close@returnValue
 12930  0049A2                     l5205:
 12931                           
 12932                           ;mcc_generated_files/i2c_master.c: 221:     return returnValue;
 12933  0049A2  5005               	movf	I2C_Close@returnValue^0,w,c
 12934  0049A4  0012               	return		;funcret
 12935  0049A6                     __end_of_I2C_Close:
 12936                           	callstack 0
 12937                           
 12938 ;; *************** function _I2C_MasterDisableIrq *****************
 12939 ;; Defined at:
 12940 ;;		line 635 in file "mcc_generated_files/i2c_master.c"
 12941 ;; Parameters:    Size  Location     Type
 12942 ;;		None
 12943 ;; Auto vars:     Size  Location     Type
 12944 ;;		None
 12945 ;; Return value:  Size  Location     Type
 12946 ;;                  1    wreg      void 
 12947 ;; Registers used:
 12948 ;;		None
 12949 ;; Tracked objects:
 12950 ;;		On entry : 0/0
 12951 ;;		On exit  : 0/0
 12952 ;;		Unchanged: 0/0
 12953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12957 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12958 ;;Total ram usage:        0 bytes
 12959 ;; Hardware stack levels used:    1
 12960 ;; Hardware stack levels required when called:    4
 12961 ;; This function calls:
 12962 ;;		Nothing
 12963 ;; This function is called by:
 12964 ;;		_I2C_Close
 12965 ;;		_I2C_SetTimeOut
 12966 ;; This function uses a non-reentrant model
 12967 ;;
 12968                           
 12969                           	psect	text94
 12970  004C44                     __ptext94:
 12971                           	callstack 0
 12972  004C44                     _I2C_MasterDisableIrq:
 12973                           	callstack 22
 12974  004C44                     
 12975                           ;mcc_generated_files/i2c_master.c: 637:     PIE1bits.SSPIE = 0;
 12976  004C44  969D               	bcf	157,3,c	;volatile
 12977  004C46  0012               	return		;funcret
 12978  004C48                     __end_of_I2C_MasterDisableIrq:
 12979                           	callstack 0
 12980                           
 12981 ;; *************** function _I2C_MasterClose *****************
 12982 ;; Defined at:
 12983 ;;		line 557 in file "mcc_generated_files/i2c_master.c"
 12984 ;; Parameters:    Size  Location     Type
 12985 ;;		None
 12986 ;; Auto vars:     Size  Location     Type
 12987 ;;		None
 12988 ;; Return value:  Size  Location     Type
 12989 ;;                  1    wreg      void 
 12990 ;; Registers used:
 12991 ;;		None
 12992 ;; Tracked objects:
 12993 ;;		On entry : 0/0
 12994 ;;		On exit  : 0/0
 12995 ;;		Unchanged: 0/0
 12996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13000 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13001 ;;Total ram usage:        0 bytes
 13002 ;; Hardware stack levels used:    1
 13003 ;; Hardware stack levels required when called:    4
 13004 ;; This function calls:
 13005 ;;		Nothing
 13006 ;; This function is called by:
 13007 ;;		_I2C_Close
 13008 ;; This function uses a non-reentrant model
 13009 ;;
 13010                           
 13011                           	psect	text95
 13012  004C48                     __ptext95:
 13013                           	callstack 0
 13014  004C48                     _I2C_MasterClose:
 13015                           	callstack 22
 13016  004C48                     
 13017                           ;mcc_generated_files/i2c_master.c: 560:     SSPCON1bits.SSPEN = 0;
 13018  004C48  9AC6               	bcf	198,5,c	;volatile
 13019  004C4A  0012               	return		;funcret
 13020  004C4C                     __end_of_I2C_MasterClose:
 13021                           	callstack 0
 13022                           
 13023 ;; *************** function _I2C_MasterClearIrq *****************
 13024 ;; Defined at:
 13025 ;;		line 640 in file "mcc_generated_files/i2c_master.c"
 13026 ;; Parameters:    Size  Location     Type
 13027 ;;		None
 13028 ;; Auto vars:     Size  Location     Type
 13029 ;;		None
 13030 ;; Return value:  Size  Location     Type
 13031 ;;                  1    wreg      void 
 13032 ;; Registers used:
 13033 ;;		None
 13034 ;; Tracked objects:
 13035 ;;		On entry : 0/0
 13036 ;;		On exit  : 0/0
 13037 ;;		Unchanged: 0/0
 13038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13042 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13043 ;;Total ram usage:        0 bytes
 13044 ;; Hardware stack levels used:    1
 13045 ;; Hardware stack levels required when called:    4
 13046 ;; This function calls:
 13047 ;;		Nothing
 13048 ;; This function is called by:
 13049 ;;		_I2C_Open
 13050 ;;		_I2C_Close
 13051 ;;		_I2C_MasterFsm
 13052 ;; This function uses a non-reentrant model
 13053 ;;
 13054                           
 13055                           	psect	text96
 13056  004C4C                     __ptext96:
 13057                           	callstack 0
 13058  004C4C                     _I2C_MasterClearIrq:
 13059                           	callstack 22
 13060  004C4C                     
 13061                           ;mcc_generated_files/i2c_master.c: 642:     PIR1bits.SSPIF = 0;
 13062  004C4C  969E               	bcf	158,3,c	;volatile
 13063  004C4E  0012               	return		;funcret
 13064  004C50                     __end_of_I2C_MasterClearIrq:
 13065                           	callstack 0
 13066                           
 13067 ;; *************** function _INTERRUPT_InterruptManager *****************
 13068 ;; Defined at:
 13069 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 13070 ;; Parameters:    Size  Location     Type
 13071 ;;		None
 13072 ;; Auto vars:     Size  Location     Type
 13073 ;;		None
 13074 ;; Return value:  Size  Location     Type
 13075 ;;                  1    wreg      void 
 13076 ;; Registers used:
 13077 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 13078 ;; Tracked objects:
 13079 ;;		On entry : 0/0
 13080 ;;		On exit  : 0/0
 13081 ;;		Unchanged: 0/0
 13082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13085 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13086 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13087 ;;Total ram usage:        4 bytes
 13088 ;; Hardware stack levels used:    1
 13089 ;; Hardware stack levels required when called:    3
 13090 ;; This function calls:
 13091 ;;		Absolute function
 13092 ;;		_EUSART_Receive_ISR
 13093 ;;		_EUSART_Transmit_ISR
 13094 ;; This function is called by:
 13095 ;;		Interrupt level 2
 13096 ;; This function uses a non-reentrant model
 13097 ;;
 13098                           
 13099                           	psect	intcode
 13100  000008                     __pintcode:
 13101                           	callstack 0
 13102  000008                     _INTERRUPT_InterruptManager:
 13103                           	callstack 16
 13104                           
 13105                           ;incstack = 0
 13106  000008  825A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 13107  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
 13108  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 13109  000012  CFD9 F003          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
 13110  000016  CFDA F004          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
 13111  00001A                     
 13112                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
 13113  00001A  ACF2               	btfss	242,6,c	;volatile
 13114  00001C  EF12  F000         	goto	i2u598_41
 13115  000020  EF14  F000         	goto	i2u598_40
 13116  000024                     i2u598_41:
 13117  000024  EF4E  F000         	goto	i2l671
 13118  000028                     i2u598_40:
 13119  000028                     
 13120                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
 13121  000028  A89D               	btfss	157,4,c	;volatile
 13122  00002A  EF19  F000         	goto	i2u599_41
 13123  00002E  EF1B  F000         	goto	i2u599_40
 13124  000032                     i2u599_41:
 13125  000032  EF31  F000         	goto	i2l666
 13126  000036                     i2u599_40:
 13127  000036  A89E               	btfss	158,4,c	;volatile
 13128  000038  EF20  F000         	goto	i2u600_41
 13129  00003C  EF22  F000         	goto	i2u600_40
 13130  000040                     i2u600_41:
 13131  000040  EF31  F000         	goto	i2l666
 13132  000044                     i2u600_40:
 13133  000044                     
 13134                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             EUSART_TxDefaultInterruptHandler();
 13135  000044  D802               	call	i2u601_48
 13136  000046  EF2F  F000         	goto	i2u601_49
 13137  00004A                     i2u601_48:
 13138  00004A  0005               	push	
 13139  00004C  6EFA               	movwf	pclath,c
 13140  00004E  0100               	movlb	0	; () banked
 13141  000050  51FC               	movf	_EUSART_TxDefaultInterruptHandler& (0+255),w,b
 13142  000052  6EFD               	movwf	tosl,c
 13143  000054  51FD               	movf	(_EUSART_TxDefaultInterruptHandler+1)& (0+255),w,b
 13144  000056  6EFE               	movwf	tosh,c
 13145  000058  6AFF               	clrf	tosu,c
 13146  00005A  50FA               	movf	pclath,w,c
 13147  00005C  0012               	return		;indir
 13148  00005E                     i2u601_49:
 13149                           
 13150                           ;mcc_generated_files/interrupt_manager.c: 66:         }
 13151  00005E  EF4E  F000         	goto	i2l671
 13152  000062                     i2l666:
 13153  000062  AA9D               	btfss	157,5,c	;volatile
 13154  000064  EF36  F000         	goto	i2u602_41
 13155  000068  EF38  F000         	goto	i2u602_40
 13156  00006C                     i2u602_41:
 13157  00006C  EF4E  F000         	goto	i2l667
 13158  000070                     i2u602_40:
 13159  000070  AA9E               	btfss	158,5,c	;volatile
 13160  000072  EF3D  F000         	goto	i2u603_41
 13161  000076  EF3F  F000         	goto	i2u603_40
 13162  00007A                     i2u603_41:
 13163  00007A  EF4E  F000         	goto	i2l667
 13164  00007E                     i2u603_40:
 13165  00007E                     
 13166                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             EUSART_RxDefaultInterruptHandler();
 13167  00007E  D802               	call	i2u604_48
 13168  000080  EF4C  F000         	goto	i2u604_49
 13169  000084                     i2u604_48:
 13170  000084  0005               	push	
 13171  000086  6EFA               	movwf	pclath,c
 13172  000088  0100               	movlb	0	; () banked
 13173  00008A  51FA               	movf	_EUSART_RxDefaultInterruptHandler& (0+255),w,b
 13174  00008C  6EFD               	movwf	tosl,c
 13175  00008E  51FB               	movf	(_EUSART_RxDefaultInterruptHandler+1)& (0+255),w,b
 13176  000090  6EFE               	movwf	tosh,c
 13177  000092  6AFF               	clrf	tosu,c
 13178  000094  50FA               	movf	pclath,w,c
 13179  000096  0012               	return		;indir
 13180  000098                     i2u604_49:
 13181                           
 13182                           ;mcc_generated_files/interrupt_manager.c: 70:         }
 13183  000098  EF4E  F000         	goto	i2l671
 13184  00009C                     i2l667:
 13185  00009C                     i2l671:
 13186  00009C  C004  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
 13187  0000A0  C003  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
 13188  0000A4  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 13189  0000A8  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 13190  0000AC  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 13191  0000AE  0011               	retfie		f
 13192  0000B0                     __end_of_INTERRUPT_InterruptManager:
 13193                           	callstack 0
 13194                           
 13195 ;; *************** function _EUSART_Transmit_ISR *****************
 13196 ;; Defined at:
 13197 ;;		line 206 in file "mcc_generated_files/eusart.c"
 13198 ;; Parameters:    Size  Location     Type
 13199 ;;		None
 13200 ;; Auto vars:     Size  Location     Type
 13201 ;;		None
 13202 ;; Return value:  Size  Location     Type
 13203 ;;                  1    wreg      void 
 13204 ;; Registers used:
 13205 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13206 ;; Tracked objects:
 13207 ;;		On entry : 0/0
 13208 ;;		On exit  : 0/0
 13209 ;;		Unchanged: 0/0
 13210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13215 ;;Total ram usage:        0 bytes
 13216 ;; Hardware stack levels used:    1
 13217 ;; This function calls:
 13218 ;;		Nothing
 13219 ;; This function is called by:
 13220 ;;		_EUSART_Initialize
 13221 ;;		_INTERRUPT_InterruptManager
 13222 ;; This function uses a non-reentrant model
 13223 ;;
 13224                           
 13225                           	psect	text98
 13226  00473A                     __ptext98:
 13227                           	callstack 0
 13228  00473A                     _EUSART_Transmit_ISR:
 13229                           	callstack 18
 13230  00473A                     
 13231                           ;mcc_generated_files/eusart.c: 210:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemain
      +                          ing)
 13232  00473A  0E08               	movlw	8
 13233  00473C  0100               	movlb	0	; () banked
 13234  00473E  61FE               	cpfslt	_eusartTxBufferRemaining& (0+255),b	;volatile
 13235  004740  EFA4  F023         	goto	i2u578_41
 13236  004744  EFA6  F023         	goto	i2u578_40
 13237  004748                     i2u578_41:
 13238  004748  EFBC  F023         	goto	i2l607
 13239  00474C                     i2u578_40:
 13240  00474C                     
 13241                           ; BSR set to: 0
 13242                           ;mcc_generated_files/eusart.c: 211:     {;mcc_generated_files/eusart.c: 212:         TXR
      +                          EG = eusartTxBuffer[eusartTxTail++];
 13243  00474C  0ED5               	movlw	low _eusartTxBuffer
 13244  00474E  2458               	addwf	_eusartTxTail^0,w,c	;volatile
 13245  004750  6ED9               	movwf	fsr2l,c
 13246  004752  6ADA               	clrf	fsr2h,c
 13247  004754  0E00               	movlw	high _eusartTxBuffer
 13248  004756  22DA               	addwfc	fsr2h,f,c
 13249  004758  50DF               	movf	indf2,w,c
 13250  00475A  6EAD               	movwf	173,c	;volatile
 13251  00475C                     
 13252                           ; BSR set to: 0
 13253  00475C  2A58               	incf	_eusartTxTail^0,f,c	;volatile
 13254  00475E                     
 13255                           ; BSR set to: 0
 13256                           ;mcc_generated_files/eusart.c: 213:         if(sizeof(eusartTxBuffer) <= eusartTxTail)
 13257  00475E  0E07               	movlw	7
 13258  004760  6458               	cpfsgt	_eusartTxTail^0,c	;volatile
 13259  004762  EFB5  F023         	goto	i2u579_41
 13260  004766  EFB7  F023         	goto	i2u579_40
 13261  00476A                     i2u579_41:
 13262  00476A  EFB9  F023         	goto	i2l5927
 13263  00476E                     i2u579_40:
 13264  00476E                     
 13265                           ; BSR set to: 0
 13266                           ;mcc_generated_files/eusart.c: 214:         {;mcc_generated_files/eusart.c: 215:        
      +                               eusartTxTail = 0;
 13267  00476E  0E00               	movlw	0
 13268  004770  6E58               	movwf	_eusartTxTail^0,c	;volatile
 13269  004772                     i2l5927:
 13270                           
 13271                           ; BSR set to: 0
 13272                           ;mcc_generated_files/eusart.c: 217:         eusartTxBufferRemaining++;
 13273  004772  2BFE               	incf	_eusartTxBufferRemaining& (0+255),f,b	;volatile
 13274                           
 13275                           ;mcc_generated_files/eusart.c: 218:     }
 13276  004774  EFBD  F023         	goto	i2l610
 13277  004778                     i2l607:
 13278                           
 13279                           ; BSR set to: 0
 13280                           ;mcc_generated_files/eusart.c: 220:     {;mcc_generated_files/eusart.c: 221:         PIE
      +                          1bits.TX1IE = 0;
 13281  004778  989D               	bcf	157,4,c	;volatile
 13282  00477A                     i2l610:
 13283                           
 13284                           ; BSR set to: 0
 13285  00477A  0012               	return		;funcret
 13286  00477C                     __end_of_EUSART_Transmit_ISR:
 13287                           	callstack 0
 13288                           
 13289 ;; *************** function _EUSART_Receive_ISR *****************
 13290 ;; Defined at:
 13291 ;;		line 225 in file "mcc_generated_files/eusart.c"
 13292 ;; Parameters:    Size  Location     Type
 13293 ;;		None
 13294 ;; Auto vars:     Size  Location     Type
 13295 ;;		None
 13296 ;; Return value:  Size  Location     Type
 13297 ;;                  1    wreg      void 
 13298 ;; Registers used:
 13299 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 13300 ;; Tracked objects:
 13301 ;;		On entry : 0/0
 13302 ;;		On exit  : 0/0
 13303 ;;		Unchanged: 0/0
 13304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13308 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13309 ;;Total ram usage:        0 bytes
 13310 ;; Hardware stack levels used:    1
 13311 ;; Hardware stack levels required when called:    2
 13312 ;; This function calls:
 13313 ;;		Absolute function
 13314 ;;		_EUSART_DefaultErrorHandler
 13315 ;;		_EUSART_DefaultFramingErrorHandler
 13316 ;;		_EUSART_DefaultOverrunErrorHandler
 13317 ;;		_EUSART_RxDataHandler
 13318 ;; This function is called by:
 13319 ;;		_EUSART_Initialize
 13320 ;;		_INTERRUPT_InterruptManager
 13321 ;; This function uses a non-reentrant model
 13322 ;;
 13323                           
 13324                           	psect	text99
 13325  003CEA                     __ptext99:
 13326                           	callstack 0
 13327  003CEA                     _EUSART_Receive_ISR:
 13328                           	callstack 16
 13329  003CEA                     
 13330                           ;mcc_generated_files/eusart.c: 228:     eusartRxStatusBuffer[eusartRxHead].status = 0;
 13331  003CEA  0EC5               	movlw	low _eusartRxStatusBuffer
 13332  003CEC  2457               	addwf	_eusartRxHead^0,w,c	;volatile
 13333  003CEE  6ED9               	movwf	fsr2l,c
 13334  003CF0  6ADA               	clrf	fsr2h,c
 13335  003CF2  0E00               	movlw	high _eusartRxStatusBuffer
 13336  003CF4  22DA               	addwfc	fsr2h,f,c
 13337  003CF6  0E00               	movlw	0
 13338  003CF8  6EDF               	movwf	indf2,c
 13339  003CFA                     
 13340                           ;mcc_generated_files/eusart.c: 230:     if(RCSTAbits.FERR){
 13341  003CFA  A4AB               	btfss	171,2,c	;volatile
 13342  003CFC  EF82  F01E         	goto	i2u580_41
 13343  003D00  EF84  F01E         	goto	i2u580_40
 13344  003D04                     i2u580_41:
 13345  003D04  EF99  F01E         	goto	i2l5937
 13346  003D08                     i2u580_40:
 13347  003D08                     
 13348                           ;mcc_generated_files/eusart.c: 231:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
 13349  003D08  0EC5               	movlw	low _eusartRxStatusBuffer
 13350  003D0A  2457               	addwf	_eusartRxHead^0,w,c	;volatile
 13351  003D0C  6ED9               	movwf	fsr2l,c
 13352  003D0E  6ADA               	clrf	fsr2h,c
 13353  003D10  0E00               	movlw	high _eusartRxStatusBuffer
 13354  003D12  22DA               	addwfc	fsr2h,f,c
 13355  003D14  0100               	movlb	0	; () banked
 13356  003D16  82DF               	bsf	indf2,1,c
 13357  003D18                     
 13358                           ; BSR set to: 0
 13359                           ;mcc_generated_files/eusart.c: 232:         EUSART_FramingErrorHandler();
 13360  003D18  D802               	call	i2u581_48
 13361  003D1A  EF99  F01E         	goto	i2u581_49
 13362  003D1E                     i2u581_48:
 13363  003D1E  0005               	push	
 13364  003D20  6EFA               	movwf	pclath,c
 13365  003D22  0101               	movlb	1	; () banked
 13366  003D24  5182               	movf	_EUSART_FramingErrorHandler& (0+255),w,b
 13367  003D26  6EFD               	movwf	tosl,c
 13368  003D28  5183               	movf	(_EUSART_FramingErrorHandler+1)& (0+255),w,b
 13369  003D2A  6EFE               	movwf	tosh,c
 13370  003D2C  6AFF               	clrf	tosu,c
 13371  003D2E  50FA               	movf	pclath,w,c
 13372  003D30  0012               	return		;indir
 13373  003D32                     i2u581_49:
 13374  003D32                     i2l5937:
 13375                           
 13376                           ;mcc_generated_files/eusart.c: 235:     if(RCSTAbits.OERR){
 13377  003D32  A2AB               	btfss	171,1,c	;volatile
 13378  003D34  EF9E  F01E         	goto	i2u582_41
 13379  003D38  EFA0  F01E         	goto	i2u582_40
 13380  003D3C                     i2u582_41:
 13381  003D3C  EFB5  F01E         	goto	i2l5943
 13382  003D40                     i2u582_40:
 13383  003D40                     
 13384                           ;mcc_generated_files/eusart.c: 236:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
 13385  003D40  0EC5               	movlw	low _eusartRxStatusBuffer
 13386  003D42  2457               	addwf	_eusartRxHead^0,w,c	;volatile
 13387  003D44  6ED9               	movwf	fsr2l,c
 13388  003D46  6ADA               	clrf	fsr2h,c
 13389  003D48  0E00               	movlw	high _eusartRxStatusBuffer
 13390  003D4A  22DA               	addwfc	fsr2h,f,c
 13391  003D4C  0100               	movlb	0	; () banked
 13392  003D4E  84DF               	bsf	indf2,2,c
 13393  003D50                     
 13394                           ; BSR set to: 0
 13395                           ;mcc_generated_files/eusart.c: 237:         EUSART_OverrunErrorHandler();
 13396  003D50  D802               	call	i2u583_48
 13397  003D52  EFB5  F01E         	goto	i2u583_49
 13398  003D56                     i2u583_48:
 13399  003D56  0005               	push	
 13400  003D58  6EFA               	movwf	pclath,c
 13401  003D5A  0101               	movlb	1	; () banked
 13402  003D5C  5180               	movf	_EUSART_OverrunErrorHandler& (0+255),w,b
 13403  003D5E  6EFD               	movwf	tosl,c
 13404  003D60  5181               	movf	(_EUSART_OverrunErrorHandler+1)& (0+255),w,b
 13405  003D62  6EFE               	movwf	tosh,c
 13406  003D64  6AFF               	clrf	tosu,c
 13407  003D66  50FA               	movf	pclath,w,c
 13408  003D68  0012               	return		;indir
 13409  003D6A                     i2u583_49:
 13410  003D6A                     i2l5943:
 13411                           
 13412                           ;mcc_generated_files/eusart.c: 240:     if(eusartRxStatusBuffer[eusartRxHead].status){
 13413  003D6A  0EC5               	movlw	low _eusartRxStatusBuffer
 13414  003D6C  2457               	addwf	_eusartRxHead^0,w,c	;volatile
 13415  003D6E  6ED9               	movwf	fsr2l,c
 13416  003D70  6ADA               	clrf	fsr2h,c
 13417  003D72  0E00               	movlw	high _eusartRxStatusBuffer
 13418  003D74  22DA               	addwfc	fsr2h,f,c
 13419  003D76  50DF               	movf	indf2,w,c
 13420  003D78  B4D8               	btfsc	status,2,c
 13421  003D7A  EFC1  F01E         	goto	i2u584_41
 13422  003D7E  EFC3  F01E         	goto	i2u584_40
 13423  003D82                     i2u584_41:
 13424  003D82  EFD2  F01E         	goto	i2l5947
 13425  003D86                     i2u584_40:
 13426  003D86                     
 13427                           ;mcc_generated_files/eusart.c: 241:         EUSART_ErrorHandler();
 13428  003D86  D802               	call	i2u585_48
 13429  003D88  EFD0  F01E         	goto	i2u585_49
 13430  003D8C                     i2u585_48:
 13431  003D8C  0005               	push	
 13432  003D8E  6EFA               	movwf	pclath,c
 13433  003D90  0101               	movlb	1	; () banked
 13434  003D92  517E               	movf	_EUSART_ErrorHandler& (0+255),w,b
 13435  003D94  6EFD               	movwf	tosl,c
 13436  003D96  517F               	movf	(_EUSART_ErrorHandler+1)& (0+255),w,b
 13437  003D98  6EFE               	movwf	tosh,c
 13438  003D9A  6AFF               	clrf	tosu,c
 13439  003D9C  50FA               	movf	pclath,w,c
 13440  003D9E  0012               	return		;indir
 13441  003DA0                     i2u585_49:
 13442                           
 13443                           ;mcc_generated_files/eusart.c: 242:     } else {
 13444  003DA0  EFD4  F01E         	goto	i2l617
 13445  003DA4                     i2l5947:
 13446                           
 13447                           ;mcc_generated_files/eusart.c: 243:         EUSART_RxDataHandler();
 13448  003DA4  ECD3  F024         	call	_EUSART_RxDataHandler	;wreg free
 13449  003DA8                     i2l617:
 13450  003DA8  0012               	return		;funcret
 13451  003DAA                     __end_of_EUSART_Receive_ISR:
 13452                           	callstack 0
 13453                           
 13454 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
 13455 ;; Defined at:
 13456 ;;		line 261 in file "mcc_generated_files/eusart.c"
 13457 ;; Parameters:    Size  Location     Type
 13458 ;;		None
 13459 ;; Auto vars:     Size  Location     Type
 13460 ;;		None
 13461 ;; Return value:  Size  Location     Type
 13462 ;;                  1    wreg      void 
 13463 ;; Registers used:
 13464 ;;		None
 13465 ;; Tracked objects:
 13466 ;;		On entry : 0/0
 13467 ;;		On exit  : 0/0
 13468 ;;		Unchanged: 0/0
 13469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13473 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13474 ;;Total ram usage:        0 bytes
 13475 ;; Hardware stack levels used:    1
 13476 ;; This function calls:
 13477 ;;		Nothing
 13478 ;; This function is called by:
 13479 ;;		_EUSART_Initialize
 13480 ;;		_EUSART_Receive_ISR
 13481 ;; This function uses a non-reentrant model
 13482 ;;
 13483                           
 13484                           	psect	text100
 13485  004C14                     __ptext100:
 13486                           	callstack 0
 13487  004C14                     _EUSART_DefaultOverrunErrorHandler:
 13488                           	callstack 17
 13489  004C14                     
 13490                           ;mcc_generated_files/eusart.c: 264:     RCSTAbits.CREN = 0;
 13491  004C14  98AB               	bcf	171,4,c	;volatile
 13492                           
 13493                           ;mcc_generated_files/eusart.c: 265:     RCSTAbits.CREN = 1;
 13494  004C16  88AB               	bsf	171,4,c	;volatile
 13495  004C18  0012               	return		;funcret
 13496  004C1A                     __end_of_EUSART_DefaultOverrunErrorHandler:
 13497                           	callstack 0
 13498                           
 13499 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
 13500 ;; Defined at:
 13501 ;;		line 259 in file "mcc_generated_files/eusart.c"
 13502 ;; Parameters:    Size  Location     Type
 13503 ;;		None
 13504 ;; Auto vars:     Size  Location     Type
 13505 ;;		None
 13506 ;; Return value:  Size  Location     Type
 13507 ;;                  1    wreg      void 
 13508 ;; Registers used:
 13509 ;;		None
 13510 ;; Tracked objects:
 13511 ;;		On entry : 0/0
 13512 ;;		On exit  : 0/0
 13513 ;;		Unchanged: 0/0
 13514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13518 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13519 ;;Total ram usage:        0 bytes
 13520 ;; Hardware stack levels used:    1
 13521 ;; This function calls:
 13522 ;;		Nothing
 13523 ;; This function is called by:
 13524 ;;		_EUSART_Initialize
 13525 ;;		_EUSART_Receive_ISR
 13526 ;; This function uses a non-reentrant model
 13527 ;;
 13528                           
 13529                           	psect	text101
 13530  004C50                     __ptext101:
 13531                           	callstack 0
 13532  004C50                     _EUSART_DefaultFramingErrorHandler:
 13533                           	callstack 17
 13534  004C50  0012               	return		;funcret
 13535  004C52                     __end_of_EUSART_DefaultFramingErrorHandler:
 13536                           	callstack 0
 13537                           
 13538 ;; *************** function _EUSART_DefaultErrorHandler *****************
 13539 ;; Defined at:
 13540 ;;		line 269 in file "mcc_generated_files/eusart.c"
 13541 ;; Parameters:    Size  Location     Type
 13542 ;;		None
 13543 ;; Auto vars:     Size  Location     Type
 13544 ;;		None
 13545 ;; Return value:  Size  Location     Type
 13546 ;;                  1    wreg      void 
 13547 ;; Registers used:
 13548 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13549 ;; Tracked objects:
 13550 ;;		On entry : 0/0
 13551 ;;		On exit  : 0/0
 13552 ;;		Unchanged: 0/0
 13553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13557 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13558 ;;Total ram usage:        0 bytes
 13559 ;; Hardware stack levels used:    1
 13560 ;; Hardware stack levels required when called:    1
 13561 ;; This function calls:
 13562 ;;		_EUSART_RxDataHandler
 13563 ;; This function is called by:
 13564 ;;		_EUSART_Initialize
 13565 ;;		_EUSART_Receive_ISR
 13566 ;; This function uses a non-reentrant model
 13567 ;;
 13568                           
 13569                           	psect	text102
 13570  004C1A                     __ptext102:
 13571                           	callstack 0
 13572  004C1A                     _EUSART_DefaultErrorHandler:
 13573                           	callstack 16
 13574  004C1A                     
 13575                           ;mcc_generated_files/eusart.c: 270:     EUSART_RxDataHandler();
 13576  004C1A  ECD3  F024         	call	_EUSART_RxDataHandler	;wreg free
 13577  004C1E  0012               	return		;funcret
 13578  004C20                     __end_of_EUSART_DefaultErrorHandler:
 13579                           	callstack 0
 13580                           
 13581 ;; *************** function _EUSART_RxDataHandler *****************
 13582 ;; Defined at:
 13583 ;;		line 249 in file "mcc_generated_files/eusart.c"
 13584 ;; Parameters:    Size  Location     Type
 13585 ;;		None
 13586 ;; Auto vars:     Size  Location     Type
 13587 ;;		None
 13588 ;; Return value:  Size  Location     Type
 13589 ;;                  1    wreg      void 
 13590 ;; Registers used:
 13591 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13592 ;; Tracked objects:
 13593 ;;		On entry : 0/0
 13594 ;;		On exit  : 0/0
 13595 ;;		Unchanged: 0/0
 13596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13600 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13601 ;;Total ram usage:        0 bytes
 13602 ;; Hardware stack levels used:    1
 13603 ;; This function calls:
 13604 ;;		Nothing
 13605 ;; This function is called by:
 13606 ;;		_EUSART_Receive_ISR
 13607 ;;		_EUSART_DefaultErrorHandler
 13608 ;; This function uses a non-reentrant model
 13609 ;;
 13610                           
 13611                           	psect	text103
 13612  0049A6                     __ptext103:
 13613                           	callstack 0
 13614  0049A6                     _EUSART_RxDataHandler:
 13615                           	callstack 17
 13616  0049A6                     
 13617                           ;mcc_generated_files/eusart.c: 251:     eusartRxBuffer[eusartRxHead++] = RCREG;
 13618  0049A6  0ECD               	movlw	low _eusartRxBuffer
 13619  0049A8  2457               	addwf	_eusartRxHead^0,w,c	;volatile
 13620  0049AA  6ED9               	movwf	fsr2l,c
 13621  0049AC  6ADA               	clrf	fsr2h,c
 13622  0049AE  0E00               	movlw	high _eusartRxBuffer
 13623  0049B0  22DA               	addwfc	fsr2h,f,c
 13624  0049B2  CFAE FFDF          	movff	4014,indf2	;volatile
 13625  0049B6  2A57               	incf	_eusartRxHead^0,f,c	;volatile
 13626  0049B8                     
 13627                           ;mcc_generated_files/eusart.c: 252:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
 13628  0049B8  0E07               	movlw	7
 13629  0049BA  6457               	cpfsgt	_eusartRxHead^0,c	;volatile
 13630  0049BC  EFE2  F024         	goto	i2u541_41
 13631  0049C0  EFE4  F024         	goto	i2u541_40
 13632  0049C4                     i2u541_41:
 13633  0049C4  EFE6  F024         	goto	i2l5613
 13634  0049C8                     i2u541_40:
 13635  0049C8                     
 13636                           ;mcc_generated_files/eusart.c: 253:     {;mcc_generated_files/eusart.c: 254:         eus
      +                          artRxHead = 0;
 13637  0049C8  0E00               	movlw	0
 13638  0049CA  6E57               	movwf	_eusartRxHead^0,c	;volatile
 13639  0049CC                     i2l5613:
 13640                           
 13641                           ;mcc_generated_files/eusart.c: 256:     eusartRxCount++;
 13642  0049CC  0100               	movlb	0	; () banked
 13643  0049CE  2BF9               	incf	_eusartRxCount& (0+255),f,b	;volatile
 13644  0049D0                     
 13645                           ; BSR set to: 0
 13646  0049D0  0012               	return		;funcret
 13647  0049D2                     __end_of_EUSART_RxDataHandler:
 13648                           	callstack 0
 13649                           
 13650                           	psect	text104
 13651  000000                     __ptext104:
 13652                           	callstack 0
 13653  000000                     
 13654                           	psect	rparam
 13655  0000                     
 13656                           	psect	temp
 13657  00005A                     btemp:
 13658                           	callstack 0
 13659  00005A                     	ds	1
 13660  0000                     int$flags	set	btemp
 13661  0000                     wtemp8	set	btemp+1
 13662  0000                     ttemp5	set	btemp+1
 13663  0000                     ttemp6	set	btemp+4
 13664  0000                     ttemp7	set	btemp+8
 13665                           
 13666                           	psect	idloc
 13667                           
 13668                           ;Config register IDLOC0 @ 0x200000
 13669                           ;	unspecified, using default values
 13670  200000                     	org	2097152
 13671  200000  FF                 	db	255
 13672                           
 13673                           ;Config register IDLOC1 @ 0x200001
 13674                           ;	unspecified, using default values
 13675  200001                     	org	2097153
 13676  200001  FF                 	db	255
 13677                           
 13678                           ;Config register IDLOC2 @ 0x200002
 13679                           ;	unspecified, using default values
 13680  200002                     	org	2097154
 13681  200002  FF                 	db	255
 13682                           
 13683                           ;Config register IDLOC3 @ 0x200003
 13684                           ;	unspecified, using default values
 13685  200003                     	org	2097155
 13686  200003  FF                 	db	255
 13687                           
 13688                           ;Config register IDLOC4 @ 0x200004
 13689                           ;	unspecified, using default values
 13690  200004                     	org	2097156
 13691  200004  FF                 	db	255
 13692                           
 13693                           ;Config register IDLOC5 @ 0x200005
 13694                           ;	unspecified, using default values
 13695  200005                     	org	2097157
 13696  200005  FF                 	db	255
 13697                           
 13698                           ;Config register IDLOC6 @ 0x200006
 13699                           ;	unspecified, using default values
 13700  200006                     	org	2097158
 13701  200006  FF                 	db	255
 13702                           
 13703                           ;Config register IDLOC7 @ 0x200007
 13704                           ;	unspecified, using default values
 13705  200007                     	org	2097159
 13706  200007  FF                 	db	255
 13707                           
 13708                           	psect	config
 13709                           
 13710                           ; Padding undefined space
 13711  300000                     	org	3145728
 13712  300000  FF                 	db	255
 13713                           
 13714                           ;Config register CONFIG1H @ 0x300001
 13715                           ;	Oscillator Selection bits
 13716                           ;	FOSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
 13717                           ;	Fail-Safe Clock Monitor Enable bit
 13718                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 13719                           ;	Internal/External Oscillator Switchover bit
 13720                           ;	IESO = OFF, Oscillator Switchover mode disabled
 13721  300001                     	org	3145729
 13722  300001  08                 	db	8
 13723                           
 13724                           ;Config register CONFIG2L @ 0x300002
 13725                           ;	Power-up Timer Enable bit
 13726                           ;	PWRT = OFF, PWRT disabled
 13727                           ;	Brown-out Reset Enable bits
 13728                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 13729                           ;	Brown Out Reset Voltage bits
 13730                           ;	BORV = 18, VBOR set to 1.8 V nominal
 13731  300002                     	org	3145730
 13732  300002  1F                 	db	31
 13733                           
 13734                           ;Config register CONFIG2H @ 0x300003
 13735                           ;	Watchdog Timer Enable bit
 13736                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
 13737                           ;	Watchdog Timer Postscale Select bits
 13738                           ;	WDTPS = 32768, 1:32768
 13739  300003                     	org	3145731
 13740  300003  1E                 	db	30
 13741                           
 13742                           ; Padding undefined space
 13743  300004                     	org	3145732
 13744  300004  FF                 	db	255
 13745                           
 13746                           ;Config register CONFIG3H @ 0x300005
 13747                           ;	CCP2 MUX bit
 13748                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
 13749                           ;	PORTB A/D Enable bit
 13750                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
 13751                           ;	Low-Power Timer1 Oscillator Enable bit
 13752                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 13753                           ;	HFINTOSC Fast Start-up
 13754                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
 13755                           ;	MCLR Pin Enable bit
 13756                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR disabled
 13757  300005                     	org	3145733
 13758  300005  0B                 	db	11
 13759                           
 13760                           ;Config register CONFIG4L @ 0x300006
 13761                           ;	Stack Full/Underflow Reset Enable bit
 13762                           ;	STVREN = ON, Stack full/underflow will cause Reset
 13763                           ;	Single-Supply ICSP Enable bit
 13764                           ;	LVP = OFF, Single-Supply ICSP disabled
 13765                           ;	Extended Instruction Set Enable bit
 13766                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 13767                           ;	Background Debugger Enable bit
 13768                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
 13769  300006                     	org	3145734
 13770  300006  81                 	db	129
 13771                           
 13772                           ; Padding undefined space
 13773  300007                     	org	3145735
 13774  300007  FF                 	db	255
 13775                           
 13776                           ;Config register CONFIG5L @ 0x300008
 13777                           ;	Code Protection Block 0
 13778                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
 13779                           ;	Code Protection Block 1
 13780                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
 13781                           ;	Code Protection Block 2
 13782                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
 13783                           ;	Code Protection Block 3
 13784                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
 13785  300008                     	org	3145736
 13786  300008  0F                 	db	15
 13787                           
 13788                           ;Config register CONFIG5H @ 0x300009
 13789                           ;	Boot Block Code Protection bit
 13790                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 13791                           ;	Data EEPROM Code Protection bit
 13792                           ;	CPD = OFF, Data EEPROM not code-protected
 13793  300009                     	org	3145737
 13794  300009  C0                 	db	192
 13795                           
 13796                           ;Config register CONFIG6L @ 0x30000A
 13797                           ;	Write Protection Block 0
 13798                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 13799                           ;	Write Protection Block 1
 13800                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 13801                           ;	Write Protection Block 2
 13802                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 13803                           ;	Write Protection Block 3
 13804                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
 13805  30000A                     	org	3145738
 13806  30000A  0F                 	db	15
 13807                           
 13808                           ;Config register CONFIG6H @ 0x30000B
 13809                           ;	Configuration Register Write Protection bit
 13810                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 13811                           ;	Boot Block Write Protection bit
 13812                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 13813                           ;	Data EEPROM Write Protection bit
 13814                           ;	WRTD = OFF, Data EEPROM not write-protected
 13815  30000B                     	org	3145739
 13816  30000B  E0                 	db	224
 13817                           
 13818                           ;Config register CONFIG7L @ 0x30000C
 13819                           ;	Table Read Protection Block 0
 13820                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 13821                           ;	Table Read Protection Block 1
 13822                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 13823                           ;	Table Read Protection Block 2
 13824                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 13825                           ;	Table Read Protection Block 3
 13826                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 13827  30000C                     	org	3145740
 13828  30000C  0F                 	db	15
 13829                           
 13830                           ;Config register CONFIG7H @ 0x30000D
 13831                           ;	Boot Block Table Read Protection bit
 13832                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 13833  30000D                     	org	3145741
 13834  30000D  40                 	db	64
 13835                           tosu	equ	0xFFF
 13836                           tosh	equ	0xFFE
 13837                           tosl	equ	0xFFD
 13838                           stkptr	equ	0xFFC
 13839                           pclatu	equ	0xFFB
 13840                           pclath	equ	0xFFA
 13841                           pcl	equ	0xFF9
 13842                           tblptru	equ	0xFF8
 13843                           tblptrh	equ	0xFF7
 13844                           tblptrl	equ	0xFF6
 13845                           tablat	equ	0xFF5
 13846                           prodh	equ	0xFF4
 13847                           prodl	equ	0xFF3
 13848                           indf0	equ	0xFEF
 13849                           postinc0	equ	0xFEE
 13850                           postdec0	equ	0xFED
 13851                           preinc0	equ	0xFEC
 13852                           plusw0	equ	0xFEB
 13853                           fsr0h	equ	0xFEA
 13854                           fsr0l	equ	0xFE9
 13855                           wreg	equ	0xFE8
 13856                           indf1	equ	0xFE7
 13857                           postinc1	equ	0xFE6
 13858                           postdec1	equ	0xFE5
 13859                           preinc1	equ	0xFE4
 13860                           plusw1	equ	0xFE3
 13861                           fsr1h	equ	0xFE2
 13862                           fsr1l	equ	0xFE1
 13863                           bsr	equ	0xFE0
 13864                           indf2	equ	0xFDF
 13865                           postinc2	equ	0xFDE
 13866                           postdec2	equ	0xFDD
 13867                           preinc2	equ	0xFDC
 13868                           plusw2	equ	0xFDB
 13869                           fsr2h	equ	0xFDA
 13870                           fsr2l	equ	0xFD9
 13871                           status	equ	0xFD8

Data Sizes:
    Strings     71
    Constant    32
    Data        0
    BSS         183
    Persistent  11
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     85      89
    BANK0           160    101     159
    BANK1           256      6     138
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    I2C_Read1ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Read2ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Write1ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Write2ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    I2C_DO_TX$2530$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_RX$2536$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_TX_EMPTY$2542$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_RX_EMPTY$2548$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_TX_EMPTY$2547	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_TX_EMPTY$2542	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_DO_RX$2541	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_RX$2536	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_DO_TX$2535	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_TX$2530	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_MasterFsm$2529	const PTR FTN()enum E3101 size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    I2C_CallbackReturnStop@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_CallbackReturnReset@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    Absolute function$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S248$0$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_13(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_13(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1983_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 29
		 -> STR_2(CODE[29]), STR_1(CODE[23]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 29
		 -> STR_2(CODE[29]), STR_1(CODE[23]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 29
		 -> STR_2(CODE[29]), STR_1(CODE[23]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 29
		 -> STR_2(CODE[29]), STR_1(CODE[23]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), Absolute function(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), Absolute function(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), Absolute function(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), Absolute function(), 

    I2C_SetCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_SetCallback@cb	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_SetAddressNackCallback@ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> Absolute function(), 

    I2C_SetDataCompleteCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_SetBuffer@buffer	PTR void  size(2) Largest target is 10
		 -> readBuffer(BANK1[10]), SHT40_Read@regist(COMRAM[1]), I2C_ReadDataBlock@reg(COMRAM[1]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), 
		 -> I2C_Write2ByteRegister@reg(COMRAM[1]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@reg(COMRAM[1]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Read2ByteRegister@reg(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMRAM[1]), 
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S248$data_ptr	PTR unsigned char  size(2) Largest target is 10
		 -> readBuffer(BANK1[10]), SHT40_Read@regist(COMRAM[1]), I2C_ReadDataBlock@reg(COMRAM[1]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), 
		 -> I2C_Write2ByteRegister@reg(COMRAM[1]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@reg(COMRAM[1]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Read2ByteRegister@reg(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMRAM[1]), 
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_Status.data_ptr	PTR unsigned char  size(2) Largest target is 10
		 -> readBuffer(BANK1[10]), SHT40_Read@regist(COMRAM[1]), I2C_ReadDataBlock@reg(COMRAM[1]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), 
		 -> I2C_Write2ByteRegister@reg(COMRAM[1]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@reg(COMRAM[1]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Read2ByteRegister@reg(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMRAM[1]), 
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S248$callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_Status.callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S248$callbackTable	PTR FTN(PTR void ,)enum E358[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_Status.callbackTable	PTR FTN(PTR void ,)enum E358[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    fsmStateTable	const PTR FTN()enum E3101[16] size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    rdBlkRegCompleteHandler@ptr.data	PTR unsigned char  size(2) Largest target is 0

    rdBlkRegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    wr2RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    wr1RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    rd2RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    rd1RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S96$data	PTR unsigned char  size(2) Largest target is 0

    bufferBlock.data	PTR unsigned char  size(2) Largest target is 0

    I2C_ReadNBytes@data	PTR unsigned char  size(2) Largest target is 10
		 -> readBuffer(BANK1[10]), 

    I2C_WriteNBytes@data	PTR unsigned char  size(2) Largest target is 1
		 -> SHT40_Read@regist(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _vfpfcnvrt->_efgtoa
    _efgtoa->___flsub
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    _floorf->___fldiv
    ___flsub->___fladd
    _atoi->_isspace
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler
    _SHT40_temp_GetValue->___fladd
    _SHT40_humy_GetValue->___fladd
    ___flge->___flmul
    ___fldiv->___flmul
    ___fladd->___fldiv
    _SHT40_Read->_I2C_ReadNBytes
    _SHT40_Read->_I2C_WriteNBytes
    _I2C_SetAddressNackCallback->_I2C_SetCallback
    _I2C_MasterWrite->_I2C_MasterOperation
    _I2C_MasterRead->_I2C_MasterOperation
    _I2C_Poller->_I2C_MasterFsm
    _I2C_MasterFsm->_I2C_DO_ADDRESS_NACK
    _I2C_MasterFsm->_I2C_DO_RX
    _I2C_MasterFsm->_I2C_DO_TX
    _I2C_MasterFsm->_I2C_DO_TX_EMPTY
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnReset
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnStop
    _I2C_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C_DO_TX->_I2C_CallbackReturnReset
    _I2C_DO_TX->_I2C_CallbackReturnStop
    _I2C_DO_TX->_rd1RegCompleteHandler
    _I2C_DO_TX->_rd2RegCompleteHandler
    _I2C_DO_TX->_rdBlkRegCompleteHandler
    _I2C_DO_TX->_wr1RegCompleteHandler
    _I2C_DO_TX->_wr2RegCompleteHandler
    _I2C_DO_SEND_ADR_WRITE->_I2C_MasterSendTxData
    _I2C_DO_RX->_I2C_CallbackReturnReset
    _I2C_DO_RX->_I2C_CallbackReturnStop
    _I2C_DO_RX->_rd1RegCompleteHandler
    _I2C_DO_RX->_rd2RegCompleteHandler
    _I2C_DO_RX->_rdBlkRegCompleteHandler
    _I2C_DO_RX->_wr1RegCompleteHandler
    _I2C_DO_RX->_wr2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnReset
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnStop
    _I2C_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _wr2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _I2C_SetDataCompleteCallback->_I2C_SetCallback

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_printf

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  431262
                                              4 BANK1      2     2      0
                _SHT40_humy_GetValue
                _SHT40_temp_GetValue
                  _SYSTEM_Initialize
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              10     4      6   40782
                                             95 BANK0      6     0      6
                                              0 BANK1      4     4      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   40497
                                             87 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           50    44      6   39913
                                             61 BANK0     26    20      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     595
                                              4 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              68    61      7   30487
                                             78 COMRAM     7     0      7
                                              0 BANK0     61    61      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2    1142
                                             10 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     551
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4    1037
                                              4 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3957
                                             22 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1537
                                             15 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4    1037
                                              6 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      93
                                              5 COMRAM     1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (6) _EUSART_Write                                         1     1      0      62
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     669
                                             54 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     375
                                              4 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     517
                                              4 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    4367
                                             70 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     155
                                              4 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     770
                                              4 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     613
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     625
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    3565
                                             11 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                              4 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     371
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    2282
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     490
                  _EUSART_Initialize
                     _I2C_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     490
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SHT40_temp_GetValue                                 10     6      4  194468
                                             70 COMRAM    10     6      4
                         _SHT40_Read
                            ___fladd
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _SHT40_humy_GetValue                                 10     6      4  195522
                                             70 COMRAM    10     6      4
                         _SHT40_Read
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              4 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3593
                                              4 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     986
                                             29 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    3083
                                             29 COMRAM    25    17      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    3802
                                             54 COMRAM    16     8      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _SHT40_Read                                           2     2      0  183448
                                             26 COMRAM     2     2      0
                     _I2C_ReadNBytes
                    _I2C_WriteNBytes
 ---------------------------------------------------------------------------------
 (3) _I2C_WriteNBytes                                      5     1      4   92646
                                             21 COMRAM     5     1      4
                          _I2C_Close
                    _I2C_MasterWrite
                           _I2C_Open
         _I2C_SetAddressNackCallback
                      _I2C_SetBuffer
 ---------------------------------------------------------------------------------
 (4) _I2C_SetAddressNackCallback                           4     0      4    1870
                                              9 COMRAM     4     0      4
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterWrite                                      0     0      0   88620
                _I2C_MasterOperation
 ---------------------------------------------------------------------------------
 (3) _I2C_ReadNBytes                                       5     1      4   90776
                                             21 COMRAM     5     1      4
                          _I2C_Close
                     _I2C_MasterRead
                           _I2C_Open
                      _I2C_SetBuffer
 ---------------------------------------------------------------------------------
 (4) _I2C_Open                                             2     2      0      46
                                              4 COMRAM     2     2      0
                 _I2C_MasterClearIrq
                     _I2C_MasterOpen
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterOpen                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterRead                                       0     0      0   88620
                _I2C_MasterOperation
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterOperation                                  2     2      0   88620
                                             19 COMRAM     2     2      0
                    _I2C_MasterStart
                         _I2C_Poller
 ---------------------------------------------------------------------------------
 (6) _I2C_Poller                                           0     0      0   88574
                      _I2C_MasterFsm
             _I2C_MasterWaitForEvent
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterWaitForEvent                               0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterFsm                                        2     2      0   88574
                                             17 COMRAM     2     2      0
                _I2C_DO_ADDRESS_NACK *
                        _I2C_DO_IDLE *
                        _I2C_DO_RCEN *
                       _I2C_DO_RESET *
                          _I2C_DO_RX *
                      _I2C_DO_RX_ACK *
             _I2C_DO_RX_NACK_RESTART *
                _I2C_DO_RX_NACK_STOP *
               _I2C_DO_SEND_ADR_READ *
              _I2C_DO_SEND_ADR_WRITE *
                _I2C_DO_SEND_RESTART *
           _I2C_DO_SEND_RESTART_READ *
          _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_DO_SEND_STOP *
                          _I2C_DO_TX *
                    _I2C_DO_TX_EMPTY *
                 _I2C_MasterClearIrq
                   _I2C_MasterIsNack
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_TX_EMPTY                                      2     2      0   22127
                                             15 COMRAM     2     2      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
                   _I2C_MasterSetIrq
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterSetIrq                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_TX                                            2     2      0   22149
                                             15 COMRAM     2     2      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
           _I2C_DO_SEND_RESTART_READ
          _I2C_DO_SEND_RESTART_WRITE
                   _I2C_DO_SEND_STOP
                   _I2C_MasterIsNack
               _I2C_MasterSendTxData
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterIsNack                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_SEND_RESTART_WRITE                            0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_SEND_RESTART_READ                             0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_ADR_WRITE                                0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_ADR_READ                                 0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterSendTxData                                 1     1      0      22
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_RX_ACK                                        0     0      0       0
                  _I2C_MasterSendAck
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_RX                                            2     2      0   22127
                                             15 COMRAM     2     2      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
             _I2C_DO_RX_NACK_RESTART
                _I2C_DO_RX_NACK_STOP
                _I2C_MasterGetRxData
                  _I2C_MasterSendAck
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterSendAck                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterGetRxData                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_RX_NACK_STOP                                  0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_RX_NACK_RESTART                               0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterSendNack                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_RESET                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_RCEN                                          0     0      0       0
                  _I2C_MasterStartRx
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterStartRx                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_ADDRESS_NACK                                  2     2      0   22127
                                             15 COMRAM     2     2      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (9) _wr2RegCompleteHandler                                2     0      2    4368
                                             13 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _wr1RegCompleteHandler                                2     0      2    4368
                                             13 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _rdBlkRegCompleteHandler                              2     0      2    4390
                                             13 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _rd2RegCompleteHandler                                2     0      2    4368
                                             13 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _rd1RegCompleteHandler                                2     0      2    4368
                                             13 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _I2C_SetDataCompleteCallback                         4     0      4    2478
                                              9 COMRAM     4     0      4
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (5) _I2C_SetCallback                                      5     1      4     914
                                              4 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (4) _I2C_SetBuffer                                        4     0      4    1868
                                              4 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_SEND_STOP                                     0     0      0       0
                     _I2C_MasterStop
 ---------------------------------------------------------------------------------
 (10) _I2C_MasterStop                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_SEND_RESTART                                  0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (10) _I2C_MasterEnableRestart                             0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_CallbackReturnStop                               2     0      2       0
                                             13 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (9) _I2C_CallbackReturnReset                              2     0      2     265
                                             13 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterStart                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_Close                                            1     1      0      24
                                              4 COMRAM     1     1      0
                 _I2C_MasterClearIrq
                    _I2C_MasterClose
               _I2C_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterDisableIrq                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterClose                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterClearIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INTERRUPT_InterruptManager                          4     4      0       0
                                              0 COMRAM     4     4      0
                   Absolute function *
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _EUSART_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART_Receive_ISR                                  0     0      0       0
                   Absolute function *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (14) _EUSART_DefaultOverrunErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART_DefaultFramingErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART_DefaultErrorHandler                          0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (14) _EUSART_RxDataHandler                                0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SHT40_humy_GetValue
     _SHT40_Read
       _I2C_ReadNBytes
         _I2C_Close
           _I2C_MasterClearIrq
           _I2C_MasterClose
           _I2C_MasterDisableIrq
         _I2C_MasterRead
           _I2C_MasterOperation
             _I2C_MasterStart
             _I2C_Poller
               _I2C_MasterFsm
                 _I2C_DO_ADDRESS_NACK *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_SEND_RESTART *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_STOP *
                     _I2C_MasterStop
                   _rd1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rdBlkRegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                 _I2C_DO_IDLE *
                 _I2C_DO_RCEN *
                   _I2C_MasterStartRx
                 _I2C_DO_RESET *
                 _I2C_DO_RX *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_RX_NACK_RESTART *
                     _I2C_MasterSendNack
                   _I2C_DO_RX_NACK_STOP *
                     _I2C_MasterSendNack
                   _I2C_MasterGetRxData *
                   _I2C_MasterSendAck *
                   _rd1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rdBlkRegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                 _I2C_DO_RX_ACK *
                   _I2C_MasterSendAck
                 _I2C_DO_RX_NACK_RESTART *
                   _I2C_MasterSendNack
                 _I2C_DO_RX_NACK_STOP *
                   _I2C_MasterSendNack
                 _I2C_DO_SEND_ADR_READ *
                   _I2C_MasterSendTxData
                 _I2C_DO_SEND_ADR_WRITE *
                   _I2C_MasterSendTxData
                 _I2C_DO_SEND_RESTART *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_RESTART_READ *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_STOP *
                   _I2C_MasterStop
                 _I2C_DO_TX *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_SEND_RESTART_READ *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_RESTART_WRITE *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_STOP *
                     _I2C_MasterStop
                   _I2C_MasterIsNack *
                   _I2C_MasterSendTxData *
                   _rd1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rdBlkRegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                 _I2C_DO_TX_EMPTY *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_SEND_RESTART *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_STOP *
                     _I2C_MasterStop
                   _I2C_MasterSetIrq *
                   _rd1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rdBlkRegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                 _I2C_MasterClearIrq *
                 _I2C_MasterIsNack *
               _I2C_MasterWaitForEvent
         _I2C_Open
           _I2C_MasterClearIrq
           _I2C_MasterOpen
         _I2C_SetBuffer
       _I2C_WriteNBytes
         _I2C_Close
           _I2C_MasterClearIrq
           _I2C_MasterClose
           _I2C_MasterDisableIrq
         _I2C_MasterWrite
           _I2C_MasterOperation
             _I2C_MasterStart
             _I2C_Poller
               _I2C_MasterFsm
                 _I2C_DO_ADDRESS_NACK *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_SEND_RESTART *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_STOP *
                     _I2C_MasterStop
                   _rd1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rdBlkRegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                 _I2C_DO_IDLE *
                 _I2C_DO_RCEN *
                   _I2C_MasterStartRx
                 _I2C_DO_RESET *
                 _I2C_DO_RX *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_RX_NACK_RESTART *
                     _I2C_MasterSendNack
                   _I2C_DO_RX_NACK_STOP *
                     _I2C_MasterSendNack
                   _I2C_MasterGetRxData *
                   _I2C_MasterSendAck *
                   _rd1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rdBlkRegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                 _I2C_DO_RX_ACK *
                   _I2C_MasterSendAck
                 _I2C_DO_RX_NACK_RESTART *
                   _I2C_MasterSendNack
                 _I2C_DO_RX_NACK_STOP *
                   _I2C_MasterSendNack
                 _I2C_DO_SEND_ADR_READ *
                   _I2C_MasterSendTxData
                 _I2C_DO_SEND_ADR_WRITE *
                   _I2C_MasterSendTxData
                 _I2C_DO_SEND_RESTART *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_RESTART_READ *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_STOP *
                   _I2C_MasterStop
                 _I2C_DO_TX *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_SEND_RESTART_READ *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_RESTART_WRITE *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_STOP *
                     _I2C_MasterStop
                   _I2C_MasterIsNack *
                   _I2C_MasterSendTxData *
                   _rd1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rdBlkRegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                 _I2C_DO_TX_EMPTY *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_SEND_RESTART *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_STOP *
                     _I2C_MasterStop
                   _I2C_MasterSetIrq *
                   _rd1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rdBlkRegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                 _I2C_MasterClearIrq *
                 _I2C_MasterIsNack *
               _I2C_MasterWaitForEvent
         _I2C_Open
           _I2C_MasterClearIrq
           _I2C_MasterOpen
         _I2C_SetAddressNackCallback
           _I2C_SetCallback
         _I2C_SetBuffer
     ___fladd
       ___fldiv (ARG)
         ___flmul (ARG)
       ___flmul (ARG)
     ___fldiv
       ___flmul (ARG)
     ___flge
       ___flmul (ARG)
     ___flmul
     ___xxtofl
   _SHT40_temp_GetValue
     _SHT40_Read
       _I2C_ReadNBytes
         _I2C_Close
           _I2C_MasterClearIrq
           _I2C_MasterClose
           _I2C_MasterDisableIrq
         _I2C_MasterRead
           _I2C_MasterOperation
             _I2C_MasterStart
             _I2C_Poller
               _I2C_MasterFsm
                 _I2C_DO_ADDRESS_NACK *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_SEND_RESTART *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_STOP *
                     _I2C_MasterStop
                   _rd1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rdBlkRegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                 _I2C_DO_IDLE *
                 _I2C_DO_RCEN *
                   _I2C_MasterStartRx
                 _I2C_DO_RESET *
                 _I2C_DO_RX *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_RX_NACK_RESTART *
                     _I2C_MasterSendNack
                   _I2C_DO_RX_NACK_STOP *
                     _I2C_MasterSendNack
                   _I2C_MasterGetRxData *
                   _I2C_MasterSendAck *
                   _rd1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rdBlkRegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                 _I2C_DO_RX_ACK *
                   _I2C_MasterSendAck
                 _I2C_DO_RX_NACK_RESTART *
                   _I2C_MasterSendNack
                 _I2C_DO_RX_NACK_STOP *
                   _I2C_MasterSendNack
                 _I2C_DO_SEND_ADR_READ *
                   _I2C_MasterSendTxData
                 _I2C_DO_SEND_ADR_WRITE *
                   _I2C_MasterSendTxData
                 _I2C_DO_SEND_RESTART *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_RESTART_READ *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_STOP *
                   _I2C_MasterStop
                 _I2C_DO_TX *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_SEND_RESTART_READ *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_RESTART_WRITE *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_STOP *
                     _I2C_MasterStop
                   _I2C_MasterIsNack *
                   _I2C_MasterSendTxData *
                   _rd1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rdBlkRegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                 _I2C_DO_TX_EMPTY *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_SEND_RESTART *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_STOP *
                     _I2C_MasterStop
                   _I2C_MasterSetIrq *
                   _rd1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rdBlkRegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                 _I2C_MasterClearIrq *
                 _I2C_MasterIsNack *
               _I2C_MasterWaitForEvent
         _I2C_Open
           _I2C_MasterClearIrq
           _I2C_MasterOpen
         _I2C_SetBuffer
       _I2C_WriteNBytes
         _I2C_Close
           _I2C_MasterClearIrq
           _I2C_MasterClose
           _I2C_MasterDisableIrq
         _I2C_MasterWrite
           _I2C_MasterOperation
             _I2C_MasterStart
             _I2C_Poller
               _I2C_MasterFsm
                 _I2C_DO_ADDRESS_NACK *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_SEND_RESTART *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_STOP *
                     _I2C_MasterStop
                   _rd1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rdBlkRegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                 _I2C_DO_IDLE *
                 _I2C_DO_RCEN *
                   _I2C_MasterStartRx
                 _I2C_DO_RESET *
                 _I2C_DO_RX *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_RX_NACK_RESTART *
                     _I2C_MasterSendNack
                   _I2C_DO_RX_NACK_STOP *
                     _I2C_MasterSendNack
                   _I2C_MasterGetRxData *
                   _I2C_MasterSendAck *
                   _rd1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rdBlkRegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                 _I2C_DO_RX_ACK *
                   _I2C_MasterSendAck
                 _I2C_DO_RX_NACK_RESTART *
                   _I2C_MasterSendNack
                 _I2C_DO_RX_NACK_STOP *
                   _I2C_MasterSendNack
                 _I2C_DO_SEND_ADR_READ *
                   _I2C_MasterSendTxData
                 _I2C_DO_SEND_ADR_WRITE *
                   _I2C_MasterSendTxData
                 _I2C_DO_SEND_RESTART *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_RESTART_READ *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_STOP *
                   _I2C_MasterStop
                 _I2C_DO_TX *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_SEND_RESTART_READ *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_RESTART_WRITE *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_STOP *
                     _I2C_MasterStop
                   _I2C_MasterIsNack *
                   _I2C_MasterSendTxData *
                   _rd1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rdBlkRegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                 _I2C_DO_TX_EMPTY *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_SEND_RESTART *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_STOP *
                     _I2C_MasterStop
                   _I2C_MasterSetIrq *
                   _rd1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rdBlkRegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                 _I2C_MasterClearIrq *
                 _I2C_MasterIsNack *
               _I2C_MasterWaitForEvent
         _I2C_Open
           _I2C_MasterClearIrq
           _I2C_MasterOpen
         _I2C_SetAddressNackCallback
           _I2C_SetCallback
         _I2C_SetBuffer
     ___fladd
       ___fldiv (ARG)
         ___flmul (ARG)
       ___flmul (ARG)
     ___fldiv
       ___flmul (ARG)
     ___flmul
     ___xxtofl
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _I2C_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
             ___flmul (ARG)
           ___fldiv
             ___flmul (ARG)
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
               ___flmul (ARG)
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
               ___flmul (ARG)
           _isupper
           _pad
             _fputc
               _putch
                 _EUSART_Write
             _fputs
               _fputc
                 _putch
                   _EUSART_Write
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _EUSART_Write
         _isdigit
         _isupper
         _strncmp
         _tolower
           _isupper

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART_Receive_ISR *
     Absolute function(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      6      8A       7       53.9%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     65      9F       5       99.4%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     55      59       1       94.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     182      32        0.0%
DATA                 0      0     182       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Mon May 10 13:45:41 2021

                ?_EUSART_SetRxInterruptHandler 0005                         ??_I2C_DO_SEND_ADR_READ 0005  
                  __size_of_I2C_MasterSendNack 0006                             __size_of_I2C_Close 002C  
                                 ___fldiv@aexp 0036                                   ___fldiv@bexp 0035  
                        ??_SHT40_temp_GetValue 004B                                   ___fldiv@sign 002E  
                      ??_I2C_DO_SEND_ADR_WRITE 0006                                    _SSPSTATbits 000FC7  
                                           l90 494C                                             l93 4920  
                                           l69 4536                                             l78 466C  
                                           l96 48F4                                             l99 4978  
                                 ___awdiv@sign 000A                            ___wmul@multiplicand 0007  
              SHT40_humy_GetValue@pressDataAnz 004D                            __size_of_I2C_Poller 001E  
                        ??_I2C_DO_SEND_RESTART 0005                   __size_of_I2C_MasterOperation 0044  
                                          l102 47BA                                            l213 4178  
                                          l223 4738                                            l312 41F4  
                                          l217 49A4                  __size_of_I2C_MasterSendTxData 0008  
                                          l209 4B08                                            l402 4C3A  
                                          l306 4B64                                            l330 4BFE  
                                          l226 4BC6                                            l411 4C12  
                                          l236 4A6E                                            l405 4B1C  
                                          l333 4BF6                                            l229 4BBE  
                                          l245 4AC6                                            l342 4BDE  
                                          l262 4AAE                                            l239 4ADE  
                                          l351 4B58                                            l256 426E  
                                          l408 4C0C                                            l432 4C26  
                                          l272 4B4C                                            l336 4BEE  
                                          l281 3CE8                                            l345 4BD6  
                                          l426 4C46                                            l266 4354  
                                          l275 4B3C                                            l339 4BE6  
                                          l435 4B1E                                            l348 4BCE  
                                          l604 4B7A                                            l429 4C4E  
                                          l381 4C4A                                            l365 4C36  
                                          l269 4B70                                            l357 43BA  
                                          l390 4C3E                                            l278 3CB0  
                                          l294 3FE6                                            l295 4054  
                                          l439 4B2C                                            l368 4C32  
                                          l384 4C2A                                            l456 4AF4  
                                          l713 46F4                                            l721 35E6  
                                          l633 4BAC                                            l378 4A90  
                                          l642 4B8E                                            l570 42E4  
                                          l387 4C06                                            l459 4B84  
                                          l396 4C2E                                            l716 3A9A  
                                          l636 4BA2                                            l660 4C22  
                                          l492 48C8                                            l724 4A4A  
                                          l645 4B98                                            l399 4C42  
                                          l639 4BB6                                            l594 454C  
                                          l595 4562                                            l598 458E  
                                          l955 3C24                                            l983 3FAE  
                                          l968 3E58                                            l994 37F0  
                                          l989 37AA                                            l998 482A  
                       ??_EUSART_RxDataHandler 0001                                            _pad 3A9C  
                       fp__I2C_DO_RX_NACK_STOP 0000                         _I2C_MasterWaitForEvent 4B1E  
               ?_EUSART_SetFramingErrorHandler 0005                                   ___awmod@sign 000A  
                                          prod 000FF3                                            tosl 000FFD  
                                          wreg 000FE8                                   ___flmul@aexp 0012  
                                 ___flmul@bexp 0017                   ??_I2C_SetAddressNackCallback 000E  
                                 ___flmul@sign 0011                                   ___flmul@temp 001C  
                                 ___flmul@prod 0018                       ??_I2C_CallbackReturnStop 0010  
                                 _I2C_DO_RESET 4B4E                                   ___fltol@exp1 000E  
                                         l1021 36EC                        ??_rd2RegCompleteHandler 0010  
                                         l1311 2D7A                                           l1320 2E62  
                                         l1306 2F56                                           l1402 4A24  
                                         l1252 24C2                                           l1308 2DB6  
                                         l1261 2792                                           l1253 24B0  
                                         l1317 2DFC                                           l1254 2476  
                                         l1342 2BBC                                           l1510 181C  
                                         l1319 2E74                                           l4001 4A5C  
                                         l1345 2A4E                                           l1338 2858  
                                         l1602 38EE                                           l4003 4A64  
                                         l4011 4C0E                                           l1355 2B7E  
                                         l1347 2AC6                                           l1443 3AE2  
                                         l1348 2AB4                                           l4005 4A6C  
                                         l4013 4922                                           l4021 48F6  
                                         l1269 25DC                                           l1278 26AC  
                                         l1382 331C                                           l1294 4626  
                                         l1446 3B24                                           l4007 4C3C  
                                         l4015 4936                                           l4023 490A  
                                         l4031 48DE                                           l4103 4C24  
                                         l1279 269A                                           l1631 34AE  
                                         l1703 39CA                                           l1640 3168  
                                         l1448 3B60                                           l4009 4C38  
                                         l4041 4976                                           l4017 494A  
                                         l4025 491E                                           l4033 48F2  
                                         l4105 4C34                                           l1393 32B4  
                                         l1713 4476                                           l1553 1D5E  
                                         l1386 3258                                           l1650 4862  
                                         l1634 34B6                                           l1466 1C66  
                                         l4131 4C4C                                           l1379 31C0  
                                         l1643 30AC                                           l1484 1484  
                                         l4037 494E                                           l4029 48CA  
                                         l4045 477C                                           l4109 4C30  
                                         l4053 4B0A                                           l4133 4B66  
                                         l4141 4B3E                                           l4205 3FEC  
                                         l4061 4BFC                                           l4301 42FA  
                                         l1718 447E                                           l4039 4962  
                                         l4047 47A4                                           l4231 417A  
                                         l4135 4B6A                                           l4143 4B42  
                                         l4151 4B32                                           l4215 3FFC  
                                         l4223 4B5A                                           l4071 4BE0  
                                         l4303 430E                                           l1591 4416  
                                         l1664 47F2                                           l1592 441E  
                                         l5201 4992                                           l4321 4C40  
                                         l4049 47B8                                           l4081 4C08  
                                         l4057 4C02                                           l4233 4182  
                                         l4137 4B6E                                           l4145 4B4A  
                                         l4153 4B3A                                           l4161 3C3E  
                                         l4209 3FF4                                           l4225 4B5E  
                                         l4065 4BF0                                           l4073 4BE4  
                                         l4305 4314                                           l1585 21EC  
                                         l1658 45E0                                           l1578 22D2  
                                         l5203 499E                                           l4243 4194  
                                         l4227 4B62                                           l4059 4BF8  
                                         l4067 4BF4                                           l4091 4BD4  
                                         l4083 4BC8                                           l4323 4A92  
                                         l5205 49A2                                           l4077 4C28  
                                         l4237 418A                                           l4149 4B2E  
                                         l4181 3CE0                                           l4165 3C46  
                                         l4157 3C26                                           l4085 4BCC  
                                         l4325 4A96                                           l5141 40EE  
                                         l1693 44DC                                           l4095 4C2C  
                                         l4239 418E                                           l4183 3CE6  
                                         l4175 3C56                                           l4191 3FB0  
                                         l4263 4B4E                                           l4271 4356  
                                         l4327 4A9A                                           l5151 410A  
                                         l5143 40F2                                           l1679 40EA  
                                         l1687 46B0                                           l4249 419C  
                                         l4177 3CB4                                           l4169 3C4E  
                                         l4193 3FBE                                           l4097 4BE8  
                                         l4257 4BD8                                           l4089 4BD0  
                                         l4265 4B52                                           l4273 435A  
                                         l4329 4A9E                                           l5209 4BC0  
                                         l5161 4122                                           l5153 410C  
                                         l5145 4102                                           l7001 3ADA  
                                         l4179 3CC6                                           l4195 3FC4  
                                         l4099 4BEC                                           l4259 4BDC  
                                         l4267 4B56                                           l4275 4362  
                                         l5171 414A                                           l5163 412A  
                                         l5155 4110                                           l5147 4106  
                                         l1699 4898                                           l7011 3B48  
                                         l7003 3AEE                                           l4197 3FDC  
                                         l4285 4372                                           l5181 416E  
                                         l5173 4152                                           l5165 4132  
                                         l5157 4118                                           l5149 4108  
                                         l7021 3878                                           l6301 458C  
                                         l7005 3B02                                           l7101 1092  
                                         ?_pad 0017                                           l4199 3FE0  
                                         l4279 436A                                           l5183 4172  
                                         l5175 415A                                           l5167 413A  
                                         l5159 411A                                           l5191 4BB8  
                                         l7023 3884                                           l7015 37F2  
                                         l6303 4B74                                           l6311 4084  
                                         l7007 3B06                                           l7111 10E2  
                                         l7103 109A                                           l4297 42E6  
                                         l5177 4162                                           l5169 4142  
                                         l5185 4176                                           l6401 2442  
                                         l6321 22E0                                           l5601 4B9A  
                                         l7033 38E6                                           l7017 3812  
                                         l6313 40A2                                           l6305 4056  
                                         l7009 3B34                                           l7041 4420  
                                         l7201 14B4                                           l7121 111A  
                                         l7113 10F0                                           l7105 10BE  
                                         l4563 4C44                                           l5195 497A  
                                         l4299 42EA                                           l4571 470C  
                                         l4555 4A70                                           l5179 416A  
                                         l6411 2494                                           l6403 245E  
                                         l6331 2320                                           l6323 22EE  
                                         l5603 4BAE                                           l7019 3850  
                                         l7027 3890                                           l7051 2F58  
                                         l6315 40D8                                           l6307 4068  
                                         l7211 151A                                           l7203 14D0  
                                         l7131 1180                                           l7123 111E  
                                         l7115 1102                                           l7107 10C8  
                                         l4565 4C48                                           l5197 497E  
                                         l4581 472E                                           l4573 470E  
                                         l4557 4A7E                                           l5189 4AB0  
                                         l6501 2732                                           l6421 24E0  
                                         l6413 24A2                                           l6405 246E  
                                         l6341 2352                                           l6333 2322  
                                         l6325 22F0                                           l7029 38A2  
                                         l7053 2F78                                           l6309 407A  
                                         l7037 4480                                           l7045 4456  
                                         l7301 195E                                           l7221 1562  
                                         l7213 152C                                           l7205 1506  
                                         l7133 1192                                           l7117 110E  
                                         l7125 1124                                           l7109 10D0  
                                         l5199 498E                                           l4583 4732  
                                         l4575 4712                                           l4567 46F8  
                                         l4559 4A8E                                           l6511 276C  
                                         l6503 2752                                           l6431 2520  
                                         l6415 24A4                                           l6407 2484  
                                         l6351 237A                                           l6343 2354  
                                         l6327 2300                                           l6335 232A  
                                         l6319 22D4                                           l7071 3120  
                                         l7063 3060                                           l7055 2FCE  
                                         l7039 4490                                           l7047 4468  
                                         l7311 1A06                                           l7303 1970  
                                         l7231 15AA                                           l7223 1570  
                                         l7215 153E                                           l7207 150E  
                                         l7151 1266                                           l7135 11AE  
                                         l7127 114A                                           l7143 11F8  
                                         l7119 1116                                           l4577 4722  
                                         l4585 4736                                           l4569 46FC  
                                         l6513 2772                                           l6505 2756  
                                         l6441 254A                                           l6433 252C  
                                         l6425 24F4                                           l6417 24AE  
                                         l6409 2490                                           l6361 23B4  
                                         l6353 238A                                           l6345 235A  
                                         l6337 233A                                           l6329 2310  
                                         l6601 2CE0                                           l5801 42B8  
                                         l7401 3358                                           l7073 3148  
                                         l7065 309C                                           l7057 2FE2  
                                         l6521 466E                                           l7321 1A5E  
                                         l7313 1A0E                                           l7305 1974  
                                         l7241 16BE                                           l7233 15BA  
                                         l7225 1588                                           l7217 154C  
                                         l7209 1512                                           l7153 1282  
                                         l7145 121E                                           l7161 12CC  
                                         l7137 11C6                                           l4579 472A  
                                         l5811 46B6                                           l6515 2780  
                                         l6507 2764                                           l6451 25BC  
                                         l6435 2530                                           l6427 2504  
                                         l6419 24D0                                           l6443 2550  
                                         l6371 23E0                                           l6363 23C6  
                                         l6355 239A                                           l6347 2368  
                                         l6339 2340                                           l6611 2D1E  
                                         l6603 2CE0                                           l5803 42E2  
                                         l7091 45DA                                           l7083 4590  
                                         l7411 33B0                                           l7403 3390  
                                         l7075 3158                                           l7059 2FF0  
                                         l7067 30D0                                           l6291 4564  
                                         l6523 467A                                           l6531 4870  
                                         l7331 1AA2                                           l7323 1A6C  
                                         l7307 197A                                           l7315 1A12  
                                         l7251 175E                                           l7235 15CE  
                                         l7243 16C4                                           l7227 159A  
                                         l7219 1550                                           l7171 1356  
                                         l7163 12E6                                           l7155 129A  
                                         l7139 11D0                                           l5581 451E  
                                         l5573 44E0                                           l5813 46CC  
                                         l6517 2782                                           l6509 276A  
                                         l6461 2616                                           l6445 2576  
                                         l6453 25CC                                           l6437 253E  
                                         l6429 2512                                           l6381 23F4  
                                         l6373 23E4                                           l6365 23D4  
                                         l6357 239C                                           l6349 236A  
                                         l6621 2D6A                                           l6613 2D2E  
                                         l6701 27E6                                           l5821 318A  
                                         l7085 4594                                           l7421 342E  
                                         l7413 33B8                                           l7405 3394  
                                         l7069 310C                                           l6293 4574  
                                         l6285 453A                                           l6525 468C  
                                         l6533 4874                                           l7341 1AD8  
                                         l7333 1AAA                                           l7325 1A7C  
                                         l7317 1A30                                           l7309 19D2  
                                         l7261 17F4                                           l7253 1790  
                                         l7245 16E2                                           l7237 1632  
                                         l7229 15A2                                           l7181 142E  
                                         l7173 13B0                                           l7157 12A4  
                                         l7149 1254                                           l7501 1DD8  
                                         l3991 41F8                                           l5591 4654  
                                         l5583 4522                                           l5575 44E0  
                                         l5815 46DE                                           l6471 2646  
                                         l6463 2620                                           l6455 25F2  
                                         l6447 25AA                                           l6439 2540  
                                         l6391 2408                                           l6383 23F8  
                                         l6375 23E8                                           l6367 23D8  
                                         l6359 23A4                                           l6631 2DB4  
                                         l6623 2D78                                           l6615 2D3E  
                                         l6607 2CF4                                           l6551 2BCA  
                                         l6711 2812                                           l6703 27F6  
                                         l5831 3202                                           l5823 31D0  
                                         l6543 4A26                                           l7079 482C  
                                         l7087 45A8                                           l7415 33C0  
                                         l6295 4576                                           l6287 453A  
                                         l6527 4690                                           l6535 488C  
                                         l7351 1B34                                           l7343 1AE0  
                                         l7335 1ABA                                           l7327 1A80  
                                         l7319 1A4C                                           l7271 18AC  
                                         l7263 1808                                           l7255 17A0  
                                         l7247 1716                                           l7239 168A  
                                         l7191 1478                                           l7183 1432  
                                         l7175 13E4                                           l7167 131C  
                                         l7095 106A                                           l7511 1E5E  
                                         l7503 1DE6                                           l3993 420A  
                                         l5593 4658                                           l5585 462A  
                                         l5577 44F6                                           l5809 46B2  
                                         l6481 266E                                           l6473 264A  
                                         l6465 262E                                           l6457 2602  
                                         l6449 25AC                                           l6393 240C  
                                         l6385 23FC                                           l6377 23EC  
                                         l6369 23DC                                           l6641 2DFA  
                                         l6633 2DC6                                           l6625 2D84  
                                         l6617 2D46                                           l6609 2D0E  
                                         l6561 2C0A                                           l6553 2BD8  
                                         l6801 2B66                                           l6721 2868  
                                         l6713 2822                                           l6705 27FC  
                                         l5841 328A                                           l5833 320E  
                                         l5825 31E6                                           l5817 316C  
                                         l5761 4AF6                                           l6545 4A42  
                                         l7089 45D6                                           l7425 346E  
                                         l7417 33F6                                           l7409 339A  
                                         l6297 4586                                           l6289 455A  
                                         l6529 4864                                           l7361 1B74  
                                         l7353 1B3C                                           l7345 1AEC  
                                         l7337 1AC2                                           l7329 1A90  
                                         l7281 18F8                                           l7273 18BE  
                                         l7265 1814                                           l7257 17B0  
                                         l7249 1748                                           l7185 1444  
                                         l7193 1490                                           l7177 13EC  
                                         l7169 1350                                           l7097 1074  
                                         l7441 3926                                           l7521 1ED2  
                                         l7505 1E06                                           l7513 1E70  
                                         l7601 43BC                                           l3995 423E  
                                         l5587 462A                                           l5579 450A  
                                         l6491 26C8                                           l6483 267C  
                                         l6475 265A                                           l6467 2630  
                                         l6395 2410                                           l6387 2400  
                                         l6379 23F0                                           l6651 2E5A  
                                         l6635 2DDC                                           l6643 2E0C  
                                         l6627 2DA2                                           l6619 2D56  
                                         l6571 2C30                                           l6563 2C0C  
                                         l6555 2BDA                                           l6803 2B82  
                                         l6811 2BA8                                           l6731 28A2  
                                         l6723 2878                                           l6715 2832  
                                         l6707 2802                                           l5851 32C8  
                                         l5843 3296                                           l5835 3240  
                                         l5819 317C                                           l7611 39D0  
                                         l5595 4B90                                           l5763 4B06  
                                         l5771 48B4                                           l7427 3480  
                                         l6299 458A                                           l6539 47BC  
                                         l7371 1BB0                                           l7363 1B86  
                                         l7347 1AF2                                           l7355 1B42  
                                         l7339 1AD0                                           l7291 192C  
                                         l7283 1906                                           l7275 18D0  
                                         l7267 1838                                           l7259 17E4  
                                         l7187 1456                                           l7179 141E  
                                         l7099 1084                                           l7451 39A6  
                                         l7443 3934                                           l7435 38F0  
                                         l7531 1F84                                           l7523 1F0C  
                                         l7515 1E96                                           l7507 1E14  
                                         l7603 43C4                                           l3997 4AC8  
                                         l5589 4640                                           l6493 26D6  
                                         l6485 2692                                           l6469 263E  
                                         l6477 265C                                           l6389 2404  
                                         l6397 2414                                           l6661 2EC8  
                                         l6645 2E1A                                           l6637 2DE2  
                                         l6629 2DA4                                           l6581 2C70  
                                         l6573 2C3E                                           l6557 2BEA  
                                         l6565 2C14                                           l6549 2BBE  
                                         l6813 2BAC                                           l6805 2B92  
                                         l6741 28F4                                           l6733 28B8  
                                         l6717 2842                                           l6709 2810  
                                         l5853 32EC                                           l5845 32A4  
                                         l5837 3242                                           l5829 31FA  
                                         l7621 34BC                                           l7613 3A0E  
                                         l5597 4B86                                           l5781 4270  
                                         l5765 4C20                                           l5773 48BA  
                                         l7429 3492                                           l7381 1C08  
                                         l7373 1BB6                                           l7365 1B92  
                                         l7357 1B54                                           l7349 1B18  
                                         l7293 193C                                           l7285 1916  
                                         l7277 18DE                                           l7269 189C  
                                         l7189 145E                                           l7445 394C  
                                         l7437 391A                                           l7541 200E  
                                         l7525 1F2C                                           l7517 1E9E  
                                         l7533 1F96                                           l7461 1CAE  
                                         l7605 43D2                                           l3999 4A4C  
                                         l6495 2710                                           l6479 266A  
                                         l6399 2418                                           l6671 2F32  
                                         l6655 2E84                                           l6663 2ECC  
                                         l6647 2E1E                                           l6639 2DEC  
                                         l6591 2CB0                                           l6583 2C72  
                                         l6575 2C40                                           l6567 2C24  
                                         l6559 2BFA                                           l6807 2BA0  
                                         l6751 293A                                           l6743 2902  
                                         l6735 28C4                                           l6727 288C  
                                         l6719 2848                                           l5855 32FC  
                                         l5847 32C2                                           l5839 324E  
                                         l7631 35C6                                           l7623 34FA  
                                         l7615 3A8A                                           l5599 4BA4  
                                         l5791 4294                                           l5783 4272  
                                         l5775 48BC                                           l5767 489A  
                                         l6831 3B80                                           l6823 3B62  
                                         l6911 3F82                                           l6903 3F06  
                                         l7383 1C10                                           l7367 1B9A  
                                         l7359 1B6E                                           l7295 1940  
                                         l7287 191A                                           l7279 18E6  
                                         l7199 14A2                                           l7447 396A  
                                         l7551 20AA                                           l7543 2042  
                                         l7535 1FBA                                           l7527 1F3A  
                                         l7519 1EAC                                           l7463 1CB2  
                                         l7455 1C68                                           l7607 43F8  
                                         l6489 26BC                                           l6497 2712  
                                         l6673 2F36                                           l6665 2EE6  
                                         l6657 2E90                                           l6649 2E2C  
                                         l6593 2CB8                                           l6577 2C50  
                                         l6585 2C7A                                           l6569 2C2A  
                                         l6921 371C                                           l6809 2BA2  
                                         l6761 29A8                                           l6753 2954  
                                         l6745 290E                                           l6737 28DC  
                                         l6729 2898                                           l5857 330A  
                                         l5849 32C4                                           l7633 35D6  
                                         l7625 3576                                           l7609 39CC  
                                         l5793 4298                                           l5785 427E  
                                         l5777 48C6                                           l5769 48B2  
                                         l7393 331E                                           l6841 3BB4  
                                         l6833 3B8E                                           l6825 3B66  
                                         l6913 3FA6                                           l6905 3F34  
                                         l6817 45E2                                           l7385 1C20  
                                         l7377 1BEA                                           l7369 1BAA  
                                         l7297 1946                                           l7289 1920  
                                         l7449 397C                                           l7561 2176  
                                         l7545 2054                                           l7537 1FCA  
                                         l7481 1CE4                                           l7473 1CD8  
                                         l7465 1CBE                                           l7457 1C8E  
                                         l6499 2722                                           l6675 2F44  
                                         l6667 2EFC                                           l6659 2E9E  
                                         l6595 2CBC                                           l6587 2C8A  
                                         l6579 2C60                                           l6931 378A  
                                         l6923 372C                                           l6771 2A3E  
                                         l6763 29D2                                           l6755 2964  
                                         l6747 291E                                           l6739 28E8  
                                         l6691 27AE                                           l5859 330C  
                                         l7627 35A8                                           l7619 34B8  
                                         l5795 429C                                           l5787 428C  
                                         l5779 4B7C                                           l5891 4AEC  
                                         l7395 3332                                           l6851 3BEE  
                                         l6843 3BBC                                           l6835 3B96  
                                         l6827 3B74                                           l6915 3FAC  
                                         l6907 3F44                                           l6819 45F2  
                                         l7387 1C26                                           l7379 1BFC  
                                         l7299 194C                                           l7563 2188  
                                         l7571 2228                                           l7547 206C  
                                         l7555 20D6                                           l7539 1FFE  
                                         l7467 1CC0                                           l7491 1D4C  
                                         l7459 1C9C                                           l7651 3E7E  
                                         l7643 3E5A                                           l6677 2F4A  
                                         l6669 2F16                                           l6589 2CA0  
                                         l6933 3798                                           l6925 375A  
                                         l6781 2A7E                                           l6773 2A4C  
                                         l6765 2A08                                           l6757 2980  
                                         l6749 292A                                           l6693 27B0  
                                         l7629 35B8                                           l5797 42A0  
                                         l5789 4290                                           l5893 4AF0  
                                         l5885 4AE0                                           l7397 3336  
                                         l6861 3C14                                           l6853 3BF6  
                                         l6845 3BC4                                           l6837 3B9A  
                                         l6829 3B7C                                           l6909 3F72  
                                         l6941 47F4                                           l7389 1C42  
                                         l7573 224E                                           l7581 227E  
                                         l7565 21BC                                           l7557 2104  
                                         l7549 207A                                           l7493 1D6C  
                                         l7821 1D1E                                           l7485 1CEA  
                                         l7477 1CDE                                           l7469 1CD2  
                                         l7637 49FC                                           l7653 3E92  
                                         l7645 3E5E                                           l7831 41CE  
                                         l6679 2F4C                                           l6599 2CD0  
                                         l6935 37E8                                           l6927 376A  
                                         l6919 36EE                                           l6791 2AF0  
                                         l6783 2AAC                                           l6775 2A5E  
                                         l6767 2A16                                           l6759 298C  
                                         l6695 27C0                                           l6687 2794  
                                         l5799 42AC                                           l5887 4AE4  
                                         l7823 33E0                                           l7399 333A  
                                         l6863 3C1C                                           l6855 3BF8  
                                         l6847 3BD2                                           l6839 3BA2  
                                         l6871 3DBC                                           l6943 480A  
                                         l6951 35FE                                           l7583 228C  
                                         l7575 225C                                           l7567 21FC  
                                         l7495 1D6E                                           l7639 4A06  
                                         l7655 3EA6                                           l7647 3E7A  
                                         l7825 43A4                                           l6937 37EE  
                                         l6929 3778                                           l6793 2B1A  
                                         l6777 2A6C                                           l6769 2A34  
                                         l6697 27D0                                           l6689 27A0  
                                         l5889 4AE8                                           l6857 3BFE  
                                         l6849 3BD8                                           l6881 3DF0  
                                         l6873 3DC4                                           l6945 481A  
                                         l6961 364E                                           l7577 2270  
                                         l7497 1D94                                           l7489 1CF6  
                                         l7657 3EC4                                           l7649 3E7C  
                                         l7827 402E                                           l6787 2AD6  
                                         l6795 2B1E                                           l6779 2A70  
                                         l6699 27E0                                           l6859 3C04  
                                         l6891 3E2C                                           l6883 3DF8  
                                         l6875 3DC8                                           l6867 3DAA  
                                         l6971 3678                                           l6963 3652  
                                         l6955 3612                                           l7499 1DCA  
                                         l7587 229A                                           l7659 3EE2  
                                         l7829 3C8A                                           l6797 2B38  
                                         l6789 2AE2                                           l6893 3E32  
                                         l6885 3E00                                           l6877 3DD6  
                                         l6869 3DAE                                           l6981 36A0  
                                         l6973 3682                                           l6965 3660  
                                         l6957 363C                                           l6949 35E8  
                                         l7589 22C0                                           l6799 2B4C  
                                         l6887 3E0E                                           l6895 3E38  
                                         l6879 3DDE                                           l6983 36AC  
                                         l6975 368C                                           l6959 363E  
                                         l6897 3E48                                           l6889 3E24  
                                         l6985 36BC                                           l6993 3A9C  
                                         l6899 3E50                                           l6987 36CC  
                                         l6995 3AAC                                           l6989 36DC  
                                         l6997 3AC0                                           l6999 3ACE  
                                         STR_1 103E                                           STR_2 1021  
                                         STR_3 1055                                           STR_4 105D  
                                         STR_7 1059                                           STR_8 1061  
                                         _LATA 000F89                                           u3030 420A  
                                         u3110 3CE0                                           _LATB 000F8A  
                                         u3031 4206                                           u3111 3CDC  
                                         _LATC 000F8B                                           u3040 4A5C  
                                         u3120 3FDC                                           _LATD 000F8C  
                                         u3041 4A58                                           u3121 3FD8  
                                         _LATE 000F8D                                           u3050 4B1A  
                                         u3051 4B14                                           u3108 3C64  
                                         u3109 3C78                                           u3056 4B1C  
                                         u3160 4B2C                                           u3240 4AAE  
                                         u3161 4B28                                           u3241 4AAA  
                                         u3090 3C3A                                           u3138 400A  
                                         u3170 42FA                                           u3091 3C36  
                                         u3139 401C                                           u3171 42F6  
                                         u3148 41AA                                           u3180 430E  
                                         u3149 41BC                                           u3181 430A  
                                         u3158 4380                                           u3159 4392  
                                         u3700 4722                                           u6100 40A2  
                                         u3701 471E                                           u6101 409E  
                                         u3198 433E                                           u6110 40D8  
                                         u3199 4350                                           u6111 40D4  
                                         u5400 466C                                           u6200 23D4  
                                         u6120 22EE                                           u7000 3BD2  
                                         u5401 4668                                           u6201 23D0  
                                         u6121 22EA                                           u7001 3BCE  
                                         u6210 2442                                           u6130 2300  
                                         u7010 3BEE                                           u6050 454C  
                                         u6211 243E                                           u6131 22FC  
                                         u7011 3BEA                                           u6051 4548  
                                         u6300 2520                                           u6220 245A  
                                         u6140 2310                                           u7020 3C14  
                                         u7100 3F72                                           u6060 455A  
                                         u6301 251C                                           u6221 2454  
                                         u6141 230C                                           u7021 3C10  
                                         u7101 3F6E                                           u6061 4556  
                                         u4710 4102                                           u6310 253E  
                                         u6230 245C                                           u6150 2352  
                                         u7030 3DBC                                           u7110 3FA6  
                                         u6070 4586                                           u4711 40FE  
                                         u6311 253A                                           u6151 234E  
                                         u7031 3DB8                                           u7111 3FA2  
                                         u6071 4582                                           u4720 498E  
                                         u3680 4A7E                                           u6400 267C  
                                         u6320 2576                                           u6240 2484  
                                         u6160 2368                                           u7120 371C  
                                         u7040 3DD6                                           u7200 3660  
                                         u6080 4068                                           u8000 1AD0  
                                         u4721 498A                                           u3681 4A7A  
                                         u6401 2678                                           u6321 2572  
                                         u6241 2480                                           u6161 2364  
                                         u7121 3718                                           u7041 3DD2  
                                         u7201 365C                                           u6081 4064  
                                         u8001 1ACC                                           u3690 470C  
                                         u5370 44F6                                           u6410 2692  
                                         u6330 25BC                                           u6250 24A2  
                                         u6170 237A                                           u7130 375A  
                                         u7050 3DF0                                           u7210 3674  
                                         u6090 407A                                           u8010 1B54  
                                         u3691 4708                                           u5371 44F2  
                                         u6411 268E                                           u6331 25B8  
                                         u6251 249E                                           u6171 2376  
                                         u7131 3756                                           u7051 3DEC  
                                         u7211 3670                                           u6091 4076  
                                         u8011 1B50                                           u5380 4536  
                                         u6500 2780                                           u6420 26A8  
                                         u6340 25F2                                           u6260 24C2  
                                         u6180 238A                                           u7140 3778  
                                         u5700 32C2                                           u8100 3468  
                                         u7060 3E0E                                           u7220 369C  
                                         u7300 3850                                           u8020 1B6E  
                                         u5381 4532                                           u6501 277C  
                                         u6421 26A4                                           u6341 25EE  
                                         u6261 24BE                                           u6181 2386  
                                         u7141 3774                                           u5701 32BE  
                                         u8101 3462                                           u7061 3E0A  
                                         u7221 3698                                           u7301 384C  
                                         u8021 1B6A                                           u5390 4640  
                                         u6430 26BC                                           u6350 2602  
                                         u6270 24D0                                           u6190 23C6  
                                         u7150 3798                                           u5710 32FC  
                                         u5630 317C                                           u8110 346A  
                                         u7070 3E24                                           u7230 36BC  
                                         u7310 3878                                           u6510 46B0  
                                         u8030 1B86                                           u5391 463C  
                                         u6431 26B8                                           u6351 25FE  
                                         u6271 24CC                                           u6191 23C2  
                                         u7151 3794                                           u5711 32F8  
                                         u5631 3178                                           u7071 3E20  
                                         u7231 36B8                                           u7311 3874  
                                         u6511 46AC                                           u8031 1B82  
                                         u6440 26D6                                           u6360 262E  
                                         u6280 24E0                                           u6600 2C60  
                                         u7160 37E8                                           u5720 330A  
                                         u5640 318A                                           u8120 3480  
                                         u7080 3E48                                           u7240 36CC  
                                         u7320 38A2                                           u6520 488C  
                                         u7400 4468                                           u8040 1BE4  
                                         u8200 1D5E                                           u6441 26D2  
                                         u6361 262A                                           u6281 24DC  
                                         u6601 2C5C                                           u7161 37E4  
                                         u5721 3306                                           u5641 3186  
                                         u8121 347C                                           u7081 3E44  
                                         u7241 36C8                                           u7321 389E  
                                         u6521 4888                                           u7401 4464  
                                         u8041 1BDE                                           u8201 1D5A  
                                         u6450 2710                                           u6370 263E  
                                         u6290 2512                                           u6610 2CA0  
                                         u5650 31E6                                           u8130 3492  
                                         u7090 3F34                                           u7170 480A  
                                         u7410 2FA0                                           u7250 3AAC  
                                         u6530 47EC                                           u8050 1BE6  
                                         u8210 1D6C                                           u6451 270C  
                                         u6371 263A                                           u6291 250E  
                                         u6611 2C9C                                           u5651 31E2  
                                         u8131 348E                                           u7091 3F30  
                                         u7171 4806                                           u7251 3AA8  
                                         u6531 47E6                                           u8211 1D68  
                                         u6460 2722                                           u6380 265A  
                                         u6700 2E2C                                           u6620 2CE0  
                                         u5660 323C                                           u7180 35FE  
                                         u7340 38DC                                           u7500 3148  
                                         u7420 2FCE                                           u7260 3ACE  
                                         u6540 47EE                                           u8060 1BFC  
                                         u8140 391A                                           u8300 1F80  
                                         u8220 1D94                                           u6461 271E  
                                         u6381 2656                                           u6701 2E28  
                                         u6621 2CDC                                           u5661 3238  
                                         u7181 35FA                                           u7341 38D6  
                                         u7501 3144                                           u7421 2FCA  
                                         u7261 3ACA                                           u8061 1BF8  
                                         u8141 3916                                           u8221 1D90  
                                         u6470 2732                                           u6390 266A  
                                         u6710 2E5A                                           u6630 2D56  
                                         u6550 2BD8                                           u5670 3286  
                                         u7510 485C                                           u8070 3358  
                                         u7190 3632                                           u7350 38DE  
                                         u7430 2FF0                                           u7270 3B24  
                                         u8150 394C                                           u8310 1F96  
                                         u8230 1DD8                                           u6471 272E  
                                         u6391 2666                                           u6711 2E56  
                                         u6631 2D52                                           u6551 2BD4  
                                         u5671 3282                                           u7511 4856  
                                         u8071 3354                                           u7335 38B4  
                                         u7431 2FEC                                           u7415 2F96  
                                         u7271 3B20                                           u8151 3948  
                                         u8311 1F92                                           u8231 1DD4  
                                         u6480 2752                                           u6720 2E70  
                                         u6640 2D78                                           u6560 2BEA  
                                         u6800 27D0                                           u5680 32A4  
                                         u7520 485E                                           u8080 3390  
                                         u7280 3B34                                           u7360 44CA  
                                         u7600 117A                                           u8160 396A  
                                         u8320 1FCA                                           u8240 1E58  
                                         u8400 4416                                           u6481 274E  
                                         u6721 2E6C                                           u6641 2D74  
                                         u6561 2BE6                                           u6801 27CC  
                                         u5681 32A0                                           u8081 338C  
                                         u7281 3B30                                           u7601 1174  
                                         u8161 3966                                           u8321 1FC6  
                                         u8241 1E52                                           u8401 4412  
                                         u6490 2764                                           u6730 2E84  
                                         u6650 2DA2                                           u6570 2BFA  
                                         u6810 2810                                           u5690 32B4  
                                         u8410 35A8                                           u7530 45A8  
                                         u8090 33AC                                           u7290 3832  
                                         u7450 305C                                           u7370 44DC  
                                         u7610 117C                                           u8170 397C  
                                         u8330 200E                                           u8250 1E5A  
                                         u6491 2760                                           u6731 2E80  
                                         u6651 2D9E                                           u6571 2BF6  
                                         u6811 280C                                           u5691 32B0  
                                         u8411 35A4                                           u7531 45A4  
                                         u8091 33A8                                           u7195 3628  
                                         u7451 3058                                           u7371 44D8  
                                         u8171 3978                                           u8331 200A  
                                         u6740 2E9E                                           u6660 2DC6  
                                         u6580 2C3E                                           u6900 2AAC  
                                         u6820 2822                                           u8420 35C6  
                                         u7540 45D6                                           u7460 3080  
                                         u7380 4450                                           u7700 1444  
                                         u7620 1192                                           u8180 39A6  
                                         u8340 2054                                           u8260 1E70  
                                         u6741 2E9A                                           u6661 2DC2  
                                         u6581 2C3A                                           u6901 2AA8  
                                         u6821 281E                                           u8421 35C2  
                                         u7541 45D2                                           u7445 3004  
                                         u7381 444A                                           u7701 1440  
                                         u7621 118E                                           u8181 39A2  
                                         u8341 2050                                           u8261 1E6C  
                                         u6750 2EE6                                           u6670 2DDC  
                                         u6590 2C50                                           u6910 2AC2  
                                         u6830 2832                                           u7470 309C  
                                         u7446 300E                                           u7390 4452  
                                         u7710 1456                                           u7630 121E  
                                         u7550 1092                                           u8350 2104  
                                         u8270 1E96                                           u8190 1C8E  
                                         u6751 2EE2                                           u6671 2DD8  
                                         u6591 2C4C                                           u6911 2ABE  
                                         u6831 282E                                           u7295 3828  
                                         u7471 3098                                           u7447 301E  
                                         u7367 44C0                                           u7711 1452  
                                         u7631 121A                                           u7551 108E  
                                         u8351 2100                                           u8271 1E92  
                                         u8191 1C8A                                           u6760 2F16  
                                         u6680 2DFA                                           u6920 2AD6  
                                         u6840 2868                                           u7480 30F0  
                                         u7800 1562                                           u7720 1478  
                                         u7640 124E                                           u7560 10E2  
                                         u8360 2170                                           u8280 1ED2  
                                         u6761 2F12                                           u6681 2DF6  
                                         u6921 2AD2                                           u6841 2864  
                                         u7465 3076                                           u7801 155E  
                                         u7721 1474                                           u7641 1248  
                                         u7561 10DE                                           u8361 216A  
                                         u8281 1ECE                                           u6770 2F44  
                                         u6690 2E1A                                           u6930 2AF0  
                                         u6850 2878                                           u7490 310C  
                                         u7810 1570                                           u7730 149E  
                                         u7650 1250                                           u7570 10F0  
                                         u8370 2172                                           u8290 1F7E  
                                         u6771 2F40                                           u6691 2E16  
                                         u6931 2AEC                                           u6851 2874  
                                         u7491 3108                                           u7811 156C  
                                         u7731 149A                                           u7571 10EC  
                                         u8291 1F78                                           u6940 2B38  
                                         u6860 29F2                                           u6780 27AE  
                                         u7900 18D0                                           u7820 159A  
                                         u7740 14B4                                           u7660 1266  
                                         u7580 1102                                           u8380 2188  
                                         u6941 2B34                                           u6781 27AA  
                                         u7485 30E6                                           u7901 18CC  
                                         u7821 1596                                           u7741 14B0  
                                         u7661 1262                                           u7581 10FE  
                                         u8381 2184                                           u8437 3E6A  
                                         u6950 2B66                                           u6870 2A4C  
                                         u6790 27C0                                           u7910 18DE  
                                         u7830 16E2                                           u7750 14D0  
                                         u7670 1318                                           u7590 114A  
                                         u8390 224E                                           u6951 2B62  
                                         u6871 2A48                                           u6791 27BC  
                                         u7911 18DA                                           u7831 16DE  
                                         u7751 14CC                                           u7671 1314  
                                         u7591 1146                                           u8391 224A  
                                         u8447 3EEE                                           u6960 2BA0  
                                         u6880 2A6C                                           u7920 18F8  
                                         u7840 1748                                           u7760 1506  
                                         u7680 13AC                                           u8457 46D2  
                                         u6961 2B9C                                           u6881 2A68  
                                         u6865 29E8                                           u7921 18F4  
                                         u7841 1744                                           u7761 1502  
                                         u7681 13A8                                           u6890 2A7E  
                                         u6970 3B74                                           u7930 1906  
                                         u7850 1790                                           u7770 152C  
                                         u7690 141E                                           u6891 2A7A  
                                         u6971 3B70                                           u7931 1902  
                                         u7851 178C                                           u7771 1528  
                                         u7691 141A                                           u6980 3B8E  
                                         u7940 195E                                           u7860 17A0  
                                         u7780 153E                                           u6981 3B8A  
                                         u7941 195A                                           u7861 179C  
                                         u7781 153A                                           u6990 3BB4  
                                         u7950 1A30                                           u7870 1808  
                                         u7790 154C                                           u6991 3BB0  
                                         u7951 1A2C                                           u7871 1804  
                                         u7791 1548                                           u7960 1A4C  
                                         u7880 18AC                                           u7961 1A48  
                                         u7881 18A8                                           u7970 1A5E  
                                         u7890 18BE                                           u7971 1A5A  
                                         u7891 18BA                                           u7980 1A6C  
                                         u7981 1A68                                           u7990 1AA2  
                                         u7991 1A9E                                           _WPUB 000F7C  
                      ??_wr2RegCompleteHandler 0010                                           _dbuf 0124  
                                         _atoi 331E                                           _main 3E5A  
                     ?_I2C_CallbackReturnReset 000E                                           _prec 00F4  
                                         _nout 00F0                                           pad@i 001E  
                                         pad@p 001B                                           fsr0h 000FEA  
                                         fsr1h 000FE2                                           indf0 000FEF  
                                         fsr2h 000FDA                                           fsr0l 000FE9  
                                         indf2 000FDF                                           fsr1l 000FE1  
                                         pad@w 0020                                           fsr2l 000FD9  
                             __end_of_I2C_Open 417A                                           btemp 005A  
                                  ?_SHT40_Read 0001                                  ___fpclassifyf 37F2  
                                         prodh 000FF4                                           prodl 000FF3  
                                         start 00B0                                ___fldiv@new_exp 002F  
                 fp__I2C_DO_SEND_RESTART_WRITE 0000                                   _tolower$2252 0011  
                                 ___param_bank 000000               __size_of_rdBlkRegCompleteHandler 0040  
                                        ??_pad 001D                               ?_I2C_MasterClose 0001  
                              _I2C_WriteNBytes 44DE                                  ?_EUSART_Write 0001  
          __size_of_I2C_SetAddressNackCallback 0018                 __size_of_OSCILLATOR_Initialize 000A  
                             ?_I2C_MasterStart 0001                                  _I2C_DO_RX_ACK 4BD8  
                             ?_I2C_MasterWrite 0001                  __end_of_OSCILLATOR_Initialize 4B86  
                                  _writeBuffer 00ED                                  ___fltol@sign1 000D  
                                        ?_atoi 000C                                __end_of___fladd 2794  
                                        ?_main 0001                                __end_of___fldiv 2F58  
                              __end_of___awdiv 3C26                                __end_of___flneg 482C  
                                        STR_11 1065                                          STR_13 1065  
                              __end_of___awmod 3E5A                                __end_of___flmul 2BBE  
                              __end_of___flsub 4628                                __end_of___fltol 36EE  
                                        _ANSEL 000F7E                                ___awdiv@divisor 0007  
                                        i2l610 477A                                          i2l621 49D0  
                                        i2l630 4C1E                                          i2l607 4778  
                                        i2l624 4C50                                          i2l617 3DA8  
                                        i2l627 4C18                                          i2l671 009C  
                                        i2l666 0062                                          i2l667 009C  
                              ___awdiv@counter 0009                                          _RCREG 000FAE  
                 __size_of_I2C_DO_RX_NACK_STOP 0008                                          _RCSTA 000FAB  
                                 vfpfcnvrt@fmt 009F                                          _SPBRG 000FAF  
                            ??_I2C_DO_TX_EMPTY 0010                                          _TRISA 000F92  
                                        _TRISB 000F93                                          _TRISC 000F94  
                                        _TRISD 000F95                                          _TRISE 000F96  
                                        _TXREG 000FAD                                          _TXSTA 000FAC  
                            __end_of_I2C_DO_RX 4056                              __end_of_I2C_DO_TX 3CEA  
                                        _flags 00F6                                          _fputc 4056  
                            __end_of_I2C_Close 49A6                                          _fputs 466E  
                              __end_of_isdigit 4864                         __size_of_I2C_MasterFsm 0070  
               I2C_MasterOperation@returnValue 0015                                          atoi@n 0019  
                                        pad@fp 0017                                          atoi@s 000C  
                                        _width 00F2                                          _putch 4B72  
                      _I2C_MasterEnableRestart 4C3C                                __end_of_isspace 45E2  
                              __end_of_isupper 47F4                                          pclath 000FFA  
                                        tablat 000FF5                               ?_I2C_SetCallback 0005  
                 I2C_SetAddressNackCallback@cb 000A                                          ttemp5 005B  
                                        ttemp6 005E                                          ttemp7 0062  
                                        status 000FD8                                          wtemp8 005B  
                               ?___fpclassifyf 0005                                __end_of_tolower 4480  
                            ?_I2C_DO_SEND_STOP 0001                         __size_of_I2C_SetBuffer 0024  
                              __end_of_strncmp 39CC                             ??_I2C_DO_SEND_STOP 0005  
                  __end_of_SHT40_humy_GetValue 35E8                                  _fsmStateTable 1001  
                     fp__rd1RegCompleteHandler 0000                                __initialization 49D2  
                                 __end_of_atoi 34B8                                   __end_of_main 3F06  
                     fp__wr1RegCompleteHandler 0000              __size_of_I2C_DO_SEND_RESTART_READ 0008  
                    ?_I2C_DO_SEND_RESTART_READ 0001                                 ??_EUSART_Write 0005  
                               ?_I2C_DO_RX_ACK 0001                    ?_INTERRUPT_InterruptManager 0001  
               ??_EUSART_SetRxInterruptHandler 0007                                         ??_atoi 000E  
                                       ??_main 0188                              ?_I2C_MasterIsNack 0001  
                                __activetblptr 000003                              ?_I2C_MasterSetIrq 0001  
                          __size_of_SHT40_Read 0044                             ??_I2C_MasterIsNack 0005  
                           ??_I2C_MasterSetIrq 0005           fp__EUSART_DefaultFramingErrorHandler 0000  
    __end_of_EUSART_DefaultFramingErrorHandler 4C52     __size_of_EUSART_DefaultFramingErrorHandler 0002  
          ??_EUSART_DefaultFramingErrorHandler 0001             ?_EUSART_DefaultFramingErrorHandler 0001  
            _EUSART_DefaultFramingErrorHandler 4C50                     _EUSART_OverrunErrorHandler 0180  
              __end_of_I2C_CallbackReturnReset 4C34                                         ?_fputc 0007  
                                       ?_fputs 0010                __size_of_I2C_CallbackReturnStop 0004  
                             ___awdiv@dividend 0005                  I2C_SetDataCompleteCallback@cb 000A  
                                       ?_putch 0001                                         _ANSELH 000F7F  
                                 ??_I2C_Poller 0014                                         i2l6101 007E  
                                       i2l5611 49C8                                         i2l6091 001A  
                                       i2l5613 49CC                                         i2l5605 49A6  
                                       i2l6093 0028                                         i2l5607 49B6  
                                       i2l6095 0036                                         i2l5609 49B8  
                                       i2l6097 0044                                         i2l6099 0070  
                                       i2l5805 4C14                                         i2l5807 4C1A  
                                       i2l5921 475C                                         i2l5931 3CFA  
                                       i2l5923 475E                                         i2l5941 3D50  
                                       i2l5933 3D08                                         i2l5925 476E  
                                       i2l5917 473A                                         i2l5943 3D6A  
                                       i2l5935 3D18                                         i2l5927 4772  
                                       i2l5919 474C                                         i2l5945 3D86  
                                       i2l5937 3D32                                         i2l5929 3CEA  
                                       i2l5947 3DA4                                         i2l5939 3D40  
                                       _OSCCON 000FD3                                  vfpfcnvrt@done 00A7  
                                       _SPBRGH 000FB0                                         _SSPADD 000FC8  
                                       _SSPBUF 000FC9                               __end_of___xxtofl 331E  
                          _I2C_MasterGetRxData 4C28                        __end_of_I2C_WriteNBytes 4538  
                                 vfprintf@cfmt 00BD                        __size_of_I2C_ReadNBytes 0046  
                                       ___flge 36EE                                         ___fleq 3F06  
                                    ??___fladd 003F                                         ___wmul 4A26  
                                    ??___fldiv 0026                                  _I2C_MasterFsm 42E6  
                                    ??___awdiv 0009                                      ??___flneg 0009  
                                    ??___awmod 0009                                      ??___flmul 000D  
                                    ??___flsub 004F                                      ??___fltol 0009  
                                       _efgtoa 106A                            _EUSART_Transmit_ISR 473A  
                                       _floorf 2F58                                         clear_0 49D8  
                                       clear_1 49E4                              I2C_SetCallback@cb 0005  
                             ___awdiv@quotient 000B                        fp__I2C_DO_SEND_ADR_READ 0000  
                              ___awmod@divisor 0007                        __size_of_I2C_MasterRead 0008  
                      __size_of_I2C_MasterOpen 0022                        __size_of_I2C_MasterStop 0004  
                              ___awmod@counter 0009                        __size_of_I2C_Initialize 0014  
                                       _printf 49FC                                         pad@buf 0019  
                                _I2C_SetBuffer 4A4C                             __end_of_I2C_Poller 4AB0  
                                       _strcpy 4480                                         _strlen 4864  
                 __end_of_I2C_MasterDisableIrq 4C48                                         fputc@c 0007  
                                       fputs@c 0014                            _I2C_DO_ADDRESS_NACK 4356  
                                       fputs@i 0015                                         fputs@s 0010  
                                    ??_isdigit 0007                               SHT40_Read@regist 001C  
                         ?_I2C_MasterGetRxData 0001                                      ?_I2C_Open 0001  
           __end_of_I2C_SetAddressNackCallback 4AC8                     _I2C_SetAddressNackCallback 4AB0  
                              ___fpclassifyf@e 000D                                ___fpclassifyf@u 000F  
                              ___fpclassifyf@x 0005                                   __mediumconst 0000  
                                    ??_isspace 0007                                         tblptrh 000FF7  
                                    ??_isupper 0007                                         tblptrl 000FF6  
                                       tblptru 000FF8                      ??_I2C_MasterEnableRestart 0005  
                             __end_of_vfprintf 4420                                      ??_tolower 000D  
                                    ??_strncmp 000B                           ?_EUSART_Transmit_ISR 0001  
                __size_of_INTERRUPT_Initialize 0004                                     ___flge@ff1 001E  
                                   ___flge@ff2 0022                                ??___fpclassifyf 0009  
                                 ___xxtofl@arg 000F                                   ___xxtofl@exp 000E  
                            _SYSTEM_Initialize 4AE0                                   ___xxtofl@val 0005  
                                   ___fleq@ff1 0005                                     ___fleq@ff2 0009  
                                   __accesstop 0060                        __end_of__initialization 49F2  
                                   ___flneg@f1 0005                            _I2C_MasterOperation 46F6  
                           ?_SYSTEM_Initialize 0001                                  ___rparam_used 000001  
                         ?_I2C_DO_ADDRESS_NACK 0001                                     ___fltol@f1 0005  
         __end_of_EUSART_SetTxInterruptHandler 4B90          __size_of_EUSART_SetTxInterruptHandler 000A  
                 _EUSART_SetTxInterruptHandler 4B86                        _rdBlkRegCompleteHandler 477C  
                   fp__rdBlkRegCompleteHandler 0000                                 __pcstackCOMRAM 0001  
                               ?_I2C_MasterFsm 0001                                ??_I2C_DO_RX_ACK 0005  
                       _I2C_CallbackReturnStop 4C34                            ??_SYSTEM_Initialize 0007  
                                __end_of_fputc 40EC                                  __end_of_fputs 46B2  
                                __end_of_putch 4B7C                                 ?_I2C_SetBuffer 0005  
                      ?_I2C_MasterWaitForEvent 0001                 __size_of_I2C_DO_SEND_ADR_WRITE 0010  
           __size_of_I2C_DO_SEND_RESTART_WRITE 0008                  __end_of_I2C_DO_SEND_ADR_WRITE 4B3E  
                   ?_I2C_DO_SEND_RESTART_WRITE 0001                           ?_I2C_MasterOperation 0001  
                        ??_I2C_MasterGetRxData 0005                          I2C_ReadNBytes@address 001A  
                                   ??_I2C_Open 0005                           _eusartRxStatusBuffer 00C5  
                   __end_of_I2C_MasterClearIrq 4C50                ??_EUSART_SetOverrunErrorHandler 0007  
                                      ??_fputc 000B                      __end_of_SYSTEM_Initialize 4AF6  
                                      ??_fputs 0014                          ??_EUSART_Transmit_ISR 0001  
                                      ??_putch 0006                              _I2C_MasterSendAck 4C08  
                                   __pbssBANK0 00C5                                     __pbssBANK1 0100  
                         __end_of_EUSART_Write 4590                                  ??_I2C_DO_IDLE 0005  
               __size_of_rd2RegCompleteHandler 002C                                  ??_I2C_DO_RCEN 0005  
                __end_of_rd2RegCompleteHandler 4922                   __end_of_I2C_MasterSendTxData 4C08  
                           ?_I2C_MasterSendAck 0001                              _I2C_MasterStartRx 4C2C  
                                 ??_SHT40_Read 001B                 __size_of_wr2RegCompleteHandler 002C  
                        ??_I2C_DO_ADDRESS_NACK 0010                  __end_of_wr2RegCompleteHandler 497A  
                  __size_of_EUSART_Receive_ISR 00C0                            _I2C_DO_RX_NACK_STOP 4BD0  
                        _rd1RegCompleteHandler 4922                    __end_of_SHT40_temp_GetValue 3A9C  
                           ?_I2C_MasterStartRx 0001                     __end_of_I2C_MasterSendNack 4C14  
                             ?_I2C_WriteNBytes 0016                         I2C_WriteNBytes@address 001A  
                        _wr1RegCompleteHandler 48CA                            ??_I2C_MasterSendAck 0005  
                     rd1RegCompleteHandler@ptr 000E                                        ?___flge 001E  
                ?_EUSART_SetTxInterruptHandler 0005                                        ?___fleq 0005  
             _EUSART_TxDefaultInterruptHandler 00FC                    __end_of_I2C_DO_SEND_RESTART 4BF0  
                              _I2C_DO_TX_EMPTY 417A                            I2C_SetBuffer@buffer 0005  
                                      ?___wmul 0005                                        ?_efgtoa 004F  
               __end_of_I2C_MasterWaitForEvent 4B2E                            ??_I2C_MasterStartRx 0005  
                __size_of_I2C_DO_SEND_ADR_READ 0010                                        ?_floorf 0037  
                                      _BAUDCON 000FB8               __size_of_I2C_CallbackReturnReset 0004  
                 ??_EUSART_DefaultErrorHandler 0001                          ??_I2C_MasterOperation 0014  
                                      ?_printf 00BF                 I2C_SetDataCompleteCallback@ptr 000C  
                                      ?_strcpy 0005                                        ?_strlen 0005  
                     ??_I2C_DO_RX_NACK_RESTART 0005              __end_of_I2C_DO_SEND_RESTART_WRITE 4BF8  
                         ?_I2C_DO_RX_NACK_STOP 0001                                  _eusartRxCount 00F9  
                                    ?___xxtofl 0005                             __end_of_SHT40_Read 46F6  
                           __size_of_vfpfcnvrt 066C                  __size_of_EUSART_RxDataHandler 002C  
                    __end_of_I2C_MasterSendAck 4C0E                                        _OSCTUNE 000F9B  
                     ??_EUSART_SetErrorHandler 0007                                        _SSPCON1 000FC6  
                                      _SSPCON2 000FC5                                        _SSPSTAT 000FC7  
                    __end_of_I2C_MasterStartRx 4C30                           I2C_Close@returnValue 0005  
                 ?_I2C_SetDataCompleteCallback 000A                                      _I2C_DO_RX 3FB0  
                                    _I2C_DO_TX 3C26               __end_of_I2C_DO_SEND_RESTART_READ 4C00  
                                    _I2C_Close 497A                      ??_rdBlkRegCompleteHandler 0010  
                         _I2C_MasterDisableIrq 4C44                                ??_I2C_MasterFsm 0012  
                                      __Hparam 0000            __size_of_EUSART_DefaultErrorHandler 0006  
                                      __Lparam 0000                                 _I2C_ReadNBytes 4628  
                          __end_of_I2C_DO_IDLE 4B72                            __end_of_I2C_DO_RCEN 4B66  
                                   _readBuffer 0174                                __size_of___flge 0104  
                              __size_of___fleq 00AA                                        ___fladd 22D4  
                                      ___fldiv 2BBE                                        ___awdiv 3B62  
                                      ___flneg 47F4                                        ___awmod 3DAA  
                                      ___flmul 2794                                        ___flsub 45E2  
                                      ___fltol 35E8                                ??_I2C_SetBuffer 0009  
                              __size_of___wmul 0026                                      ?_vfprintf 00B7  
                      I2C_SetBuffer@bufferSize 0007                                   __psmallconst 1000  
                              __size_of_efgtoa 0BFE                             I2C_ReadNBytes@data 0016  
                               _I2C_MasterRead 4BC0                                 _I2C_MasterOpen 4A70  
                              __size_of_floorf 0212                                        __pcinit 49D2  
                               _I2C_MasterStop 4C38                                 _I2C_Initialize 4AF6  
                                      __ramtop 1000                      __size_of_I2C_DO_SEND_STOP 0008  
                                      __ptext0 3E5A                                        __ptext1 49FC  
                                      __ptext2 43BC                                        __ptext3 1C68  
                                      __ptext4 38F0                                        __ptext5 106A  
                                      __ptext6 4420                                        __ptext7 47BC  
                                      __ptext8 4480                                        __ptext9 3A9C  
                              __size_of_printf 002A                          ??_I2C_DO_RX_NACK_STOP 0005  
                              __size_of_strcpy 005E                                __size_of_strlen 0036  
                        _OSCILLATOR_Initialize 4B7C                                   __size_of_pad 00C6  
                                      _isdigit 482C                                     ??___xxtofl 0009  
                             ___awmod@dividend 0005                             I2C_SetCallback@idx 0009  
                     __size_of_I2C_MasterClose 0004                       ??_PIN_MANAGER_Initialize 0005  
                I2C_CallbackReturnReset@funPtr 000E                                        _isspace 4590  
                           I2C_SetCallback@ptr 0007                       wr1RegCompleteHandler@ptr 000E  
                                      _isupper 47BC                                        efgtoa@c 0055  
                                      efgtoa@d 007D                                        efgtoa@e 0095  
                                      efgtoa@f 0051                                        efgtoa@g 0091  
                                      efgtoa@h 0087                                        efgtoa@i 008F  
                                      efgtoa@l 008B                                        efgtoa@m 0079  
                                      efgtoa@n 0097                                        efgtoa@p 0081  
                                      efgtoa@t 0075                                        efgtoa@u 0099  
                                      efgtoa@w 0084                       fp__I2C_DO_SEND_ADR_WRITE 0000  
                     __size_of_I2C_MasterStart 0004                       __size_of_I2C_MasterWrite 0008  
                                      atoi@neg 0012                     __size_of_SYSTEM_Initialize 0016  
                                      _tolower 4420                                        _strncmp 38F0  
                         end_of_initialization 49F2                                        floorf@e 0045  
                                      floorf@m 0041                                        floorf@u 0047  
                                      floorf@x 0037                                     ?_I2C_DO_RX 0001  
                                   ?_I2C_DO_TX 0001          __end_of_EUSART_SetOverrunErrorHandler 4BA4  
       __size_of_EUSART_SetOverrunErrorHandler 000A                  _EUSART_SetOverrunErrorHandler 4B9A  
                    __size_of_I2C_MasterIsNack 0014                                        fputc@fp 0009  
                                   ?_I2C_Close 0001                                        fputs@fp 0012  
                       ?_rd1RegCompleteHandler 000E                        __end_of_I2C_DO_TX_EMPTY 41F6  
                    __size_of_I2C_MasterSetIrq 0004                          ?_I2C_MasterDisableIrq 0001  
                       __end_of_I2C_ReadNBytes 466E                              _EUSART_Initialize 4270  
                       ?_wr1RegCompleteHandler 000E                       fp__rd2RegCompleteHandler 0000  
                           ?_EUSART_Initialize 0001                       __size_of_I2C_SetCallback 007A  
                            __end_of_vfpfcnvrt 22D4                                     efgtoa@mode 0086  
                                   efgtoa@sign 007F                                      _RCSTAbits 000FAB  
                                      postdec2 000FDD                         __end_of_I2C_MasterRead 4BC8  
                       __end_of_I2C_MasterOpen 4A92                       fp__wr2RegCompleteHandler 0000  
                                      postinc0 000FEE                                        postinc1 000FE6  
                                      postinc2 000FDE                         __end_of_I2C_MasterStop 4C3C  
                       __end_of_I2C_Initialize 4B0A                                     ??_vfprintf 0056  
                    fp__I2C_CallbackReturnStop 0000                                     _temperatur 00E9  
                                      strcpy@d 000D                                        strlen@a 0007  
                                      strcpy@s 000B                                        strlen@s 0005  
                          ??_EUSART_Initialize 0007                   __size_of_SHT40_humy_GetValue 0130  
               ??_EUSART_SetTxInterruptHandler 0007                __end_of_rdBlkRegCompleteHandler 47BC  
                         _I2C_MasterSendTxData 4C00                                fp__I2C_DO_RESET 0000  
              __size_of_I2C_DO_RX_NACK_RESTART 0008                                    ___fladd@grs 0046  
                                ___xxtofl@sign 000D                    ?_I2C_SetAddressNackCallback 000A  
                        __size_of_EUSART_Write 0058                     __size_of_I2C_MasterSendAck 0006  
                                  ___fldiv@grs 0031                                    ___fldiv@rem 002A  
                            __size_of_I2C_Open 008E                __size_of_EUSART_SetErrorHandler 000A  
                   __size_of_I2C_MasterStartRx 0004                                    ___flmul@grs 0013  
                    __end_of_EUSART_Initialize 42E6                                    _I2C_DO_IDLE 4B66  
                                  _I2C_DO_RCEN 4B5A                     rdBlkRegCompleteHandler@ptr 000E  
                                    _TXSTAbits 000FAC                 SHT40_temp_GetValue@tempDataAnz 004D  
                              ?_I2C_ReadNBytes 0016                        ?_I2C_CallbackReturnStop 000E  
                     _I2C_DO_SEND_RESTART_READ 4BF8                    fp__I2C_DO_SEND_RESTART_READ 0000  
                 I2C_CallbackReturnStop@funPtr 000E                                ?_I2C_MasterRead 0001  
                              ?_I2C_MasterOpen 0001                   __end_of_INTERRUPT_Initialize 4C24  
                              ?_I2C_MasterStop 0001                                ?_I2C_Initialize 0001  
                      _I2C_CallbackReturnReset 4C30                     fp__I2C_CallbackReturnReset 0000  
                               __end_of___flge 37F2                                 __end_of___fleq 3FB0  
           __end_of_EUSART_DefaultErrorHandler 4C20                     _EUSART_DefaultErrorHandler 4C1A  
                                  vfpfcnvrt@ap 00A1                                    vfpfcnvrt@ct 00B3  
                                  vfpfcnvrt@fp 009D                                 __end_of___wmul 4A4C  
         __size_of_I2C_SetDataCompleteCallback 0018                                 __end_of_efgtoa 1C68  
                                 _EUSART_Write 4538                                 __end_of_floorf 316A  
                        ?_I2C_MasterSendTxData 0001                         ?_OSCILLATOR_Initialize 0001  
                                   floorf@F524 00DD                    ??_I2C_DO_SEND_RESTART_WRITE 0005  
                               __end_of_printf 4A26                                 __end_of_strcpy 44DE  
                               __end_of_strlen 489A                            start_initialization 49D2  
              __size_of_PIN_MANAGER_Initialize 0030                                    __end_of_pad 3B62  
                                ?_I2C_DO_RESET 0001   EUSART_SetRxInterruptHandler@interruptHandler 0005  
 EUSART_SetTxInterruptHandler@interruptHandler 0005                                    putch@txData 0006  
                                  ??_I2C_DO_RX 0010                                    ??_I2C_DO_TX 0010  
                            ??_I2C_MasterClose 0005                         ??_I2C_MasterDisableIrq 0005  
                                  ??_I2C_Close 0005                              ??_I2C_MasterStart 0005  
                        __end_of___fpclassifyf 38F0                              ??_I2C_MasterWrite 0016  
               __end_of_I2C_CallbackReturnStop 4C38                         _I2C_DO_RX_NACK_RESTART 4BC8  
                             ?_I2C_DO_TX_EMPTY 0001                             _I2C_MasterClearIrq 4C4C  
               ?_EUSART_SetOverrunErrorHandler 0005                                    vfprintf@fmt 00B9  
                   _EUSART_FramingErrorHandler 0182                                       ??___flge 0026  
                                     ??___fleq 000D                                       ??___wmul 0009  
                       _EUSART_SetErrorHandler 4BAE                            ?_I2C_MasterClearIrq 0001  
                                     ??_efgtoa 0060                    __end_of_I2C_MasterGetRxData 4C2C  
                                     ??_floorf 003B                          __end_of_I2C_DO_RX_ACK 4BE0  
                             _I2C_DO_SEND_STOP 4BE0                              ??_I2C_SetCallback 0009  
                                     ??_printf 0056                            I2C_Open@returnValue 0006  
                                     ??_strcpy 0009                             _I2C_MasterSendNack 4C0E  
                                     ??_strlen 0007                       ?_I2C_MasterEnableRestart 0001  
                                    ___fladd@a 003B                                      ___fladd@b 0037  
                       fp__I2C_DO_SEND_RESTART 0000                                      ___fldiv@a 0022  
                                    ___fldiv@b 001E                    __end_of_EUSART_Transmit_ISR 477C  
                        _I2C_DO_SEND_ADR_WRITE 4B2E                                      ___flmul@a 0009  
                                    ___flmul@b 0005                                    __pbssCOMRAM 0056  
                                    ___flsub@a 004B                                      ___flsub@b 0047  
                                __pcstackBANK0 0060                                  __pcstackBANK1 0184  
                               ??_I2C_DO_RESET 0005                            ?_I2C_MasterSendNack 0001  
                            __size_of___xxtofl 01B4                   __end_of_I2C_DO_SEND_ADR_READ 4B4E  
                         ??_I2C_MasterClearIrq 0005                    __end_of_I2C_DO_ADDRESS_NACK 43BC  
                   __end_of_EUSART_Receive_ISR 3DAA                               _I2C_MasterIsNack 4B0A  
                   __size_of_EUSART_Initialize 0076                      _I2C_DO_SEND_RESTART_WRITE 4BF0  
             _EUSART_RxDefaultInterruptHandler 00FA                               _I2C_MasterSetIrq 4C24  
                                    _atoi$2163 0014                                      _atoi$2164 0018  
                                    _atoi$2165 0016                                      __pnvBANK0 00FA  
                                    __pnvBANK1 017E                          _rd2RegCompleteHandler 48F6  
                        __end_of_fsmStateTable 1021                                    _efgtoa$2110 0073  
                                  _efgtoa$2104 006D                                    _efgtoa$2108 006F  
                                  _efgtoa$2109 0071                                    _efgtoa$2098 0069  
                                  _efgtoa$2099 006B                   __end_of_EUSART_RxDataHandler 49D2  
                       _PIN_MANAGER_Initialize 489A                          _wr2RegCompleteHandler 494E  
                    ??_I2C_CallbackReturnReset 0010                    __end_of_I2C_MasterOperation 473A  
                         ??_I2C_MasterSendNack 0005                       rd2RegCompleteHandler@ptr 000E  
                                    __pintcode 0008                                       ?___fladd 0037  
                                     ?___fldiv 001E                                       ?___awdiv 0005  
                                    __ptext100 4C14                                      __ptext101 4C50  
                                    __ptext102 4C1A                                       ?___flneg 0005  
                                    __ptext103 49A6                                      __ptext104 0000  
                                     ?___awmod 0005                                       ?___flmul 0005  
                                     ?___flsub 0047                                       ?___fltol 0005  
                                 _eusartRxHead 0057                   __size_of_SHT40_temp_GetValue 00D0  
                                 _eusartTxHead 0059                                   _eusartRxTail 0056  
                       ??_I2C_MasterSendTxData 0005                                   _eusartTxTail 0058  
                 ??_INTERRUPT_InterruptManager 0001                       __size_of_I2C_WriteNBytes 005A  
                            __size_of_vfprintf 0064                                   fp__I2C_DO_RX 0000  
                                 fp__I2C_DO_TX 0000                        _eusartTxBufferRemaining 00FE  
                 __size_of_I2C_DO_SEND_RESTART 0008                                    __smallconst 1000  
                                     ?_isdigit 0005                        I2C_MasterOperation@read 0014  
                                     _I2C_Open 40EC                                       ?_isspace 0005  
                                     ?_isupper 0005                              I2C_ReadNBytes@len 0018  
                                     ?_tolower 000B                                 __size_of_fputc 0096  
                               __size_of_fputs 0044                        ??_rd1RegCompleteHandler 0010  
                                     ?_strncmp 0005                                 __size_of_putch 000A  
                         _INTERRUPT_Initialize 4C20                                 _eusartRxBuffer 00CD  
                      ??_wr1RegCompleteHandler 0010                            _SHT40_humy_GetValue 34B8  
                               _eusartTxBuffer 00D5                                 ___wmul@product 0009  
       EUSART_SetErrorHandler@interruptHandler 0005                                       _PIE1bits 000F9D  
                            _eusartRxLastError 00F8            __size_of_INTERRUPT_InterruptManager 00A8  
                                     i2u600_40 0044                                       i2u600_41 0040  
                                     _PIR1bits 000F9E                                       i2u602_40 0070  
                                     i2u601_48 004A                                       i2u602_41 006C  
                                     i2u601_49 005E                ??_EUSART_SetFramingErrorHandler 0007  
                                     i2u603_40 007E                                       i2u603_41 007A  
                                     _PIR2bits 000FA1                                       i2u541_40 49C8  
                                     i2u604_48 0084                                       i2u541_41 49C4  
                                     i2u604_49 0098                                       i2u580_40 3D08  
                                     i2u580_41 3D04                                       i2u582_40 3D40  
                                     i2u581_48 3D1E                                       i2u582_41 3D3C  
                                     i2u581_49 3D32                                       i2u584_40 3D86  
                                     i2u583_48 3D56                                       i2u584_41 3D82  
                                     i2u583_49 3D6A                                       i2u585_48 3D8C  
                                     i2u578_40 474C                                       i2u585_49 3DA0  
                                     i2u578_41 4748                                       i2u579_40 476E  
                                     i2u579_41 476A                                       i2u598_40 0028  
                                     i2u598_41 0024                                       i2u599_40 0036  
                                     i2u599_41 0032                          __end_of_I2C_MasterFsm 4356  
                                     _RCONbits 000FD0                    __end_of_I2C_DO_RX_NACK_STOP 4BD8  
         fp__EUSART_DefaultOverrunErrorHandler 0000      __end_of_EUSART_DefaultOverrunErrorHandler 4C1A  
   __size_of_EUSART_DefaultOverrunErrorHandler 0006            ??_EUSART_DefaultOverrunErrorHandler 0001  
           ?_EUSART_DefaultOverrunErrorHandler 0001              _EUSART_DefaultOverrunErrorHandler 4C14  
              __end_of_I2C_MasterEnableRestart 4C40                                 fp__I2C_DO_IDLE 0000  
                               fp__I2C_DO_RCEN 0000                                      _vfpfcnvrt 1C68  
                        __end_of_I2C_SetBuffer 4A70                           ?_SHT40_humy_GetValue 0047  
                            ___wmul@multiplier 0005                         ?_I2C_DO_SEND_ADR_WRITE 0001  
                     I2C_MasterSendTxData@data 0005                       wr2RegCompleteHandler@ptr 000E  
                                 _isspace$2194 000B                                     vfpfcnvrt@c 00B6  
                                   vfpfcnvrt@f 00AF                                    _INTCON2bits 000FF1  
                   ??_I2C_DO_SEND_RESTART_READ 0005                          ?_INTERRUPT_Initialize 0001  
                     ?_rdBlkRegCompleteHandler 000E                               ??_I2C_ReadNBytes 001A  
                                   _I2C_Poller 4A92                                     _I2C_Status 0100  
                                 ?_I2C_DO_IDLE 0001                                   ?_I2C_DO_RCEN 0001  
                       ?_rd2RegCompleteHandler 000E                               ??_I2C_MasterRead 0016  
                        fp__EUSART_Receive_ISR 0000                            I2C_WriteNBytes@data 0016  
                             ??_I2C_MasterOpen 0005                         ?_wr2RegCompleteHandler 000E  
                             ??_I2C_MasterStop 0005                       ??_I2C_MasterWaitForEvent 0005  
                             ??_I2C_Initialize 0005                      fp__I2C_DO_RX_NACK_RESTART 0000  
                                     __Hrparam 0000                                     vfprintf@ap 00BB  
                                     __Lrparam 0000                                     vfprintf@fp 00B7  
                         __end_of_I2C_DO_RESET 4B5A                        ??_OSCILLATOR_Initialize 0005  
                          _EUSART_ErrorHandler 017E                               __size_of___fladd 04C0  
                             __size_of___fldiv 039A                               __size_of___awdiv 00C4  
                         _I2C_DO_SEND_ADR_READ 4B3E                               __size_of___flneg 0038  
                             __size_of___awmod 00B0                               __size_of___flmul 042A  
                             __size_of___flsub 0046                               __size_of___fltol 0106  
                        ??_SHT40_humy_GetValue 004B                    ?_EUSART_DefaultErrorHandler 0001  
                                   ?_vfpfcnvrt 009D                             ___fpclassifyf@F463 00E1  
                              _I2C_MasterClose 4C48                  I2C_SetAddressNackCallback@ptr 000C  
                              I2C_Open@address 0005                                       ___xxtofl 316A  
                          fp__I2C_DO_SEND_STOP 0000                                _I2C_MasterStart 4C40  
                              _I2C_MasterWrite 4BB8                               __size_of_isdigit 0038  
                         _EUSART_RxDataHandler 49A6                              ??_I2C_WriteNBytes 001A  
                             __size_of_isspace 0052                                       __ptext10 4864  
                                     __ptext11 466E                                       __ptext20 3F06  
                                     __ptext12 4056                                       __ptext21 3DAA  
                                     __ptext13 4B72                                       __ptext30 4C20  
                                     __ptext22 3B62                                       __ptext14 4538  
                                     __ptext31 4AF6                                       __ptext23 331E  
                                     __ptext15 2F58                                       __ptext40 316A  
                                     __ptext32 4270                                       __ptext24 4590  
                                     __ptext16 37F2                                       __ptext41 2794  
                                     __ptext33 4B86                                       __ptext25 482C  
                                     __ptext17 35E8                                       __ptext50 40EC  
                                     __ptext42 36EE                                       __ptext34 4B90  
                                     __ptext26 4A26                                       __ptext18 45E2  
                                     __ptext51 4A70                                       __ptext43 2BBE  
                                     __ptext35 4B9A                                       __ptext27 4AE0  
                                     __ptext19 47F4                                       __ptext60 4BD0  
                                     __ptext52 4BC0                                       __ptext44 22D4  
                                     __ptext36 4BA4                                       __ptext28 489A  
                                     __ptext61 4BD8                                       __ptext53 46F6  
                                     __ptext45 46B2                                       __ptext37 4BAE  
                                     __ptext29 4B7C                                       __ptext70 4B3E  
                                     __ptext62 4BE0                                       __ptext54 4A92  
                                     __ptext46 44DE                                       __ptext38 39CC  
                                     __ptext71 4B66                                       __ptext63 4BE8  
                                     __ptext55 4B1E                                       __ptext47 4AB0  
                                     __ptext39 34B8                                       __ptext80 4C30  
                                     __ptext72 417A                                       __ptext64 4BF0  
                                     __ptext56 42E6                                       __ptext48 4BB8  
                                     __ptext81 4C34                                       __ptext73 4C24  
                                     __ptext65 4BF8                                       __ptext57 4356  
                                     __ptext49 4628                                       __ptext90 4C38  
                                     __ptext82 477C                                       __ptext74 4B0A  
                                     __ptext66 4B5A                                       __ptext58 4B4E  
                                     __ptext91 4C3C                                       __ptext83 48CA  
                                     __ptext75 4C00                                       __ptext67 3FB0  
                                     __ptext59 4BC8                                       __ptext92 4C40  
                                     __ptext84 48F6                                       __ptext76 4C08  
                                     __ptext68 3C26                                       __ptext93 497A  
                                     __ptext85 4922                                       __ptext77 4C28  
                                     __ptext69 4B2E                                       __ptext94 4C44  
                                     __ptext86 494E                                       __ptext78 4C0E  
                                     __ptext95 4C48                                       __ptext87 4AC8  
                                     __ptext79 4C2C                                       __ptext96 4C4C  
                                     __ptext88 41F6                                       __ptext89 4A4C  
                                     __ptext98 473A                                       __ptext99 3CEA  
                             __size_of_isupper 0038            __end_of_I2C_SetDataCompleteCallback 4AE0  
                  _I2C_SetDataCompleteCallback 4AC8                        ?_I2C_DO_RX_NACK_RESTART 0001  
                             __size_of_tolower 0060                                     strcpy@dest 0005  
                             __size_of_strncmp 00DC                       __end_of_I2C_DO_SEND_STOP 4BE8  
                                __size_of_atoi 019A                                  __size_of_main 00AC  
                      ?_EUSART_SetErrorHandler 0005                                _I2C_SetCallback 41F6  
                ??_I2C_SetDataCompleteCallback 000E                                       efgtoa@fp 004F  
                                     efgtoa@ne 007B                                       efgtoa@pp 0077  
                                     efgtoa@ou 0065                                       _lufthumy 00E5  
EUSART_SetOverrunErrorHandler@interruptHandler 0005                                       int$flags 005A  
                        ?_I2C_DO_SEND_ADR_READ 0001                                       _vfprintf 43BC  
           __end_of_INTERRUPT_InterruptManager 00B0                     _INTERRUPT_InterruptManager 0008  
                                    printf@fmt 00BF          __end_of_EUSART_SetFramingErrorHandler 4BAE  
       __size_of_EUSART_SetFramingErrorHandler 000A                  _EUSART_SetFramingErrorHandler 4BA4  
                     __end_of_I2C_MasterIsNack 4B1E                       __end_of_I2C_MasterSetIrq 4C28  
                               _vfpfcnvrt$2124 00A9                                 _vfpfcnvrt$2125 00AB  
                               _vfpfcnvrt$2129 00AD                                     _INTCONbits 000FF2  
                           I2C_WriteNBytes@len 0018                          ?_EUSART_RxDataHandler 0001  
                                     isdigit@c 0005                         ??_INTERRUPT_Initialize 0005  
               __end_of_I2C_DO_RX_NACK_RESTART 4BD0                            _SHT40_temp_GetValue 39CC  
                                     intlevel2 0000                                    ?_I2C_Poller 0001  
                       fp__EUSART_Transmit_ISR 0000               __size_of_I2C_MasterEnableRestart 0004  
                                     isspace@c 0005                        ?_PIN_MANAGER_Initialize 0001  
               __end_of_EUSART_SetErrorHandler 4BB8                                     _SHT40_Read 46B2  
                          _I2C_DO_SEND_RESTART 4BE8                                      strcpy@src 0007  
                __size_of_I2C_MasterDisableIrq 0004                                       isupper@c 0005  
                       fp__I2C_DO_ADDRESS_NACK 0000                                      strncmp@_l 0005  
                                    strncmp@_r 0007           __end_of_EUSART_SetRxInterruptHandler 4B9A  
        __size_of_EUSART_SetRxInterruptHandler 000A                   _EUSART_SetRxInterruptHandler 4B90  
              __size_of_I2C_MasterWaitForEvent 0010                                    efgtoa@nmode 0083  
                                     printf@ap 0186                             _EUSART_Receive_ISR 3CEA  
EUSART_SetFramingErrorHandler@interruptHandler 0005                        __end_of_I2C_MasterClose 4C4C  
                     __size_of_I2C_DO_TX_EMPTY 007C                           ?_SHT40_temp_GetValue 0047  
                           fp__I2C_DO_TX_EMPTY 0000                                    ??_vfpfcnvrt 00A3  
                      __end_of_I2C_MasterStart 4C44                        __end_of_I2C_MasterWrite 4BC0  
                         ?_I2C_DO_SEND_RESTART 0001                                       tolower@c 000B  
                          ?_EUSART_Receive_ISR 0001                         __size_of___fpclassifyf 00FE  
                fp__EUSART_DefaultErrorHandler 0000                   __size_of_I2C_MasterGetRxData 0004  
                                     strncmp@l 000C                                       strncmp@n 0009  
                                     strncmp@r 000E                                    _SSPCON1bits 000FC6  
                                  _SSPCON2bits 000FC5                                  ___fladd@signs 0043  
                  __size_of_I2C_MasterClearIrq 0004                             EUSART_Write@txData 0005  
                 __size_of_EUSART_Transmit_ISR 0042                        __end_of_I2C_SetCallback 4270  
               __end_of_PIN_MANAGER_Initialize 48CA                 __size_of_rd1RegCompleteHandler 002C  
                __end_of_rd1RegCompleteHandler 494E                         __size_of_I2C_DO_RX_ACK 0008  
                             fp__I2C_DO_RX_ACK 0000                                   ___fladd@aexp 0044  
                                 ___fladd@bexp 0045                 __size_of_wr1RegCompleteHandler 002C  
                         ??_EUSART_Receive_ISR 0001                          __size_of_I2C_DO_RESET 000C  
                __end_of_wr1RegCompleteHandler 48F6                   __size_of_I2C_DO_ADDRESS_NACK 0066  
                         __size_of_I2C_DO_IDLE 000C                           __size_of_I2C_DO_RCEN 000C  
                           __size_of_I2C_DO_RX 00A6                             __size_of_I2C_DO_TX 00C4  
